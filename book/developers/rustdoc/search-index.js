var searchIndex = JSON.parse('{\
"jumpy":{"doc":"Jumpy","t":"","n":["GameMeta","GameMusic","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","character_screen","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","core","core","credits","default","default","default_settings","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fight","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","impl_system_param","init","init","input","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","load_progress","localization","main","main_menu","music","music","prelude","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","results_screen","schema","schema","sessions","settings","theme","title_screen","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ui","upcast","upcast","vzip","vzip","FPS","JumpyDefaultMatchRunner","MAX_PLAYERS","MatchPlayerInfo","MatchPlugin","accumulator","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","attachment","audio","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bullet","camera","control_source","damage","debug","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","editor","elements","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","game_plugin","globals","init","init","init","input","input_collector","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","item","last_run","lifetime","map","map","map_constructor","metadata","physics","player","player_info","prelude","random","raw_default","raw_drop","raw_drop","raw_drop","selected_player","step","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","utils","vzip","vzip","vzip","Attachment","HadPlayerBodyAttachmentMarker","PlayerBodyAttachment","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","entity","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","head","init","init","init","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","new","offset","offset","player","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","remove_player_body_attachments","schema","schema","schema","sync_animation","sync_animation","sync_color","sync_color","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_attachments","update_player_body_attachments","vzip","vzip","vzip","AudioEvent","AudioEvents","PlaySound","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","play","play_sounds","queue","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","schema","send","session_plugin","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","sound_source","volume","Bullet","BulletHandle","BulletMeta","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_diameter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","direction","downcast","downcast","downcast","drop","drop","drop","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","lifetime","owner","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update","velocity","vzip","vzip","vzip","CameraState","ParallaxBackgroundSprite","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","camera_controller","camera_parallax","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","disable_controller","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","idx","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","meta","player_camera_rects","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","DamageRegion","DamageRegionOwner","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","collider_rect","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","kill_players_in_damage_region","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","size","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","DebugSettings","RapierDebugBackend","RapierDebugContext","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","debug_pipeline","debug_render_colliders","debug_render_damage_regions","debug_render_emote_regions","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw_line","drop","drop","drop","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","line_breaks","path_entity","plugin","points","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","show_damage_regions","show_kinematic_colliders","show_pathfinding_lines","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","MapManager","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow","borrow_mut","clear_elements","clear_tiles","commands","create_element","create_layer","delete_element","delete_layer","deref","deref_mut","downcast","drop","element_handles","element_kill_callbacks","entities","from","from_sample_","from_subset","get_layers_total","get_size","get_state","handle_editor_input","init","initialize","install","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","map","move_element","raw_drop","rename_layer","rename_map","set_layer_tilemap","set_tile","spawned_map_layer_metas","spawned_map_meta","spawner_manager","swap_layer","tile_collisions","tile_layers","tiles","to_sample_","to_subset","to_subset_unchecked","transforms","try_from","try_into","type_id","upcast","vzip","DehydrateOutOfBounds","ElementEditorMeta","ElementHandle","ElementKillCallback","ElementMeta","MapElementHydrated","Spawner","SpawnerEntities","SpawnerManager","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","crab","crate_item","create_grouped_spawner","create_spawner","data","decoration","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","editor","entities_per_spawner_group_identifier","fish_school","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","get_state","grab_offset","grab_size","grenade","group_identifier","handle_out_of_bounds_items","init","init","init","init","init","init","init","init","init","initialize","insert_spawned_entity_into_grouped_spawner","install_plugins","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_entity_a_spawner","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kick_bomb","kill_spawner_entity","mine","musket","name","new","new","new_grouped","player_spawner","prelude","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove_spawned_entity_from_grouped_spawner","schema","schema","schema","schema","schema","schema","schema","schema","session_plugin","show_name","slippery","slippery_seaweed","snail","spawner_entities","spawners","spike","sproinger","stomp_boots","sword","system","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","urchin","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CrabCritter","CrabMeta","CrabState","Despawning","Fleeing","Paused","Spawning","Walking","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","comfortable_scared_distance","comfortable_spawn_distance","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","finished_playing","fmt","fmt","fps","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_moving","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","respawn_timer","run_speed","same_level_threshold","schema","schema","schema","session_plugin","spawn_frames","start_pos","state","state_count","state_count_max","timer_delay_max","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncomfortable_respawn_time","upcast","upcast","upcast","update_crabs","vzip","vzip","vzip","walk_frames","walk_speed","left","scared_of","CrateMeta","IdleCrate","ThrownCrate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounce_sound","bounce_sound_volume","bounciness","break_sound","break_sound_volume","break_timeout","break_timeout","breaking_anim_fps","breaking_anim_frames","breaking_atlas","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","crate_break_state","crate_break_state_1","crate_break_state_2","damage_delay","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fin_anim","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","grab_offset","hydrate_crates","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","kill_all_colliding_if_freshly_thrown","owner","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","throw_velocity","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_idle_crates","update_thrown_crates","vzip","vzip","vzip","was_colliding","AnimatedDecorationMeta","as_any","as_any_mut","as_bind_group_shader_type","atlas","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","end_frame","fmt","fps","from","from_sample_","from_subset","from_world","from_world","game_plugin","hydrate","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_clone","raw_default","raw_drop","schema","session_plugin","start_frame","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Fish","FishSchool","FishSchoolMeta","FishState","Moving","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","base_count","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","count_variation","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","fish","flee_range","fmt","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kinds","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","schema","schema","schema","school_size","session_plugin","spawn_range","state","state_timer","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_fish_schools","vzip","vzip","vzip","vzip","from","to","GrenadeMeta","IdleGrenade","LitGrenade","angular_velocity","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_diameter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounciness","can_rotate","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","damage_region_lifetime","damage_region_size","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","fin_anim","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","fuse_sound","fuse_sound_volume","fuse_time","fuse_time","game_plugin","grab_offset","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","owner","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","throw_velocity","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_idle_grenades","update_lit_grenades","vzip","vzip","vzip","IdleKickBomb","KickBombMeta","LitKickBomb","angular_velocity","arm_delay","arm_delay","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_diameter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounciness","can_rotate","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","damage_region_lifetime","damage_region_size","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","fin_anim","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","fuse_sound","fuse_sound_volume","fuse_time","fuse_time","game_plugin","grab_offset","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","kick_velocity","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","throw_velocity","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_idle_kick_bombs","update_lit_kick_bombs","vzip","vzip","vzip","IdleMine","MineMeta","ThrownMine","arm_delay","arm_delay","arm_sound","arm_sound_volume","armed_fps","armed_frames","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounciness","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","damage_region_lifetime","damage_region_size","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","fin_anim","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","grab_offset","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","throw_velocity","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_idle_mines","update_thrown_mines","vzip","vzip","vzip","Musket","MusketMeta","ammo","angular_velocity","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow_mut","borrow_mut","bounciness","bullet_meta","can_rotate","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","cooldown","cooldown","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","empty_shoot_sound","empty_shoot_sound_volume","fin_anim","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","grab_offset","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","kickback","max_ammo","musket_drop","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","shoot_atlas","shoot_fps","shoot_frames","shoot_lifetime","shoot_sound","shoot_sound_volume","throw_velocity","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","vzip","vzip","CurrentSpawner","PlayerSpawner","PlayerSpawnerMeta","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update","vzip","vzip","vzip","Slippery","SlipperyMeta","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_friction","body_friction","body_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","player_slide","player_slide","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","vzip","vzip","SlipperySeaweed","SlipperySeaweedMeta","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end_frame","fmt","fmt","fps","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","start_frame","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","vzip","vzip","Hiding","Moving","Snail","SnailMeta","UnHiding","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_diameter","borrow","borrow","borrow_mut","borrow_mut","bounciness","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","crawl_frames","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","fps","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","gravity","hide_frames","hide_time","hit_speed","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","move_frame_indexes","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_snails","vzip","vzip","anim_index","attempted_x","frame_timer","Spike","SpikeMeta","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end_frame","fmt","fmt","fps","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","start_frame","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","vzip","vzip","Sproinger","SproingerMeta","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","frame","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","hydrate","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","sound","sound_volume","spring_velocity","sproinging","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","vzip","vzip","StompBoots","StompBootsMeta","WearingStompBoots","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","body_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","grab_offset","hydrate","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","map_icon","player_decoration","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update","update_wearer","vzip","vzip","vzip","Cooldown","Idle","PendingDamageRegions","Swinging","Sword","SwordMeta","SwordState","angular_velocity","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","body_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounciness","can_rotate","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cooldown_frames","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dropped_time","fin_anim","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","grab_offset","hydrate","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","killing_speed","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","schema","schema","schema","session_plugin","sound","sound_volume","state","sword_drop","throw_velocity","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","frame","frame","Urchin","UrchinMeta","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","body_diameter","borrow","borrow","borrow_mut","borrow_mut","bounciness","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","gravity","hit_speed","hydrate","image","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","spin","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_urchins","vzip","vzip","INVINCIBILITY_ALPHA_RANGE","CreateLayer","DeleteEntity","DeleteLayer","EditorInput","ElementLayer","LocatedTileLayer","MatchInputs","MoveEntity","MoveLayer","PlayerInput","RandomizeTiles","RenameLayer","RenameMap","SetTile","SetTilemap","SpawnElement","active","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","control","control_source","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","editor_input","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","install","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layer_index","layer_index","located_elements","located_tiles","players","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","schema","schema","schema","selected_hat","selected_player","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","collision","down","element_layers","entity","entity","handle","handle","id","layer","layer","layer","layer","layer","layer","name","name","pos","pos","tile_layers","tile_size","tilemap_tile_idx","translation","Inv","Inventory","Item","ItemDropped","ItemGrab","ItemGrabbed","ItemThrow","ItemUsed","PlayerInventories","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast","fin_anim","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_state","grab_items","grab_offset","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inventory","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lob","normal","owner","player","player","player","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","roll","schema","schema","schema","schema","schema","schema","schema","spin","strength","sync_animation","system","throw_dropped_items","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","velocity_from_control","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_spin","with_system","Invincibility","Lifetime","age","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","invincibility","is_in_subset","is_in_subset","lifetime","lifetime_system","new","new","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","LoadedMap","MAP_LAYERS_GAP_DEPTH","MAP_LAYERS_MIN_DEPTH","MapSpawned","NavGraph","NavGraphEdge","NavGraphInner","NavNode","SpawnedMapLayerMeta","SpawnedMapMeta","above","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","background","background_color","below","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","create_nav_graph","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance","distance","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grid_size","handle_out_of_bounds_players","hash","init","init","init","init","init","init","init","inputs","install","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layer_idx","layer_names","left","name","partial_cmp","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","right","schema","schema","schema","schema","schema","spawn_map","tile_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","z_depth_for_map_layer","MapConstructor","construct_map","shiftnanigans","Element","Element","GroupedPixel","LayerPixelEntityType","PixelType","ShiftnanigansMapConstructor","Tile","Tile","UngroupedPixel","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compressed_left_width","compressed_top_height","construct_map","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","element_meta_handle","from","from","from","from","from","from","from","from_layers_and_location","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_invalid_location_offsets_for_other_pixel","grouped_pixels","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layer_index","layer_index","layer_pixel_entity_types","new","pixel_board_randomizer","position","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","tile_collision_kind","tile_size","tilemap_tile_index","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ungrouped_pixel","ungrouped_pixel_location","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackgroundMeta","BodyAnimationsMeta","CameraMeta","CoreConfigMeta","CoreMeta","ElementSpawn","HatMeta","MapLayerMeta","MapMeta","MapTileMeta","MatchAssetServerExt","Offsets","ParallaxLayerMeta","PhysicsMeta","PlayerBodyLayerMeta","PlayerLayerMeta","PlayerLayersMeta","PlayerMeta","PlayerSoundsMeta","PlayerStatsMeta","accel_air_speed","accel_walk_speed","air_speed","animations","animations","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","atlas","atlas","background","background_color","body","body","body_size","body_size","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collision","config","default","default","default","default","default_height","depth","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop_volume","element","elements","experimental_maps","face","fin","fmt","fmt","fmt","fmt","frames","friction_lerp","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grab","grab_volume","gravity","gravity","grid_size","head","id","idx","image","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump","jump_speed","jump_volume","land","land_volume","layers","layers","layers","map","map_elements","map_tilesets","min_camera_size","move_lerp_factor","name","name","name","offset","offset","offset","offsets","physics","player","player_camera_box_size","player_hats","players","pos","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","register_match_assets","respawn_invincibility_time","scale","schema","schema","schema","schema","size","slide_body_size","slow_fall_speed","slowdown","sounds","speed","stable_maps","stats","stop_threshold","terminal_velocity","tile_size","tilemap","tiles","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","walk_speed","zoom_in_lerp_factor","zoom_out_lerp_factor","BackgroundMeta","ElementSpawn","MapLayerMeta","MapMeta","MapTileMeta","ParallaxLayerMeta","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","background","background_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collision","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","element","elements","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grid_size","id","idx","image","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_out_of_bounds","layers","layers","name","offset","pos","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","scale","schema","schema","schema","schema","schema","schema","size","speed","tile_size","tilemap","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","BodyAnimationsMeta","HatMeta","Offsets","PlayerBodyLayerMeta","PlayerLayerMeta","PlayerLayersMeta","PlayerMeta","PlayerSoundsMeta","PlayerStatsMeta","accel_air_speed","accel_walk_speed","air_speed","animations","animations","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","atlas","atlas","body","body","body_size","body_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default_true","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_arc","deserialize_arc_slice","deserialize_body_animations","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_volume","face","fin","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grab","grab_volume","gravity","head","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump","jump_speed","jump_volume","land","land_volume","layers","name","name","offset","offset","offsets","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","schema","schema","schema","schema","schema","schema","schema","schema","schema","slide_body_size","slow_fall_speed","slowdown","sounds","stats","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_speed","Actor","Collider","ColliderShape","CollisionWorld","KinematicBody","PhysicsStage","RapierContext","RapierUserData","TileCollisionKind","Update","angular_velocity","apply_rotation","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","bounciness","bounding_box","can_rotate","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","collisions","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fall_through","fmt","fmt","frame_friction_override","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","gravity","has_friction","has_mass","hydrate_physics_bodies","id","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_controlled","is_deactivated","is_in_subset","is_in_subset","is_on_ground","is_on_platform","is_spawning","last_update_position","last_update_rotation","name","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","schema","shape","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_kinematic_bodies","velocity","vzip","vzip","was_on_ground","Actor","Circle","Collider","ColliderShape","ColliderShapeCache","CollisionCache","CollisionWorld","Empty","EntityBuildHasher","EntityHasher","JumpThrough","RapierContext","RapierUserData","Rectangle","Solid","Solid","TileCollisionKind","TileRapierHandle","actor_collisions","actor_collisions_filtered","actors","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broad_phase","bytes_so_far","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collider_set","collider_shape_cache","colliders","collision_cache","collision_pipeline","collisions","ctx","data","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descent","descent","deserialize","disabled","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","entities","entity","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_collider","get_state","handle_collision_event","handle_contact_force_event","handle_teleport","init","init","init","init","init","init","init","init","init","init","initialize","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","move_horizontal","move_vertical","narrow_phase","query_pipeline","rapier","rapier_handle","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","rigid_body_set","schema","schema","schema","schema","schema","schema","seen_wood","serialize","shape","shape","solid_at","solids","spawned_map_layer_metas","sync_colliders","tile_collision","tile_collision_filtered","tile_collision_kinds","tile_collision_point","tile_layers","tile_rapier_handles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_tile","update_tiles","update_tiles_with_filter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","diameter","size","ALL","ANG_AXES","ANG_DIM","ANG_X","Aabb","AccelerationBased","ActiveCollisionTypes","ActiveEvents","ActiveHooks","AddPair","AngDim","AngVector","AngX","AngularInertia","ArrayIdx","ArrayPoint","ArrayTopoFace","ArrayTopoHalfEdge","ArrayTopoVertex","ArrayU32","ArrayUsize","ArrayVector","ArrayVectorTriple","Average","BadAdjascentTrianglesOrientation","BadTriangle","Ball","Ball","Ball","BodyPair","BodyStatus","BroadPhase","BroadPhasePairEvent","CCDSolver","COLLIDERS","COLLIDER_AABBS","COLLIDER_SHAPES","COLLISION_EVENTS","COMPUTE_IMPULSES","CONNECTED_COMPONENTS","CONTACTS","CONTACT_FORCE_EVENTS","Capsule","Capsule","Capsule","ChannelEventCollector","Clockwise","CoefficientCombineRule","Collider","Collider","ColliderBroadPhaseData","ColliderBuilder","ColliderChanges","ColliderEnabled","ColliderFlags","ColliderGraphIndex","ColliderHandle","ColliderMassProps","ColliderMaterial","ColliderPair","ColliderParent","ColliderPosition","ColliderSet","ColliderShape","ColliderType","CollisionEvent","CollisionEventFlags","CollisionPipeline","Compound","Compound","Compound","Contact","ContactData","ContactForceEvent","ContactManifold","ContactManifoldData","ContactModificationContext","ContactPair","ConvexPolygon","ConvexPolygon","ConvexPolygon","CounterClockwise","CrossMatrix","Cuboid","Cuboid","Cuboid","CurrentPosition","Custom","Custom","DEFAULT_EPSILON","DELETE_BAD_TOPOLOGY_TRIANGLES","DELETE_DEGENERATE_TRIANGLES","DELETE_DUPLICATE_TRIANGLES","DIM","DMatrix","DOMINANCE","DVector","DYNAMIC_DYNAMIC","DYNAMIC_FIXED","DYNAMIC_KINEMATIC","DebugColor","DebugRenderBackend","DebugRenderMode","DebugRenderObject","DebugRenderPipeline","DebugRenderStyle","Degenerate","DeletePair","Density","Dim","Disabled","Disabled","DisabledByAttachedBody","DisabledByParent","Dynamic","ENABLED_OR_DISABLED","ENABLED_OR_DISABLED","EXCLUDE_DYNAMIC","EXCLUDE_FIXED","EXCLUDE_KINEMATIC","EXCLUDE_SENSORS","EXCLUDE_SOLIDS","Enabled","Enabled","EventHandler","FILTER_CONTACT_PAIRS","FILTER_INTERSECTION_PAIR","FIXED_FIXED","FREE_FIXED_AXES","FREE_PRISMATIC_AXES","FREE_REVOLUTE_AXES","Face","FeatureId","Fixed","FixedJoint","FixedJointBuilder","ForceBased","GROUPS","GROUP_1","GROUP_10","GROUP_11","GROUP_12","GROUP_13","GROUP_14","GROUP_15","GROUP_16","GROUP_17","GROUP_18","GROUP_19","GROUP_2","GROUP_20","GROUP_21","GROUP_22","GROUP_23","GROUP_24","GROUP_25","GROUP_26","GROUP_27","GROUP_28","GROUP_29","GROUP_3","GROUP_30","GROUP_31","GROUP_32","GROUP_4","GROUP_5","GROUP_6","GROUP_7","GROUP_8","GROUP_9","GenericHeightField","GenericJoint","GenericJointBuilder","GenericTriMesh","Group","HALF_EDGE_TOPOLOGY","HalfSpace","HalfSpace","HalfSpace","HeightField","HeightField","HeightField","HeightFieldCellStatus","HeightFieldStorage","Heights","IMPULSE_JOINTS","ImpulseJoint","ImpulseJoint","ImpulseJointHandle","ImpulseJointSet","IntegrationParameters","InteractionGraph","InteractionGroups","IntersectionPair","IslandManager","Isometry","JOINTS","Jacobian","JacobianView","JacobianViewMut","JointAxesMask","JointAxis","JointEnabled","JointLimits","JointMotor","KINEMATIC_FIXED","KINEMATIC_KINEMATIC","KinematicPositionBased","KinematicVelocityBased","LIN_AXES","LOCAL_MASS_PROPERTIES","LOCAL_MASS_PROPERTIES","LOCKED_FIXED_AXES","LOCKED_PRISMATIC_AXES","LOCKED_REVOLUTE_AXES","LockedAxes","MAX_MANIFOLD_POINTS","MERGE_DUPLICATE_VERTICES","MODIFIED","MODIFIED","MODIFY_SOLVER_CONTACTS","MULTIBODY_JOINTS","Mass","Mass","MassProperties","MassProperties","MassProps","Matrix","Max","Min","MotorModel","Multibody","MultibodyIndex","MultibodyJoint","MultibodyJoint","MultibodyJointHandle","MultibodyJointSet","MultibodyLink","Multiply","NONE","NarrowPhase","ONLY_DYNAMIC","ONLY_FIXED","ONLY_KINEMATIC","ORIENTED","OnEdge","OnEdge","OnFace","OnSolid","OnVertex","OnVertex","Orientation","Other","PARENT","PARENT_EFFECTIVE_DOMINANCE","POSITION","POSITION","PackedFeatureId","PairFilterContext","PartId","PartShape","PhysicsHooks","PhysicsPipeline","Point","PointProjection","PolygonalFeature","PolygonalFeatureMap","Polyline","Polyline","Polyline","PrincipalAngularInertia","PrismaticJoint","PrismaticJointBuilder","QbvhStorage","QbvhStorage","QueryFilter","QueryFilterFlags","QueryPipeline","QueryPipelineMode","REMOVED","RIGID_BODY_AXES","ROTATION_LOCKED","ROTATION_LOCKED_X","ROTATION_LOCKED_Y","ROTATION_LOCKED_Z","Ray","RayIntersection","Real","RevoluteJoint","RevoluteJointBuilder","RigidBody","RigidBody","RigidBodyActivation","RigidBodyAdditionalMassProps","RigidBodyBuilder","RigidBodyCcd","RigidBodyChanges","RigidBodyColliders","RigidBodyDamping","RigidBodyDominance","RigidBodyForces","RigidBodyGraphIndex","RigidBodyHandle","RigidBodyIds","RigidBodyMassProps","RigidBodyPosition","RigidBodySet","RigidBodyType","RigidBodyVelocity","RopeJoint","RopeJointBuilder","Rotation","RoundConvexPolygon","RoundConvexPolygon","RoundConvexPolygon","RoundCuboid","RoundCuboid","RoundCuboid","RoundShape","RoundTriangle","RoundTriangle","RoundTriangle","SENSOR","SHAPE","SIMD_LAST_INDEX","SIMD_WIDTH","SLEEP","SOLVER_CONTACTS","SPATIAL_DIM","SdpMatrix","Segment","Segment","Segment","SegmentPointLocation","Sensor","Shape","ShapeType","SharedShape","SimdBool","SimdCompositeShape","SimdReal","Solid","SolverContact","SolverFlags","SpacialVector","Started","Status","Stopped","SupportMap","SweepTestWithNextPosition","SweepTestWithPredictedPosition","TOI","TRANSLATION_LOCKED","TRANSLATION_LOCKED_X","TRANSLATION_LOCKED_Y","TRANSLATION_LOCKED_Z","TWO_DIM","TYPE","TYPE","TemporaryInteractionIndex","TopoFace","TopoHalfEdge","TopoVertex","TopologyError","TrackedContact","Translation","TriMesh","TriMesh","TriMesh","TriMeshConnectedComponents","TriMeshFlags","TriMeshStorage","TriMeshTopology","Triangle","Triangle","Triangle","TriangleOrientation","TrianglePointLocation","TypedShape","TypedSimdCompositeShape","UNKNOWN","UnitVector","Unknown","Vector","Vertex","X","X","Y","Y","aabb","aabb","aabb","aabb","aabb","aabb","aabb","aabbs","aabbs","abs_diff_eq","acc_augmented_mass","acc_inv_augmented_mass","accelerations","activation","activation","activation_mut","active","active_collision_types","active_collision_types","active_collision_types","active_collision_types","active_dynamic_bodies","active_dynamic_set","active_events","active_events","active_events","active_events","active_hooks","active_hooks","active_hooks","active_hooks","active_island_id","active_islands","active_kinematic_bodies","active_kinematic_set","active_set_id","active_set_offset","active_set_timestamp","active_set_timestamp","add","add","add_assign","add_assign","add_collider","add_force","add_force_at_point","add_torque","additional_local_mprops","additional_mass","additional_mass_properties","additional_mass_properties","all","all","all","all","all","all","all","all","all","all","all","all","all","all","allowed_linear_error","angular_damping","angular_damping","angular_damping","angular_damping","angular_threshold","angvel","angvel","angvel","angvel","append","apply_damping","apply_displacement","apply_displacements","apply_force_at_point","apply_impulse","apply_impulse","apply_impulse_at_point","apply_impulse_at_point","apply_torque_impulse","apply_torque_impulse","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ball","as_ball_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_capsule","as_capsule_mut","as_composite_shape","as_composite_shape","as_composite_shape","as_composite_shape","as_compound","as_compound_mut","as_convex_polygon","as_convex_polygon_mut","as_cuboid","as_cuboid_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fixed","as_fixed_mut","as_halfspace","as_halfspace_mut","as_heightfield","as_heightfield_mut","as_mut","as_mut_slice","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polyline","as_polyline_mut","as_prismatic","as_prismatic_mut","as_ref","as_ref","as_revolute","as_revolute_mut","as_rope","as_rope_mut","as_round_convex_polygon","as_round_convex_polygon_mut","as_round_cuboid","as_round_cuboid_mut","as_round_triangle","as_round_triangle_mut","as_segment","as_segment_mut","as_shape","as_shape_mut","as_slice","as_support_map","as_support_map","as_support_map","as_support_map","as_support_map","as_triangle","as_triangle_mut","as_trimesh","as_trimesh_mut","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_vector","as_vector_mut","assembly_id","attach_collider","attached_bodies","attached_enabled_joints","attached_joints","attached_joints","augmented_mass","ball","ball","barycentric_coordinates","barycentric_coordinates","bf_data","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bodies","bodies","bodies","bodies_attached_with_enabled_joint","body1","body1","body2","body2","body_jacobians","body_to_parent","body_type","body_type","body_type","border_radius","border_subdivisions","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_sphere","bounding_sphere","bounding_sphere","bounding_sphere","bounding_sphere","broad_phase_events","broad_phase_events","broadphase_collider_pairs","broadphase_collider_pairs","build","build","build","build","build","build","build","can_sleep","can_sleep","can_sleep","cannot_sleep","capsule","capsule_x","capsule_x","capsule_y","capsule_y","cast_local_ray","cast_local_ray","cast_local_ray","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_ray","cast_ray_and_get_normal","cast_shape","ccd","ccd_active","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_enabled","ccd_enabled","ccd_enabled","ccd_max_dist","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","cell_at_point","cell_width","center_of_mass","cfm_factor","changes","changes","clamp_motions","cleanup_removed_rigid_bodies","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","coll_type","collider1","collider1","collider1","collider1","collider1","collider1","collider2","collider2","collider2","collider2","collider2","collider2","collider_aabb_color","collider_dynamic_color","collider_fixed_color","collider_kinematic_color","collider_parentless_color","colliders","colliders","colliders","colliders","colliders","colliders_proxy_ids","colliders_with_aabb_intersecting_aabb","collision_event_sender","collision_groups","collision_groups","collision_groups","collision_groups","combine_coefficients","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compound","compound","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_bounding_sphere","compute_effective_force_and_torque","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_swept_aabb","compute_swept_aabb","connected_components","connected_components","connectivity_graph","contact_depth_color","contact_force_event_sender","contact_force_event_threshold","contact_force_event_threshold","contact_force_event_threshold","contact_force_event_threshold","contact_graph","contact_graph","contact_id","contact_normal_color","contact_normal_length","contact_pair","contact_pair_at_index","contact_pair_indices","contact_pair_unknown_gen","contact_pairs","contacts","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_with","contacts_with_unknown_gen","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_local_point","contains_local_point","contains_local_point","contains_local_point","contains_local_point","convex_decomposition","convex_decomposition","convex_decomposition_with_params","convex_decomposition_with_params","convex_hull","convex_hull","convex_polyline","convex_polyline","coords","copy_geometry_from","coriolis_v","coriolis_w","counters","coupled_axes","coupled_axes","cuboid","cuboid","damping","damping","damping","damping","damping_mut","damping_ratio","data","data","data","data","data","data","data","data","data","data","decompose_trimesh","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_angular_threshold","default_damping","default_density","default_epsilon","default_friction","default_linear_threshold","default_max_relative","default_time_until_sleep","delta","density","density","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detach_collider","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dilation_factor","dist","dist","distance_to_local_point","dominance","dominance_group","dominance_group","dominance_group","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","draw_line","draw_line_strip","draw_polyline","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dt","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic","effective_angular_inertia","effective_dominance_group","effective_group","effective_inv_mass","effective_mass","effective_world_inv_inertia_sqrt","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","enable_ccd","enabled","enabled","enabled","enabled","enabled","enabled","enabled","enabled_translations","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erp","erp_inv_dt","exclude_collider","exclude_collider","exclude_dynamic","exclude_fixed","exclude_kinematic","exclude_rigid_body","exclude_rigid_body","exclude_sensors","exclude_solids","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extract_connected_components","face","face","face_colors","face_face_contacts","face_vertex_contacts","faces","feature_normal","feature_normal_at_point","feature_normal_at_point","fid","fid1","fid2","filter","filter_contact_pair","filter_intersection_pair","find_deepest_contact","find_first_impact","fixed","flags","flags","flags","flags","flags","flat_indices","flat_indices","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","forces","forward_kinematics","friction","friction","friction","friction","friction","friction_combine_rule","friction_combine_rule","friction_combine_rule","friction_combine_rule","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ball","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_capsule","from_compound","from_contact_pair","from_convex_hull","from_convex_polygon","from_convex_polyline","from_cuboid","from_i64","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_polygon","from_raw_parts","from_raw_parts","from_raw_parts","from_raw_parts","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_slice","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_triangle","from_trimesh","from_u64","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","generalized_acceleration","generalized_velocity","generalized_velocity_mut","get","get","get","get","get_multibody","get_multibody_mut_internal","get_mut","get_mut","get_mut","get_mut","get_mut_internal","get_unknown_gen","get_unknown_gen","get_unknown_gen","get_unknown_gen","get_unknown_gen_mut","get_unknown_gen_mut","get_unknown_gen_mut","graph","graph_indices","gravitational_potential_energy","gravity_scale","gravity_scale","gravity_scale","gravity_scale","grouped_faces","groups","groups","half_edge","half_edge","half_edges","halfspace","halfspace","handle","handle","handle_collision_event","handle_collision_event","handle_contact_force_event","handle_contact_force_event","handle_user_changes","has_any_active_contact","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height_at_point","heightfield","heightfield","heights","heights","i_coriolis_dt","identity","ids","impulse","impulse","impulse","impulse_joint_anchor_color","impulse_joint_separation_color","impulses","inactive","index","index","index","index","index","index","index","index","index_interaction","index_mut","index_mut","indices","indices","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_shape","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_with_parent","instances","integrate","integrate","integrate","integrate_forces_and_velocities","integrated_vels","interaction_pair","interaction_pair_mut","interactions","interactions_with","interactions_with_endpoints","interactions_with_mut","interleave_restitution_and_friction_resolution","internal_id","interpolate_velocity","intersecting","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection_graph","intersection_graph","intersection_pair","intersection_pair_unknown_gen","intersection_pairs","intersection_with_shape","intersections_with","intersections_with_point","intersections_with_ray","intersections_with_shape","intersections_with_unknown_gen","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw_parts","into_raw_parts","into_raw_parts","into_raw_parts","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inv_augmented_mass","inv_augmented_mass","inv_dt","inv_mass","inv_principal_inertia_sqrt","invalid","invalid","invalid","invalid","invalid_handle","is","is_active","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_backface","is_bouncy","is_ccd_active","is_ccd_enabled","is_convex","is_convex","is_convex","is_convex","is_convex","is_convex","is_convex_polyhedron","is_dynamic","is_dynamic","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_enabled","is_face","is_fixed","is_fixed","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_kinematic","is_kinematic","is_moving","is_moving_fast","is_new","is_on_face","is_root","is_rotation_locked","is_segment_removed","is_sensor","is_sensor","is_sensor","is_sleeping","is_translation_locked","is_unknown","is_vertex","is_zero","is_zero","iter","iter","iter","iter","iter_enabled","iter_enabled_mut","iter_mut","iter_mut","iter_mut","jacobian","jacobian_mul_coordinates","joint","joint","joint_between","joint_cfm_coeff","joint_constraint_indices","joint_damping_ratio","joint_erp","joint_erp_inv_dt","joint_graph","joint_graph","joint_ids","joint_rot","joint_velocity","joints_between","kinematic_position_based","kinematic_velocity_based","kinetic_energy","kinetic_energy","largest_layer","layers","len","len","len","limit_axes","limits","limits","limits","limits","limits","limits","limits","limits","limits","linear_damping","linear_damping","linear_damping","linear_damping","linear_threshold","link","link_id","link_mut","links","links","links_mut","linvel","linvel","linvel","linvel","local_aabb","local_aabb","local_aabb","local_aabb","local_aabb","local_aabb","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_axis1","local_axis1","local_axis1","local_axis1","local_axis1","local_axis1","local_axis2","local_axis2","local_axis2","local_axis2","local_axis2","local_axis2","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_com","local_frame1","local_frame1","local_frame1","local_frame1","local_frame2","local_frame2","local_frame2","local_frame2","local_mprops","local_p1","local_p2","local_support_feature","local_support_feature","local_support_point","local_support_point","local_support_point","local_support_point_toward","local_support_point_toward","local_to_parent","local_to_parent","local_to_world","local_to_world","lock_axes","lock_rotations","lock_rotations","lock_translations","lock_translations","locked_axes","locked_axes","locked_axes","locked_axes","make_mut","manifold","manifold_indices","manifolds","map_attached_joints_mut","map_elements_in_local_aabb","map_part_at","map_part_at","map_part_at","map_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","mass","mass","mass","mass","mass","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","material","material","max","max_ccd_substeps","max_force","max_force_direction","max_force_magnitude","max_impulse","max_penetration_correction","max_point_velocity","max_stabilization_iterations","max_velocity_friction_iterations","max_velocity_iterations","memberships","min","min_ccd_dt","min_island_size","mode","model","modified_bodies","modified_colliders","modify_solver_contacts","motor","motor","motor","motor","motor","motor_axes","motor_max_force","motor_max_force","motor_max_force","motor_max_force","motor_model","motor_model","motor_model","motor_model","motor_model","motor_position","motor_position","motor_position","motor_position","motor_velocity","motor_velocity","motor_velocity","motor_velocity","motors","mprops","mprops","mprops_flags","mul","multibodies","multibodies","multibody_joint_anchor_color","multibody_joint_separation_color","ndofs","ndofs","ndofs","needs_broad_phase_update","needs_narrow_phase_update","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_kinematic_position_based","new_kinematic_velocity_based","new_static","next","next_position","next_position","none","nonlinear_cast_shape","normal","normal","normal","normals","normals","not","not","not","not","not","not","not","not","not","not","not","not","not","num_active_contacts","num_cells","num_connected_components","num_links","num_segments","num_triangles","num_velocity_constraints","num_vertices","offsetted","only_dynamic","only_fixed","only_kinematic","parent","parent","parent_id","parent_internal_id","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","point","point","points","points","polyline","polyline","pos","pos","pos_wrt_parent","position","position","position","position","position","position","position","position_wrt_parent","position_wrt_parent","predicate","predicate","predict_impacts_at_next_positions","predict_position_using_velocity_and_forces","prediction_distance","principal_inertia","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_location","project_local_point_and_get_location","project_local_point_and_get_location","project_local_point_and_get_location_with_max_dist","project_local_point_assuming_solid_interior_ccw","project_local_point_with_max_dist","project_local_point_with_max_dist","project_point","project_point_and_get_feature","propagate_modified_body_positions_to_colliders","proxies","proxy_index","pseudo_kinetic_energy","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","query_dispatcher","query_dispatcher","query_dispatcher","query_dispatcher","query_pipeline","ranges","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_graph","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","rb2mb","rb_graph_ids","recompute_mass_properties_from_colliders","recompute_mass_properties_from_colliders","region_pool","relative_dominance","relative_eq","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_joints_attached_to_rigid_body","remove_joints_attached_to_rigid_body","remove_multibody_articulations","removed","removed_colliders","render","render_all","render_colliders","render_contacts","render_joints","render_rigid_bodies","reporting","reset_forces","reset_torques","restitution","restitution","restitution","restitution","restitution","restitution_combine_rule","restitution_combine_rule","restitution_combine_rule","restitution_combine_rule","restrict_rotations","restrict_translations","restrict_translations","reverse","reverse","rigid_body","rigid_body1","rigid_body1","rigid_body1","rigid_body2","rigid_body2","rigid_body2","rigid_body_axes_length","rigid_body_handle","rigid_body_link","root","root_aabb","root_is_dynamic","root_mut","rotation","rotation","rotation","rotation","round_convex_decomposition","round_convex_decomposition","round_convex_decomposition_with_params","round_convex_decomposition_with_params","round_convex_hull","round_convex_hull","round_convex_polyline","round_convex_polyline","round_cuboid","round_cuboid","round_triangle","round_triangle","scale","scale","scaled","scaled","scaled","scaled","scaled","segment","segment","segment","segment_at","segment_feature_to_polyline_feature","segments","segments","sensor","sensor","set","set","set","set","set","set","set","set","set","set","set","set","set","set_active_collision_types","set_active_events","set_active_hooks","set_additional_mass","set_additional_mass_properties","set_angular_damping","set_angvel","set_body_type","set_collision_groups","set_contact_force_event_threshold","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_density","set_dominance_group","set_dt","set_enabled","set_enabled","set_enabled","set_enabled_rotations","set_enabled_translations","set_flags","set_friction","set_friction_combine_rule","set_gravity_scale","set_inv_dt","set_limits","set_limits","set_limits","set_limits","set_linear_damping","set_linvel","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_axis1","set_local_axis1","set_local_axis1","set_local_axis2","set_local_axis2","set_local_axis2","set_local_frame1","set_local_frame1","set_local_frame2","set_local_frame2","set_locked_axes","set_mass","set_mass","set_mass_properties","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor_max_force","set_motor_max_force","set_motor_max_force","set_motor_max_force","set_motor_model","set_motor_model","set_motor_model","set_motor_model","set_motor_position","set_motor_position","set_motor_position","set_motor_position","set_motor_velocity","set_motor_velocity","set_motor_velocity","set_motor_velocity","set_next_kinematic_position","set_next_kinematic_rotation","set_next_kinematic_translation","set_parent","set_position","set_position","set_position_wrt_parent","set_restitution","set_restitution_combine_rule","set_rotation","set_rotation","set_rotation_wrt_parent","set_scale","set_segment_removed","set_sensor","set_shape","set_solver_groups","set_translation","set_translation","set_translation_wrt_parent","shape","shape","shape","shape_mut","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shapes","shapes","shared_shape","shift02","shift23","sleep","sleep","sleep_color_multiplier","sleeping","sleeping","sleeping","smallest_layer","solver_contacts","solver_contacts","solver_flags","solver_groups","solver_groups","solver_groups","solver_groups","solver_id","solvers","stack","start_event_emited","start_event_emited","start_x","started","status","step","step","stiffness","stopped","style","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subdivisions","sum","support_feature_id_toward","support_point","support_point_toward","swap","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tangent_impulse","tangent_velocity","target_pos","target_vel","test","test","test","test","time_since_can_sleep","time_until_sleep","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_polyline","to_polyline","to_polyline","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_wake_up","to_wake_up","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","topology","torque","total_force","total_force_magnitude","total_impulse","total_impulse_magnitude","transform_by","transform_by","transform_vertices","transformed","translation","translation","translation","translation","triangle","triangle","triangle","triangles","trimesh","trimesh","trimesh_with_flags","trimesh_with_flags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twin","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_qbvh","typed_qbvh","typed_qbvh","typed_qbvh","typed_qbvh","unclamped_elements_range_in_local_aabb","union","union","union","union","union","union","union","union","union","union","union","union","union","unit_cell_width","unit_joint_limit_constraint","unit_joint_motor_constraint","unpack","unwrap_face","unwrap_vertex","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update_as_oneway_platform","update_ccd_active_flags","update_incremental","update_positions","update_with_mode","update_world_mass_properties","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_force","user_force","user_torque","user_torque","vector","velocities","velocity_at_point","velocity_at_point","velocity_constraints","vels","vertex","vertex","vertices","vertices","vertices","vertices","vertices","vertices","vids","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wake_up","wake_up","wake_up","with_filter","with_flags","with_memberships","with_query_dispatcher","with_query_dispatcher","with_query_dispatcher","workspace","workspace","workspace","world_com","world_com","world_inv_inertia_sqrt","zero","zero","zero","zero","dt","edge","triangle1","triangle2","AbstractRotation","Affine2","Affine3","ArrayStorage","Bidiagonal","CStride","CStride","Cholesky","ClosedAdd","ClosedDiv","ClosedMul","ClosedSub","ColPivQR","Complex","ComplexField","Const","Const","DMatrix","DMatrixSlice","DMatrixSliceMut","DMatrixView","DMatrixViewMut","DVector","DVectorSlice","DVectorSliceMut","DVectorView","DVectorViewMut","DefaultAllocator","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimRange","DimSub","DimSum","DualQuaternion","Dyn","Dynamic","Element","EuclideanNorm","Field","FullPivLU","Hessenberg","IsContiguous","IsDynamic","IsNotStaticOne","Isometry","Isometry2","Isometry3","IsometryMatrix2","IsometryMatrix3","LU","LpNorm","Matrix","Matrix1","Matrix1x2","Matrix1x3","Matrix1x4","Matrix1x5","Matrix1x6","Matrix1xX","Matrix2","Matrix2x1","Matrix2x3","Matrix2x4","Matrix2x5","Matrix2x6","Matrix2xX","Matrix3","Matrix3x1","Matrix3x2","Matrix3x4","Matrix3x5","Matrix3x6","Matrix3xX","Matrix4","Matrix4x1","Matrix4x2","Matrix4x3","Matrix4x5","Matrix4x6","Matrix4xX","Matrix5","Matrix5x1","Matrix5x2","Matrix5x3","Matrix5x4","Matrix5x6","Matrix5xX","Matrix6","Matrix6x1","Matrix6x2","Matrix6x3","Matrix6x4","Matrix6x5","Matrix6xX","MatrixCross","MatrixMN","MatrixN","MatrixSlice","MatrixSlice1","MatrixSlice1x2","MatrixSlice1x3","MatrixSlice1x4","MatrixSlice1x5","MatrixSlice1x6","MatrixSlice1xX","MatrixSlice2","MatrixSlice2x1","MatrixSlice2x3","MatrixSlice2x4","MatrixSlice2x5","MatrixSlice2x6","MatrixSlice2xX","MatrixSlice3","MatrixSlice3x1","MatrixSlice3x2","MatrixSlice3x4","MatrixSlice3x5","MatrixSlice3x6","MatrixSlice3xX","MatrixSlice4","MatrixSlice4x1","MatrixSlice4x2","MatrixSlice4x3","MatrixSlice4x5","MatrixSlice4x6","MatrixSlice4xX","MatrixSlice5","MatrixSlice5x1","MatrixSlice5x2","MatrixSlice5x3","MatrixSlice5x4","MatrixSlice5x6","MatrixSlice5xX","MatrixSlice6","MatrixSlice6x1","MatrixSlice6x2","MatrixSlice6x3","MatrixSlice6x4","MatrixSlice6x5","MatrixSlice6xX","MatrixSliceMut","MatrixSliceMut1","MatrixSliceMut1x2","MatrixSliceMut1x3","MatrixSliceMut1x4","MatrixSliceMut1x5","MatrixSliceMut1x6","MatrixSliceMut1xX","MatrixSliceMut2","MatrixSliceMut2x1","MatrixSliceMut2x3","MatrixSliceMut2x4","MatrixSliceMut2x5","MatrixSliceMut2x6","MatrixSliceMut2xX","MatrixSliceMut3","MatrixSliceMut3x1","MatrixSliceMut3x2","MatrixSliceMut3x4","MatrixSliceMut3x5","MatrixSliceMut3x6","MatrixSliceMut3xX","MatrixSliceMut4","MatrixSliceMut4x1","MatrixSliceMut4x2","MatrixSliceMut4x3","MatrixSliceMut4x5","MatrixSliceMut4x6","MatrixSliceMut4xX","MatrixSliceMut5","MatrixSliceMut5x1","MatrixSliceMut5x2","MatrixSliceMut5x3","MatrixSliceMut5x4","MatrixSliceMut5x6","MatrixSliceMut5xX","MatrixSliceMut6","MatrixSliceMut6x1","MatrixSliceMut6x2","MatrixSliceMut6x3","MatrixSliceMut6x4","MatrixSliceMut6x5","MatrixSliceMut6xX","MatrixSliceMutMN","MatrixSliceMutN","MatrixSliceMutXx1","MatrixSliceMutXx2","MatrixSliceMutXx3","MatrixSliceMutXx4","MatrixSliceMutXx5","MatrixSliceMutXx6","MatrixSliceXx1","MatrixSliceXx2","MatrixSliceXx3","MatrixSliceXx4","MatrixSliceXx5","MatrixSliceXx6","MatrixSum","MatrixVec","MatrixView","MatrixView1","MatrixView1x2","MatrixView1x3","MatrixView1x4","MatrixView1x5","MatrixView1x6","MatrixView1xX","MatrixView2","MatrixView2x1","MatrixView2x3","MatrixView2x4","MatrixView2x5","MatrixView2x6","MatrixView2xX","MatrixView3","MatrixView3x1","MatrixView3x2","MatrixView3x4","MatrixView3x5","MatrixView3x6","MatrixView3xX","MatrixView4","MatrixView4x1","MatrixView4x2","MatrixView4x3","MatrixView4x5","MatrixView4x6","MatrixView4xX","MatrixView5","MatrixView5x1","MatrixView5x2","MatrixView5x3","MatrixView5x4","MatrixView5x6","MatrixView5xX","MatrixView6","MatrixView6x1","MatrixView6x2","MatrixView6x3","MatrixView6x4","MatrixView6x5","MatrixView6xX","MatrixViewMut","MatrixViewMut1","MatrixViewMut1x2","MatrixViewMut1x3","MatrixViewMut1x4","MatrixViewMut1x5","MatrixViewMut1x6","MatrixViewMut1xX","MatrixViewMut2","MatrixViewMut2x1","MatrixViewMut2x3","MatrixViewMut2x4","MatrixViewMut2x5","MatrixViewMut2x6","MatrixViewMut2xX","MatrixViewMut3","MatrixViewMut3x1","MatrixViewMut3x2","MatrixViewMut3x4","MatrixViewMut3x5","MatrixViewMut3x6","MatrixViewMut3xX","MatrixViewMut4","MatrixViewMut4x1","MatrixViewMut4x2","MatrixViewMut4x3","MatrixViewMut4x5","MatrixViewMut4x6","MatrixViewMut4xX","MatrixViewMut5","MatrixViewMut5x1","MatrixViewMut5x2","MatrixViewMut5x3","MatrixViewMut5x4","MatrixViewMut5x6","MatrixViewMut5xX","MatrixViewMut6","MatrixViewMut6x1","MatrixViewMut6x2","MatrixViewMut6x3","MatrixViewMut6x4","MatrixViewMut6x5","MatrixViewMut6xX","MatrixViewMutXx1","MatrixViewMutXx2","MatrixViewMutXx3","MatrixViewMutXx4","MatrixViewMutXx5","MatrixViewMutXx6","MatrixViewXx1","MatrixViewXx2","MatrixViewXx3","MatrixViewXx4","MatrixViewXx5","MatrixViewXx6","MatrixXx1","MatrixXx2","MatrixXx3","MatrixXx4","MatrixXx5","MatrixXx6","Norm","Norm","Normed","OMatrix","OPoint","OVector","Orthographic3","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Owned","OwnedUninit","PermutationSequence","Perspective3","Point","Point1","Point2","Point3","Point4","Point5","Point6","Projective2","Projective3","QR","Quaternion","RStride","RStride","RawStorage","RawStorageMut","RealField","RealField","Reflection","Reflection1","Reflection2","Reflection3","Reflection4","Reflection5","Reflection6","Representative","ReshapableStorage","Rotation","Rotation2","Rotation3","RowDVector","RowOVector","RowSVector","RowVector","RowVector1","RowVector2","RowVector3","RowVector4","RowVector5","RowVector6","SMatrix","SMatrixSlice","SMatrixSliceMut","SMatrixView","SMatrixViewMut","SVD","SVector","SVectorSlice","SVectorSliceMut","SVectorView","SVectorViewMut","SameShapeStorage","Scalar","Scale","Scale1","Scale2","Scale3","Scale4","Scale5","Scale6","Schur","SimdBool","SimdBool","SimdComplexField","SimdPartialOrd","SimdRealField","SimdRealField","SimdValue","Similarity","Similarity2","Similarity3","SimilarityMatrix2","SimilarityMatrix3","Size","SliceRange","SliceStorage","SliceStorageMut","SquareMatrix","Storage","StorageMut","SubTCategoryOf","SuperTCategoryOf","SymmetricEigen","SymmetricTridiagonal","TAffine","TCategory","TCategoryMul","TGeneral","TProjective","ToConst","ToTypenum","Transform","Transform2","Transform3","Translation","Translation1","Translation2","Translation3","Translation4","Translation5","Translation6","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","UDU","USIZE","UniformNorm","UninitMatrix","UninitVector","Unit","UnitComplex","UnitDualQuaternion","UnitQuaternion","UnitVector1","UnitVector2","UnitVector3","UnitVector4","UnitVector5","UnitVector6","VecStorage","Vector","Vector1","Vector2","Vector3","Vector4","Vector5","Vector6","VectorN","VectorSlice","VectorSlice1","VectorSlice2","VectorSlice3","VectorSlice4","VectorSlice5","VectorSlice6","VectorSliceMut","VectorSliceMut1","VectorSliceMut2","VectorSliceMut3","VectorSliceMut4","VectorSliceMut5","VectorSliceMut6","VectorSum","VectorView","VectorView1","VectorView2","VectorView3","VectorView4","VectorView5","VectorView6","VectorViewMut","VectorViewMut1","VectorViewMut2","VectorViewMut3","VectorViewMut4","VectorViewMut5","VectorViewMut6","ViewStorage","ViewStorageMut","_phantom","_phantoms","_phantoms","_phantoms","a","a_axis","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","absolute_transform_vector","absolute_transform_vector","acos","acos","acos","acosh","acosh","acosh","ad_mul","ad_mul_to","ad_solve_lower_triangular","ad_solve_lower_triangular_mut","ad_solve_lower_triangular_unchecked","ad_solve_lower_triangular_unchecked_mut","ad_solve_upper_triangular","ad_solve_upper_triangular_mut","ad_solve_upper_triangular_unchecked","ad_solve_upper_triangular_unchecked_mut","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_scalar","add_scalar_mut","add_to","adjoint","adjoint_mut","adjoint_to","all","allocate_from_iterator","allocate_from_iterator","allocate_from_iterator","allocate_uninit","allocate_uninit","allocate_uninit","amax","amin","and","angle","angle","angle","angle","angle","angle_to","angle_to","angle_to","angle_to","any","append_axisangle_linearized","append_nonuniform_scaling","append_nonuniform_scaling_mut","append_permutation","append_rotation_mut","append_rotation_mut","append_rotation_wrt_center_mut","append_rotation_wrt_center_mut","append_rotation_wrt_point_mut","append_rotation_wrt_point_mut","append_scaling","append_scaling","append_scaling_mut","append_scaling_mut","append_translation","append_translation_mut","append_translation_mut","append_translation_mut","apply","apply","apply_into","apply_metric_distance","apply_norm","argmax","argmin","argument","argument","as_","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_bytes","as_bytes","as_bytes","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_matrix","as_matrix","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_mut_slice","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_unchecked","as_projective","as_projective","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_scalar","as_scalar_mut","as_slice","as_slice","as_slice","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_vec","as_vec_mut","as_vector","as_vector_mut","as_view","as_view_mut","asin","asin","asin","asinh","asinh","asinh","aspect","assume_init","assume_init","assume_init","assume_init","atan","atan","atan","atan2","atanh","atanh","atanh","axcpy","axis","axis","axis","axis","axis_angle","axis_angle","axis_angle","axpy","b","b_axis","base","begin","bias","bias","bidiagonalize","bitmask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","camax","camin","cap_magnitude","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cbrt","cbrt","cdpy","ceil","ceil","center","check_homogeneous_invariants","check_homogeneous_invariants","check_homogeneous_invariants","check_homogeneous_invariants","chol","cholesky","clamp","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned_sum","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmpy","col_piv_qr","col_piv_qr","column","column_iter","column_iter_mut","column_mean","column_mut","column_part","column_part_mut","column_product","column_sum","column_variance","columns","columns_generic","columns_generic_mut","columns_generic_with_step","columns_generic_with_step_mut","columns_mut","columns_range","columns_range_mut","columns_range_pair","columns_range_pair_mut","columns_with_step","columns_with_step_mut","complex","complex_eigenvalues","complex_eigenvalues","component_div","component_div_assign","component_div_mut","component_mul","component_mul_assign","component_mul_mut","compress_columns","compress_rows","compress_rows_tr","conj","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_transform_mut","conjugate_transpose","conjugate_transpose_to","convert","convert_ref","convert_ref_unchecked","convert_unchecked","convolve_full","convolve_same","convolve_valid","coords","coords","copy_from","copy_from_slice","copy_sign_to","copy_sign_to","copy_sign_to","copy_sign_to","copysign","cos","cos","cos","cos_angle","cosc","cosh","cosh","cosh","coshc","cross","cross_matrix","d","d","d_matrix","data","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","determinant","determinant","determinant","determinant","diag","diag","diagonal","diagonal","diagonal","diagonal","diff_conj1_2","diff_conj1_2","dim","dim","distance","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmatrix","dot","dot","dotc","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dual","dual_quaternion","dvector","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","e","eigenvalues","eigenvalues","eigenvalues","eigenvectors","encode_hex","encode_hex_upper","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler_angles","euler_angles","euler_angles_ordered","exp","exp","exp","exp","exp","exp2","exp2","exp_eps","exp_m1","exp_m1","extend","extend","extend","extend","extend","extend","extend","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","face_towards","face_towards","face_towards","face_towards","face_towards","face_towards","face_towards","fill","fill_column","fill_diagonal","fill_lower_triangle","fill_lower_triangle_with_upper_triangle","fill_row","fill_upper_triangle","fill_upper_triangle_with_lower_triangle","fill_with","fill_with_identity","fixed_columns","fixed_columns_mut","fixed_columns_with_step","fixed_columns_with_step_mut","fixed_resize","fixed_rows","fixed_rows_mut","fixed_rows_with_step","fixed_rows_with_step_mut","fixed_slice","fixed_slice_mut","fixed_slice_with_steps","fixed_slice_with_steps_mut","fixed_view","fixed_view_mut","fixed_view_with_steps","fixed_view_with_steps_mut","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold_with","fovy","frac_1_pi","frac_2_pi","frac_2_sqrt_pi","frac_pi_2","frac_pi_3","frac_pi_4","frac_pi_6","frac_pi_8","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_array_storage","from_axis_angle","from_axis_angle","from_axis_angle","from_basis_unchecked","from_basis_unchecked","from_basis_unchecked","from_basis_unchecked","from_column_slice","from_column_slice","from_column_slice","from_column_slice","from_column_slice_generic","from_columns","from_complex","from_complex_and_get","from_coordinates","from_cos_sin_unchecked","from_data","from_data_statically_unchecked","from_diagonal","from_diagonal_element","from_diagonal_element","from_diagonal_element","from_diagonal_element","from_diagonal_element_generic","from_element","from_element","from_element","from_element","from_element_generic","from_euler_angles","from_euler_angles","from_euler_angles","from_f32","from_f64","from_fn","from_fn","from_fn","from_fn","from_fn_generic","from_fov","from_homogeneous","from_homogeneous","from_i128","from_i16","from_i32","from_i64","from_i8","from_imag","from_isize","from_isometry","from_isometry","from_iterator","from_iterator","from_iterator","from_iterator","from_iterator_generic","from_matrix","from_matrix","from_matrix","from_matrix","from_matrix_eps","from_matrix_eps","from_matrix_eps","from_matrix_eps","from_matrix_unchecked","from_matrix_unchecked","from_matrix_unchecked","from_matrix_unchecked","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal_generic","from_parts","from_parts","from_parts","from_parts","from_polar_decomposition","from_quaternion","from_raw_parts","from_raw_parts","from_real","from_real","from_real","from_real","from_real_and_dual","from_ref_unchecked","from_rotation","from_rotation_matrix","from_rotation_matrix","from_row_iterator","from_row_iterator","from_row_iterator","from_row_iterator","from_row_iterator_generic","from_row_slice","from_row_slice","from_row_slice","from_row_slice","from_row_slice_generic","from_rows","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis_eps","from_scaling","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_generic","from_slice_generic","from_slice_generic_unchecked","from_slice_generic_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides_generic","from_slice_with_strides_generic","from_slice_with_strides_generic_unchecked","from_slice_with_strides_generic_unchecked","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_str","from_str_radix","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","from_usize","from_usize","from_usize","from_vec","from_vec","from_vec","from_vec","from_vec_generic","from_vec_storage","from_vec_storage","from_vec_storage","from_vector","from_vector","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","full_piv_lu","ge","ge","gemm","gemm_ad","gemm_tr","gemv","gemv_ad","gemv_tr","generic_slice","generic_slice_mut","generic_slice_with_steps","generic_slice_with_steps_mut","generic_view","generic_view_mut","generic_view_with_steps","generic_view_with_steps_mut","geometry","ger","ger_symm","gerc","get","get","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_mut","get_unchecked","get_unchecked","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","get_unchecked_mut","get_unchecked_mut","gt","gt","h","half","has_normalizer","has_normalizer","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hegemv","hegerc","hermitian_part","hess","hessenberg","hypot","hypot","i","iamax","iamax_full","iamin","icamax","icamax_full","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity_generic","identity_generic","if_else","if_else2","if_else3","im","imag","imaginary","imaginary","imax","imin","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inf","inf","inf","inf_sup","inf_sup","inf_sup","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert_column","insert_column","insert_columns","insert_columns_generic_uninitialized","insert_fixed_columns","insert_fixed_rows","insert_row","insert_rows","insert_rows_generic_uninitialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned_sum","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_scalar","into_slice","into_slice","into_slice_mut","inv","inv","inv","inv_mul","inv_permute_columns","inv_permute_rows","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_unchecked","ipiv","is","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_convertible","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_identity","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_infinite","is_invertible","is_invertible","is_invertible","is_invertible","is_invertible","is_nan","is_normal","is_one","is_orthogonal","is_pure","is_sign_negative","is_sign_positive","is_special_orthogonal","is_square","is_upper_diagonal","is_zero","is_zero","is_zero","is_zero","isometry","isometry_to","iter","iter","iter_mut","iter_mut","ith","ith_axis","kronecker","l","l","l","l1_norm","l_dirty","l_unpack","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","le","le","left","left_div","len","len","len","len","len","len","lerp","lerp","lerp","lerp","lerp","lerp","lerp_slerp","lerp_slerp","lerp_slerp","lerp_slerp","linalg","linear_index","ln","ln","ln","ln","ln_10","ln_1p","ln_1p","ln_2","ln_determinant","log","log","log10","log10","log10_e","log2","log2","log2_e","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","lower_triangle","lp_norm","lt","lt","lu","lu","lu","magnitude","magnitude","magnitude_squared","magnitude_squared","map","map","map_diagonal","map_lanes","map_with_location","matrix","matrix","matrix","matrix","matrix","matrix","matrix","matrix_mut","matrix_mut","matrix_mut_unchecked","matrix_mut_unchecked","max","max","max","max","max","max","max","max","max","max_value","max_value","max_value","max_value","max_value","mean","mean_of","metric_distance","metric_distance","metric_distance","metric_distance","metric_distance","min","min","min","min","min","min","min","min","min","min_value","min_value","min_value","min_value","min_value","modulus","modulus","modulus_squared","modulus_squared","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_to","name","name","ncols","ncols","ncols","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg_mut","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_and_get","new_containing_point","new_eps","new_nonuniform_scaling","new_nonuniform_scaling_wrt_point","new_nonuniform_scaling_wrt_point","new_normalize","new_observer_frame","new_observer_frame","new_observer_frame","new_observer_frames","new_observer_frames","new_observer_frames","new_observer_frames","new_orthographic","new_perspective","new_rotation","new_rotation","new_rotation_wrt_point","new_scaling","new_translation","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unordered","new_with_strides_unchecked","new_with_strides_unchecked","new_with_substitute","new_with_workspace","nlerp","nlerp","none","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm1","norm1","norm_sqr","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","normalize","normalize","normalize","normalize_mut","normalize_mut","normalize_mut","nrows","nrows","nrows","off_diagonal","off_diagonal","off_diagonal","off_diagonal","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","or","origin","orthonormal_basis","orthonormal_basis","orthonormal_subspace_basis","orthonormal_vector","orthonormal_vector","orthonormalize","outer","p","p","p","p","p","p","pack_dirty","partial_clamp","partial_cmp","partial_cmp","partial_cmp","partial_ge","partial_gt","partial_le","partial_lt","partial_max","partial_min","partial_sort2","permute_columns","permute_rows","perp","pi","point","polar","polar_decomposition","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow_mut","powc","powc","powf","powf","powf","powf","powf","powf","powf","powi","powi","powi","powu","prepend_nonuniform_scaling","prepend_nonuniform_scaling_mut","prepend_scaling","prepend_scaling","prepend_scaling_mut","prepend_scaling_mut","prepend_translation","prepend_translation_mut","product","product","product","product","product","project","project_point","project_point","project_vector","project_vector","pseudo_inverse","pseudo_inverse","pseudo_inverse","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr_mut","ptr_mut","ptr_mut","ptr_mut","ptr_mut","pure","push","q","q","q","q","q","q","q","q_tr_mul","q_tr_mul","qr","qr","quadform","quadform_tr","quadform_tr_with_workspace","quadform_with_workspace","quaternion","r","r","rank","rank","rank_one_update","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","re","real","real","real","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","recip","recip","recompose","recompose","recompose","reflect","reflect_rows","reflect_rows_with_sign","reflect_with_sign","reject","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","remove_column","remove_column","remove_columns","remove_columns_at","remove_columns_generic","remove_fixed_columns","remove_fixed_rows","remove_row","remove_rows","remove_rows_at","remove_rows_generic","renormalize","renormalize","renormalize","renormalize_fast","repeat","repeat","repeat","repeat","repeat_generic","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","resize","resize","resize_generic","resize_horizontally","resize_horizontally_mut","resize_mut","resize_vertically","resize_vertically_mut","right","right_div","rotation","rotation","rotation","rotation","rotation","rotation","rotation_between","rotation_between","rotation_between","rotation_between","rotation_between_axis","rotation_between_axis","rotation_to","rotation_to","rotation_to","rotation_to","rotation_wrt_point","rotation_wrt_point","round","round","row","row_iter","row_iter_mut","row_mean","row_mean_tr","row_mut","row_part","row_part_mut","row_product","row_product_tr","row_sum","row_sum_tr","row_variance","row_variance_tr","rows","rows_generic","rows_generic_mut","rows_generic_with_step","rows_generic_with_step_mut","rows_mut","rows_range","rows_range_mut","rows_range_pair","rows_range_pair_mut","rows_with_step","rows_with_step_mut","scalar","scale","scale","scale","scale","scale_mut","scale_mut","scale_mut","scale_mut","scale_mut","scale_mut","scaled_axis","scaled_axis","scaled_axis","scaled_axis","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between_axis","scaled_rotation_between_axis","scaling","scaling","schur","sclerp","select","select","select","select","select","select","select","select","select","select","select","select","select","select_columns","select_rows","set","set_aspect","set_bottom","set_bottom_and_top","set_category","set_column","set_diagonal","set_fovy","set_left","set_left_and_right","set_magnitude","set_one","set_partial_diagonal","set_right","set_row","set_scaling","set_top","set_zero","set_zfar","set_zfar","set_znear","set_znear","set_znear_and_zfar","set_znear_and_zfar","shape","shape","shape","shape","shape","shape","shape","shape","shape","shape_generic","signum","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan2","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_cap_magnitude","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_clamp","simd_clamp","simd_clamp","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_copysign","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cosc","simd_cosc","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_coshc","simd_coshc","simd_default_epsilon","simd_e","simd_eq","simd_eq","simd_eq","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_frac_1_pi","simd_frac_2_pi","simd_frac_2_sqrt_pi","simd_frac_pi_2","simd_frac_pi_3","simd_frac_pi_4","simd_frac_pi_6","simd_frac_pi_8","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_ge","simd_ge","simd_ge","simd_gt","simd_gt","simd_gt","simd_horizontal_max","simd_horizontal_max","simd_horizontal_max","simd_horizontal_min","simd_horizontal_min","simd_horizontal_min","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_le","simd_le","simd_le","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln_10","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_2","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10_e","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2_e","simd_lt","simd_lt","simd_lt","simd_max","simd_max","simd_max","simd_min","simd_min","simd_min","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_ne","simd_ne","simd_ne","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_pi","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_signum","simd_signum","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sinc","simd_sinc","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinhc","simd_sinhc","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_to_exp","simd_to_exp","simd_to_polar","simd_to_polar","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_try_inverse","simd_try_normalize","simd_try_normalize_mut","simd_two_pi","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","sin","sin","sin","sin_angle","sin_cos","sin_cos","sinc","singular_values","singular_values","singular_values_unordered","sinh","sinh","sinh","sinh_cosh","sinh_cosh","sinhc","size","slerp","slerp","slerp","slerp","slerp","slerp","slice","slice_mut","slice_range","slice_range_mut","slice_with_steps","slice_with_steps_mut","solve","solve","solve","solve","solve","solve","solve_lower_triangular","solve_lower_triangular_mut","solve_lower_triangular_unchecked","solve_lower_triangular_unchecked_mut","solve_lower_triangular_with_diag_mut","solve_lower_triangular_with_diag_unchecked_mut","solve_mut","solve_mut","solve_mut","solve_mut","solve_mut","solve_upper_triangular","solve_upper_triangular_mut","solve_upper_triangular_unchecked","solve_upper_triangular_unchecked_mut","sort_by_singular_values","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sqrt","sqrt","sqrt","squared","stride","strides","strides","strides","strides","strides","strides","strides","strides","strides","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_to","subdiag","sum","sum","sum","sum","sum","sum","sum","sup","sup","sup","svd","svd_unordered","swap","swap_columns","swap_rows","swap_unchecked","swap_unchecked","swap_unchecked","swap_unchecked_linear","sygemv","syger","symmetric_eigen","symmetric_eigenvalues","symmetric_part","symmetric_tridiagonalize","t","tan","tan","tan","tanh","tanh","tanh","to_euler_angles","to_euler_angles","to_exp","to_f32","to_f64","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_isometry","to_matrix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_polar","to_polar","to_projective","to_projective","to_rotation_matrix","to_rotation_matrix","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scalar","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","top","tr_copy_from","tr_dot","tr_mul","tr_mul_to","tr_solve_lower_triangular","tr_solve_lower_triangular_mut","tr_solve_lower_triangular_unchecked","tr_solve_lower_triangular_unchecked_mut","tr_solve_upper_triangular","tr_solve_upper_triangular_mut","tr_solve_upper_triangular_unchecked","tr_solve_upper_triangular_unchecked_mut","trace","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","translation","translation","translation","translation","translation","translation","transpose","transpose","transpose_mut","transpose_mut","transpose_to","tri","trunc","trunc","try_as_bits","try_cast","try_convert","try_convert_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_to","try_inverse_transform_point","try_invert_to","try_lerp_slerp","try_lerp_slerp","try_new","try_new","try_new","try_new","try_new_and_get","try_new_unordered","try_normalize","try_normalize_mut","try_polar","try_schur","try_sclerp","try_set_magnitude","try_slerp","try_slerp","try_slerp","try_sqrt","try_sqrt","try_svd","try_svd_unordered","try_symmetric_eigen","try_to_usize","try_to_usize","try_to_usize","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","u","u","udu","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","uninit","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack_dirty","unpack_h","unpack_r","unpack_r","unpack_tridiagonal","unproject_point","unproject_point","unscale","unscale","unscale","unscale","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unwrap","unwrap","unwrap","unwrap","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_diagonal","upper_triangle","uv","v_t","v_t","value","value","value","value","variance","vector","vector","vector","vector","vector_mut","vector_to_matrix_index","vget_unchecked","vget_unchecked_mut","view","view_mut","view_range","view_range_mut","view_with_steps","view_with_steps_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w_axis","wilkinson_shift","wrap","x","x_axis","xor","xx","xx","xxx","xxx","xxy","xxy","xxz","xxz","xy","xy","xyx","xyx","xyy","xyy","xyz","xyz","xz","xz","xzx","xzx","xzy","xzy","xzz","xzz","y","y_axis","yx","yx","yxx","yxx","yxy","yxy","yxz","yxz","yy","yy","yyx","yyx","yyy","yyy","yyz","yyz","yz","yz","yzx","yzx","yzy","yzy","yzz","yzz","z","z_axis","zero","zero","zero","zero","zero","zero","zero","zero","zero","zeros","zeros","zeros","zeros","zeros_generic","zfar","zfar","zip_apply","zip_fold","zip_map","zip_map_lanes","zip_zip_apply","zip_zip_map","znear","znear","zx","zx","zxx","zxx","zxy","zxy","zxz","zxz","zy","zy","zyx","zyx","zyy","zyy","zyz","zyz","zz","zz","zzx","zzx","zzy","zzy","zzz","zzz","ArrayStorage","CStride","CStride","Const","Const","DMatrix","DMatrixSlice","DMatrixSliceMut","DMatrixView","DMatrixViewMut","DVector","DVectorSlice","DVectorSliceMut","DVectorView","DVectorViewMut","DefaultAllocator","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimRange","DimSub","DimSum","Dyn","Dynamic","EuclideanNorm","IsContiguous","IsDynamic","IsNotStaticOne","LpNorm","Matrix","Matrix1","Matrix1x2","Matrix1x3","Matrix1x4","Matrix1x5","Matrix1x6","Matrix1xX","Matrix2","Matrix2x1","Matrix2x3","Matrix2x4","Matrix2x5","Matrix2x6","Matrix2xX","Matrix3","Matrix3x1","Matrix3x2","Matrix3x4","Matrix3x5","Matrix3x6","Matrix3xX","Matrix4","Matrix4x1","Matrix4x2","Matrix4x3","Matrix4x5","Matrix4x6","Matrix4xX","Matrix5","Matrix5x1","Matrix5x2","Matrix5x3","Matrix5x4","Matrix5x6","Matrix5xX","Matrix6","Matrix6x1","Matrix6x2","Matrix6x3","Matrix6x4","Matrix6x5","Matrix6xX","MatrixCross","MatrixMN","MatrixN","MatrixSlice","MatrixSlice1","MatrixSlice1x2","MatrixSlice1x3","MatrixSlice1x4","MatrixSlice1x5","MatrixSlice1x6","MatrixSlice1xX","MatrixSlice2","MatrixSlice2x1","MatrixSlice2x3","MatrixSlice2x4","MatrixSlice2x5","MatrixSlice2x6","MatrixSlice2xX","MatrixSlice3","MatrixSlice3x1","MatrixSlice3x2","MatrixSlice3x4","MatrixSlice3x5","MatrixSlice3x6","MatrixSlice3xX","MatrixSlice4","MatrixSlice4x1","MatrixSlice4x2","MatrixSlice4x3","MatrixSlice4x5","MatrixSlice4x6","MatrixSlice4xX","MatrixSlice5","MatrixSlice5x1","MatrixSlice5x2","MatrixSlice5x3","MatrixSlice5x4","MatrixSlice5x6","MatrixSlice5xX","MatrixSlice6","MatrixSlice6x1","MatrixSlice6x2","MatrixSlice6x3","MatrixSlice6x4","MatrixSlice6x5","MatrixSlice6xX","MatrixSliceMut","MatrixSliceMut1","MatrixSliceMut1x2","MatrixSliceMut1x3","MatrixSliceMut1x4","MatrixSliceMut1x5","MatrixSliceMut1x6","MatrixSliceMut1xX","MatrixSliceMut2","MatrixSliceMut2x1","MatrixSliceMut2x3","MatrixSliceMut2x4","MatrixSliceMut2x5","MatrixSliceMut2x6","MatrixSliceMut2xX","MatrixSliceMut3","MatrixSliceMut3x1","MatrixSliceMut3x2","MatrixSliceMut3x4","MatrixSliceMut3x5","MatrixSliceMut3x6","MatrixSliceMut3xX","MatrixSliceMut4","MatrixSliceMut4x1","MatrixSliceMut4x2","MatrixSliceMut4x3","MatrixSliceMut4x5","MatrixSliceMut4x6","MatrixSliceMut4xX","MatrixSliceMut5","MatrixSliceMut5x1","MatrixSliceMut5x2","MatrixSliceMut5x3","MatrixSliceMut5x4","MatrixSliceMut5x6","MatrixSliceMut5xX","MatrixSliceMut6","MatrixSliceMut6x1","MatrixSliceMut6x2","MatrixSliceMut6x3","MatrixSliceMut6x4","MatrixSliceMut6x5","MatrixSliceMut6xX","MatrixSliceMutMN","MatrixSliceMutN","MatrixSliceMutXx1","MatrixSliceMutXx2","MatrixSliceMutXx3","MatrixSliceMutXx4","MatrixSliceMutXx5","MatrixSliceMutXx6","MatrixSliceXx1","MatrixSliceXx2","MatrixSliceXx3","MatrixSliceXx4","MatrixSliceXx5","MatrixSliceXx6","MatrixSum","MatrixVec","MatrixView","MatrixView1","MatrixView1x2","MatrixView1x3","MatrixView1x4","MatrixView1x5","MatrixView1x6","MatrixView1xX","MatrixView2","MatrixView2x1","MatrixView2x3","MatrixView2x4","MatrixView2x5","MatrixView2x6","MatrixView2xX","MatrixView3","MatrixView3x1","MatrixView3x2","MatrixView3x4","MatrixView3x5","MatrixView3x6","MatrixView3xX","MatrixView4","MatrixView4x1","MatrixView4x2","MatrixView4x3","MatrixView4x5","MatrixView4x6","MatrixView4xX","MatrixView5","MatrixView5x1","MatrixView5x2","MatrixView5x3","MatrixView5x4","MatrixView5x6","MatrixView5xX","MatrixView6","MatrixView6x1","MatrixView6x2","MatrixView6x3","MatrixView6x4","MatrixView6x5","MatrixView6xX","MatrixViewMut","MatrixViewMut1","MatrixViewMut1x2","MatrixViewMut1x3","MatrixViewMut1x4","MatrixViewMut1x5","MatrixViewMut1x6","MatrixViewMut1xX","MatrixViewMut2","MatrixViewMut2x1","MatrixViewMut2x3","MatrixViewMut2x4","MatrixViewMut2x5","MatrixViewMut2x6","MatrixViewMut2xX","MatrixViewMut3","MatrixViewMut3x1","MatrixViewMut3x2","MatrixViewMut3x4","MatrixViewMut3x5","MatrixViewMut3x6","MatrixViewMut3xX","MatrixViewMut4","MatrixViewMut4x1","MatrixViewMut4x2","MatrixViewMut4x3","MatrixViewMut4x5","MatrixViewMut4x6","MatrixViewMut4xX","MatrixViewMut5","MatrixViewMut5x1","MatrixViewMut5x2","MatrixViewMut5x3","MatrixViewMut5x4","MatrixViewMut5x6","MatrixViewMut5xX","MatrixViewMut6","MatrixViewMut6x1","MatrixViewMut6x2","MatrixViewMut6x3","MatrixViewMut6x4","MatrixViewMut6x5","MatrixViewMut6xX","MatrixViewMutXx1","MatrixViewMutXx2","MatrixViewMutXx3","MatrixViewMutXx4","MatrixViewMutXx5","MatrixViewMutXx6","MatrixViewXx1","MatrixViewXx2","MatrixViewXx3","MatrixViewXx4","MatrixViewXx5","MatrixViewXx6","MatrixXx1","MatrixXx2","MatrixXx3","MatrixXx4","MatrixXx5","MatrixXx6","Norm","Norm","Normed","OMatrix","OVector","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Owned","OwnedUninit","RStride","RStride","RawStorage","RawStorageMut","ReshapableStorage","RowDVector","RowOVector","RowSVector","RowVector","RowVector1","RowVector2","RowVector3","RowVector4","RowVector5","RowVector6","SMatrix","SMatrixSlice","SMatrixSliceMut","SMatrixView","SMatrixViewMut","SVector","SVectorSlice","SVectorSliceMut","SVectorView","SVectorViewMut","SameShapeStorage","Scalar","Size","SliceRange","SliceStorage","SliceStorageMut","SquareMatrix","Storage","StorageMut","ToConst","ToTypenum","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","USIZE","UniformNorm","UninitMatrix","UninitVector","Unit","UnitVector1","UnitVector2","UnitVector3","UnitVector4","UnitVector5","UnitVector6","VecStorage","Vector","Vector1","Vector2","Vector3","Vector4","Vector5","Vector6","VectorN","VectorSlice","VectorSlice1","VectorSlice2","VectorSlice3","VectorSlice4","VectorSlice5","VectorSlice6","VectorSliceMut","VectorSliceMut1","VectorSliceMut2","VectorSliceMut3","VectorSliceMut4","VectorSliceMut5","VectorSliceMut6","VectorSum","VectorView","VectorView1","VectorView2","VectorView3","VectorView4","VectorView5","VectorView6","VectorViewMut","VectorViewMut1","VectorViewMut2","VectorViewMut3","VectorViewMut4","VectorViewMut5","VectorViewMut6","ViewStorage","ViewStorageMut","_phantoms","_phantoms","_phantoms","add","add","allocator","as_mut_slice_unchecked","as_slice_unchecked","begin","clone_owned","constraint","coordinates","data","data","default_allocator","dim","dimension","div","div","end","from_usize","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","indexing","into_owned","is","is_contiguous","iter","linear_index","max","max","metric_distance","min","min","mul","mul","name","ncols","norm","norm","norm_squared","nrows","ptr","ptr","ptr","ptr_mut","reshape_generic","scale_mut","shape","shape","shape","size","storage","strides","strides","strides","sub","sub","swap_unchecked","swap_unchecked_linear","try_to_usize","uninit","unscale_mut","value","value","Allocator","Buffer","BufferUninit","Reallocator","SameShapeAllocator","SameShapeC","SameShapeR","SameShapeVectorAllocator","allocate_from_iterator","allocate_from_row_iterator","allocate_uninit","assume_init","reallocate_copy","AreMultipliable","DimEq","Representative","Representative","Representative","Representative","SameDimension","SameNumberOfColumns","SameNumberOfRows","ShapeConstraint","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_clone","raw_drop","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","IJKW","M2x2","M2x3","M2x4","M2x5","M2x6","M3x2","M3x3","M3x4","M3x5","M3x6","M4x2","M4x3","M4x4","M4x5","M4x6","M5x2","M5x3","M5x4","M5x5","M5x6","M6x2","M6x3","M6x4","M6x5","M6x6","X","XY","XYZ","XYZW","XYZWA","XYZWAB","a","a","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","j","k","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m15","m15","m15","m15","m15","m15","m15","m15","m15","m15","m16","m16","m16","m16","m16","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m25","m25","m25","m25","m25","m25","m25","m25","m25","m25","m26","m26","m26","m26","m26","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m35","m35","m35","m35","m35","m35","m35","m35","m36","m36","m36","m36","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m44","m44","m44","m44","m44","m44","m44","m44","m44","m45","m45","m45","m45","m45","m45","m46","m46","m46","m51","m51","m51","m51","m51","m51","m51","m51","m51","m51","m52","m52","m52","m52","m52","m52","m52","m52","m52","m52","m53","m53","m53","m53","m53","m53","m53","m53","m54","m54","m54","m54","m54","m54","m55","m55","m55","m55","m56","m56","m61","m61","m61","m61","m61","m62","m62","m62","m62","m62","m63","m63","m63","m63","m64","m64","m64","m65","m65","m66","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","x","x","x","x","x","x","y","y","y","y","y","z","z","z","z","DefaultAllocator","Const","Const","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimSub","DimSum","Dyn","Dynamic","IsDynamic","IsNotStaticOne","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","ToConst","ToTypenum","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","USIZE","add","add","dim","div","div","from_usize","is","max","max","min","min","mul","mul","name","sub","sub","try_to_usize","value","MatrixIndex","MatrixIndexMut","Output","OutputMut","ColumnIter","ColumnIterMut","MatrixIter","MatrixIterMut","RowIter","RowIterMut","_phantoms","_phantoms","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","count","count","count","count","count","count","curr","curr","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","inner_end","inner_end","inner_ptr","inner_ptr","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","len","len","len","len","len","mat","mat","mat","mat","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","phantom","phantom","ptr","ptr","range","range","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","size","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","strides","strides","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","CStride","CStride","IsContiguous","Output","Owned","OwnedUninit","RStride","RStride","RawStorage","RawStorageMut","ReshapableStorage","SameShapeStorage","Storage","StorageMut","as_mut_slice_unchecked","as_slice_unchecked","clone_owned","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","into_owned","is_contiguous","linear_index","ptr","ptr_mut","reshape_generic","shape","strides","swap_unchecked","swap_unchecked_linear","Init","InitStatus","Uninit","Value","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","assume_init_mut","assume_init_mut","assume_init_mut","assume_init_ref","assume_init_ref","assume_init_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","init","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","raw_eq","raw_eq","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","AbstractRotation","Affine2","Affine3","DualQuaternion","Isometry","Isometry2","Isometry3","IsometryMatrix2","IsometryMatrix3","OPoint","Orthographic3","Perspective3","Point","Point1","Point2","Point3","Point4","Point5","Point6","Projective2","Projective3","Quaternion","Reflection","Reflection1","Reflection2","Reflection3","Reflection4","Reflection5","Reflection6","Representative","Rotation","Rotation2","Rotation3","Scale","Scale1","Scale2","Scale3","Scale4","Scale5","Scale6","Similarity","Similarity2","Similarity3","SimilarityMatrix2","SimilarityMatrix3","SubTCategoryOf","SuperTCategoryOf","TAffine","TCategory","TCategoryMul","TGeneral","TProjective","Transform","Transform2","Transform3","Translation","Translation1","Translation2","Translation3","Translation4","Translation5","Translation6","UnitComplex","UnitDualQuaternion","UnitQuaternion","_phantom","axis","bias","check_homogeneous_invariants","coords","coords","dual","has_normalizer","identity","inverse","inverse_mut","inverse_transform_point","inverse_transform_unit_vector","inverse_transform_vector","isometry","matrix","matrix","matrix","matrix","real","rotation","scaling","transform_point","transform_vector","translation","vector","vector","Bidiagonal","Cholesky","ColPivQR","FullPivLU","Hessenberg","LU","PermutationSequence","QR","SVD","Schur","SymmetricEigen","SymmetricTridiagonal","UDU","balancing","chol","col_piv_qr","d","diag","diag","diagonal","eigenvalues","eigenvectors","givens","hess","householder","ipiv","len","lu","lu","off_diagonal","off_diagonal","p","p","p","q","q","qr","singular_values","subdiag","t","tri","try_invert_to","u","u","upper_diagonal","uv","v_t","wilkinson_shift","balance_parlett_reinsch","unbalance","GivensRotation","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","c","c","cancel_x","cancel_y","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","identity","init","into","into_any","into_any_arc","into_any_rc","into_sample","inverse","is_in_subset","new","new_unchecked","raw_clone","raw_drop","rotate","rotate_rows","s","s","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","try_new","type_id","upcast","vzip","Circle","ColliderShape","ColliderShapeCache","Rectangle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","cmp","compare","compute_aabb","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","partial_cmp","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_eq","raw_hash","schema","schema","shared_shape","shared_shape","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","diameter","size","AiPlayer","Alarm","Emote","EmoteRegion","EmoteState","Emoting","FACE_Z_OFFSET","FIN_Z_OFFSET","HAT_Z_OFFSET","Hat","Neutral","PLAYER_COLORS","PathfindingDebugLines","PlayerCommand","PlayerIdx","PlayerKilled","PlayerLayers","PlayerState","PlayerStateStage","PlayerStateStageImpl","PlayersHaveSpawned","active","age","animation_key","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","basic","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","current","default","default","default","default","default","default","default","default","default","delete_dead_ai_swords","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","direction_sensitive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","emote","entities","eq","equals","equip_hats","equivalent","equivalent","equivalent","equivalent","face_anim","face_ent","fin_anim","fin_ent","fin_offset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","hat_ent","hit_from","hydrate_players","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kill","last","movement_buffer","owner","pausing","play_itemless_fin_animations","player_ai_system","player_facial_animations","player_kill_callback","players","plugin","plugin","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","schema","schema","schema","schema","schema","schema","schema","schema","schema","set_inventory","size","state","systems","target_player","tick","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_player_layers","use_item","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","PlayerState","add_player_state_transition_system","add_player_state_update_system","age","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","current","default","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","from_world","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","last","plugin","raw_clone","raw_default","raw_drop","schema","stage","states","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","update_player_state_age","use_drop_or_grab_items_system","vzip","ID","PlayerStateStage","PlayerStateStageImpl","add_system","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","id","id","init","init","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","name","name","new","raw_default","raw_drop","raw_drop","run","systems","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","crouch","dead","default","idle","incapacitated","midair","walk","ID","handle_player_state","install","player_state_transition","ID","handle_player_state","install","player_state_transition","install","player_state_transition","ID","handle_player_state","install","player_state_transition","ID","SLOWING_SPEED","handle_player_state","install","ID","handle_player_state","install","player_state_transition","ID","handle_player_state","install","player_state_transition","FPS","MAX_PLAYERS","AtomicRng","FAST","ForkableCore","GEN_KIND","GenCore","GlobalRng","Rng","SLOW","SecureCore","Seed","SeededCore","TurboCore","TurboKind","TurboRand","alphabetic","alphanumeric","as_any","as_any_mut","as_bind_group_shader_type","bool","borrow","borrow_mut","chance","char","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","digit","downcast","drop","f32","f32_normalized","f64","f64_normalized","fill_bytes","fork","from","from_sample_","from_subset","from_world","from_world","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","i128","i16","i32","i64","i8","index","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","isize","lowercase","partial_shuffle","plugin","raw_clone","raw_default","raw_drop","reseed","sample","sample_iter","sample_multiple","sample_multiple_iter","sample_multiple_mut","sample_mut","schema","shuffle","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","u128","u16","u32","u64","u8","upcast","uppercase","usize","vzip","weighted_sample","weighted_sample_mut","with_seed","Cubic","Ease","EaseFunction","Quadratic","Rect","Sinusoidial","ease_in","ease_out","easing","function","impl_system_param","macros","math","max","min","progress","rect","sine_between","Cubic","Ease","EaseFunction","Quadratic","Sinusoidial","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ease_in","ease_out","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","function","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","output","progress","raw_default","raw_drop","raw_drop","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","sine_between","Rect","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bottom","bottom_left","bottom_right","center","clone","clone_into","clone_type_data","contains","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","from_world","from_world","height","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","left","max","max","min","min","new","overlaps","raw_clone","raw_default","raw_drop","right","size","to_owned","to_sample_","to_subset","to_subset_unchecked","top","top_left","top_right","try_from","try_into","type_id","upcast","vzip","width","ControlSource","EguiInputSettings","Gamepad","GlobalPlayerControls","Keyboard1","Keyboard2","PlayerControl","PlayerInputCollector","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collect_player_controls","current_controls","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_gamepad_input","disable_keyboard_input","down","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","gamepads","get","grab_just_pressed","grab_pressed","handle_egui_input","hash","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump_just_pressed","jump_pressed","just_moved","last_controls","left","load_controler_mapping","menu_back_just_pressed","menu_back_pressed","menu_confirm_just_pressed","menu_confirm_pressed","menu_start_just_pressed","menu_start_pressed","move_direction","moving","pause_just_pressed","pause_pressed","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","right","schema","schema","schema","schema","shoot_just_pressed","shoot_pressed","slide_just_pressed","slide_pressed","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","up","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","CharacterSelect","Credits","Fight","MUSIC_FADE_DURATION","MUSIC_VOLUME","MainMenu","MusicState","None","ShuffledPlaylist","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","current_instance","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","game_plugin","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","music_system","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","idx","instance","A","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AbntC1","AbntC2","Absolutize","Affine2","Affine3A","Aligned","AllocErr","AltLeft","AltRight","AnimatedSprite","AnimationBankSprite","Apostrophe","Apps","Arc","Array","AssetExtensions","AssetInfo","AssetIo","AssetKind","AssetLoadCtx","AssetLoadProgress","AssetLoader","AssetLoc","AssetLocRef","AssetPack","AssetPackId","AssetPackReq","AssetPackSpec","AssetServer","AssetServerExt","AssetServerInner","AssetStore","Asterisk","At","Atlas","AtlasSprite","AtomicCell","AtomicResource","AtomicSchemaRef","AtomicSchemaRefMut","AudioLoader","AudioManager","AudioSource","Ax","Axis","B","BLACK","BLUE","BVec2","BVec3","BVec3A","BVec4","BVec4A","Back","Backslash","BitFmt","BitSet","BitSetVec","Bool","BorderImageMeta","BorderedButton","BorderedFrame","Borrowed","Borrowed","Box","BracketLeft","BracketRight","Button","ButtonBordersMeta","ButtonState","ButtonThemeMeta","C","C","CORE_PACK_ID","CYAN","Calculator","Camera","CameraShake","CameraSize","CameraTraumaEvents","CapacityOverflow","Capital","Caret","ChangedAsset","Cid","ClearColor","CollectionAllocErr","Colon","Color","Comma","CommandQueue","Commands","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","Compose","Connected","Connection","Context","ControlLeft","ControlRight","Convert","Copy","CorePackfileMeta","CoreStage","CreateError","Custom","Cut","D","DAffine2","DAffine3","DMat2","DMat3","DMat4","DPadDown","DPadLeft","DPadRight","DPadUp","DQuat","DVec2","DVec3","DVec4","Data","DefaultGamePlugin","DefaultSessionPlugin","Delete","Deref","DerefMut","Deserialize","Deserialize","Disconnected","Down","Drain","DummyIo","Duration","E","East","EguiContextExt","EguiCtx","EguiInputHook","EguiResponseExt","EguiSettings","EguiTextures","End","Entities","EntitiesIterWith","Entity","EntityIterator","Enum","EnumSchemaInfo","EnumTagType","Equals","Escape","EulerRot","External","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F32","F4","F5","F6","F64","F7","F8","F9","FALSE","FALSE","FALSE","FALSE","FALSE","FAST","FieldIdx","FileAssetIo","First","FixedHeight","FixedWidth","FluentBundle","FluentBundleAsset","FluentResourceAsset","Font","FontLoader","FontMeta","ForkableCore","FromType","FromWorld","G","GEN_KIND","GRAY","GREEN","Game","GameMeta","GamepadAxis","GamepadAxisEvent","GamepadButton","GamepadButtonEvent","GamepadConnectionEvent","GamepadConnectionEventKind","GamepadEvent","GamepadInputs","GenCore","Grave","H","Handle","Handle","HasSchema","HasSchema","HashMap","HashSet","Hex","HexColorError","Home","I","I128","I16","I32","I64","I64Vec2","I64Vec3","I64Vec4","I8","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","INFINITY","INFINITY","INFINITY","INFINITY","IVec2","IVec3","IVec4","Idx","Image","In","IncompatibleGameVersionError","Insert","Instant","IntoIter","IntoSystem","InvalidFormat","IsAligned","Item","Iter","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyboardEvent","KeyboardInputs","L","LabeledId","LabeledIdCreateError","LabledIdParseError","Last","Lazy","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","Length","Lines","LoadedAsset","LoadedAssets","Loc","Localization","LocalizationAsset","M","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MICROSECOND","MILLISECOND","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","Mail","Map","MarginMeta","Mat2","Mat3","Mat3A","Mat4","Maybe","MaybeOwned","MaybeOwnedMut","MediaSelect","MediaStop","MemoryBackend","MetaAssetLoadCtx","Metadata","Middle","Minus","Mode","MouseButton","MouseButtonEvent","MouseInputs","MouseScrollEvent","MouseScrollUnit","Mute","MyComputer","N","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NANOSECOND","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NONE","Name","NavigateBackward","NavigateForward","NextTrack","NoConvert","North","NotInitialized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ORANGE","Oem102","Once","Opaque","Other","Other","Other","Owned","Owned","OwningPtr","P","PackfileMeta","PageDown","PageUp","Param","Paste","Path2d","Pause","Period","Pixels","PlayPause","Plus","PostUpdate","Power","PreUpdate","PrefixNotAscii","PrefixTooLong","Pressed","PrevTrack","Primitive","Primitive","Ptr","PtrExt","PtrMut","PtrMutExt","Q","Quat","QueryItem","R","RED","Ref","RefMut","Released","Renderer","RendererApi","Repeating","Res","ResInit","ResMut","ResMutInit","Resources","Return","Rgba","Right","Right","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","Root","RootLocalizationFieldIdx","S","SBox","SCHEMA_REGISTRY","SECOND","SLOW","SMap","SVec","SchemaAssetHandle","SchemaBox","SchemaData","SchemaDeserialize","SchemaDeserializer","SchemaFieldNotFoundError","SchemaId","SchemaKind","SchemaLayoutInfo","SchemaMap","SchemaMetaAssetLoader","SchemaMismatchError","SchemaPath","SchemaPtrLoadCtx","SchemaRef","SchemaRefMut","SchemaRegistry","SchemaSerializer","SchemaVec","Scroll","SecureCore","Seed","SeededCore","Select","Semicolon","Serialize","Serialize","Session","SessionOptions","SessionPlugin","SessionRunner","Sessions","Set","ShakeNoise","ShiftLeft","ShiftRight","SimpleSystemStage","Slash","Sleep","SmallVec","Snapshot","South","Space","Sprite","StageLabel","Start","State","StaticSoundData","StaticSystem","Stop","Stopwatch","Storage","StorageApi","String","Struct","StructFieldInfo","StructSchemaInfo","SuperLeft","SuperRight","Sys","Sysrq","System","SystemParam","SystemStage","SystemStages","T","THREAD_RNG","TRUE","TRUE","TRUE","TRUE","TRUE","Tab","ThinSlicePtr","Tile","TileLayer","Time","Timer","TimerMode","ToSmallVec","Transform","TurboCore","TurboKind","TurboRand","U","U128","U16","U16","U32","U32","U64","U64Vec2","U64Vec3","U64Vec4","U8","U8","UVec2","UVec3","UVec4","Ulid","UlidDecode","UlidExt","Unaligned","Underline","Unlabeled","UnsafeCellDeref","Unset","UntypedAtomicResource","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedComponentStoreIter","UntypedComponentStoreIterMut","UntypedHandle","UntypedResources","UnwrapMany","Up","Update","Ustr","UstrMap","UstrSet","V","VariantInfo","Vec","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","Version","Viewport","VolumeDown","VolumeUp","W","W","W","W","W","W","W","WHITE","Wake","WebAssetIo","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","Window","World","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YELLOW","YXZ","YZX","Yen","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","_marker","_phantom","_phantom","_phantom","_phantom","_phantom","_phantom","a","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","absolutize","absolutize_from","absolutize_virtually","active","active","active","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat2","add_mat3","add_mat3","add_mat3","add_mat4","add_mat4","add_startup_system","add_system","add_system","add_system_to_stage","add_trauma","advance_exact","alive","all","all","all","all","all","alloc","alphabetic","alphanumeric","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","animate_sprites","animation_plugin","animations","any","any","any","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","any_orthonormal_vector","append","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_bitset","apply_bitset","apply_bitset","apply_bitset","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_bits","as_bits","as_char_ptr","as_cstr","as_deref","as_deref_mut","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_f64","as_i64vec2","as_i64vec2","as_i64vec2","as_i64vec2","as_i64vec2","as_i64vec3","as_i64vec3","as_i64vec3","as_i64vec3","as_i64vec3","as_i64vec3","as_i64vec4","as_i64vec4","as_i64vec4","as_i64vec4","as_i64vec4","as_ivec2","as_ivec2","as_ivec2","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_ivec4","as_ivec4","as_ivec4","as_mat2","as_mat3","as_mat4","as_micros","as_millis","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_ptr","as_mut_slice","as_mut_slice","as_nanos","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_rgba","as_rgba_f32","as_schema_mut","as_schema_ref","as_secs","as_secs_f32","as_secs_f64","as_slice","as_slice","as_str","as_u64vec2","as_u64vec2","as_u64vec2","as_u64vec2","as_u64vec2","as_u64vec3","as_u64vec3","as_u64vec3","as_u64vec3","as_u64vec3","as_u64vec3","as_u64vec4","as_u64vec4","as_u64vec4","as_u64vec4","as_u64vec4","as_uvec2","as_uvec2","as_uvec2","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_uvec4","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec2","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec3a","as_vec3a","as_vec3a","as_vec4","as_vec4","as_vec4","as_vec4","as_vec4","assert_unique","asset","asset_change_recv","asset_change_send","asset_data","asset_ids","asset_loader","asset_server","asset_url","assets","assets_downloaded","assets_errored","assets_loaded","assets_to_load","atlas","atlas","axis","b","b","backend","bg_handle","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bool","bool","border","border_only","border_only","border_scale","border_scale","border_size","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","buffer","build","bundles","button","button","button_events","button_state","byte_add","byte_add","byte_add","byte_offset","byte_offset","byte_offset","cache","capacity","capacity","cast","cast_mut","ceil","ceil","ceil","ceil","ceil","ceil","ceil","cell","cell","center","chance","char","char_ptr","checked_add","checked_div","checked_mul","checked_sub","cid","cjk_compat_variants","cjk_compat_variants","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clear","clear_focus","clear_killed","clicked","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_data","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fn","clone_from","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp_precedence","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col","col","col","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","color","color","color","color","columns","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","components","components","components","components","conjugate","conjugate","contains","contains","contains","contains","context","copysign","copysign","copysign","copysign","copysign","copysign","copysign","core","core","core_dir","core_pack","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","crate_name","create","create","create","create_bitset","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","cross","cross","cross","cross","cross","cross","cross","ctx","current","current","current_bundle","current_id","current_id","current_id","current_id","dangling_with_align","data","data","data","data","data","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decay_rate","dedup","dedup_by","dedup_by_key","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_border","default_fn","delete","delete","delete_session","delta","delta","delta_seconds","delta_seconds","delta_seconds_f64","delta_seconds_f64","dependencies","dependencies","dependencies","depth_max","depth_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_fn","determinant","determinant","determinant","determinant","determinant","determinant","determinant","digit","distance","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_duration_f32","div_duration_f64","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_euclid","div_f32","div_f64","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downloaded","dquat","drain","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_as","drop_fn","duration","duration","duration","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","elapsed","elapsed","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_f64","elapsed_secs","elapsed_secs","elapsed_secs_f64","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","end","end_game","entities","entities","enumerate_packs","enumerate_packs","enumerate_packs","enumerate_packs","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_fn","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","errored","event","event","exp","exp","exp","exp","exp","exp","exp","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","f32","f32","f32_normalized","f64","f64","f64_normalized","family","family_name","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_offsets","fields","fill_bytes","filter_map","filter_map","finished","finished","first_update","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","floor","floor","floor","floor","floor","floor","floor","fluent_args","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_by_default","focus_on_hover","focus_on_hover","focused","font","for_each","for_each","for_type","force","force_mut","fork","fps","fract","fract","fract","fract","fract","fract","fract","frames","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cursor","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_elem","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_existing","from_file","from_iter","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_media_source","from_micros","from_millis","from_nanos","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_raw_parts","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_scaled_axis","from_schema","from_seconds","from_secs","from_secs_f32","from_secs_f64","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_type","from_untyped","from_untyped","from_vec","from_vec4","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","from_xyzw","full_name","g","game_version","game_version","game_version","game_version","gamepad","gamepad","gamepad","gamepad_events","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","generation","generation","generations","generations","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_cell","get_cell","get_cell","get_cell_by_schema_id","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_many_mut","get_many_mut","get_many_ref_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_or_insert_default","get_or_insert_default_mut","get_ref","get_ref_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_resource","get_resource_mut","get_short_name","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_untyped","get_untyped_mut","get_with","grid_size","grow","handle_asset_changes","has_deleted","has_initialized","has_started","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_fn","hex","i128","i16","i32","i32","i64","i64","i64vec2","i64vec3","i64vec4","i8","id","id","id","id","id","id","id","id","id","id","id","id","idx","idx","idx","idx","idx","image","image","image","image_size","impl_bitset","impl_system_param","import_schemas","inc_downloaded","inc_errored","inc_loaded","inc_to_load","incompabile_packs","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_param","init_resource","init_shared_resource","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize_systems","inline_size","inner","insert","insert","insert","insert","insert","insert","insert","insert_box","insert_cell","insert_cell","insert_from_slice","insert_many","insert_raw","insert_resource","insert_shared_resource","insert_stage_after","insert_stage_before","install","install","install","install_plugin","install_plugin","interpolate","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_boxed_slice","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_owned","into_owned","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sound","into_sound","into_split","into_split","into_typed","into_untyped","into_untyped","into_value","into_vec","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","io","is_alive","is_empty","is_empty","is_finished","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_owned","is_owned","is_paused","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_zero","isize","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_with","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","ivec2","ivec3","ivec4","just_finished","key_code","key_events","key_schema","kill","killed","killed","kind","last_animation","last_update","layout","leak","leak","left","len","len","len","len","len","len","length","length","length","length","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","likely","line_breaks","listen","load","load","load","load","load","load","load","load_asset","load_asset","load_asset_bytes","load_asset_forced","load_assets","load_core_pack","load_file","load_file","load_file","load_file","load_pack","load_progress","loaded","loc","loc","loc","lock","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","look_to_rh","lowercase","maintain","major","make","make_owned","make_owned","map","map","map","map","map","map_split","map_split","margin","margin","margin","margin","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max","max_angle_rad","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_id","max_offset","metadata_asset","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_size","min_size","minor","mode","mode","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","module_path","monospace","movement","movement","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_f32","mul_f64","mul_mat2","mul_mat2","mul_mat3","mul_mat3","mul_mat3","mul_mat4","mul_mat4","mul_quat","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","mul_vec4","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","name","name","name","name","name","name","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","nanos","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_with_ulid","next","next","next","next","next","next","next","next","next_back","next_back","next_id","next_id","next_id","next_id","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","offset","on_click_border","on_click_border","on_focus_border","on_focus_border","option","orthographic_lh","orthographic_lh","orthographic_rh","orthographic_rh","orthographic_rh_gl","orthographic_rh_gl","pack","pack","pack","pack","pack_dir","pack_dirs","pack_meta","pack_spec","packs","packs","packs","packs","packs_dir","padding","padding","padding","padding","padding","padding","paint","parent_lifetime","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_shuffle","patch","path","path","path","path_handles","pause","pause","pause","paused","paused","paused","paused","pending_asset_changes","percent","percent_left","perp","perp","perp","perp","perp_dot","perp_dot","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_infinite_rh","perspective_lh","perspective_lh","perspective_rh","perspective_rh","perspective_rh_gl","perspective_rh_gl","phantom","phantom","points","pop","pop","pos","position","powf","powf","powf","powf","powf","powf","powf","pre","precomputed_hash","prefix","prefix","pressed","priority","priority","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","project_point3","promote","ptr","ptr","ptr","ptr","ptr","ptr","push","push","quat","query","queue","queue","r","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","read","read","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_unaligned","reborrow","recip","recip","recip","recip","recip","recip","recip","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","reflect_type_path","register_default_assets","register_default_assets","register_match_assets","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rem_euclid","remaining","remaining_secs","remove","remove","remove","remove","remove","remove","remove_box","remove_raw","remove_shared_resource","repeat","replace","replace_with","reseed","reserve","reserve_exact","reset","reset","resize","resize_with","resource","resource_mut","resources","resources","restart_game","restore","retain","retain_mut","reverse_dependencies","rgb","rgb_u8","rgba","rgba_u8","rich","rid","right","root","root","root","root","rotate","rotate","rotate","rotate","rotation","round","round","round","round","round","round","round","row","row","row","row","row","row","row","rows","run","run","run","run","run","run","run_initialized_system","run_system","runner","sample","sample_iter","sample_multiple","sample_multiple_iter","sample_multiple_mut","sample_mut","sample_rate","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","save","save","save","scale","scale","scale","scan_code","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_ref","schema_ref","schemas","schemas","secs","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","send","sense","sense","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","sessions","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_a","set_b","set_duration","set_elapsed","set_elapsed","set_g","set_io","set_len","set_mode","set_r","set_state","settings","shared_resource","shared_resource_cell","shared_resource_mut","shared_resources","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl_assign","shl_assign","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","short_type_path","show","show","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr_assign","shr_assign","shrink_to_fit","shuffle","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","size","size","size","size","size","size","size_hint","size_hint","size_hint","size_hint","slerp","slerp","slice","slice","smallvec","snapshot","sorted_session_keys","source","spawn_default_camera","speed","spilled","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","stages","stages","start_game","start_menu","startup","startup_systems","state","step","step","stopwatch","storage","store","store","store","stream_safe","stream_safe","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat2","sub_mat3","sub_mat3","sub_mat3","sub_mat4","sub_mat4","subsec_micros","subsec_millis","subsec_nanos","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swap","swap_remove","swizzles","system","system","systems","systems","tag_type","tail_len","tail_start","take","test","test","test","test","test","text","texture_border_size","texture_size","themed","thickness","tick","tick","tile_pos","tile_size","tile_size","tiles","timer","times_finished_this_tick","times_finished_this_tick","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_euler","to_load","to_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scale_angle_translation","to_scale_angle_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_scaled_axis","to_smallvec","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_unaligned","to_unaligned","to_unaligned","top","trace","transform_point","transform_point","transform_point2","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","translation","translation","translation","transmute_lifetime","transmute_lifetime","transmute_lifetime","transmute_lifetime","transpose","transpose","transpose","transpose","transpose","transpose","transpose","transpose","transpose","trauma","trunc","trunc","trunc","trunc","trunc","trunc","trunc","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_borrow","try_borrow_mut","try_borrow_unguarded","try_borrow_unguarded_mut","try_cast","try_cast_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_get","try_get","try_get_many_mut","try_get_mut","try_grow","try_insert","try_insert_box","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_remove","try_reserve","try_reserve_exact","type_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_path","type_uuid","type_uuid","typed","typed","typed","u128","u16","u32","u32","u64","u64","u64vec2","u64vec3","u64vec4","u8","ui","ui_plugin","ulid","ulid","undo_leak","unit","unlikely","unpause","unpause","unpause","untyped","untyped","untyped","untyped","untyped","untyped_mut","unwrap_many","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update_animation_banks","update_with_instant","uppercase","usize","ustr","uvec2","uvec3","uvec4","value","value","value","value","value","value_schema","variants","vec","vec","vec2","vec3","vec3a","vec4","version","version","version","version","viewport","visible","visible","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w","w","w_axis","w_axis","warn","watch","watch","watch_for_changes","watcher","weighted_sample","weighted_sample_mut","wheel_events","widgets","with_backend","with_borrow","with_borrow","with_capacity","with_color","with_context","with_core_stages","with_modified_settings","with_seed","with_settings","with_trauma","world","wrap","wrap","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","wrapping_sub","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","ww","ww","ww","ww","www","www","www","www","www","www","www","wwww","wwww","wwww","wwww","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwx","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwy","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwwz","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwx","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxw","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxx","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxy","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwxz","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwy","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyw","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyx","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyy","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwyz","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzw","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzx","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzy","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wwzz","wwzz","wwzz","wwzz","wx","wx","wx","wx","wx","wx","wx","wxw","wxw","wxw","wxw","wxw","wxw","wxw","wxww","wxww","wxww","wxww","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwx","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwy","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxwz","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxx","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxw","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxx","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxy","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxxz","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxy","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyw","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyx","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyy","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxyz","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzw","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzx","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzy","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wxzz","wxzz","wxzz","wxzz","wy","wy","wy","wy","wy","wy","wy","wyw","wyw","wyw","wyw","wyw","wyw","wyw","wyww","wyww","wyww","wyww","wyww","wyww","wyww","wywx","wywx","wywx","wywx","wywx","wywx","wywx","wywy","wywy","wywy","wywy","wywy","wywy","wywy","wywz","wywz","wywz","wywz","wywz","wywz","wywz","wyx","wyx","wyx","wyx","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxw","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxx","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxy","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyxz","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyy","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyw","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyx","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyy","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyyz","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzw","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzx","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzy","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wyzz","wyzz","wyzz","wyzz","wz","wz","wz","wz","wz","wz","wz","wzw","wzw","wzw","wzw","wzw","wzw","wzw","wzww","wzww","wzww","wzww","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwx","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwy","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzwz","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzx","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxw","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxx","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxy","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzxz","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzy","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyw","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyx","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyy","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzyz","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzw","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzx","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzy","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","wzzz","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xw","xw","xw","xw","xw","xww","xww","xww","xww","xww","xww","xww","xwww","xwww","xwww","xwww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwx","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwy","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwwz","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwx","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxw","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxx","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxy","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwxz","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwy","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyw","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyx","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyy","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwyz","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzw","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzx","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzy","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xwzz","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxw","xxw","xxw","xxw","xxww","xxww","xxww","xxww","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwx","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwy","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxwz","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxw","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyw","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzw","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyw","xyw","xyw","xyw","xyww","xyww","xyww","xyww","xyww","xyww","xyww","xywx","xywx","xywx","xywx","xywx","xywx","xywx","xywy","xywy","xywy","xywy","xywy","xywy","xywy","xywz","xywz","xywz","xywz","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxw","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyw","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzw","xzw","xzw","xzw","xzww","xzww","xzww","xzww","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwx","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwy","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzwz","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxw","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyw","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzw","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yw","yw","yw","yw","yw","yww","yww","yww","yww","yww","yww","yww","ywww","ywww","ywww","ywww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwx","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwy","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywwz","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywx","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxw","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxx","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxy","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywxz","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywy","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyw","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyx","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyy","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywyz","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzw","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzx","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzy","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","ywzz","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxw","yxw","yxw","yxw","yxww","yxww","yxww","yxww","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwx","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwy","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxwz","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxw","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyw","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzw","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyw","yyw","yyw","yyw","yyww","yyww","yyww","yyww","yyww","yyww","yyww","yywx","yywx","yywx","yywx","yywx","yywx","yywx","yywy","yywy","yywy","yywy","yywy","yywy","yywy","yywz","yywz","yywz","yywz","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxw","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyw","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzw","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzw","yzw","yzw","yzw","yzww","yzww","yzww","yzww","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwx","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwy","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzwz","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxw","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyw","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzw","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zw","zw","zw","zw","zw","zww","zww","zww","zww","zww","zww","zww","zwww","zwww","zwww","zwww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwx","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwy","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwwz","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwx","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxw","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxx","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxy","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwxz","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwy","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyw","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyx","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyy","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwyz","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzw","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzx","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzy","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zwzz","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxw","zxw","zxw","zxw","zxww","zxww","zxww","zxww","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwx","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwy","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxwz","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxw","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyw","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzw","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyw","zyw","zyw","zyw","zyww","zyww","zyww","zyww","zyww","zyww","zyww","zywx","zywx","zywx","zywx","zywx","zywx","zywx","zywy","zywy","zywy","zywy","zywy","zywy","zywy","zywz","zywz","zywz","zywz","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxw","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyw","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzw","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzw","zzw","zzw","zzw","zzww","zzww","zzww","zzww","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwx","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwy","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzwz","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxw","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyw","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzw","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","extension","extensions","loader","layout","alpha","blue","green","red","align","size","key","value","Chain","Context","Error","Ok","Result","anyhow","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_ref","as_ref","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","context","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast_mut","downcast_ref","drop","drop","drop","ensure","fmt","fmt","format_err","from","from","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","inner","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","is","is_in_subset","is_in_subset","len","msg","new","new","next","next_back","raw_clone","raw_default","raw_drop","raw_drop","root_cause","size_hint","state","to_owned","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_context","Bool","Box","Enum","EnumSchemaInfo","EnumTagType","F32","F64","FromType","HasSchema","HasSchema","I128","I16","I32","I64","I8","Map","Opaque","Primitive","Primitive","SchemaData","SchemaKind","SchemaLayoutInfo","String","Struct","StructFieldInfo","StructSchemaInfo","U128","U16","U16","U32","U32","U64","U8","U8","VariantInfo","Vec","alloc","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_enum","as_primitive","as_schema_mut","as_schema_ref","as_struct","as_vec","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","compute_layout_info","default_fn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_fn","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","eq","eq_fn","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field_offsets","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_type","full_name","has_opaque","hash","hash_fn","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","layout","layout","name","name","name","prelude","ptr","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_fns","raw_hash","registry","schema","schema","schema","ser_de","tag_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_cast","try_cast_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variants","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","align","size","key","value","LayoutExt","ResizableAlloc","ResizableAllocIter","ResizableAllocIterMut","SMap","SVec","SVecIter","SVecIterMut","SchemaMap","SchemaTypeMap","SchemaVec","SchemaVecIter","SchemaVecIterMut","_phantom","_phantom","alloc","alloc","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","cap","capacity","capacity","capacity","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","end","end","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref_mut","get_ref_mut","get_ref_unchecked","get_ref_unchecked_mut","hash","hash","idx","idx","idx","idx","idx","idx","index","index","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert_box","insert_box_unchecked","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_schema_map","into_schema_vec","into_smap","into_svec","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut","key_schema","key_schema","keys","keys","layout","layout","len","len","len","len","map","map","new","new","new","new","new","next","next","next","next","next","next","next_back","next_back","padded","padding_needed_for","pop","pop","pop_box","ptr","ptr","ptr_mut","push","push","push_box","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_hash","remove","remove","remove","remove_box","remove_unchecked","repeat","resize","schema","schema","schema","schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get_mut","try_get_mut","try_get_ref","try_get_ref_mut","try_insert","try_insert_box","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_smap","try_into_svec","try_pop","try_push","try_push_box","try_remove","try_remove_box","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_idx","unchecked_idx_mut","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value_schema","value_schema","values","values","values_mut","values_mut","vec","vec","vec","vec","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","Bool","Box","Enum","EnumSchemaInfo","EnumTagType","F32","F64","FieldIdx","FromType","HasSchema","HasSchema","I128","I16","I32","I64","I8","Idx","Map","Name","Opaque","Primitive","Primitive","RAND_BITS","SBox","SCHEMA_REGISTRY","SMap","SVec","SchemaBox","SchemaData","SchemaDeserialize","SchemaDeserializer","SchemaFieldNotFoundError","SchemaId","SchemaKind","SchemaLayoutInfo","SchemaMap","SchemaMismatchError","SchemaRef","SchemaRefMut","SchemaRegistry","SchemaSerializer","SchemaVec","String","Struct","StructFieldInfo","StructSchemaInfo","TIME_BITS","U128","U16","U16","U32","U32","U64","U8","U8","Ulid","VariantInfo","Vec","_phantom","_phantom","_phantom","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_dyn_eq","as_schema_mut","as_schema_ref","b","borrow","borrow_mut","buffer","cast","cast_mut","clone","clone_fn","clone_into","clone_type_data","cmp","compare","create","datetime","default","default_fn","deref","deref_mut","deserialize","deserialize_fn","downcast","drop","drop_fn","dyn_eq","dyn_hash","eq","eq_fn","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","field_offsets","fields","fmt","fmt","from","from","from","from","from_bytes","from_datetime","from_datetime_with_source","from_parts","from_sample_","from_str","from_string","from_subset","from_type","from_world","from_world","full_name","hash","hash_fn","id","idx","increment","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","is_nil","key_schema","kind","layout","len","map","map","name","name","name","new","next_id","nil","parent_lifetime","partial_cmp","ptr","ptr","ptr","random","raw_clone","raw_default","raw_drop","raw_eq","raw_hash","schema","schema","schema","schema","schema","schema","schema","schemas","serialize","tag_type","timestamp_ms","to_bytes","to_owned","to_sample_","to_str","to_string","to_string","to_subset","to_subset_unchecked","try_cast","try_cast_mut","try_from","try_into","type_data","type_id","type_id","upcast","value_schema","variants","vec","vzip","with_source","align","size","key","value","FieldIdx","Idx","MSG","Name","SBox","SchemaBox","SchemaFieldNotFoundError","SchemaMismatchError","SchemaRef","SchemaRefMut","_phantom","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_mut","as_ptr","as_ptr","as_ref","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast_into_mut","cast_mut","cast_mut","cast_ref","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","field","field","field","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from_ptr_schema","from_ptr_schema","from_raw_parts","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_field","get_field","get_field","get_field_mut","hash","hash","hash","hash","idx","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_field","into_inner","into_inner_unchecked","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sbox","into_schema_box","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","parent_lifetime","ptr","ptr","ptr","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","schema","schema","schema","schema","schema","schema","schema","schema","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_cast","try_cast_into_mut","try_cast_mut","try_cast_mut","try_cast_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_hash","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_field","try_into_inner","try_into_sbox","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninitialized","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RawClone","RawDefault","RawDrop","RawEq","RawHash","raw_clone","raw_default","raw_drop","raw_eq","raw_hash","SCHEMA_REGISTRY","SchemaId","SchemaRegistry","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","hash","id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","next_id","raw_clone","raw_drop","raw_drop","raw_eq","raw_hash","register","schemas","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","SchemaDeserialize","SchemaDeserializer","SchemaSerializer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_fn","downcast","downcast","downcast","drop","drop","drop","erased_serialize","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_type","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","raw_drop","raw_drop","raw_drop","schema","serialize","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Aligned","AllocErr","Array","Borrowed","Borrowed","CapacityOverflow","CollectionAllocErr","CreateError","Deref","DerefMut","Drain","FAST","ForkableCore","GEN_KIND","GenCore","HashMap","HashSet","IntoIter","InvalidFormat","IsAligned","Item","LabeledId","LabeledIdCreateError","LabledIdParseError","MaybeOwned","MaybeOwnedMut","Owned","Owned","OwningPtr","PrefixNotAscii","PrefixTooLong","Ptr","PtrExt","PtrMut","PtrMutExt","SLOW","SecureCore","Seed","SeededCore","SmallVec","THREAD_RNG","ThinSlicePtr","ToSmallVec","TurboCore","TurboKind","TurboRand","Ulid","UlidDecode","UlidExt","Unaligned","UnsafeCellDeref","Ustr","UstrMap","UstrSet","_marker","alphabetic","alphanumeric","bool","capacity","chance","char","char_ptr","create","current","dangling_with_align","data","data","default","deref","deref_mut","digit","end","f32","f32_normalized","f64","f64_normalized","fill_bytes","fork","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","get_short_name","i128","i16","i32","i64","i8","index","isize","iter","len","likely","lowercase","partial_shuffle","prefix","prelude","ptr","read","reseed","sample","sample_iter","sample_multiple","sample_multiple_iter","sample_multiple_mut","sample_mut","shuffle","size","smallvec","tail_len","tail_start","to_smallvec","transmute_lifetime","transmute_lifetime","u128","u16","u32","u64","u8","ulid","unlikely","uppercase","usize","ustr","vec","weighted_sample","weighted_sample_mut","with_seed","layout","Aligned","AllocErr","Array","Borrowed","Borrowed","CapacityOverflow","CollectionAllocErr","CreateError","Deref","DerefMut","Drain","FAST","ForkableCore","GEN_KIND","GenCore","HashMap","HashSet","IntoIter","InvalidFormat","IsAligned","Item","LabeledId","LabeledIdCreateError","LabledIdParseError","MaybeOwned","MaybeOwnedMut","Owned","Owned","OwningPtr","PrefixNotAscii","PrefixTooLong","Ptr","PtrExt","PtrMut","PtrMutExt","SLOW","SecureCore","Seed","SeededCore","SmallVec","THREAD_RNG","ThinSlicePtr","ToSmallVec","TurboCore","TurboKind","TurboRand","Ulid","UlidDecode","UlidExt","Unaligned","UnsafeCellDeref","Ustr","UstrMap","UstrSet","_marker","alphabetic","alphanumeric","bool","capacity","chance","char","char_ptr","create","current","dangling_with_align","data","data","default","deref","deref_mut","digit","end","f32","f32_normalized","f64","f64_normalized","fill_bytes","fork","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","get_short_name","i128","i16","i32","i64","i8","index","isize","iter","len","likely","lowercase","partial_shuffle","prefix","prelude","ptr","read","reseed","rng","sample","sample_iter","sample_multiple","sample_multiple_iter","sample_multiple_mut","sample_mut","shuffle","size","smallvec","tail_len","tail_start","to_smallvec","transmute_lifetime","transmute_lifetime","u128","u16","u32","u64","u8","ulid","unlikely","uppercase","usize","ustr","vec","weighted_sample","weighted_sample_mut","with_seed","layout","alloc","borrow","boxed","collections","ffi","fmt","format","rc","slice","str","string","sync","task","vec","vec","AllocError","Allocator","Global","GlobalAlloc","Layout","LayoutErr","LayoutError","align","align","align_to","alloc","alloc","alloc_zeroed","alloc_zeroed","allocate","allocate","allocate_zeroed","allocate_zeroed","array","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_ref","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","dangling","dealloc","dealloc","deallocate","deallocate","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend_packed","fmt","fmt","fmt","fmt","fmt","fmt","for_value","for_value_raw","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_size_align","from_size_align_unchecked","from_subset","from_subset","from_subset","from_subset","from_world","from_world","grow","grow","grow_zeroed","grow_zeroed","handle_alloc_error","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","pad_to_align","padding_needed_for","padding_needed_for","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_hash","realloc","realloc","repeat","repeat","repeat_packed","shrink","shrink","size","size","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Borrow","BorrowMut","Borrowed","Cow","Owned","Owned","ToOwned","add","add","add_assign","add_assign","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bits","as_dyn_eq","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","calculate_size_for","clear","clone","clone_from","clone_into","clone_into","clone_type_data","clone_value","clone_value","clone_value","cmp","compare","crate_name","crate_name","create_from","debug","default","delete_char_range","deref","deref","deref_mut","deserialize","downcast","drain","drop","dyn_eq","dyn_hash","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_reflect","from_reflect","from_reflect","from_sample_","from_subset","from_world","from_world","get","get_mut","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","get_type_registration","hash","init","insert","insert_text","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_deserializer","into_owned","into_reflect","into_reflect","into_reflect","into_sample","is_borrowed","is_in_subset","is_mutable","is_owned","iter","len","module_path","module_path","ne","ne","ne","ne","ne","ne","ne","no_expansion","no_expansion","no_expansion","no_expansion","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","push","raw_clone","raw_default","raw_drop","raw_eq","raw_hash","reflect_crate_name","reflect_hash","reflect_hash","reflect_hash","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","remove","replace","replace_append","replace_append","replace_append","replace_append","serialize","set","set","set","short_type_path","short_type_path","size","take","to_mut","to_owned","to_owned","to_sample_","to_string","to_subset","to_subset_unchecked","try_as_bits","try_from","try_into","type_id","type_ident","type_ident","type_info","type_info","type_info","type_name","type_name","type_name","type_path","type_path","upcast","vzip","write_into","Box","ThinBox","_marker","allocator","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_dyn_eq","as_dyn_eq","as_fd","as_mut","as_mut_bits","as_raw_fd","as_ref","as_rngcore","assume_init","assume_init","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_size_for","call","call_mut","call_once","callsite_enabled","capacity","cause","cjk_compat_variants","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_span","clone_type_data","cmp","compare","consume","consume","create_from","current_span","default","default","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deregister","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","downcast","downcast","downcast","downcast","downcast","downcast_raw","downcast_unchecked","downcast_unchecked","downcast_unchecked","drop","drop","drop","drop","drop_span","dyn_clone","dyn_eq","dyn_hash","dyn_hash","enabled","enabled","enabled","enabled","enabled","encode_hex","encode_hex_upper","enter","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_deserialize_any","erased_deserialize_any","erased_deserialize_any","erased_deserialize_any","erased_deserialize_bool","erased_deserialize_bool","erased_deserialize_bool","erased_deserialize_bool","erased_deserialize_byte_buf","erased_deserialize_byte_buf","erased_deserialize_byte_buf","erased_deserialize_byte_buf","erased_deserialize_bytes","erased_deserialize_bytes","erased_deserialize_bytes","erased_deserialize_bytes","erased_deserialize_char","erased_deserialize_char","erased_deserialize_char","erased_deserialize_char","erased_deserialize_enum","erased_deserialize_enum","erased_deserialize_enum","erased_deserialize_enum","erased_deserialize_f32","erased_deserialize_f32","erased_deserialize_f32","erased_deserialize_f32","erased_deserialize_f64","erased_deserialize_f64","erased_deserialize_f64","erased_deserialize_f64","erased_deserialize_i128","erased_deserialize_i128","erased_deserialize_i128","erased_deserialize_i128","erased_deserialize_i16","erased_deserialize_i16","erased_deserialize_i16","erased_deserialize_i16","erased_deserialize_i32","erased_deserialize_i32","erased_deserialize_i32","erased_deserialize_i32","erased_deserialize_i64","erased_deserialize_i64","erased_deserialize_i64","erased_deserialize_i64","erased_deserialize_i8","erased_deserialize_i8","erased_deserialize_i8","erased_deserialize_i8","erased_deserialize_identifier","erased_deserialize_identifier","erased_deserialize_identifier","erased_deserialize_identifier","erased_deserialize_ignored_any","erased_deserialize_ignored_any","erased_deserialize_ignored_any","erased_deserialize_ignored_any","erased_deserialize_map","erased_deserialize_map","erased_deserialize_map","erased_deserialize_map","erased_deserialize_newtype_struct","erased_deserialize_newtype_struct","erased_deserialize_newtype_struct","erased_deserialize_newtype_struct","erased_deserialize_option","erased_deserialize_option","erased_deserialize_option","erased_deserialize_option","erased_deserialize_seq","erased_deserialize_seq","erased_deserialize_seq","erased_deserialize_seq","erased_deserialize_str","erased_deserialize_str","erased_deserialize_str","erased_deserialize_str","erased_deserialize_string","erased_deserialize_string","erased_deserialize_string","erased_deserialize_string","erased_deserialize_struct","erased_deserialize_struct","erased_deserialize_struct","erased_deserialize_struct","erased_deserialize_tuple","erased_deserialize_tuple","erased_deserialize_tuple","erased_deserialize_tuple","erased_deserialize_tuple_struct","erased_deserialize_tuple_struct","erased_deserialize_tuple_struct","erased_deserialize_tuple_struct","erased_deserialize_u128","erased_deserialize_u128","erased_deserialize_u128","erased_deserialize_u128","erased_deserialize_u16","erased_deserialize_u16","erased_deserialize_u16","erased_deserialize_u16","erased_deserialize_u32","erased_deserialize_u32","erased_deserialize_u32","erased_deserialize_u32","erased_deserialize_u64","erased_deserialize_u64","erased_deserialize_u64","erased_deserialize_u64","erased_deserialize_u8","erased_deserialize_u8","erased_deserialize_u8","erased_deserialize_u8","erased_deserialize_unit","erased_deserialize_unit","erased_deserialize_unit","erased_deserialize_unit","erased_deserialize_unit_struct","erased_deserialize_unit_struct","erased_deserialize_unit_struct","erased_deserialize_unit_struct","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_is_human_readable","erased_serialize","erased_serialize_bool","erased_serialize_bool","erased_serialize_bool","erased_serialize_bool","erased_serialize_bytes","erased_serialize_bytes","erased_serialize_bytes","erased_serialize_bytes","erased_serialize_char","erased_serialize_char","erased_serialize_char","erased_serialize_char","erased_serialize_f32","erased_serialize_f32","erased_serialize_f32","erased_serialize_f32","erased_serialize_f64","erased_serialize_f64","erased_serialize_f64","erased_serialize_f64","erased_serialize_i128","erased_serialize_i128","erased_serialize_i128","erased_serialize_i128","erased_serialize_i16","erased_serialize_i16","erased_serialize_i16","erased_serialize_i16","erased_serialize_i32","erased_serialize_i32","erased_serialize_i32","erased_serialize_i32","erased_serialize_i64","erased_serialize_i64","erased_serialize_i64","erased_serialize_i64","erased_serialize_i8","erased_serialize_i8","erased_serialize_i8","erased_serialize_i8","erased_serialize_map","erased_serialize_map","erased_serialize_map","erased_serialize_map","erased_serialize_newtype_struct","erased_serialize_newtype_struct","erased_serialize_newtype_struct","erased_serialize_newtype_struct","erased_serialize_newtype_variant","erased_serialize_newtype_variant","erased_serialize_newtype_variant","erased_serialize_newtype_variant","erased_serialize_none","erased_serialize_none","erased_serialize_none","erased_serialize_none","erased_serialize_seq","erased_serialize_seq","erased_serialize_seq","erased_serialize_seq","erased_serialize_some","erased_serialize_some","erased_serialize_some","erased_serialize_some","erased_serialize_str","erased_serialize_str","erased_serialize_str","erased_serialize_str","erased_serialize_struct","erased_serialize_struct","erased_serialize_struct","erased_serialize_struct","erased_serialize_struct_variant","erased_serialize_struct_variant","erased_serialize_struct_variant","erased_serialize_struct_variant","erased_serialize_tuple","erased_serialize_tuple","erased_serialize_tuple","erased_serialize_tuple","erased_serialize_tuple_struct","erased_serialize_tuple_struct","erased_serialize_tuple_struct","erased_serialize_tuple_struct","erased_serialize_tuple_variant","erased_serialize_tuple_variant","erased_serialize_tuple_variant","erased_serialize_tuple_variant","erased_serialize_u128","erased_serialize_u128","erased_serialize_u128","erased_serialize_u128","erased_serialize_u16","erased_serialize_u16","erased_serialize_u16","erased_serialize_u16","erased_serialize_u32","erased_serialize_u32","erased_serialize_u32","erased_serialize_u32","erased_serialize_u64","erased_serialize_u64","erased_serialize_u64","erased_serialize_u64","erased_serialize_u8","erased_serialize_u8","erased_serialize_u8","erased_serialize_u8","erased_serialize_unit","erased_serialize_unit","erased_serialize_unit","erased_serialize_unit","erased_serialize_unit_struct","erased_serialize_unit_struct","erased_serialize_unit_struct","erased_serialize_unit_struct","erased_serialize_unit_variant","erased_serialize_unit_variant","erased_serialize_unit_variant","erased_serialize_unit_variant","event","event_enabled","event_enabled","event_enabled","exit","fill_buf","fill_bytes","fill_bytes","fill_bytes","filter","finish","flush","flush","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw","from_raw_in","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","ge","gen","get","gt","handle","handle_event","handle_event","hash","include_edge","include_node","init","init","inner_type_id","install","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_boxed_slice","into_configs","into_future","into_inner","into_iter","into_iter","into_iter","into_pin","into_raw","into_raw_with_allocator","into_sample","into_sample","into_searcher","into_system","into_system","into_system_set","into_system_set","is_contained_in","is_empty","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_in_subset","is_in_subset","is_prefix_of","is_read_vectored","is_suffix_of","is_synchronous","is_terminated","is_terminated","is_write_vectored","last","le","leak","len","len","log","lt","make_visitor","make_writer","max_level_hint","max_level_hint","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","ne","new","new","new_in","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_unsize","new_vertex","new_vertex","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_back","next_u32","next_u32","next_u64","next_u64","nfc","nfd","nfkc","nfkd","nth","nth_back","on_close","on_close","on_enter","on_enter","on_event","on_event","on_exit","on_exit","on_follows_from","on_follows_from","on_id_change","on_id_change","on_layer","on_layer","on_new_span","on_new_span","on_record","on_record","on_register_dispatch","on_register_dispatch","partial_cmp","pin","pin_in","poll","poll_close","poll_fill_buf","poll_flush","poll_next","poll_next","poll_read","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","ptr","raw_clone","raw_default","raw_drop","raw_drop","raw_eq","raw_hash","read","read","read_buf","read_exact","read_from","read_line","read_to_end","read_to_string","read_until","read_vectored","record","record","record_debug","record_follows_from","register","register_callsite","register_callsite","register_callsite","replace_append","replace_append","reregister","reset","resolve","resume","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","schedule","seek","serialize","set_color","set_hyperlink","size","size_hint","size_hint","size_hint","size_hint","socket","source","source","stream_position","stream_safe","strip_prefix_of","strip_suffix_of","supports_color","supports_hyperlinks","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","system","to_owned","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_as_mut_bits","try_close","try_enlarge","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_uninit_slice","try_new_zeroed","try_new_zeroed_in","try_new_zeroed_slice","try_poll","try_poll_next","type_id","type_id","ui","upcast","upcast","visit","vzip","vzip","write","write","write","write","write_all","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_into","write_isize","write_length_prefix","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","AllocError","BTreeMap","BTreeSet","BinaryHeap","CapacityOverflow","LinkedList","TryReserveError","TryReserveErrorKind","VecDeque","_marker","alloc","alloc","allocator","allocator","append","append","append","append","append","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_mut_slices","as_reflect","as_reflect_mut","as_slice","as_slices","back","back","back_mut","back_mut","binary_heap","binary_search","binary_search_by","binary_search_by_key","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btree_map","btree_set","buf","calculate_size_for","calculate_size_for","capacity","capacity","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_from","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","cmp","cmp","cmp","cmp","compare","compare","compare","compare","contains","contains","contains","contains_key","crate_name","create_from","create_from","cursor_back","cursor_back_mut","cursor_front","cursor_front_mut","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drain","drain","drain_sorted","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","extend_reserve","extend_reserve","extract_if","extract_if","extract_if","first","first_entry","first_key_value","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","front","front","front_mut","front_mut","get","get","get","get","get_key_value","get_mut","get_mut","get_mut","get_represented_type_info","get_type_registration","hash","hash","hash","hash","head","head","index","index","index_mut","init","init","init","init","init","init","init","insert","insert","insert","insert","intersection","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_deserializer","into_deserializer","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_sorted","into_keys","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sorted_vec","into_values","into_vec","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_subset","is_superset","is_write_vectored","iter","iter","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","keys","kind","kind","last","last_entry","last_key_value","len","len","len","len","len","len","len","len","length","length","length","linked_list","lower_bound","lower_bound_mut","make_contiguous","map","marker","module_path","ne","new","new","new","new","new","new_in","new_in","new_in","new_in","new_in","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partition_point","peek","peek_mut","pop","pop","pop_back","pop_back","pop_first","pop_first","pop_front","pop_front","pop_last","pop_last","push","push","push_back","push_back","push_front","push_front","range","range","range","range_mut","range_mut","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","read","read_buf","read_from","read_from","read_to_end","read_to_string","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","remove","remove","remove","remove","remove","remove_entry","replace","reserve","reserve","reserve_exact","reserve_exact","resize","resize_with","retain","retain","retain","retain","retain_mut","root","rotate_left","rotate_right","serialize","serialize","serialize","serialize","serialize","set","short_type_path","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","size","size","split_off","split_off","split_off","split_off","sub","swap","swap_remove_back","swap_remove_front","symmetric_difference","tail","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve","try_reserve_exact","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_name","type_path","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_bound","upper_bound_mut","values","values_mut","vec_deque","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity_in","with_capacity_in","write","write_all","write_into","write_into","write_vectored","layout","BinaryHeap","Drain","DrainSorted","IntoIter","IntoIterSorted","Iter","PeekMut","allocator","allocator","allocator","allocator","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","data","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","heap","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","last","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next_back","next_back","next_back","nfc","nfc","nfc","nfc","nfd","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","nfkd","original_len","pop","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","stream_safe","stream_safe","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","BTreeMap","Cursor","CursorMut","Entry","ExtractIf","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","OccupiedEntry","OccupiedError","Range","RangeMut","Vacant","VacantEntry","Values","ValuesMut","_marker","_marker","_marker","_marker","_marker","alloc","alloc","alloc","alloc","alloc","alloc","and_modify","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_cursor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","current","current","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dormant_map","dormant_map","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_mut","handle","handle","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","inner","inner","inner","insert","insert","insert_after","insert_after_unchecked","insert_before","insert_before_unchecked","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","key","key","key_mut_unchecked","key_value","key_value","key_value_mut","last","last","last","last","last","last","last","last","last","len","len","len","len","len","len","len","len","length","length","length","length","length","max","max","max","max","max","max","min","min","min","min","min","min","move_next","move_next","move_prev","move_prev","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","or_default","or_insert","or_insert_with","or_insert_with_key","peek_next","peek_next","peek_prev","peek_prev","pred","range","range","range","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove","remove_current","remove_current_and_move_back","remove_entry","root","root","root","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","value","value_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BTreeSet","Difference","ExtractIf","Intersection","IntoIter","Iter","Range","SymmetricDifference","Union","alloc","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","init","init","init","inner","inner","inner","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","last","last","len","len","map","max","max","min","min","min","min","min","min","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next","next","next","next_back","next_back","next_back","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","pred","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Cursor","CursorMut","ExtractIf","IntoIter","Iter","IterMut","LinkedList","alloc","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_cursor","back","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","current","current","current","current","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","front","front","front_mut","head","head","head","idx","index","index","index","index","init","init","init","init","init","init","insert_after","insert_before","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","it","last","last","len","len","len","list","list","list","list","marker","marker","marker","move_next","move_next","move_prev","move_prev","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next_back","next_back","next_back","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","old_len","peek_next","peek_next","peek_prev","peek_prev","peeking_next","pop_back","pop_front","pred","push_back","push_front","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove_current","remove_current_as_list","size_hint","size_hint","size_hint","size_hint","size_hint","splice_after","splice_before","split_after","split_before","stream_safe","stream_safe","tail","tail","tail","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","Drain","IntoIter","Iter","IterMut","VecDeque","_marker","advance_back_by","advance_back_by","advance_back_by","advance_by","advance_by","advance_by","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","cjk_compat_variants","cjk_compat_variants","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","count","deque","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drain_len","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fold","fold","fold","for_each","for_each","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","head","i1","i1","i2","i2","idx","init","init","init","init","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last","last","last","len","len","len","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next_back","next_back","next_back","next_back","next_chunk","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","peeking_next","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","remaining","rfold","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","tail_len","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_fold","try_fold","try_fold","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_rfold","try_rfold","try_rfold","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","CString","FromVecWithNulError","IntoStringError","NulError","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bytes","as_bytes","as_bytes_with_nul","as_c_str","as_dyn_eq","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","eq","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","error","error_kind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","from_world","from_world","hash","index","init","init","init","init","inner","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_boxed_c_str","into_bytes","into_bytes","into_bytes_with_nul","into_cstring","into_raw","into_sample","into_sample","into_sample","into_sample","into_string","into_vec","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","nul_position","partial_cmp","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","serialize","source","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","utf8_error","vzip","vzip","vzip","vzip","Alignment","Arguments","Binary","Center","Debug","Debug","DebugList","DebugMap","DebugSet","DebugStruct","DebugTuple","Display","Error","Formatter","Left","LowerExp","LowerHex","Octal","Pointer","Result","Right","UpperExp","UpperHex","Write","align","align","alternate","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","cmp","collect_str","compare","custom","debug_list","debug_map","debug_set","debug_struct","debug_tuple","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","empty_name","entries","entries","entries","entry","entry","entry","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","field","field","fields","fill","fill","finish","finish","finish","finish","finish","finish_non_exhaustive","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","has_fields","has_fields","has_key","hash","init","init","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","pad","pad_integral","partial_cmp","pieces","precision","precision","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","record","record_debug","record_debug","result","result","result","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","sign_aware_zero_pad","sign_minus","sign_plus","state","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","write","write_char","write_char","write_fmt","write_fmt","write_fmt","write_str","write_str","write_str","Rc","UniqueRc","Weak","alloc","alloc","allocator","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_dyn_eq","as_fd","as_ptr","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_size_for","clone","clone","clone_into","clone_into","cmp","compare","create_from","decrement_strong_count","decrement_strong_count_in","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast_unchecked","downgrade","downgrade","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","encode_hex","encode_hex_upper","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw","from_raw","from_raw_in","from_raw_in","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","ge","get_mut","get_mut_unchecked","gt","hash","increment_strong_count","increment_strong_count_in","init","init","init","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","into_inner","into_raw","into_raw","into_raw_and_alloc","into_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","le","len","lt","make_mut","ne","new","new","new","new_cyclic","new_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","partial_cmp","phantom","phantom","pin","pin_in","ptr","ptr","ptr","ptr_eq","ptr_eq","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","read","serialize","serialize","size","strong_count","strong_count","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_unwrap","type_id","type_id","type_id","unwrap_or_clone","upcast","upcast","upcast","upgrade","vzip","vzip","vzip","weak_count","weak_count","write_into","ArrayChunks","ArrayChunksMut","ArrayWindows","Chunks","ChunksExact","ChunksExactMut","ChunksMut","Concat","EscapeAscii","GroupBy","GroupByMut","Iter","IterMut","Join","Output","Output","Output","RChunks","RChunksExact","RChunksExactMut","RChunksMut","RSplit","RSplitMut","RSplitN","RSplitNMut","SliceIndex","Split","SplitInclusive","SplitInclusiveMut","SplitMut","SplitN","SplitNMut","Windows","_marker","_marker","_marker","_marker","_marker","advance_back_by","advance_back_by","advance_by","advance_by","all","all","any","any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_bits","as_mut_slice","as_ref","as_ref","as_slice","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","chunk_size","chunk_size","chunk_size","chunk_size","chunk_size","chunk_size","chunk_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","concat","count","count","count","count","count","count","count","count","count","count","count","count","count","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","end_or_len","end_or_len","find","find","find_map","find_map","finished","finished","finished","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut_ptr_range","from_ptr_range","from_raw_parts","from_raw_parts_mut","from_ref","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get","get_mut","get_unchecked","get_unchecked_mut","index","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_remainder","into_remainder","into_remainder","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_slice","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_sorted_by","iter","iter","join","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","len","len","marker","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","num","peeking_next","position","position","pred","pred","pred","pred","predicate","predicate","ptr","ptr","range","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","rem","rem","rem","rem","rem","rem","remainder","remainder","remainder","rposition","rposition","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slice","slice","slice_head","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_as_bits","try_fold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","v","v","v","v","v","v","v","v","v","v","v","v","v","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bytes","CharIndices","Chars","EncodeUtf16","Err","EscapeDebug","EscapeDefault","EscapeUnicode","FromStr","Lines","LinesAny","MatchIndices","Matches","ParseBoolError","RMatchIndices","RMatches","RSplit","RSplitN","RSplitTerminator","Split","SplitAsciiWhitespace","SplitInclusive","SplitN","SplitTerminator","SplitWhitespace","Utf8Chunk","Utf8Chunks","Utf8Error","all","any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chars","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","count","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_len","error_len","extra","find","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_boxed_utf8_unchecked","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_utf8","from_utf8_mut","from_utf8_unchecked","from_utf8_unchecked_mut","front_offset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","invalid","invalid","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","last","last","last","last","last","last","len","multiunzip","multiunzip","multiunzip","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nfc","nfc","nfc","nfc","nfd","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","nfkd","nth","nth_back","offset","pattern","peeking_next","peeking_next","peeking_next","position","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","replace_comments","rfind","rposition","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","stream_safe","stream_safe","stream_safe","stream_safe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_fold","try_fold","try_fold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","valid","valid","valid_up_to","valid_up_to","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CharArrayRefSearcher","CharArraySearcher","CharPredicateSearcher","CharSearcher","CharSliceSearcher","Done","DoubleEndedSearcher","Match","Pattern","Reject","ReverseSearcher","SearchStep","Searcher","Searcher","StrSearcher","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","finger","finger_back","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","haystack","haystack","haystack","haystack","haystack","haystack","haystack","haystack","haystack","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_searcher","is_contained_in","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_prefix_of","is_suffix_of","needle","needle","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_match","next_match","next_match","next_match","next_match","next_match","next_match","next_match_back","next_match_back","next_match_back","next_match_back","next_match_back","next_match_back","next_match_back","next_reject","next_reject","next_reject","next_reject","next_reject","next_reject_back","next_reject_back","next_reject_back","next_reject_back","next_reject_back","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","searcher","strip_prefix_of","strip_suffix_of","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utf8_encoded","utf8_size","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Drain","FromUtf16Error","FromUtf8Error","ParseError","String","ToString","add","add_assign","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_bits","as_bytes","as_bytes","as_dyn_eq","as_mut","as_mut_str","as_mut_string","as_mut_string","as_mut_vec","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect_mut","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","capacity","cjk_compat_variants","clear","clear","clear","clone","clone","clone_from","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","cmp","compare","consume","crate_name","debug","default","delete_char_range","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_with","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","error","extend","extend","extend","extend","extend","extend","extend","extend_from_within","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_const","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_raw_parts","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_subset","from_subset","from_subset","from_subset","from_utf16","from_utf16_lossy","from_utf8","from_utf8_lossy","from_utf8_unchecked","from_world","from_world","get_represented_type_info","get_type_registration","hash","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","insert","insert_str","insert_text","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_boxed_str","into_bytes","into_bytes","into_deserializer","into_iter","into_raw_parts","into_reflect","into_sample","into_sample","into_sample","into_sample","into_searcher","is_contained_in","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_mutable","is_prefix_of","is_suffix_of","iter","last","leak","len","module_path","ne","ne","ne","new","next","next_back","nfc","nfd","nfkc","nfkd","no_expansion","no_expansion","partial_cmp","phf_hash","pop","push","push_str","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","record","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","remove","remove_matches","replace","replace_append","replace_append","replace_range","reserve","reserve_exact","retain","schema","serialize","set","short_type_path","shrink_to","shrink_to_fit","size_hint","slice","split_off","start","stream_safe","string","strip_prefix_of","strip_suffix_of","take","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_socket_addrs","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trim","truncate","try_as_bits","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_ident","type_info","type_name","type_name","type_path","type_uuid","upcast","upcast","upcast","upcast","utf8_error","vec","vzip","vzip","vzip","vzip","with_capacity","write_char","write_str","Arc","Weak","alloc","alloc","allocator","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_dyn_eq","as_fd","as_ptr","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow_mut","borrow_mut","calculate_size_for","callsite_enabled","cause","clone","clone","clone_into","clone_into","clone_span","clone_type_data","clone_type_data","cmp","compare","connect","create_from","current_span","decrement_strong_count","decrement_strong_count_in","default","default","deref","deref","deref","deref_mut","deref_mut","description","deserialize","deserialize","downcast","downcast","downcast","downcast_raw","downcast_unchecked","downgrade","drop","drop","drop","drop","drop_span","dyn_eq","dyn_hash","enabled","enabled","enabled","encode_hex","encode_hex_upper","enter","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","event","event_enabled","exit","flush","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw","from_raw","from_raw_in","from_raw_in","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","ge","get_mut","get_mut_unchecked","gt","hash","increment_strong_count","increment_strong_count_in","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_inner","into_raw","into_raw","into_sample","into_sample","is_in_subset","is_in_subset","is_read_vectored","is_write_vectored","le","len","log","lt","make_mut","make_writer","max_level_hint","max_level_hint","ne","new","new","new_cyclic","new_in","new_in","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","partial_cmp","phantom","pin","pin_in","provide","ptr","ptr","ptr_eq","ptr_eq","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_eq","raw_hash","read","read","read_buf","read_to_end","read_to_string","read_vectored","record","record_follows_from","register_callsite","seek","serialize","serialize","size","source","strong_count","strong_count","to_owned","to_owned","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_close","try_from","try_from","try_from","try_into","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","unwrap_or_clone","upcast","upcast","upgrade","vzip","vzip","weak_count","weak_count","write","write_into","write_vectored","Wake","wake","wake_by_ref","Drain","ExtractIf","IntoIter","Splice","Vec","advance_back_by","advance_by","alloc","allocator","allocator","allocator","allocator","append","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_bits","as_bits","as_dyn_eq","as_mut","as_mut","as_mut_bits","as_mut_ptr","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect_mut","as_single_slice","as_slice","as_slice","as_slice","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","calculate_size_for","cap","capacity","capacity","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","clear","clear","clone","clone","clone_from","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","cmp","compare","count","crate_name","create_from","decode_with","dedup","dedup_by","dedup_by_key","default","default","del","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","drain","drain","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","enabled","encode","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_with","end","eq","eq","eq","eq","eq","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","event_enabled","extend","extend","extend_from_slice","extend_from_within","extend_one","extend_one","extend_reserve","extend_reserve","extract_if","flush","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_internal","from_iter","from_raw_parts","from_raw_parts_in","from_reflect","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_slices","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get","get_extensions","get_mut","get_represented_type_info","get_type_registration","hash","idx","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut2","init","init","init","init","init","insert","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_boxed_slice","into_deserializer","into_flattened","into_internal","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw_parts","into_raw_parts_with_alloc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_write_vectored","iter","iter","keep_rest","leak","len","len","len","len","len","len","length","module_path","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","ne","ne","ne","ne","ne","ne","new","new_in","next","next","next","next","next_back","next_back","next_back","next_chunk","nfc","nfc","nfc","nfc","nfd","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","nfkd","no_expansion","no_expansion","old_len","on_close","on_enter","on_event","on_exit","on_follows_from","on_layer","on_new_span","on_record","partial_cmp","phantom","phf_hash","poll_close","poll_flush","poll_write","poll_write_vectored","pop","pop","pred","ptr","push","push","push_within_capacity","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","read","read","read_from","reflect_crate_name","reflect_hash","reflect_module_path","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","reflect_short_type_path","reflect_type_ident","reflect_type_path","register_callsite","remove","remove","replace_append","replace_append","replace_with","reserve","reserve_exact","resize","resize_with","retain","retain_mut","serialize","set","set_len","short_type_path","shrink_to","shrink_to_fit","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","spare_capacity_mut","splice","split_at_spare_mut","split_off","stream_safe","stream_safe","stream_safe","stream_safe","swap_remove","tail_len","tail_start","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_slices","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","truncate","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_enlarge","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_ident","type_info","type_name","type_name","type_path","type_uuid","upcast","upcast","upcast","upcast","upcast","vec","vec","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity_in","write","write","write_all","write_into","write_vectored","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","Future","FutureExt","Item","Output","Stream","StreamExt","all","any","boxed","boxed","boxed_local","boxed_local","boxed_reader","boxed_writer","bytes","catch_unwind","chain","chain","cloned","close","collect","consume","consume","copied","count","cycle","enumerate","fill_buf","filter","filter_map","find","find_map","flat_map","flatten","flush","fold","for_each","fuse","future","inspect","io","last","lines","map","next","nth","or","or","partition","pin","poll","poll","poll_close","poll_fill_buf","poll_flush","poll_next","poll_next","poll_read","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","position","prelude","race","race","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","ready","scan","seek","size_hint","skip","skip_while","split","step_by","stream","take","take","take_while","then","try_collect","try_fold","try_for_each","try_next","unzip","write","write_all","write_vectored","zip","Boxed","BoxedLocal","CatchUnwind","Future","FutureExt","Or","Output","Pending","PollFn","PollOnce","Race","Ready","TryZip","YieldNow","Zip","_marker","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","catch_unwind","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","f","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","future1","future1","future1","future1","future2","future2","future2","future2","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","or","or","output1","output1","output2","output2","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_once","race","race","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","ready","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_zip","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","yield_now","zip","AddrInUse","AddrNotAvailable","AlreadyExists","ArgumentListTooLong","AssertAsync","AsyncAsSync","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BlockOn","BoxedReader","BoxedWriter","BrokenPipe","BufReader","BufWriter","Bytes","Chain","CloseFuture","ConnectionAborted","ConnectionRefused","ConnectionReset","CrossesDevices","Current","Cursor","Deadlock","DirectoryNotEmpty","Empty","End","Error","ErrorKind","ExecutableFileBusy","FileTooLarge","FilesystemLoop","FilesystemQuotaExceeded","FillBuf","FlushFuture","HostUnreachable","Interrupted","InvalidData","InvalidFilename","InvalidInput","IsADirectory","Lines","NetworkDown","NetworkUnreachable","NotADirectory","NotConnected","NotFound","NotSeekable","Other","OutOfMemory","PermissionDenied","ReadExactFuture","ReadFuture","ReadHalf","ReadLineFuture","ReadOnlyFilesystem","ReadToEndFuture","ReadToStringFuture","ReadUntilFuture","ReadVectoredFuture","Repeat","ResourceBusy","Result","SeekFrom","SeekFuture","Sink","Split","StaleNetworkFileHandle","Start","StorageFull","Take","TimedOut","TooManyLinks","UnexpectedEof","Unsupported","WouldBlock","WriteAllFuture","WriteFuture","WriteHalf","WriteVectoredFuture","WriteZero","_private","_private","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_dyn_eq","as_dyn_eq","as_mut","as_mut_bits","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","boxed_writer","buf","buf","buf","buf","buf","buf","buf","buf","buf","buf","buf","buf","buffer","buffer","bufs","bufs","byte","byte","bytes","bytes","bytes","bytes","cap","cause","chain","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","close","close","cmp","cmp","compare","compare","consume","consume","consume","consume","consume","consume","consume","consume","context","copy","default","delim","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","done_first","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","empty","encode_hex","encode_hex_upper","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fill_buf","fill_buf","first","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_os_error","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","last_os_error","limit","limit","lines","new","new","new","new","new","new","new","other","partial_cmp","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_next","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_with","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","pos","pos","position","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_os_error","read","read","read","read","read","read","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","read_vectored","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","repeat","repr","second","seek","seek","seek","seeker","set_limit","set_position","sink","source","split","split","start_len","start_len","take","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","write","write","write","write_all","write_vectored","write_vectored","writer","writer","writer","writer","writer","written","AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Future","Item","Output","Stream","_","_","_","_","_","_","all","any","boxed","boxed","boxed_local","boxed_local","boxed_reader","boxed_writer","bytes","catch_unwind","chain","chain","cloned","close","collect","consume","consume","copied","count","cycle","enumerate","fill_buf","filter","filter_map","find","find_map","flat_map","flatten","flush","fold","for_each","fuse","inspect","last","lines","map","next","nth","or","or","partition","poll","poll","poll_close","poll_fill_buf","poll_flush","poll_next","poll_next","poll_read","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","position","race","race","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","scan","seek","size_hint","skip","skip_while","split","step_by","take","take","take_while","then","try_collect","try_fold","try_for_each","try_next","unzip","write","write_all","write_vectored","zip","AllFuture","AnyFuture","BlockOn","Boxed","BoxedLocal","Chain","Cloned","CollectFuture","Copied","CountFuture","Cycle","Empty","Enumerate","Filter","FilterMap","FindFuture","FindMapFuture","FlatMap","Flatten","FoldFuture","ForEachFuture","Fuse","Inspect","Item","Iter","LastFuture","Map","NextFuture","NthFuture","Once","OnceFuture","Or","PartitionFuture","Pending","PollFn","PositionFuture","Race","Repeat","RepeatWith","Scan","Skip","SkipWhile","StepBy","Stream","StreamExt","Take","TakeWhile","Then","TryCollectFuture","TryFoldFuture","TryForEachFuture","TryNextFuture","TryUnfold","Unfold","UnzipFuture","Zip","_marker","_marker","acc","acc","all","all","any","any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","chain","cjk_compat_variants","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cloned","collect","collection","copied","count","count","count","cycle","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","done","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","enumerate","f","f","f","f","f","f","f","f","f","f","f","f","f","filter","filter_map","find","find","find_map","find_map","first","first","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","fuse","fut","fut","future","future","i","i","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_stream","inner_stream","inspect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","item","item_slot","items","iter","iter","last","last","last","map","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","n","n","n","next","next","nfc","nfd","nfkc","nfkd","nth","nth","once","once_future","or","or","orig","partition","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","position","position","predicate","predicate","predicate","predicate","predicate","predicate","predicate","predicate","race","race","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","repeat","repeat_with","res","res","scan","second","second","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip_while","state","state","state_f","step","step_by","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream","stream1","stream1","stream2","stream2","stream_safe","take","take_while","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_collect","try_fold","try_for_each","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zip","FxBuildHasher","FxHashMap","FxHashSet","FxHasher","FxHasher32","FxHasher64","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","finish","finish","finish","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","hash","hash","hash32","hash64","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize","AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","TryReserveError","allocator","allocator","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","bitand","bitor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone_dynamic","clone_from","clone_from","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","contains","contains_key","crate_name","crate_name","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","difference","downcast","downcast","downcast","drain","drain","drain","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","entry","entry","entry_ref","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extract_if","extract_if","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","from_iter","from_reflect","from_reflect","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get","get","get","get_at","get_at_mut","get_key_value","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_or_insert","get_or_insert_owned","get_or_insert_with","get_or_insert_with","get_represented_type_info","get_represented_type_info","get_type_registration","get_type_registration","hash_builder","hash_map","hash_set","hasher","hasher","index","init","init","init","insert","insert","insert_boxed","insert_unique_unchecked","insert_unique_unchecked","intersection","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_values","is_disjoint","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_subset","is_superset","iter","iter","iter","iter_mut","keys","len","len","len","map","module_path","module_path","new","new","new_in","new_in","raw","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_entry","raw_entry_mut","raw_eq","raw_eq","raw_eq","raw_table","raw_table","raw_table_mut","raw_table_mut","reflect_crate_name","reflect_crate_name","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","remove","remove","remove","remove_entry","replace","reserve","reserve","retain","retain","serialize","serialize","set","set","short_type_path","short_type_path","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","sub","symmetric_difference","table","take","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_reserve","try_reserve","type_id","type_id","type_id","type_ident","type_ident","type_info","type_info","type_name","type_name","type_name","type_name","type_path","type_path","type_uuid","type_uuid","union","upcast","upcast","upcast","values","values_mut","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_and_hasher_in","with_capacity_in","with_capacity_in","with_hasher","with_hasher","with_hasher_in","with_hasher_in","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elem","elem","elem","entry","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","get","get","get_key_value","get_key_value_mut","get_mut","get_mut","get_mut","hash","hash","hash","hash","hash_builder","hash_builder","hash_builder","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_mut","into_mut","into_mut","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","key","key","key","key","key","key","key","key_mut","len","len","len","len","len","len","len","len","len","map","map","marker","marker","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next","next","next","next","next","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove","remove","remove","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","table","table","table","table","table","table","table","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","get","get","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_value","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","iter","iter","iter","iter","len","len","len","map","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next","next","next","nfc","nfc","nfc","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","or_insert","other","other","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove","replace","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","stream_safe","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","_marker","alloc","allocation","allocation_info","allocator","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","cjk_compat_variants","cjk_compat_variants","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","copy_from_nonoverlapping","data_end","data_start","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drain_iter_from","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","for_each","for_each","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get","get_many_mut","get_many_unchecked_mut","get_mut","index","init","init","init","init","init","init","init","inner","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_bucket_full","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","items","iter","iter","iter","iter","iter","iter","iter_hash","len","marker","marker","marker","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","new_in","next","next","next","next","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","orig_table","ptr","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","size_hint","size_hint","stream_safe","stream_safe","table","table","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity_in","Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","done","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downgrade","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_locked","is_locked","is_locked","is_locked_exclusive","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","state","state","state","state","timed_out","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upgrade","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait_for","wait_until","wait_while","wait_while_for","wait_while_until","Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_shared","bump_upgradable","const_new","const_new","const_new","data","data","data","data","data","data","data","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","get_mut","get_mut","get_mut","get_thread_id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_count","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","marker","marker","marker","marker","marker","marker","marker","marker","marker","mutex","mutex","mutex","new","new","new","nonzero_thread_id","owner","process","raw","raw","raw","raw","raw","raw","raw","raw","raw","raw","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","read","read_recursive","remutex","remutex","rwlock","rwlock","rwlock","rwlock","rwlock","rwlock","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upgradable_read","upgrade","upgrade","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_upgraded","write","AtomicRng","FAST","ForkableCore","GEN_KIND","GenCore","Rng","SLOW","SecureCore","Seed","SeededCore","TurboCore","TurboKind","TurboRand","alphabetic","alphanumeric","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","bool","borrow","borrow","borrow_mut","borrow_mut","chance","char","clone","clone","clone_into","clone_into","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","digit","downcast","downcast","drop","drop","dyn_eq","dyn_eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","f32","f32_normalized","f64","f64_normalized","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fork","fork","fork","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","gen","gen","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","i128","i16","i32","i64","i8","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","isize","lowercase","new","new","partial_shuffle","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_eq","raw_eq","reseed","reseed","reseed","reseed_local","sample","sample_iter","sample_multiple","sample_multiple_iter","sample_multiple_mut","sample_mut","shuffle","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","u128","u16","u32","u64","u8","upcast","upcast","uppercase","usize","vzip","vzip","weighted_sample","weighted_sample_mut","with_seed","with_seed","with_seed","AtomicRng","Rng","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","AtomicBorrow","AtomicBorrowMut","Lock","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","check_read_refs_count","check_write_refs_count","clone","clone","clone_borrow","clone_borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","drop","drop","dummy","dummy","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_borrowed","is_in_subset","is_in_subset","is_reading","is_writing","lock","lock","new_lock","raw_drop","raw_drop","release_borrow","release_borrow_mut","restore_leaked","restore_leaked","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_borrow","try_borrow_mut","try_from","try_from","try_into","try_into","try_new","try_new","type_id","type_id","upcast","upcast","vzip","vzip","DashMap","DashSet","Map","ReadOnlyView","TryReserveError","_alter","_alter","_alter_all","_alter_all","_capacity","_capacity","_clear","_contains_key","_entry","_entry","_get","_get","_get_mut","_get_mut","_get_read_shard","_get_read_shard","_hasher","_hasher","_insert","_insert","_is_empty","_iter","_iter","_iter_mut","_iter_mut","_len","_len","_remove","_remove","_remove_if","_remove_if","_remove_if_mut","_remove_if_mut","_retain","_retain","_shard_count","_shard_count","_shrink_to_fit","_shrink_to_fit","_try_entry","_try_entry","_try_get","_try_get","_try_get_mut","_try_get_mut","_try_yield_read_shard","_try_yield_read_shard","_try_yield_write_shard","_try_yield_write_shard","_view","_view","_yield_read_shard","_yield_read_shard","_yield_write_shard","_yield_write_shard","alter","alter_all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bitand","bitor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","contains_key","contains_key","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","entry","eq","equals","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","from_iter","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get","get","get","get_key_value","get_mut","hash_usize","hash_usize","hasher","hasher","init","init","init","init","inner","insert","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_iter","into_iter","into_iter","into_read_only","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","iter","iter_mut","iter_set","keys","len","len","len","map","mapref","new","new","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","remove","remove","remove_if","remove_if","remove_if_mut","retain","retain","setref","shards","shift","shl","shr","shrink_to_fit","shrink_to_fit","sub","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_entry","try_from","try_from","try_from","try_from","try_get","try_get_mut","try_into","try_into","try_into","try_into","try_reserve","try_result","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","values","view","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_capacity_and_hasher_and_shard_amount","with_capacity_and_shard_amount","with_hasher","with_hasher","with_hasher_and_shard_amount","with_shard_amount","Iter","IterMut","OwningIter","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","current","current","current","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","map","map","map","multiunzip","next","next","next","raw_clone","raw_drop","raw_drop","raw_drop","shard_i","shard_i","shard_i","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Iter","OwningIter","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","cjk_compat_variants","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","inner","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","is_in_subset","is_in_subset","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next","nfc","nfd","nfkc","nfkd","raw_drop","raw_drop","stream_safe","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","entry","multiple","one","Entry","Occupied","OccupiedEntry","Vacant","VacantEntry","and_modify","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","elem","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","get","get_mut","init","init","init","insert","insert","insert","insert_entry","insert_entry","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_ref","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","key","or_default","or_insert","or_insert_with","or_try_insert_with","raw_drop","raw_drop","raw_drop","remove","remove_entry","replace_entry","shard","shard","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","RefMulti","RefMutMulti","_guard","_guard","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","k","k","key","key","pair","pair","pair_mut","raw_drop","raw_drop","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","v","v","value","value","value_mut","vzip","vzip","MappedRef","MappedRefMut","Ref","RefMut","_guard","_guard","_guard","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downgrade","drop","drop","drop","drop","encode_hex","encode_hex_upper","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","guard","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","k","k","k","k","key","key","key","key","map","map","map","map","pair","pair","pair","pair","pair_mut","pair_mut","raw_drop","raw_drop","raw_drop","raw_drop","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_map","try_map","try_map","try_map","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","v","v","v","v","value","value","value","value","value_mut","value_mut","vzip","vzip","vzip","vzip","multiple","one","RefMulti","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","init","inner","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","key","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Ref","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","init","inner","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","key","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Absent","Locked","Present","TryResult","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_absent","is_in_subset","is_locked","is_present","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","try_unwrap","type_id","unwrap","upcast","vzip","A","ALL","ALT","ALT_SHIFT","Above","AboveOrBelow","Alias","Align","Align2","AllScroll","Area","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","B","BLACK","BLACK","BLUE","BLUE","BOTTOM","BROWN","Background","Backspace","Below","Body","BottomUp","Button","Button","Button","Bytes","C","CENTER_BOTTOM","CENTER_CENTER","CENTER_TOP","COMMAND","CTRL","Callback","Cancel","Cell","Center","CentralPanel","Checkbox","Checkbox","Circle","ClippedPrimitive","CollapsingHeader","CollapsingHeader","CollapsingResponse","Color","Color32","ColorButton","ColorImage","ComboBox","ComboBox","CompositionEnd","CompositionStart","CompositionUpdate","Context","ContextMenu","Copy","Copy","Critical","Crosshair","CubicBezier","CursorIcon","Cut","D","DARK_BLUE","DARK_GRAY","DARK_GREEN","DARK_RED","DEBUG_COLOR","DOWN","Debug","Default","Default","Delete","Direction","DragValue","DragValue","DroppedFile","E","EVERYTHING","EVERYTHING","End","End","Enter","Escape","Event","EventFilter","Exact","Extra1","Extra2","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F3","F4","F5","F6","F7","F8","F9","Font","FontData","FontDefinitions","FontFamily","FontId","FontId","FontImage","FontSelection","FontTweak","Foreground","Fraction","Frame","FullOutput","G","GOLD","GRAY","GREEN","GREEN","Galley","Galley","Grab","Grabbing","Grid","H","Heading","Height","Help","Home","Horizontal","HoveredFile","Hyperlink","I","INFINITY","IconPainter","Id","IdMap","Image","ImageButton","ImageButton","ImageData","ImageFit","ImageOptions","ImageSize","ImageSource","Informational","InnerResponse","InputState","Insert","J","K","KHAKI","Key","Key","KeyboardShortcut","L","LEFT","LEFT","LEFT_BOTTOM","LEFT_CENTER","LEFT_TOP","LIGHT_BLUE","LIGHT_GRAY","LIGHT_GREEN","LIGHT_RED","LIGHT_YELLOW","LINEAR","Label","Label","LayerId","Layout","LayoutJob","LeftToRight","Line","LineSegment","Linear","Link","Link","M","MAC_CMD","Managed","Margin","Max","Memory","Mesh","Mesh","Middle","Middle","Min","Minus","ModifierNames","Modifiers","Monospace","Monospace","MouseWheel","MouseWheelUnit","Move","Move","MultiTouchInfo","N","NAMES","NAN","NAN","NEAREST","NONE","NONE","NOTHING","NOTHING","NUM_POINTER_BUTTONS","Name","Name","Nearest","NoDrop","None","Noop","NotAllowed","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumExt","O","OpenUrl","Options","Order","Original","Other","P","Page","PageDown","PageUp","PaintCallback","PaintCallbackInfo","Painter","PanelResizeLine","Paste","Path","PlatformOutput","PlusEquals","Point","PointerButton","PointerButton","PointerGone","PointerMoved","PointerState","PointingHand","Pos2","Primary","Progress","ProgressBar","Proportional","Q","QuadraticBezier","R","RED","RED","RIGHT","RIGHT","RIGHT_BOTTOM","RIGHT_CENTER","RIGHT_TOP","RadioButton","RadioButton","Rangef","RawInput","Rect","Rect","RequestRepaintInfo","Reset","Resize","ResizeColumn","ResizeEast","ResizeHorizontal","ResizeNeSw","ResizeNorth","ResizeNorthEast","ResizeNorthWest","ResizeNwSe","ResizeRow","ResizeSouth","ResizeSouthEast","ResizeSouthWest","ResizeVertical","ResizeWest","Response","Rgba","RichText","RichText","RightToLeft","Rounding","S","SHIFT","SYMBOLS","Scale","Scroll","ScrollArea","Secondary","SelectableLabel","SelectableLabel","Sense","Separator","Shape","SidePanel","Size","SizeHint","Slider","Slider","SliderOrientation","Small","Space","Spinner","Start","State","Stroke","Style","Style","T","TEMPORARY_COLOR","TOP","TOP","TRANSPARENT","TRANSPARENT","Tab","Text","Text","Text","TextBuffer","TextEdit","TextEdit","TextFormat","TextStyle","Texture","TextureFilter","TextureHandle","TextureId","TextureOptions","TexturesDelta","Tooltip","TopBottomPanel","TopDown","Touch","TouchDeviceId","TouchId","TouchPhase","U","UP","Ui","Uri","User","UserAttentionType","V","Vec","Vec2","Vertical","VerticalText","Visuals","W","WHITE","WHITE","Wait","Widget","WidgetInfo","WidgetText","WidgetType","WidgetWithState","Width","Window","WindowFocused","X","X","Y","Y","YELLOW","Z","ZERO","ZERO","ZERO","ZERO","ZERO","Zoom","ZoomIn","ZoomOut","__run_test_ctx","__run_test_ui","a","a","abs","add","add","add","add","add","add","add_assign","add_assign","add_bytes_loader","add_colored_rect","add_enabled","add_enabled_ui","add_image_loader","add_rect_with_uv","add_sized","add_space","add_texture_loader","add_triangle","add_visible","add_visible_ui","additive","additive","advance_cursor_after_rect","after","aim_radius","align","align_size_within_range","align_size_within_rect","align_size_within_rect","all","allocate_at_least","allocate_exact_size","allocate_painter","allocate_rect","allocate_response","allocate_space","allocate_ui","allocate_ui_at_rect","allocate_ui_with_layout","allow_interaction","allow_interaction","alt","alt","anchor","anchor","anchor","anchor_rect","angle","angled","animate","animate","animate_bool","animate_bool_with_time","animate_value_with_time","animation_time","any","any_click","any_down","any_nan","any_nan","any_nan","any_popup_open","any_pressed","any_released","any_touches","append","append","append","append","append","append_ref","append_to","area","area","area_rect","areas","arrow","arrows","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_positive","as_raw","as_raw_mut","as_str","aspect_ratio","aspect_ratio","at_least","at_least","at_least","at_least","at_most","at_most","at_most","at_most","auto_id_with","auto_shrink","auto_shrink","auto_sized","auto_sized","available_height","available_rect","available_rect_before_wrap","available_size","available_size_before_wrap","available_width","b","b","background","background","background_color","background_color","background_color","baseline_offset_factor","begin","begin_frame","begin_frame","bg_fill","bg_fill","binary","binary","bitor","bitor","bitor_assign","body_response","body_returned","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both","bottom","bottom","bottom","bottom_mut","bottom_up","bottom_up_range","button","button_clicked","button_double_clicked","button_down","button_frame","button_pressed","button_released","button_triple_clicked","byte_index_from_char_index","byte_size","bytes","bytes_per_pixel","bytes_used","caches","calc_bounds","calc_size","calc_size","callback","canvas","ceil","ceil","center","center","center_bottom","center_top","centered_and_justified","centered_and_justified","central_panel","changed","char_limit","char_limit","char_range","check_for_id_clash","checkbox","checked","checked","child_ui","child_ui_with_id_source","circle","circle_filled","circle_filled","circle_stroke","circle_stroke","clamp","clamp","clamp","clamp","clamp_range","clamp_range","clamp_to_range","clamp_to_range","clear","clear","clear","clear_animations","clear_focus","click","click","click_and_drag","clicked","clicked_by","clicked_elsewhere","clip_rect","clip_rect","clip_rect","clip_rect","clip_rect","clip_rect_in_pixels","clip_rect_margin","clip_text","clip_text","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","close_menu","close_popup","closed_line","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code","code","code","code_bg_color","code_editor","code_editor","collapsible","collapsible","collapsing","collapsing_header_frame","color","color","color","color","color","color","color_edit_button_hsva","color_edit_button_rgb","color_edit_button_rgba_premultiplied","color_edit_button_rgba_unmultiplied","color_edit_button_srgb","color_edit_button_srgba","color_edit_button_srgba_premultiplied","color_edit_button_srgba_unmultiplied","color_picker","colored_label","colored_vertex","columns","command","command_only","compare","compare","compare","compare","compare","compare","compare","compare","concat","constrain","constrain","constrain","constrain_rect","constrain_to","constraint_to","consume_key","consume_shortcut","containers","contains","contains","contains","contains_rect","context_menu","convex_polygon","copied_text","copy_text","could_any_button_be_click","count_and_consume_key","cross_align","cross_align","cross_justify","cross_justify","ctrl","ctrl","ctx","ctx","ctx","ctx","current_frame_nr","current_pos","current_pos","current_text_value","cursor","cursor_at_end","cursor_at_end","cursor_begin_of_row","cursor_down_one_row","cursor_end_of_row","cursor_from_pos","cursor_icon","cursor_left_one_character","cursor_right_one_character","cursor_up_one_row","custom_formatter","custom_formatter","custom_formatter","custom_formatter","custom_parser","custom_parser","custom_parser","custom_parser","dark","dark_canvas","dark_mode","dashed_line","dashed_line_many","data","data","data","data_mut","data_mut","debug","debug","debug_on_hover","debug_paint_cursor","debug_painter","debug_rect","debug_text","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","default_height","default_height","default_height","default_open","default_open","default_open","default_open","default_pos","default_pos","default_pos","default_rect","default_size","default_size","default_size","default_width","default_width","default_width","default_width","delete_char_range","delta","delta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","desired_height","desired_height","desired_height_rows","desired_rows","desired_width","desired_width","desired_width","desired_width","distance","distance_sq","distance_sq_to_pos","distance_to_pos","div","div","dot","dotted_line","double_clicked","double_clicked_by","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drag","drag_angle","drag_angle_tau","drag_bounds","drag_bounds","drag_delta","drag_released","drag_released_by","drag_started","drag_started_by","drag_to_scroll","drag_to_scroll","drag_to_scroll","drag_value","drag_value","drag_value_speed","drag_value_speed","drag_value_text_style","dragged","dragged_by","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dropped_files","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","egui_assert","elided","empty","enable_scrolling","enabled","enabled","enabled","enabled","enabled","enabled","enabled","enabled","end","end_frame","end_rcursor","end_row","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error_fg_color","escape","event_filter","events","events","events","events_description","everything_above","everything_below","everything_is_visible","everything_is_visible","everything_left_of","everything_right_of","exact_height","exact_width","example","expand","expand","expand2","expand_rect","expand_to_include_rect","expand_to_include_x","expand_to_include_y","explanation_tooltips","extend","extend_with","extend_with_x","extend_with_y","extra_letter_spacing","extra_letter_spacing","extra_letter_spacing","extreme_bg_color","fade_out_to_color","fade_to_color","faint_bg_color","fallback_text_style","fallback_text_style","families","family","family","family","fill","fill","fill","fill","fill","fill","filtered_events","fit","fit_to_exact_size","fit_to_fraction","fit_to_original_size","fixed_decimals","fixed_decimals","fixed_pos","fixed_pos","fixed_rect","fixed_size","fixed_size","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus_by_default","focusable","focusable_noninteractive","focused","focused","font","font","font","font_data","font_height","font_id","font_selection","fonts","fonts","fonts","fonts_mut","force","forget_all_images","forget_image","format","format","format_shortcut","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame_nr","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_additive_luminance","from_black_alpha","from_black_alpha","from_bytes","from_ccursor","from_center_size","from_get_set","from_get_set","from_gray","from_gray","from_gray","from_id_source","from_label","from_label_and_url","from_luminance_alpha","from_main_dir_and_cross_align","from_min_max","from_min_size","from_owned","from_pcursor","from_points","from_rcursor","from_rgb","from_rgb","from_rgb","from_rgb_additive","from_rgba_premultiplied","from_rgba_premultiplied","from_rgba_premultiplied","from_rgba_unmultiplied","from_rgba_unmultiplied","from_rgba_unmultiplied","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_srgba_premultiplied","from_srgba_unmultiplied","from_static","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_texture","from_two_pos","from_uri","from_white_alpha","from_white_alpha","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_x_y_ranges","fully_closed","fully_open","g","g","gained_focus","galley","galley","galley_with_color","galley_with_color","gamma_multiply","generate_loader_id","get_set_value","get_set_value","get_state","github_link_file","github_link_file_line","global_dark_light_mode_buttons","global_dark_light_mode_switch","gray_out","group","group","grow","grow","gui_zoom","has_bar","has_focus","has_focus","has_moved_too_much_for_a_click","has_pointer","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header_response","heading","heading","heading","height","height","height","height","height_range","height_range","hexadecimal","hexadecimal","highlight","highlight_widget","hint","hint_text","hint_text","hline","hline","horizontal","horizontal","horizontal","horizontal_align","horizontal_align","horizontal_centered","horizontal_justify","horizontal_placement","horizontal_scroll_offset","horizontal_top","horizontal_wrapped","hover","hover_pos","hover_pos","hovered","hovered_files","hscroll","hscroll","hyperlink","hyperlink_color","hyperlink_to","icon","icon","icon","icon","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","image","image","image","image","image","image","image_and_text","image_loading_spinners","image_options","image_options","include_bytes","include_image","indent","indent_has_left_vline","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_margin","inner_margin","input","input","input_mut","input_mut","insert_text","inspection_ui","integer","intensity","interact","interact","interact","interact_cursor","interact_pointer_pos","interact_pos","interact_pos","interact_selectable","interact_with_hovered","interactable","interactable","interactable","interaction","interaction","interactive","interactive","interactive","interested_in_focus","intersect","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_galley","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_text_job","introspection","is_additive","is_additive","is_anything_being_dragged","is_being_dragged","is_context_menu_open","is_decidedly_dragging","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_finite","is_finite","is_finite","is_horizontal","is_horizontal","is_horizontal_line","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_loader_installed","is_movable","is_moving","is_mutable","is_negative","is_none","is_opaque","is_pointer_button_down_on","is_pointer_over_area","is_popup_open","is_positive","is_rect_visible","is_resizable","is_same","is_same","is_short","is_still","is_tooltip_open","is_using_pointer","is_valid","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_vertical","is_vertical","is_visible","italics","italics","italics","italics","job","key","key_down","key_pressed","key_released","keys_down","label","label","label","labeled","labelled_by","largest_finite","last_click_time","last_last_click_time","last_modified","last_move_time","latest_pos","latest_pos","layer","layer_id","layer_id","layer_id","layer_id","layer_id_at","layer_id_at","layer_ids","layer_painter","layers","layout","layout","layout_in_ui","layout_no_wrap","layouter","layouter","left","left","left","left_bottom","left_center","left_mut","left_to_right","left_top","left_top","length","length_sq","lerp","lerp","lerp","lerp_inside","lerp_towards","light","light_dark_radio_buttons","light_dark_small_toggle_button","line","line_height","line_height","line_height","line_segment","line_segment","linear_multiply","link","load","load","load_and_calc_size","load_for_size","load_state","load_texture","loaders","lock_focus","lock_focus","logarithmic","lost_focus","mac_alt","mac_cmd","mac_cmd","magnification","main_align","main_dir","main_dir","main_justify","main_wrap","main_wrap","maintain_aspect_ratio","maintain_aspect_ratio","make_persistent_id","margin","margin","margin","mark_changed","matches","matches","max","max","max","max","max_cell_size","max_col_width","max_decimals","max_decimals","max_decimals","max_decimals","max_decimals_opt","max_elem","max_height","max_height","max_height","max_rect","max_size","max_size","max_size","max_size","max_size","max_texture_side","max_texture_side","max_width","max_width","max_width","memory","memory","memory_mut","memory_mut","memory_ui","menu","menu","menu_button","menu_image_button","menu_rounding","menu_state","mesh","mesh_bounds","middle_clicked","middle_down","mime","mime","min","min","min","min","min_col_width","min_col_width","min_decimals","min_decimals","min_decimals","min_decimals","min_elem","min_height","min_height","min_height","min_rect","min_row_height","min_row_height","min_scrolled_height","min_scrolled_size","min_scrolled_width","min_size","min_size","min_size","min_size","min_size","min_size","min_size","min_width","min_width","min_width","minification","modifiers","modifiers","modifiers","monospace","monospace","monospace","monospace","movable","movable","movable","move_to_top","mul","mul","mul","mul","mul_assign","multi_touch","multi_touch","multiline","multiline","multiply","multiply_with_opacity","mutable_text_under_cursor","mutate","name","name","name","ne","neg","neither","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_font_definitions","new_pixels_per_point","new_pos","new_tab","new_tab","new_tab","next_auto_id","next_auto_id_source","next_widget_position","none","none","none","noninteractive","noninteractive","normalized","null","num_columns","num_columns","num_indices","num_presses","num_touches","num_vertices","nw","octal","octal","offset_x","offset_y","on_disabled_hover_text","on_disabled_hover_ui","on_hover_and_drag_cursor","on_hover_cursor","on_hover_text","on_hover_text_at_pointer","on_hover_ui","on_hover_ui_at_pointer","open","open","open","open","open_in_new_tab","open_popup","open_url","open_url","open_url","openness","opt_image_and_text","options","options","options_mut","order","order","order","orientation","orientation","os","os","outer_margin","outer_margin","output","output","output","output_event","output_mut","output_mut","override_font_id","override_text_color","override_text_style","paint","paint_at","paint_at","paint_texture_at","painter","painter","painter_at","panel_fill","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","password","password","path","path","physical_pixel_size","pivot","pivot","pivot","pixels","pixels","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","placer","platform_output","plus","point","pointer","pointer_events","pointer_hover_pos","pointer_interact_pos","pointer_latest_pos","popup","popup","popup_above_or_below_widget","popup_below_widget","popup_shadow","pos2","pos_from_cursor","pos_from_pcursor","pos_history","pos_in_rect","predicted_dt","predicted_dt","prefer_right_to_left","prefix","prefix","prefix","prefix","preload_font_glyphs","press_origin","press_origin","press_start_time","press_start_time","prev_text_value","primary_clicked","primary_down","primary_pressed","primary_released","primitive","progress","proportional","push_id","put","r","r","radio","radio_value","raised","raised","raised","range","raw","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","raw_hash","rect","rect","rect","rect","rect_contains_pointer","rect_filled","rect_filled","rect_stroke","rect_stroke","region","region","remap","remap_clamp","repaint_after","replace","request_focus","request_focus","request_repaint","request_repaint_after","reserve_triangles","reserve_vertices","reset_areas","reset_button","reset_button_with","reset_style","resizable","resizable","resizable","resizable","resizable","resizable","resizable","resize","resize","resize_corner_size","resolve","resolve","resolve","response","right","right","right","right_bottom","right_bottom","right_center","right_mut","right_to_left","right_top","rot90","rotate","rotate","rotate_bb","rotation","rotation_delta","round","round","round_pos_to_pixels","round_to_pixel","round_vec_to_pixels","rounding","rounding","rounding","rounding","rounding","rounding","rows","run","same","same","same_tab","scale","scope","screen_reader","screen_rect","screen_rect","screen_rect","screen_rect","screen_size_px","scroll","scroll2","scroll2","scroll_bar_visibility","scroll_bar_visibility","scroll_delta","scroll_offset","scroll_to_cursor","scroll_to_me","scroll_to_rect","scroll_with_delta","scrolling_enabled","se","secondary_clicked","secondary_clicked","secondary_down","secondary_pressed","secondary_released","selectable","selectable","selectable_label","selectable_value","selected","selected","selected","selected","selected","selected","selected","selected","selected","selected_text","selected_text","selection","sense","sense","sense","sense","sense","sense","sense","sense","sense","separator","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set_bottom","set_center","set_clip_rect","set_clip_rect","set_cursor_icon","set_debug_on_hover","set_dragged_id","set_enabled","set_everything_is_visible","set_focus_lock_filter","set_fonts","set_height","set_height","set_height_range","set_layer_id","set_left","set_max_height","set_max_size","set_max_width","set_min_height","set_min_size","set_min_width","set_os","set_partial","set_pixels_per_point","set_request_repaint_callback","set_right","set_row_height","set_state","set_style","set_style","set_top","set_visible","set_visuals","set_width","set_width","set_width_range","settings_ui","shadow","shadow","shapes","shift","shift","shift_only","short_debug_format","short_debug_format","short_debug_format","shortcut_text","shortcut_text","show","show","show","show","show","show","show","show","show","show","show","show_animated","show_animated","show_animated_between","show_animated_between","show_animated_between_inside","show_animated_between_inside","show_animated_inside","show_animated_inside","show_background","show_background","show_index","show_inside","show_inside","show_inside","show_loading_spinner","show_loading_spinner","show_open_close_animation","show_percentage","show_rows","show_separator_line","show_separator_line","show_separator_line","show_separator_line","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","show_ui","show_unindented","show_value","show_value","show_viewport","shrink","shrink","shrink","shrink2","shrink_height_to_current","shrink_rect","shrink_to_fit","shrink_width_to_current","side","side","side_top_panel","signed_distance_to_pos","simple","singleline","size","size","size","size","size","size","size","size","size","size","size","size","size","size_vec2","skip_ahead_auto_ids","slider","slider_trailing_fill","small","small","small","small","small","small_button","small_raised","small_raised","smallest_positive","smart_aim","smart_aim","source","source","spacing","spacing","spacing","spacing","spacing","spacing","spacing_mut","span","spec","special_emojis","speed","speed","spinner","splat","split_left_right_at_fraction","split_left_right_at_x","split_to_u16","split_top_bottom_at_fraction","split_top_bottom_at_y","square_proportions","srgba_pixels","stable_dt","start_pos","start_row","start_row","start_time","step","step_by","stick_to_bottom","stick_to_end","stick_to_right","stop_dragging","stop_text_input","store_state","strikethrough","strikethrough","strikethrough","strikethrough","striped","striped","stroke","stroke","stroke","stroke","stroke_ui","strong","strong","strong","strong","strong_text_color","style","style","style","style","style","style_mut","style_mut","style_ui","sub","sub","sub","sub_assign","sub_assign","sub_region","suffix","suffix","suffix","suffix","sum","surrender_focus","surrender_focus","sw","symbol_or_name","symmetric","tab","take","take","take","tessellate","tessellation_options","tessellation_options","tessellation_options_mut","tex_manager","tex_mngr","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text_color","text_color","text_color","text_color","text_color","text_color_opt","text_cursor","text_cursor_pos","text_cursor_preview","text_edit","text_edit_multiline","text_edit_singleline","text_selection","text_selection_changed","text_style","text_style","text_style","text_style","text_style_height","text_styles","text_styles","texture_id","texture_id","texture_options","texture_options","texture_size","texture_ui","textures_delta","time","time","time","time_since_last_movement","tint","tint","tint","title","title_bar","to_array","to_array","to_factor","to_normalized_gamma_f32","to_opaque","to_opaque","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pos2","to_rgba_unmultiplied","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sign","to_sign","to_srgba_unmultiplied","to_srgba_unmultiplied","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_tuple","to_tuple","to_vec2","toggle_popup","toggle_value","top","top","top","top_down","top_down_justified","top_mut","total_margin","touch_states","trailing_fill","trailing_fill","translate","translate","translate","translate_layer","translation_delta","triple_clicked","triple_clicked_by","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load_bytes","try_load_image","try_load_texture","tweak","tweak","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui_contains_pointer","underline","underline","underline","underline","union","union","union","unstable_dt","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_while_editing","update_while_editing","uri","url","url","used_rect","used_size","util","uv","uv","uv","valign","value","vec2","velocity","velocity","vertical","vertical","vertical","vertical","vertical_align","vertical_align","vertical_centered","vertical_centered_justified","vertical_justify","vertical_scroll_offset","vertices","viewport","viewport_in_pixels","visual_bounding_rect","visuals","visuals","visuals_mut","vline","vline","vscroll","vscroll","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wants_keyboard_input","wants_pointer_input","wants_repaint","warn_fg_color","warn_if_debug_build","warn_on_id_clash","was_tooltip_open_last_frame","weak","weak","weak","weak","weak_text_color","widget_info","widget_text","widgets","widgets","width","width","width","width","width","width","width","width_range","width_range","window","window_fill","window_fill","window_interaction","window_rounding","window_shadow","window_stroke","window_stroke","with","with_accessibility_parent","with_clip_rect","with_cross_align","with_cross_justify","with_layer_id","with_layer_id","with_layout","with_main_align","with_main_justify","with_main_wrap","with_new_rect","with_row_color","with_stroke","with_stroke","with_texture","with_title_bar","without_text","wrap","wrap","wrap","wrap","wrap","wrap","wrap_enabled","wrap_text","x","x","x","x_range","y","y","y","y_offset","y_offset_factor","y_range","zoom_delta","zoom_delta","zoom_delta_2d","zoom_delta_2d","zoom_factor_delta","button","delta","device_id","force","id","key","modifiers","modifiers","modifiers","phase","pos","pos","pressed","pressed","repeat","unit","scale","bytes","uri","points","stroke","AHashMap","AHashSet","AHasher","HashMap","HashMapExt","HashSet","HashSetExt","RandomState","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build_hasher","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extra_keys","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_iter","from_iter","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","generate_with","get","get_key_value","get_mut","hash_one","index","init","init","init","init","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_sample","into_sample","into_sample","into_sample","into_values","is_in_subset","is_in_subset","is_in_subset","is_in_subset","k0","k1","k2","k3","new","new","new","new","new","pad","random_state","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","remove","serialize","serialize","sub","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_hasher","with_hasher","with_seed","with_seeds","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","RandomSource","RandomState","gen_hasher_seed","k0","k1","k2","k3","set_random_source","Above","AboveOrBelow","Area","Below","CentralPanel","CollapsingHeader","CollapsingResponse","ComboBox","Frame","IconPainter","Resize","ScrollArea","SidePanel","TopBottomPanel","Window","anchor","area","auto_shrink","body_response","body_returned","collapsible","collapsing_header","constrain","constrain_rect","default_height","default_open","default_open","default_pos","default_size","default_width","drag_to_scroll","enabled","enabled","fill","frame","frame","frame","frame","has_bar","header_response","height_range","icon","icon","id","id","id","id","id_source","id_source","id_source","id_source","inner_margin","interactable","label","max_size","max_size","min_scrolled_size","min_size","movable","new_pos","offset_x","offset_y","open","open","openness","order","outer_margin","panel","pivot","popup","popup_above_or_below_widget","popup_below_widget","resizable","resizable","resizable","resize","rounding","scroll","scroll_area","scroll_bar_visibility","scrolling_enabled","selectable","selected","selected_text","shadow","show_background","show_separator_line","show_separator_line","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","side","side","stick_to_end","stroke","text","title","was_tooltip_open_last_frame","width","width_range","with_stroke","with_title_bar","wrap_enabled","CollapsingHeader","CollapsingResponse","CollapsingState","HeaderResponse","IconPainter","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","body","body_response","body_returned","body_unindented","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default_open","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","enabled","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","header_response","header_response","icon","id","id","id_source","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","is_open","load","load_with_default_open","open","openness","openness","paint_default_icon","raw_clone","raw_drop","raw_drop","remove","selectable","selected","set_open","show_background","show_body_indented","show_body_unindented","show_header","show_toggle_button","state","state","store","text","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","toggle","toggle_button_response","try_from","try_from","try_into","try_into","type_id","type_id","ui","upcast","upcast","vzip","vzip","Bottom","CentralPanel","Left","PanelState","Right","Side","SidePanel","Top","TopBottomPanel","TopBottomSide","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default_height","default_width","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","frame","frame","frame","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","height_range","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","load","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","rect","resizable","resizable","serialize","show_separator_line","show_separator_line","side","side","size","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","width_range","popup_above_or_below_widget","popup_below_widget","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","was_tooltip_open_last_frame","AlwaysHidden","AlwaysVisible","ScrollArea","ScrollAreaOutput","ScrollBarVisibility","State","VisibleWhenNeeded","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","auto_shrink","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","content_is_too_large","content_size","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drag_to_scroll","drop","drop","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","has_bar","id","id_source","init","init","init","inner","inner_rect","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","load","max_size","min_scrolled_size","offset","offset_x","offset_y","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_eq","scroll_bar_visibility","scroll_start_offset_from_top_left","scroll_stuck_to_end","scrolling_enabled","serialize","show_scroll","state","stick_to_end","store","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vel","velocity","vzip","vzip","vzip","Callback","Callback","Circle","CircleShape","ClippedPrimitive","ClippedShape","Color","Color32","ColorImage","CubicBezier","CubicBezierShape","Font","FontFamily","FontId","FontImage","Fonts","Galley","Hsva","HsvaGamma","ImageData","ImageDelta","LineSegment","Managed","Mesh","Mesh","Mesh","Mesh16","Monospace","NONE","Name","Noop","PaintCallback","PaintCallbackInfo","PaintStats","Path","PathShape","Pos2","Primitive","Proportional","QuadraticBezier","QuadraticBezierShape","Rect","Rect","RectShape","Rgba","Rounding","Shadow","Shape","Stroke","TessellationOptions","Tessellator","Text","TextShape","TextureAtlas","TextureHandle","TextureId","TextureManager","User","Vec","Vec2","Vertex","WHITE_UV","a","a","alloc","allocate","allocated","angle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","begin_frame","bezier_tolerance","big_dark","big_light","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","center","clip_rect","clip_rect","clip_rect","clip_rect","clipped_primitives","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","closed","closed","closed","closed_line","coarse_tessellation_culling","color","color","color","convex_polygon","cursor","debug_ignore_clip_rects","debug_paint_clip_rects","debug_paint_text_rects","default","default","default","default","default","delta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dirty","discs","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","elided","epaint_assert","epsilon","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extrusion","families","family","feathering","feathering","feathering_size_in_pixels","fill","fill","fill","fill","fill","fill_ratio","fill_texture_id","filled","filled","find_cross_t","flatten","flatten","flatten_closed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_atlas_fill_ratio","font_image_delta","font_image_size","font_tex_size","for_each_flattened_with_t","for_each_flattened_with_t","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_points_stroke","from_points_stroke","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_shapes","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","full","galley","glyph_width","h","h","has_glyph","has_glyphs","id","image","image","image","indices","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid","is_valid_bit_pattern","is_whole","job","layout","layout_delayed_color","layout_job","layout_no_wrap","line","logical_bounding_rect","logical_bounding_rect","max","max_texture_side","mesh_bounds","meta","metas","min","mutex","ne","new","new","new","new","new","next_id","num_allocated","num_callbacks","num_galleys_in_cache","num_indices","num_quadratics","num_vertices","nw","options","options","overflowed","override_text_color","partial","pixels","pixels","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","points","points","points","pos","pos","pos","pos2","prepared_discs","prepared_discs","prerasterized_discs","primitive","radius","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","rect","rect","rect","retain","round_text_to_pixels","round_to_pixel","rounding","row_height","row_height","rows","s","s","sample","sample","scratchpad_path","scratchpad_points","screen_size_px","se","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set_clip_rect","shape","shape_mesh","shape_path","shape_text","shape_transform","shape_vec","shapes","size","size","size","size","small_dark","small_light","split_range","stats","stroke","stroke","stroke","stroke","stroke","stroke","stroke","sw","take_delta","take_delta","tessellate","tessellate_circle","tessellate_clipped_shape","tessellate_cubic_bezier","tessellate_line","tessellate_mesh","tessellate_path","tessellate_quadratic_bezier","tessellate_rect","tessellate_shape","tessellate_shapes","tessellate_text","tessellator","tex_mngr","text","text_shape_indices","text_shape_vertices","texture_atlas","texture_id","texture_id","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_shape","to_path_shapes","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","underline","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","util","uv","uv","v","v","vec2","vertices","vertices","vertices","viewport","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_clipped_primitives","x","x","y","y","points","stroke","Color32","Hsva","HsvaGamma","Rgba","a","a","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ecolor_assert","eq","eq","equals","equals","fmt","fmt","from","from","from","from","from","from","from","from","from_additive_rgb","from_rgb","from_rgba_premultiplied","from_rgba_unmultiplied","from_sample_","from_sample_","from_srgb","from_srgba_premultiplied","from_srgba_unmultiplied","from_subset","from_subset","from_world","from_world","from_world","from_world","gamma_from_linear","gamma_u8_from_linear_f32","h","h","hsv_from_rgb","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","linear_f32_from_gamma_u8","linear_f32_from_linear_u8","linear_from_gamma","linear_u8_from_linear_f32","new","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","rgb_from_hsv","s","s","tint_color_towards","to_opaque","to_owned","to_owned","to_rgb","to_rgba_premultiplied","to_rgba_unmultiplied","to_sample_","to_sample_","to_srgb","to_srgba_premultiplied","to_srgba_unmultiplied","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","v","v","vzip","vzip","Align","Align2","Center","History","IDENTITY","INTEGRAL","MAX","MIN","Max","Min","NumExt","Numeric","One","Pos2","Rangef","Real","Rect","RectTransform","Rot2","Vec2","add","align","almost_equal","angle","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","at_least","at_most","average","bandwidth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","div","downcast","downcast","downcast","drop","drop","drop","duration","dyn_eq","emath_assert","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","exponential_smooth_factor","flush","fmt","fmt","fmt","format_with_decimals_in_range","format_with_minimum_decimals","from","from","from","from","from","from_angle","from_f64","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_to","from_world","from_world","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","inverse","inverse","inverse_lerp","is_empty","is_finite","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","iter","latest","latest_mut","len","length","length_squared","lerp","max","max","max_age","max_age","max_len","max_len","mean_time_interval","min","min","min_len","mul","mul","mul","mul","mul","new","normalized","normalized_angle","one","pos2","rate","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_eq","remap","remap_clamp","round_to_decimals","s","scale","serialize","serialize","smart_aim","sum","to","to","to_f64","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_count","total_count","transform_pos","transform_pos_clamped","transform_rect","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","values","values","vec2","velocity","vzip","vzip","vzip","x","x","y","y","Align","Align2","Center","Max","Min","center_size_in_rect","best_in_range_f64","Color","ColorImage","Font","FontImage","ImageData","ImageDelta","image","options","pixels","pixels","pos","size","size","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","lock","new","new","raw_clone","raw_default","raw_default","raw_drop","raw_drop","read","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","write","adjust_colors","AllocInfo","PaintStats","add","add_assign","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clipped_primitives","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","element_size","eq","equals","format","from","from","from_galley","from_mesh","from_sample_","from_slice","from_subset","from_world","from_world","indices","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","megabytes","num_allocs","num_allocs","num_bytes","num_bytes","num_callbacks","num_elements","num_elements","raw_clone","raw_default","raw_drop","shape_mesh","shape_path","shape_text","shape_vec","shapes","sum","text_shape_indices","text_shape_vertices","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vertices","vzip","Closed","Open","Path","PathType","TessellationOptions","Tessellator","add_circle","add_line_loop","add_line_segment","add_open_points","add_point","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","bezier_tolerance","borrow","borrow","borrow_mut","borrow_mut","clear","clip_rect","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","coarse_tessellation_culling","debug_ignore_clip_rects","debug_paint_clip_rects","debug_paint_text_rects","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","epsilon","eq","equals","equivalent","equivalent","equivalent","equivalent","feathering","feathering","feathering_size_in_pixels","fill","fill_with_uv","fmt","font_tex_size","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","options","path","pixels_per_point","prepared_discs","prerasterized_discs","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_eq","reserve","round_text_to_pixels","scratchpad_path","scratchpad_points","stroke","stroke_closed","stroke_open","tessellate_shapes","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","add_circle_quadrant","rounded_rectangle","FontData","FontDefinitions","FontFamily","FontId","FontTweak","Fonts","FontsImpl","Galley","Glyph","LayoutJob","LayoutSection","Monospace","Name","PASSWORD_REPLACEMENT_CHAR","Proportional","Row","RowVisuals","TAB_SIZE","TextFormat","TextWrapping","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","ascent","atlas","background","baseline_offset_factor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_anywhere","break_on_newline","byte_range","char_at","char_count_excluding_newline","char_count_including_newline","chr","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color","cursor","default","default","default","definitions","definitions","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","elided","ends_with_newline","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extra_letter_spacing","families","family","first_row_min_height","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font_data","font_height","font_id","font_impl_cache","format","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","glyph_vertex_range","glyphs","halign","has_glyph","has_glyphs","hash","hash","hash","height","index","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","italics","job","justify","layout","leading_space","line_height","logical_rect","max_rows","max_texture_side","max_width","max_x","max_y","mesh","mesh_bounds","mesh_bounds","min_y","new","no_max_width","num_indices","num_vertices","overflow_character","pixels_per_point","pixels_per_point","pixels_per_point","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","raw_hash","raw_hash","rect","rect","rows","scale","section_index","section_index_at_start","sections","serialize","serialize","serialize","serialize","serialize","serialize","simple","simple_singleline","single_section","size","size","sized_family","strikethrough","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate_at_width","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_rect","valign","visuals","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrap","x_offset","y_offset","y_offset_factor","CCursor","Cursor","PCursor","RCursor","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ccursor","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","column","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","eq","eq","eq","eq","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","index","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","offset","paragraph","pcursor","prefer_next_row","prefer_next_row","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","rcursor","row","serialize","serialize","serialize","serialize","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Linear","Nearest","TextureFilter","TextureManager","TextureMeta","TextureOptions","TexturesDelta","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bytes_per_pixel","bytes_used","clone","clone_into","clone_type_data","delta","deref","deref_mut","downcast","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","free","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","magnification","metas","minification","name","next_id","options","raw_clone","raw_drop","raw_eq","retain_count","set","size","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","FloatOrd","OrderedFloat","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_dyn_eq","borrow","borrow_mut","clone","clone_into","clone_type_data","cmp","compare","deref","deref_mut","downcast","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","from","from_sample_","from_subset","hash","hash","hash_with","init","into","into_any","into_any_arc","into_any_rc","into_inner","into_sample","is_in_subset","ord","partial_cmp","raw_clone","raw_drop","raw_eq","raw_hash","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","kb_shortcuts","zoom_in","zoom_menu_buttons","zoom_out","zoom_with_keyboard_shortcuts","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","font_family_ui","font_id_ui","Background","Debug","Foreground","LayerId","Middle","Order","PaintList","PanelResizeLine","ShapeIdx","Tooltip","add","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","extend","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_empty","is_in_subset","is_in_subset","order","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_eq","set","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","translate","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Bytes","BytesLoadResult","BytesLoader","BytesPoll","DefaultBytesLoader","DefaultTextureLoader","Height","ImageLoadResult","ImageLoader","ImagePoll","LoadError","Loaders","Loading","NoImageLoaders","NoMatchingBytesLoader","NoMatchingImageLoader","NoMatchingTextureLoader","NotSupported","Pending","Pending","Pending","Ready","Ready","Ready","Result","Scale","Shared","Size","SizeHint","SizedTexture","Static","TextureLoadResult","TextureLoader","TexturePoll","Width","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bits","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_size","byte_size","byte_size","byte_size","byte_size","bytes","cache","cache","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","encode_hex","encode_hex_upper","end_frame","end_frame","end_frame","end_frame","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","forget","forget","forget","forget","forget","forget_all","forget_all","forget_all","forget_all","forget_all","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_handle","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","generate_loader_id","id","id","id","id","id","id","image","include","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load","load","load","load","load","new","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","size","size","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bytes","mime","size","size","image","size","size","texture","SubMenu","SubMenuButton","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","bar","borrow","borrow","borrow_mut","borrow_mut","button","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","icon","icon","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","menu_button","menu_image_button","parent_state","raw_drop","raw_drop","show","text","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Android","IOS","Mac","Nix","OperatingSystem","Unknown","Windows","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_dyn_eq","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from_sample_","from_subset","from_target_os","from_user_agent","from_world","from_world","hash","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_clone","raw_default","raw_drop","raw_eq","raw_hash","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Alias","AllScroll","Cell","Clicked","ContextMenu","Copy","Critical","Crosshair","CursorIcon","Default","DoubleClicked","FocusGained","FullOutput","Grab","Grabbing","Help","Informational","Move","NoDrop","None","NotAllowed","OpenUrl","OutputEvent","PlatformOutput","PointingHand","Progress","Reset","ResizeColumn","ResizeEast","ResizeHorizontal","ResizeNeSw","ResizeNorth","ResizeNorthEast","ResizeNorthWest","ResizeNwSe","ResizeRow","ResizeSouth","ResizeSouthEast","ResizeSouthWest","ResizeVertical","ResizeWest","Text","TextSelectionChanged","TripleClicked","UserAttentionType","ValueChanged","VerticalText","Wait","WidgetInfo","ZoomIn","ZoomOut","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","copied_text","current_text_value","cursor_icon","deref","deref_mut","deserialize","downcast","drop","enabled","eq","equals","erased_serialize","events","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","label","mutable_text_under_cursor","new_tab","open_url","platform_output","prev_text_value","raw_clone","raw_drop","repaint_after","selected","serialize","shapes","text_cursor_pos","text_selection","textures_delta","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","typ","type_id","upcast","url","value","vzip","widget_info","GIT","GITHUB","OS_ANDROID","OS_APPLE","OS_LINUX","OS_WINDOWS","TWITTER","Body","Button","DebugOptions","Default","FontId","FontSelection","Heading","Interaction","Margin","Monospace","Name","Selection","Small","Spacing","Style","Style","TextStyle","Visuals","WidgetVisuals","Widgets","active","animation_time","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bg_fill","bg_fill","bg_stroke","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_frame","button_padding","clip_rect_margin","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","code_bg_color","collapsing_header_frame","combo_height","combo_width","dark","dark_mode","debug","debug_on_hover","debug_on_hover_with_all_modifiers","default","default","default","default","default","default_text_styles","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","drag_value_text_style","drop","drop","drop","drop","drop","drop","dyn_eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error_fg_color","expansion","explanation_tooltips","extreme_bg_color","faint_bg_color","fg_stroke","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","hover_shows_next","hovered","hyperlink_color","icon_rectangles","icon_spacing","icon_width","icon_width_inner","image_loading_spinners","inactive","indent","indent_ends_with_horizontal_line","indent_has_left_vline","init","init","init","init","init","init","interact_cursor","interact_size","interaction","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","item_spacing","left","light","menu_margin","menu_rounding","noninteractive","open","override_font_id","override_text_color","override_text_style","panel_fill","popup_shadow","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","resize_corner_size","resize_grab_radius_corner","resize_grab_radius_side","right","rounding","scroll_bar_inner_margin","scroll_bar_outer_margin","scroll_bar_width","scroll_handle_min_length","selection","serialize","serialize","serialize","serialize","serialize","serialize","show_blocking_widget","show_expand_height","show_expand_width","show_interactive_widgets","show_resize","show_tooltips_only_when_still","slider_trailing_fill","slider_width","spacing","striped","stroke","style","text_color","text_cursor","text_cursor_preview","text_edit_width","text_styles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tooltip_delay","tooltip_width","top","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","ui","ui","ui","upcast","upcast","upcast","upcast","upcast","upcast","visuals","vzip","vzip","vzip","vzip","vzip","vzip","warn_fg_color","weak_bg_fill","widgets","window_fill","window_margin","window_rounding","window_shadow","window_stroke","wrap","CCursor","CCursorRange","FontData","FontDefinitions","FontFamily","Fonts","Galley","LayoutJob","LayoutSection","Monospace","Name","Proportional","TAB_SIZE","TextFormat","TextWrapping","as_any","as_any","as_any_mut","as_bind_group_shader_type","background","borrow","borrow_mut","break_anywhere","break_on_newline","byte_range","clone","clone_into","clone_type_data","color","default","deref","deref_mut","deserialize","downcast","drop","elided","eq","equals","erased_serialize","extra_letter_spacing","families","first_row_min_height","fmt","font","font_data","font_id","format","from","from_sample_","from_subset","from_world","from_world","halign","index","index","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","is_sorted","italics","job","justify","leading_space","line_height","max_rows","max_width","mesh_bounds","num_indices","num_vertices","one","overflow_character","pixels_per_point","prefer_next_row","primary","raw_clone","raw_default","raw_drop","rect","rows","secondary","sections","serialize","sorted","strikethrough","text","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","tweak","two","type_id","underline","upcast","valign","vzip","wrap","History","IdTypeMap","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","cache","clear","clone","clone_into","clone_type_data","count","count_serialized","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","from_world","from_world","get_persisted","get_persisted_mut_or","get_persisted_mut_or_default","get_persisted_mut_or_insert_with","get_temp","get_temp_mut_or","get_temp_mut_or_default","get_temp_mut_or_insert_with","hash","hash_with","id_type_map","init","insert_persisted","insert_temp","into","into_any","into_any_arc","into_any_rc","into_sample","is_empty","is_in_subset","len","map","max_age","max_bytes_per_type","max_bytes_per_type","max_len","min_len","raw_clone","raw_default","raw_drop","remove","remove_by_type","set_max_bytes_per_type","to_owned","to_sample_","to_subset","to_subset_unchecked","total_count","try_from","try_into","type_id","undoer","upcast","values","vzip","CacheStorage","CacheTrait","ComputerMut","FrameCache","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","cache","cache","caches","clone","clone_into","clone_type_data","compute","computer","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","evice_cache","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","generation","get","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","len","len","new","raw_clone","raw_default","raw_default","raw_drop","raw_drop","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","update","update","vzip","vzip","IdTypeMap","SerializableAny","TypeId","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_dyn_eq","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_sample_","from_subset","hash","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","map","max_bytes_per_type","of","raw_clone","raw_drop","raw_eq","raw_hash","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Settings","Undoer","add_undo","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","auto_save_interval","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","equals","erased_serialize","erased_serialize","feed_state","flux","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","has_undo","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_flux","is_in_subset","is_in_subset","max_undos","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","serialize","serialize","settings","stable_time","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","undo","undos","upcast","upcast","vzip","vzip","Galley","LayoutJob","RichText","RichText","WidgetText","WidgetTextGalley","WidgetTextJob","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","background_color","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","code","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equals","equals","extra_letter_spacing","family","from","from","from_sample_","from_sample_","from_subset","from_subset","galley","galley","galley_has_color","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_galley","into_sample","into_sample","is_in_subset","is_in_subset","italics","job","job_has_color","line_height","paint_with_color_override","paint_with_fallback_color","paint_with_visuals","raised","raw_clone","raw_clone","raw_drop","raw_drop","size","size","strikethrough","strong","text","text","text_color","text_style","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","underline","upcast","upcast","vzip","vzip","weak","Button","Bytes","Checkbox","DragValue","Exact","Fraction","Horizontal","Hyperlink","Image","ImageButton","ImageFit","ImageOptions","ImageSize","ImageSource","Label","Link","Original","ProgressBar","RadioButton","SelectableLabel","Separator","Slider","SliderOrientation","Spinner","State","TextBuffer","TextEdit","Texture","Uri","Vertical","Widget","WidgetWithState","align","animate","as_str","bg_fill","byte_index_from_char_index","char_limit","char_range","checked","checked","clamp_range","clamp_to_range","clear","clip_text","color","color_picker","cursor_at_end","custom_formatter","custom_formatter","custom_parser","custom_parser","delete_char_range","desired_height","desired_height_rows","desired_width","desired_width","drag_value_speed","event_filter","fill","fill","fit","font_selection","frame","frame","frame","get_set_value","get_set_value","global_dark_light_mode_buttons","global_dark_light_mode_switch","grow","hint_text","id","id_source","image","image","image_options","insert_text","interactive","is_horizontal_line","is_mutable","layouter","maintain_aspect_ratio","margin","max_decimals","max_decimals","max_size","min_decimals","min_decimals","min_size","min_size","multiline","new_tab","orientation","paint_texture_at","password","prefix","prefix","progress","range","replace","reset_button","reset_button_with","rotation","rounding","rounding","selected","selected","selected","sense","sense","sense","sense","shortcut_text","show_loading_spinner","show_value","size","size","small","smart_aim","source","spacing","spec","speed","step","stroke","stroke_ui","suffix","suffix","take","text","text","text","text","text","text","text","text","text","text","text_color","text_edit","texture_options","tint","trailing_fill","truncate","ui","update_while_editing","url","uv","wrap","wrap","scale","bytes","uri","Alpha","BlendOrAdditive","OnlyBlend","Opaque","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","color_edit_button_hsva","color_edit_button_rgb","color_edit_button_rgba","color_edit_button_srgb","color_edit_button_srgba","color_picker_color32","color_picker_hsva_2d","deref","deref_mut","downcast","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_clone","raw_drop","raw_eq","show_color","show_color_at","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","CCursorRange","CursorRange","PCursorRange","TextBuffer","TextEdit","TextEditOutput","TextEditState","align","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_ccursor_range","as_sorted_char_range","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_index_from_char_index","ccursor_range","ccursor_range","char_limit","char_range","clear","clip_text","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","cursor_at_end","cursor_range","cursor_range","cursor_range","default","default","default","delete_char_range","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","desired_height_rows","desired_width","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equals","equals","erased_serialize","erased_serialize","erased_serialize","event_filter","fmt","fmt","font_selection","frame","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","galley","has_ime","hint_text","id","id_source","init","init","init","init","insert_text","interactive","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_mutable","is_sorted","layouter","load","margin","min_size","multiline","one","password","primary","primary","primary","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","replace","response","secondary","secondary","secondary","serialize","serialize","serialize","set_ccursor_range","set_cursor_range","single","singleline_offset","sorted","sorted_cursors","state","store","take","text","text_clip_rect","text_color","text_draw_pos","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","two","type_id","type_id","type_id","type_id","undoer","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","Custom","Error","FluentArgs","FluentAttribute","FluentBundle","FluentError","FluentMessage","FluentResource","FluentValue","None","Number","Overriding","ParserError","ResolverError","String","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_string","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","clone","clone","clone_into","clone_into","clone_type_data","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","entries","eq","eq","eq","eq","equals","equals","equals","equals","fluent_args","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get","get_attribute","get_entry","id","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","matches","new","node","node","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","set","source","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_number","type_id","type_id","type_id","type_id","type_id","type_id","types","upcast","upcast","upcast","upcast","upcast","upcast","value","value","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","write","id","kind","FluentBundle","add_function","add_resource","add_resource_overriding","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","default","deref","deref_mut","downcast","drop","entries","format_pattern","formatter","from","from_sample_","from_subset","from_world","from_world","get_message","has_message","init","intls","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","locales","new","new_concurrent","raw_default","raw_drop","resources","set_formatter","set_transform","set_use_isolating","to_sample_","to_subset","to_subset_unchecked","transform","try_from","try_into","type_id","upcast","use_isolating","vzip","write_pattern","AnyEq","Code","Currency","Custom","Decimal","Error","FluentNumber","FluentNumberCurrencyDisplayStyle","FluentNumberOptions","FluentNumberStyle","FluentType","FluentValue","Name","None","Number","Percent","String","Symbol","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_string","as_string","as_string_threadsafe","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","currency","currency_display","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","duplicate","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","maximum_fraction_digits","maximum_significant_digits","merge","minimum_fraction_digits","minimum_integer_digits","minimum_significant_digits","new","options","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","style","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","use_grouping","value","vzip","vzip","vzip","vzip","Filtering","Lookup","Matching","NegotiationStrategy","accepted_languages","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","convert_vec_str_to_langids","convert_vec_str_to_langids_lossy","deref","deref_mut","downcast","drop","eq","equals","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","negotiate","negotiate_languages","parse_accepted_languages","raw_clone","raw_drop","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","parse","Filtering","Lookup","Matching","NegotiationStrategy","filter_matches","negotiate_languages","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","I64Vec2","I64Vec3","I64Vec4","i64vec2","i64vec3","i64vec4","w","x","x","x","y","y","y","z","z","Args","Error","IntlLangMemoizer","IntlMemoizer","Memoizable","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","concurrent","construct","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","get_for_lang","init","init","into","into","into_any","into_any","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","lang","map","map","new","raw_default","raw_drop","raw_drop","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_try_get","IntlLangMemoizer","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","lang","map","new","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","with_try_get","Amplitude","ClockTime","CommandError","CommandQueueFull","Decibels","Emitter","Immediate","MAIN_TRACK","MIN_DECIBELS","MutexPoisoned","OutputDestination","StartTime","Track","Volume","as_amplitude","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_decibels","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dsp","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","init","init","init","init","interpolate","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","manager","modulator","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","raw_hash","sound","spatial","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","track","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tween","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","ClockHandle","ClockId","ClockSpeed","ClockTime","SecondsPerTick","TicksPerMinute","TicksPerSecond","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_seconds_per_tick","as_ticks_per_minute","as_ticks_per_second","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock","clock_info","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","command_producer","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fractional_position","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","hash","hash","id","id","init","init","init","init","interpolate","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","partial_cmp","pause","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","raw_hash","set_speed","shared","start","stop","sub","sub_assign","ticking","ticks","time","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","ClockInfo","ClockInfoProvider","Later","MockClockInfoProviderBuilder","Never","Now","WhenToStart","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clock_info","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fractional_position","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","get","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","new","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","ticking","ticks","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","when_to_start","Frame","ZERO","add","add_assign","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_mono","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","div","div_assign","downcast","drop","eq","equals","fmt","from","from_mono","from_sample_","from_subset","init","interpolate_frame","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","left","mul","mul_assign","neg","new","panned","raw_clone","raw_drop","right","sub","sub_assign","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","AudioManager","AudioManagerSettings","Capacities","MainPlaybackState","Paused","Pausing","Playing","add_clock","add_modulator","add_spatial_scene","add_sub_track","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","backend","backend","backend_mut","backend_settings","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacities","clock_capacity","clock_capacity","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","command_capacity","command_producer","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","eq","eq","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","main_track","main_track_builder","modulator_capacity","modulator_capacity","new","num_clocks","num_modulators","num_sounds","num_spatial_scenes","num_sub_tracks","pause","play","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","renderer_shared","resource_controllers","resume","sound_capacity","sound_capacity","spatial_scene_capacity","spatial_scene_capacity","state","sub_track_capacity","sub_track_capacity","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unused_resource_consumers","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Backend","DefaultBackend","Error","Renderer","Settings","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","command_consumer","cpal","deref","deref_mut","downcast","drop","dt","fade_volume","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","mock","on_change_sample_rate","on_start_processing","process","raw_drop","resources","setup","shared","start","state","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","BuildStreamError","CpalBackend","DefaultStreamConfigError","Error","NoDefaultOutputDevice","PlayStreamError","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_drop","raw_drop","setup","source","start","state","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","MockBackend","MockBackendSettings","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","on_start_processing","process","raw_clone","raw_default","raw_drop","raw_drop","raw_eq","raw_hash","sample_rate","sample_rate","set_sample_rate","setup","start","state","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","AddClockError","AddModulatorError","AddSpatialSceneError","AddSubTrackError","ClockLimitReached","CommandError","CommandError","CommandError","CommandError","CommandError","IntoSoundError","ModulatorLimitReached","PlaySoundError","SoundLimitReached","SpatialSceneLimitReached","SubTrackLimitReached","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","source","source","source","source","source","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Handle","Modulator","ModulatorBuilder","ModulatorId","as_any","as_any","as_any","as_any_mut","as_bind_group_shader_type","as_dyn_eq","borrow","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","finished","fmt","from","from","from","from_sample_","from_subset","hash","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","lfo","on_start_processing","raw_clone","raw_drop","raw_eq","raw_hash","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","tweener","type_id","upcast","update","value","value_provider","vzip","LfoBuilder","LfoHandle","Pulse","Saw","Sine","Triangle","Waveform","amplitude","amplitude","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","eq","equals","fmt","frequency","frequency","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","new","offset","offset","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","set_amplitude","set_frequency","set_offset","set_phase","set_waveform","shared","starting_phase","starting_phase","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","waveform","waveform","width","TweenerBuilder","TweenerHandle","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","command_producer","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","id","id","init","init","initial_value","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_drop","raw_drop","set","shared","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","MockModulatorValueProviderBuilder","ModulatorValueProvider","add","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","get","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","kind","modulator_values","new","raw_drop","raw_drop","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Custom","EndOfAudio","EndPosition","Error","Factor","FromFileError","Handle","IntoOptionalRegion","IoError","NoDefaultTrack","Paused","Pausing","PlaybackPosition","PlaybackRate","PlaybackState","Playing","Region","Samples","Seconds","Semitones","Sound","SoundData","Stopped","Stopping","SymphoniaError","UnknownDuration","UnknownSampleRate","UnsupportedChannelConfiguration","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_factor","as_semitones","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","end","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","init","init","init","init","init","init","interpolate","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_optional_loop_region","into_optional_loop_region","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sound","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","on_start_processing","output_destination","process","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","source","start","static_sound","streaming","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","StaticSoundData","StaticSoundHandle","StaticSoundSettings","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equals","fade_in_tween","fade_in_tween","fmt","frames","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","loop_region","loop_region","new","output_destination","output_destination","panning","panning","pause","playback_rate","playback_rate","playback_region","playback_region","position","raw_clone","raw_default","raw_drop","raw_drop","resume","reverse","reverse","sample_rate","seek_by","seek_to","set_loop_region","set_panning","set_playback_rate","set_playback_region","set_volume","settings","shared","start_time","start_time","state","stop","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","volume","volume","vzip","vzip","Decoder","Error","StreamingSoundData","StreamingSoundHandle","StreamingSoundSettings","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","decode","decode_scheduler_command_producer","decoder","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","equals","error_consumer","fade_in_tween","fade_in_tween","fmt","from","from","from","from_cursor","from_decoder","from_file","from_media_source","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sound","is_in_subset","is_in_subset","is_in_subset","loop_region","loop_region","new","num_frames","output_destination","output_destination","panning","panning","pause","playback_rate","playback_rate","playback_region","playback_region","pop_error","position","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","resume","sample_rate","seek","seek_by","seek_to","set_loop_region","set_panning","set_playback_rate","set_playback_region","set_volume","settings","shared","sound_command_producer","start_time","start_time","state","stop","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","volume","volume","vzip","vzip","vzip","emitter","listener","scene","EmitterDistances","EmitterHandle","EmitterId","EmitterSettings","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","attenuation_function","attenuation_function","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","command_producer","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","distances","distances","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","enable_spatialization","enable_spatialization","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","id","id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","max_distance","min_distance","new","persist_until_sounds_finish","persist_until_sounds_finish","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","scene","scene_id","set_position","shared","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","ListenerHandle","ListenerId","ListenerSettings","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","hash","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","key","new","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","scene","scene_id","set_orientation","set_position","shared","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","track","track","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","AddEmitterError","AddListenerError","CommandError","CommandError","EmitterLimitReached","ListenerLimitReached","SpatialSceneHandle","SpatialSceneId","SpatialSceneSettings","add_emitter","add_listener","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","emitter_capacity","emitter_capacity","emitter_controller","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","hash","id","id","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","listener_capacity","listener_capacity","listener_controller","new","num_emitters","num_listeners","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","shared","source","source","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unused_emitter_consumer","unused_listener_consumer","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","CommandError","Main","NonexistentRoute","SetRouteError","Sub","SubTrackId","TrackBuilder","TrackHandle","TrackId","TrackRoutes","add_effect","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","command_producer","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","effect","effects","empty","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","existing_routes","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","hash","id","id","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","parent","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_hash","raw_hash","routes","routes","set_route","set_volume","shared","source","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","with_effect","with_route","without_route","Effect","EffectBuilder","Handle","build","compressor","delay","distortion","eq_filter","filter","init","on_change_sample_rate","on_start_processing","panning_control","process","reverb","volume_control","CompressorBuilder","CompressorHandle","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","attack_duration","attack_duration","borrow","borrow","borrow_mut","borrow_mut","build","command_producer","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","makeup_gain","makeup_gain","mix","mix","new","ratio","ratio","raw_default","raw_drop","raw_drop","release_duration","release_duration","set_attack_duration","set_makeup_gain","set_mix","set_ratio","set_release_duration","set_threshold","threshold","threshold","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","DelayBuilder","DelayHandle","add_feedback_effect","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","buffer_length","buffer_length","build","command_producer","default","delay_time","delay_time","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","feedback","feedback","feedback_effects","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","mix","mix","new","raw_default","raw_drop","raw_drop","set_delay_time","set_feedback","set_mix","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","DistortionBuilder","DistortionHandle","DistortionKind","HardClip","SoftClip","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","command_producer","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drive","drive","drop","drop","drop","eq","eq","equals","equals","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","kind","kind","mix","mix","new","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_drop","set_drive","set_kind","set_mix","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Bell","EqFilterBuilder","EqFilterHandle","EqFilterKind","HighShelf","LowShelf","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","command_producer","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","frequency","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","gain","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","kind","new","q","raw_clone","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","set_frequency","set_gain","set_kind","set_q","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","BandPass","FilterBuilder","FilterHandle","FilterMode","HighPass","LowPass","Notch","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","command_producer","cutoff","cutoff","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","eq","equals","equals","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","mix","mix","mode","mode","new","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","resonance","resonance","set_cutoff","set_mix","set_mode","set_resonance","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","PanningControlBuilder","PanningControlHandle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equals","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_default","raw_drop","raw_drop","set_panning","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","ReverbBuilder","ReverbHandle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","command_producer","damping","damping","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equals","feedback","feedback","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","mix","mix","new","raw_clone","raw_default","raw_drop","raw_drop","set_damping","set_feedback","set_mix","set_stereo_width","stereo_width","stereo_width","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","VolumeControlBuilder","VolumeControlHandle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","command_producer","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equals","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","new","raw_clone","raw_default","raw_drop","raw_drop","set_volume","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Easing","Fixed","FromModulator","InOutPowf","InOutPowi","InPowf","InPowi","Linear","ModulatorMapping","OutPowf","OutPowi","Parameter","Tween","Tweenable","Value","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamp_bottom","clamp_top","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","duration","easing","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_modulator","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","input_range","interpolate","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","map","new","output_range","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_value","set","start_time","state","to_","to_","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","update","value","vzip","vzip","vzip","vzip","vzip","id","mapping","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","get_locale","get_locales","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","U64Vec2","U64Vec3","U64Vec4","u64vec2","u64vec3","u64vec4","w","x","x","x","y","y","y","z","z","CharacterDirection","LTR","LanguageIdentifier","LanguageIdentifierError","ParserError","RTL","Unknown","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonicalize","character_direction","clear_variants","clone","clone_into","clone_type_data","cmp","compare","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_parts","from_raw_parts_unchecked","from_sample_","from_sample_","from_sample_","from_str","from_subset","from_subset","from_subset","from_world","from_world","has_variant","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_parts","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","language","matches","partial_cmp","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_eq","raw_hash","region","script","serialize","set_variants","subtags","to_owned","to_sample_","to_sample_","to_sample_","to_string","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","variants","variants","vzip","vzip","vzip","Language","Region","Script","Variant","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","compare","compare","compare","compare","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_raw_unchecked","from_raw_unchecked","from_raw_unchecked","from_raw_unchecked","from_sample_","from_sample_","from_sample_","from_sample_","from_str","from_str","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_world","from_world","hash","hash","hash","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","matches","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_eq","raw_eq","raw_eq","raw_eq","raw_hash","raw_hash","raw_hash","raw_hash","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","BorderImageMeta","BorderedButton","BorderedFrame","ButtonBordersMeta","ButtonThemeMeta","MarginMeta","bg_handle","border_only","border_scale","border_size","borders","bottom","clicked","default","default_border","focus_on_hover","focused","font","image","image_size","left","margin","margin","min_size","on_click_border","on_focus_border","padding","padding","padding","right","scale","sense","text","texture_border_size","texture_size","top","wrap","GAME","MAIN_MENU","MUSIC_PLAYER","PAUSE_MENU","SessionExt","SessionNames","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","end_game","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_drop","restart_game","start_game","start_menu","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","AxisNegative","AxisPositive","Button","InputKind","Keyboard","None","PlayerControlMapping","PlayerControlSetting","Settings","VirtualDPad","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","down","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game_plugin","gamepad","grab","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump","keyboard1","keyboard2","left","load_settings","matchmaking_server","menu_back","menu_confirm","menu_start","movement","pause","player_controls","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","right","schema","schema","schema","schema","schema","shoot","slide","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","up","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","ImageMeta","UiTheme","UiThemeButtons","UiThemeColors","UiThemeEditor","UiThemeEditorIcons","UiThemeFontStyles","UiThemePanel","UiThemeWidgetColors","UiThemeWidgets","active","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bg_fill","bg_stroke","bigger","border","border_radius","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collisions","colors","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","editor","elements","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_color","font_styles","fonts","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","heading","hovered","icons","image","image_size","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","main_menu","map_select","menu","noninteractive","normal","normal","padding","panel","panel","pause_menu","positive","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_default","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","scale","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","select","small","smaller","text","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widgets","window_fill","Credits","Home","MainMenuMeta","MapSelect","MenuPage","NetworkGame","PlayerSelect","Settings","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","background_image","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","credits","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","home_menu","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","main_menu_system","map_select","menu_width","player_select","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","schema","schema","session_plugin","settings","setup_menu","subtitle_font","title_font","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","is_waiting","CREDITS","CREDITS_STR","Credits","CreditsEntry","CreditsHandle","CreditsSection","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contribution","credits_parser","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entries","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","handle","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","link","name","name","raw_drop","raw_drop","raw_drop","raw_drop","sections","title","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","widget","Input","ParseState","PositionRepr","__parse__","__parse___","__parse_contribution","__parse_credits","__parse_entry","__parse_entry_name","__parse_handle","__parse_section","_phantom","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","credits","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","new","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","widget","PlayerSelectState","PlayerSlot","active","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","confirmed","control_source","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_ai","is_in_subset","is_in_subset","player_image","player_select_panel","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","selected_hat","selected_player","slots","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","widget","Controls","Networking","SettingsState","SettingsTab","TABS","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","controls","currently_binding_input_idx","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equals","equivalent","equivalent","equivalent","equivalent","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","modified_settings","networking","raw_clone","raw_clone","raw_default","raw_default","raw_drop","raw_drop","raw_eq","settings_loaded","tab","to_owned","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","widget","BindingKind","Gamepad","Keyboard","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","get_input","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","raw_drop","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","widget","widget","GoBack","MapSelectAction","None","SelectMap","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","from_world","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","map_select_menu","raw_clone","raw_default","raw_drop","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","MapSelect","Pause","PauseMenuPage","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_sample_","from_subset","from_world","from_world","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","main_pause_menu","pause_menu_system","raw_clone","raw_default","raw_drop","session_plugin","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip"],"q":[[0,"jumpy"],[101,"jumpy::core"],[224,"jumpy::core::attachment"],[356,"jumpy::core::audio"],[437,"jumpy::core::audio::AudioEvent"],[439,"jumpy::core::bullet"],[576,"jumpy::core::camera"],[662,"jumpy::core::damage"],[746,"jumpy::core::debug"],[862,"jumpy::core::editor"],[922,"jumpy::core::elements"],[1312,"jumpy::core::elements::crab"],[1459,"jumpy::core::elements::crab::CrabState"],[1461,"jumpy::core::elements::crate_item"],[1606,"jumpy::core::elements::decoration"],[1653,"jumpy::core::elements::fish_school"],[1820,"jumpy::core::elements::fish_school::FishState"],[1822,"jumpy::core::elements::grenade"],[1968,"jumpy::core::elements::kick_bomb"],[2116,"jumpy::core::elements::mine"],[2261,"jumpy::core::elements::musket"],[2368,"jumpy::core::elements::player_spawner"],[2492,"jumpy::core::elements::slippery"],[2582,"jumpy::core::elements::slippery_seaweed"],[2671,"jumpy::core::elements::snail"],[2768,"jumpy::core::elements::snail::Snail"],[2771,"jumpy::core::elements::spike"],[2860,"jumpy::core::elements::sproinger"],[2951,"jumpy::core::elements::stomp_boots"],[3080,"jumpy::core::elements::sword"],[3262,"jumpy::core::elements::sword::SwordState"],[3264,"jumpy::core::elements::urchin"],[3354,"jumpy::core::globals"],[3355,"jumpy::core::input"],[3571,"jumpy::core::input::EditorInput"],[3593,"jumpy::core::item"],[3962,"jumpy::core::lifetime"],[4048,"jumpy::core::map"],[4362,"jumpy::core::map_constructor"],[4365,"jumpy::core::map_constructor::shiftnanigans"],[4587,"jumpy::core::metadata"],[4851,"jumpy::core::metadata::map"],[5114,"jumpy::core::metadata::player"],[5518,"jumpy::core::physics"],[5627,"jumpy::core::physics::collisions"],[6071,"jumpy::core::physics::collisions::ColliderShape"],[6073,"jumpy::core::physics::collisions::rapier"],[13152,"jumpy::core::physics::collisions::rapier::QueryPipelineMode"],[13153,"jumpy::core::physics::collisions::rapier::TopologyError"],[13156,"jumpy::core::physics::collisions::rapier::nalgebra"],[19675,"jumpy::core::physics::collisions::rapier::nalgebra::base"],[20412,"jumpy::core::physics::collisions::rapier::nalgebra::base::allocator"],[20425,"jumpy::core::physics::collisions::rapier::nalgebra::base::constraint"],[20469,"jumpy::core::physics::collisions::rapier::nalgebra::base::coordinates"],[22462,"jumpy::core::physics::collisions::rapier::nalgebra::base::default_allocator"],[22463,"jumpy::core::physics::collisions::rapier::nalgebra::base::dimension"],[22785,"jumpy::core::physics::collisions::rapier::nalgebra::base::indexing"],[22789,"jumpy::core::physics::collisions::rapier::nalgebra::base::iter"],[23040,"jumpy::core::physics::collisions::rapier::nalgebra::base::storage"],[23075,"jumpy::core::physics::collisions::rapier::nalgebra::base::uninit"],[23176,"jumpy::core::physics::collisions::rapier::nalgebra::geometry"],[23268,"jumpy::core::physics::collisions::rapier::nalgebra::linalg"],[23316,"jumpy::core::physics::collisions::rapier::nalgebra::linalg::balancing"],[23318,"jumpy::core::physics::collisions::rapier::nalgebra::linalg::givens"],[23366,"jumpy::core::physics::collisions::shape"],[23469,"jumpy::core::physics::collisions::shape::ColliderShape"],[23471,"jumpy::core::player"],[23960,"jumpy::core::player::state"],[24009,"jumpy::core::player::state::stage"],[24082,"jumpy::core::player::state::states"],[24089,"jumpy::core::player::state::states::crouch"],[24093,"jumpy::core::player::state::states::dead"],[24097,"jumpy::core::player::state::states::default"],[24099,"jumpy::core::player::state::states::idle"],[24103,"jumpy::core::player::state::states::incapacitated"],[24107,"jumpy::core::player::state::states::midair"],[24111,"jumpy::core::player::state::states::walk"],[24115,"jumpy::core::prelude"],[24117,"jumpy::core::random"],[24224,"jumpy::core::utils"],[24242,"jumpy::core::utils::easing"],[24312,"jumpy::core::utils::math"],[24313,"jumpy::core::utils::rect"],[24371,"jumpy::input"],[24621,"jumpy::music"],[24706,"jumpy::music::MusicState"],[24708,"jumpy::prelude"],[42489,"jumpy::prelude::AssetKind"],[42492,"jumpy::prelude::CollectionAllocErr"],[42493,"jumpy::prelude::Color"],[42497,"jumpy::prelude::Primitive"],[42499,"jumpy::prelude::SchemaKind"],[42501,"jumpy::prelude::anyhow"],[42602,"jumpy::prelude::bones_schema"],[43035,"jumpy::prelude::bones_schema::Primitive"],[43037,"jumpy::prelude::bones_schema::SchemaKind"],[43039,"jumpy::prelude::bones_schema::alloc"],[43609,"jumpy::prelude::bones_schema::prelude"],[43799,"jumpy::prelude::bones_schema::prelude::Primitive"],[43801,"jumpy::prelude::bones_schema::prelude::SchemaKind"],[43803,"jumpy::prelude::bones_schema::ptr"],[44126,"jumpy::prelude::bones_schema::raw_fns"],[44136,"jumpy::prelude::bones_schema::registry"],[44219,"jumpy::prelude::bones_schema::ser_de"],[44312,"jumpy::prelude::bones_utils"],[44449,"jumpy::prelude::bones_utils::CollectionAllocErr"],[44450,"jumpy::prelude::bones_utils::prelude"],[44588,"jumpy::prelude::bones_utils::prelude::CollectionAllocErr"],[44589,"jumpy::prelude::bones_utils::prelude::alloc"],[44604,"jumpy::prelude::bones_utils::prelude::alloc::alloc"],[44831,"jumpy::prelude::bones_utils::prelude::alloc::borrow"],[45082,"jumpy::prelude::bones_utils::prelude::alloc::boxed"],[46033,"jumpy::prelude::bones_utils::prelude::alloc::collections"],[46732,"jumpy::prelude::bones_utils::prelude::alloc::collections::TryReserveErrorKind"],[46733,"jumpy::prelude::bones_utils::prelude::alloc::collections::binary_heap"],[47054,"jumpy::prelude::bones_utils::prelude::alloc::collections::btree_map"],[47828,"jumpy::prelude::bones_utils::prelude::alloc::collections::btree_set"],[48198,"jumpy::prelude::bones_utils::prelude::alloc::collections::linked_list"],[48519,"jumpy::prelude::bones_utils::prelude::alloc::collections::vec_deque"],[48752,"jumpy::prelude::bones_utils::prelude::alloc::ffi"],[48988,"jumpy::prelude::bones_utils::prelude::alloc::fmt"],[49423,"jumpy::prelude::bones_utils::prelude::alloc::rc"],[49657,"jumpy::prelude::bones_utils::prelude::alloc::slice"],[50836,"jumpy::prelude::bones_utils::prelude::alloc::str"],[51958,"jumpy::prelude::bones_utils::prelude::alloc::str::pattern"],[52281,"jumpy::prelude::bones_utils::prelude::alloc::string"],[52663,"jumpy::prelude::bones_utils::prelude::alloc::sync"],[52903,"jumpy::prelude::bones_utils::prelude::alloc::task"],[52906,"jumpy::prelude::bones_utils::prelude::alloc::vec"],[53499,"jumpy::prelude::bones_utils::prelude::futures"],[53602,"jumpy::prelude::bones_utils::prelude::futures::future"],[53967,"jumpy::prelude::bones_utils::prelude::futures::io"],[55369,"jumpy::prelude::bones_utils::prelude::futures::prelude"],[55466,"jumpy::prelude::bones_utils::prelude::futures::stream"],[57454,"jumpy::prelude::bones_utils::prelude::fxhash"],[57601,"jumpy::prelude::bones_utils::prelude::hashbrown"],[57946,"jumpy::prelude::bones_utils::prelude::hashbrown::TryReserveError"],[57947,"jumpy::prelude::bones_utils::prelude::hashbrown::hash_map"],[58829,"jumpy::prelude::bones_utils::prelude::hashbrown::hash_set"],[59297,"jumpy::prelude::bones_utils::prelude::hashbrown::raw"],[59642,"jumpy::prelude::bones_utils::prelude::parking_lot"],[60009,"jumpy::prelude::bones_utils::prelude::parking_lot::lock_api"],[60733,"jumpy::prelude::bones_utils::prelude::prelude"],[60905,"jumpy::prelude::bones_utils::prelude::rng"],[60907,"jumpy::prelude::bool"],[60921,"jumpy::prelude::borrow"],[61004,"jumpy::prelude::dashmap"],[61302,"jumpy::prelude::dashmap::iter"],[61410,"jumpy::prelude::dashmap::iter_set"],[61493,"jumpy::prelude::dashmap::mapref"],[61496,"jumpy::prelude::dashmap::mapref::entry"],[61612,"jumpy::prelude::dashmap::mapref::multiple"],[61687,"jumpy::prelude::dashmap::mapref::one"],[61855,"jumpy::prelude::dashmap::setref"],[61857,"jumpy::prelude::dashmap::setref::multiple"],[61889,"jumpy::prelude::dashmap::setref::one"],[61921,"jumpy::prelude::dashmap::try_result"],[61959,"jumpy::prelude::egui"],[68575,"jumpy::prelude::egui::Event"],[68591,"jumpy::prelude::egui::ImageFit"],[68592,"jumpy::prelude::egui::ImageSource"],[68594,"jumpy::prelude::egui::Shape"],[68596,"jumpy::prelude::egui::ahash"],[68849,"jumpy::prelude::egui::ahash::random_state"],[68857,"jumpy::prelude::egui::containers"],[68962,"jumpy::prelude::egui::containers::collapsing_header"],[69064,"jumpy::prelude::egui::containers::panel"],[69217,"jumpy::prelude::egui::containers::popup"],[69225,"jumpy::prelude::egui::containers::scroll_area"],[69370,"jumpy::prelude::egui::epaint"],[70336,"jumpy::prelude::egui::epaint::Shape"],[70338,"jumpy::prelude::egui::epaint::ecolor"],[70463,"jumpy::prelude::egui::epaint::emath"],[70689,"jumpy::prelude::egui::epaint::emath::align"],[70695,"jumpy::prelude::egui::epaint::emath::smart_aim"],[70696,"jumpy::prelude::egui::epaint::image"],[70709,"jumpy::prelude::egui::epaint::mutex"],[70788,"jumpy::prelude::egui::epaint::shape_transform"],[70789,"jumpy::prelude::egui::epaint::stats"],[70858,"jumpy::prelude::egui::epaint::tessellator"],[70977,"jumpy::prelude::egui::epaint::tessellator::path"],[70979,"jumpy::prelude::egui::epaint::text"],[71380,"jumpy::prelude::egui::epaint::text::cursor"],[71582,"jumpy::prelude::egui::epaint::textures"],[71646,"jumpy::prelude::egui::epaint::util"],[71702,"jumpy::prelude::egui::gui_zoom"],[71707,"jumpy::prelude::egui::gui_zoom::kb_shortcuts"],[71710,"jumpy::prelude::egui::introspection"],[71712,"jumpy::prelude::egui::layers"],[71809,"jumpy::prelude::egui::load"],[72212,"jumpy::prelude::egui::load::BytesPoll"],[72216,"jumpy::prelude::egui::load::ImagePoll"],[72218,"jumpy::prelude::egui::load::TexturePoll"],[72220,"jumpy::prelude::egui::menu"],[72288,"jumpy::prelude::egui::os"],[72349,"jumpy::prelude::egui::output"],[72461,"jumpy::prelude::egui::special_emojis"],[72468,"jumpy::prelude::egui::style"],[72854,"jumpy::prelude::egui::text"],[72957,"jumpy::prelude::egui::util"],[73028,"jumpy::prelude::egui::util::cache"],[73118,"jumpy::prelude::egui::util::id_type_map"],[73173,"jumpy::prelude::egui::util::undoer"],[73271,"jumpy::prelude::egui::widget_text"],[73376,"jumpy::prelude::egui::widgets"],[73528,"jumpy::prelude::egui::widgets::ImageFit"],[73529,"jumpy::prelude::egui::widgets::ImageSource"],[73531,"jumpy::prelude::egui::widgets::color_picker"],[73587,"jumpy::prelude::egui::widgets::text_edit"],[73811,"jumpy::prelude::f32"],[73850,"jumpy::prelude::f64"],[73892,"jumpy::prelude::fluent"],[74167,"jumpy::prelude::fluent::FluentError"],[74169,"jumpy::prelude::fluent::bundle"],[74221,"jumpy::prelude::fluent::types"],[74483,"jumpy::prelude::fluent_langneg"],[74530,"jumpy::prelude::fluent_langneg::accepted_languages"],[74531,"jumpy::prelude::fluent_langneg::negotiate"],[74537,"jumpy::prelude::i32"],[74552,"jumpy::prelude::i64"],[74567,"jumpy::prelude::intl_memoizer"],[74639,"jumpy::prelude::intl_memoizer::concurrent"],[74673,"jumpy::prelude::kira"],[74881,"jumpy::prelude::kira::clock"],[75074,"jumpy::prelude::kira::clock::clock_info"],[75232,"jumpy::prelude::kira::dsp"],[75287,"jumpy::prelude::kira::manager"],[75487,"jumpy::prelude::kira::manager::backend"],[75533,"jumpy::prelude::kira::manager::backend::cpal"],[75606,"jumpy::prelude::kira::manager::backend::mock"],[75696,"jumpy::prelude::kira::manager::error"],[75877,"jumpy::prelude::kira::modulator"],[75939,"jumpy::prelude::kira::modulator::lfo"],[76065,"jumpy::prelude::kira::modulator::lfo::Waveform"],[76066,"jumpy::prelude::kira::modulator::tweener"],[76132,"jumpy::prelude::kira::modulator::value_provider"],[76196,"jumpy::prelude::kira::sound"],[76484,"jumpy::prelude::kira::sound::static_sound"],[76592,"jumpy::prelude::kira::sound::streaming"],[76738,"jumpy::prelude::kira::spatial"],[76741,"jumpy::prelude::kira::spatial::emitter"],[76927,"jumpy::prelude::kira::spatial::listener"],[77052,"jumpy::prelude::kira::spatial::scene"],[77254,"jumpy::prelude::kira::track"],[77517,"jumpy::prelude::kira::track::effect"],[77533,"jumpy::prelude::kira::track::effect::compressor"],[77616,"jumpy::prelude::kira::track::effect::delay"],[77694,"jumpy::prelude::kira::track::effect::distortion"],[77821,"jumpy::prelude::kira::track::effect::eq_filter"],[77942,"jumpy::prelude::kira::track::effect::filter"],[78070,"jumpy::prelude::kira::track::effect::panning_control"],[78144,"jumpy::prelude::kira::track::effect::reverb"],[78230,"jumpy::prelude::kira::track::effect::volume_control"],[78305,"jumpy::prelude::kira::tween"],[78545,"jumpy::prelude::kira::tween::Value"],[78547,"jumpy::prelude::swizzles"],[79037,"jumpy::prelude::sys_locale"],[79039,"jumpy::prelude::u32"],[79054,"jumpy::prelude::u64"],[79069,"jumpy::prelude::unic_langid"],[79222,"jumpy::prelude::unic_langid::subtags"],[79467,"jumpy::prelude::widgets"],[79504,"jumpy::sessions"],[79542,"jumpy::settings"],[79769,"jumpy::ui"],[80208,"jumpy::ui::main_menu"],[80305,"jumpy::ui::main_menu::MenuPage"],[80306,"jumpy::ui::main_menu::credits"],[80434,"jumpy::ui::main_menu::credits::credits_parser"],[80476,"jumpy::ui::main_menu::map_select"],[80477,"jumpy::ui::main_menu::player_select"],[80565,"jumpy::ui::main_menu::settings"],[80661,"jumpy::ui::main_menu::settings::controls"],[80694,"jumpy::ui::main_menu::settings::networking"],[80695,"jumpy::ui::map_select"],[80738,"jumpy::ui::pause_menu"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Macro to “derive” ( not really a derive macro ) …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The target fixed frames-per-second that the game …","","The maximum number of players per match.","","","","","","","","","","","","","Utilities for attaching entities to other entities.","","","","","","","","Generic bullet implementation.","Camera controller and parallax.","If control_source is <code>None</code> then the player is an AI.","Damage / kill regions.","Debug rendering for collision boxes, etc.","","","","","","","","","","","","","","Map editing implementation.","Map element implementations.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Global constants.","","","","Player and editor input types.","The jumpy match runner has it’s own input collector …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Common item code.","","Entity lifetimes for deleting an entity after a period of …","Map and navigation mesh implementation.","","Map constructor implementations.","Core game metadata","Physics and collision detection.","Player controller, states, and animation implementation.","","","Global, deterministic random resource.","","","","","The player skin that has been selected.","","","","","","","","","","","","","","","","","","","","","","","Miscellaneous utilities.","","","","Component for attaching an entity to another entity.","This is used by the <code>update_player_body_attachments</code> system …","A component for attaching an entity to the player’s body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entity to attach to.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Whether the attachment should be to the head instead of …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Create a new body attachment to the given player.","The offset to the attached entity.","The offset relative to the center of the player’s sprite.","The player to attach to.","","","","","","","","","","System that cleans up old <code>Attachment</code> and …","","","","Synchronize <code>AtlasSprite</code> animation with entity animation","Whether or not to automatically play the same animation …","Synchronize <code>Sprite</code> color with entity color","Whether or not to automatically sync the color of the …","","","","","","","","","","","","","","","","","","","","","","","","","System to update the transforms of entities with the …","System that updates entities with the <code>PlayerBodyAttachment</code> …","","","","An audio event that may be sent to the <code>AudioEvents</code> …","Resource containing the audio event queue.","Play a sound.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Play a sound.","","List of audio events that haven’t been handled by the …","","","","","","","Add an event to the audio event queue.","","","","","","","","","","","","","","","","","","","","The handle to the sound to play.","The volume to play the sound at.","Bullet component.","Component containing the bullet’s metadata handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The direction that the bullet is moving on the X axis.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Hydrate bullets.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The player entity that shot the bullet.","","","","","","","","","","","","","Install this module.","","","","","","","","","","","","","","","","","","","","","","","","","Update bullets.","","","","","The state of the camera.","A sprite that is spawned as a part of the parallax …","","","","","","","","","","","Implemenets the camera controller.","Implements the background layer parallax.","","","","","","","","","","","","","Disables the default camera controller. Useful, for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","The sprite with <code>idx</code> of <code>0</code> will be centered, with indexes …","","","Install this module.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Information about the parallax layer it is a part of.","A rectangle around the player that is larger than the …","","","","","","","","","","","","","","","","","","","","","","","","","","","A rectangular damage region.","A component that may be added to a damage region entity to …","","","","","","","","","","","","","","","","","Get the collision rectangle of this damage region, given it…","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Install this module.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","System that will eliminate players that are intersecting …","","","","","","","","","The size of the damage region in pixels","","","","","","","","","","","","","","","","","","","Resource configuring various debugging settings.","An implementation of the rapier <code>DebugRenderingBackend</code> that …","Resource containing the physics debug line entity.","","","","","","","","","","","","","","","","","","","","","","","Renders debug lines for rapier colliders.","Renders debug lines for damage regions.","Renders debug lines for emote regions.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Install this module.","","","","","","","","","","Whether or not to render damage region collider shapes.","Whether or not to render kinematic collider shapes.","Whether or not to show the pathfinding lines.","","","","","","","","","","","","","","","","","","","","","","","","","","","A system parameter for editing the map.","","","","","","","Clear all of the elements on the map.","Clear all the tiles on the map.","","Create a new map element at the given location on the …","Create a new layer with the given name.","Delete an element off of the map.","Delete the layer with the given index.","","","","","","","","Returns the argument unchanged.","","","The the number of layers.","Get the size of the map.","","Handles user input comming from the editor and makes the …","","","Install this module.","Calls <code>U::from(self)</code>.","","","","","","","Move an element to a new position on the map.","","Rename the layer with the given index.","Rename the map.","Set the tilemap for the given layer.","Set the tile index of a tile on the given layer.","","","","Swap the position of two layers.","","","","","","","","","","","","","Component that contains the <code>Entity</code> to de-hydrate when the …","","Component containing an element’s metadata handle.","","","Marker component added to map elements that have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores the spawned elements as having been spawned by the …","Stores the spawned elements as having been spawned by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The offset of the bounding rect for the element in the …","The size of the bounding rect for the element in the editor","","The group identifier where all of the elements are meant …","","","","","","","","","","","","Stores the spawned elements as having come from the same …","Helper macro to install element game and session plugins","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the entity provided is a spawner","","","","","","","","","","","Kills the provided spawner entity and any spawned entities …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes that spawned entity from the spawner entities …","","","","","","","","","","Show the element name above the bounding rect in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A crab roaming on the ocean floor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How long a crab has to be away from it’s spawn point …","","","","","","","","","","","","The throwable crate item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An animated decoration such as seaweed or anemones","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Moving to a location","","","","","","","","","","","","","The default and most-likely to ocurr number of fish in a …","","","","","","","","","","","","","","","","","","","","","The ammount greater or less than the base number of fish …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance that the fish wish to stay within the center …","","The distance from the spawn point on each axis that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Grenades item","","","","","","","","","","","","","The grenade atlas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","The amount of time left until the grenade explodes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The owner of the grenade.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The grenade atlas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mine item","","The delay after throwing the mine, before it becomes armed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Resource that stores the next spawner to use when spawning …","Marker component for player spawners.","Player spawner element","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The animation frames for when the snail is crawling","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","The animation frames for when the snail is fleeing into …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The <code>crawl_frames</code> indexes in which to move the snail","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a sproinger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker component added to things ( presumably players, but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a sword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alpha range for the player sprite during spawn …","Create a new layer","","","The editor inputs that a player may make.","","","The inputs for each player in this simulation frame.","","Move a layer up or down.","Player input, not just controls, but also other status …","","Rename a map layer.","","","Update the tilemap of a layer.","Spawn an element onto the map.","Whether or not the player is present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The player control input","If this is <code>None</code> it means the player is an AI.","","","","","","","","","","","","","","","","","","","","","","","","","The editor inputs the player is making, if any.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The selected player hat.","The selected player skin.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tile collision kind","Whether or not to move the layer down. If false, move the …","","The entity to move.","The entity to delete.","The handle to the element that is being spawned.","The handle to the tilemap to use or <code>None</code> to clear the …","The name of the layer.","The map layer index to spawn the element on.","The index of the layer to rename.","","The layer to move","The layer index of the layer to update.","The layer index of the layer to update","The new name of the layer.","","The amount to move the entity.","The position of the tile to set","","","The index in the tilemap to set the tile, or <code>None</code> to …","The translation to spawn the element with.","A helper struct containing a player-inventory pair that …","An intventory component, indicating another entity that …","Marker component for items.","Marker component added to items when they are dropped.","Component defining the grab settings when an item is …","Marker component added to items when they are grabbed.","Component defining the strength of the throw types when an …","Marker component added to items when they are used.","System param that can be used to conveniently get the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The relative velocities of each different throw type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The player that used the item","","The player that dropped the item","The player that grabbed the item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Self::base</code> with the throw values multiplied by <code>strength</code>.","","An optional system value that gets run once on throw.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chooses one of the throw values based on a <code>PlayerControl</code>","","","","","","","","","","","","A timer that can be used to make an entity invincible for …","The lifetime state of an entity","How long the entity has lived in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","How long the entity should be allowed to live in seconds.","Despawns entities that have an expired lifetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Resource containing the map metadata for this game session.","The Z depth in between each map layer.","The Z depth of the deepest map layer.","Resource indicating whether the map has been spawned.","The map navigation graph resource.","Represents the way to get from one tile to another tile in …","The inner graph type of <code>NavGraph</code>.","The type of nodes in the map navigation graph.","Component containing the map layer that an entity is …","Resource containing essential the map metadata for the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper method to create a navigation graph from the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the Pythagorean distance between two nodes.","The distance to the connected tile. This is used as the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sequence of inputs for each frame, required to get to …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The layer index of the layer that the element belongs to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper for getting the z-depth of the map layer with the …","Trait implemented by map constructors.","Take the map manager and use it to either modify or …","Map randomizer using Shiftnanigans.","An element at a location within the map","","This can contain one or more ungrouped pixels, allowing …","The entity as it exists in the map","The pixel provided to the pixel board randomizer","Map randomizer using Shiftnanigans.","The tile as it exists in the map","","This contains the layer pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata for a player hat.","","","","Extension trait for the bones <code>AssetServer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The parallax background layers","The background color of the map, behind the parallax layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Size of the map in tiles","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The layers of the map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Register the default assets from <code>bones_framework</code>.","","","","","","","","","","","","","","","","","The size of the tiles in pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The parallax background layers","The background color of the map, behind the parallax layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Size of the map in tiles","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the given position is out of the bounds of the …","The layers of the map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the tiles in pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata for a player hat.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codekinematic physics body","","","","","","Angular velocity in degrees per second","Helper function to apply rotation to a kinematic body.","","","","","","","","","","","","Get the body’s axis-aligned-bounding-box ( AABB ).","","","","","","","","Collision detection implementation.","","","","","","","","","","Whether or not the body should fall through jump_through …","","","Sets a 1 frame override for the body friction. It will be …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","If this is <code>true</code> the body will be affected by gravity","Hydrate newly added <code>KinematicBody</code>s.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","If body is controlled by player or some system simulating …","","","","","Will be <code>true</code> if the body is currently on top of a …","Indicates that we should reset the collider like it was …","Position cached from last kinematic body update, used to …","See comment for <code>last_update_position</code>, this tracks previous …","","","","","","","","","","","","","","","","","","","","","","","","","Update physics for kinematic bodies.","","","","","An actor in the physics simulation.","","A collider body in the physics simulation.","The Jumpy collision shape type.","Resource that maps <code>ColliderShape</code>s to a rapier <code>SharedShape</code>.","A cache containing a map of entities, to the list of …","","","","Pass-through hasher for entities to reduce hashing cost …","","Resource containing the data structures needed for rapier …","Namespace struct for converting rapier collider user data …","","A solid in the physics simulation.","","The kind of collision that a map tile has.","Component added to tiles that have been given …","Returns the collisions that one actor has with any other …","Returns the collisions that one actor has with any other …","Actors are things like players that move around and detect …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collider is anything that can detect collisions in the …","","","The collisions in the cache.","The rapier context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put the entity’s collider into descent mode so that it …","Whether or not the collider wants to drop through …","","","","","","","","","","","","","","","","","","","","","","","","","Get an <code>Entity</code> from the given Rapier user data ( assuming …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create rapier user data value from the entity <code>e</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the set of entities that the given <code>entity</code> is …","Get the collider for the given entity.","","","","When spawning or teleporting an entity, this should be …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to move a body horizontally. This will return <code>true</code> …","Attempt to move a body vertically. This will return <code>true</code> …","","","Prelude containing the common types defined by Rapier.","The handle to the Rapier rigid body associated to this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not the collider is in the process of going …","","","","Returns whether or not there is a tile or solid at the …","Solids are things like walls and platforms, that aren’t …","","Sync the transforms and attributes ( like <code>disabled</code> ) of …","Get the <code>TileCollisionKind</code> of the first tile detected …","","","Returns the tile collision at the given point.","","Contains the rapier collider handles for each map tile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the collision world with the entity’s actual …","Update the collision for the tile with the given layer …","Update all of the map tile collisions.","Update the collisions for map tiles that pass the given …","","","","","","","","","","","","","","All of the groups.","The set of all angular degrees of freedom.","The maximum number of rotational degrees of freedom of a …","The angular degree of freedom of a joint.","An axis-aligned bounding box.","The solved spring-like equation is: …","Flags affecting whether or not collision-detection happens …","Flags affecting the events generated for this collider.","Flags affecting the behavior of the constraints solver for …","A potential new collision pair has been detected by the …","The dimension of the rotations.","The angular vector type.","The rotational degree of freedom along the joint’s local …","The angular inertia of a rigid body.","Storage needed to store triangle indices.","Storage needed to store points.","Storage needed to store topology faces.","Storage needed to store topology half-edges.","Storage needed to store topology vertices.","Storage needed to store u32","Storage needed to store usize.","Storage needed to store vectors.","Storage needed to store triples of vectors.","The two coefficients are averaged.","At least two adjacent triangles have opposite orientations.","Found a triangle with two or three identical vertices.","A ball shape.","A ball shape.","A ball shape.","A pair of rigid body handles.","The type of a body, governing the way it is affected by …","A broad-phase combining a Hierarchical Grid and …","An event emitted by the broad-phase.","Solver responsible for performing motion-clamping on …","Flag indicating that the <code>RigidBodyColliders</code> component of …","If this flag is set, the Aabbs of colliders will be …","If this flag is set, the collider shapes will be rendered.","If set, Rapier will call …","The constraint solver will take this contact manifold into …","If set, the half-edge topology and connected components of …","If this flag is set, the geometric contacts will be …","If set, Rapier will call …","A capsule shape.","A capsule shape.","A capsule shape.","A collision event handler that collects events into a …","Orientation with a clockwise orientaiton, i.e., with a …","Rules used to combine two coefficients.","A geometric entity that can be attached to a body so it …","A collider is being rendered.","Data associated to a collider that takes part to a …","A structure responsible for building a new collider.","Flags describing how the collider has been modified by the …","Enum indicating whether or not a collider is enabled.","A set of flags for controlling collision/intersection …","Index of a node of the interaction graph.","The unique identifier of a collider added to a collider …","The mass-properties of a collider.","The constraints solver-related properties of this collider …","A pair of collider handles.","Information about the rigid-body this collider is attached …","The position of a collider.","A set of colliders that can be handled by a physics <code>World</code>.","The shape of a collider.","The type of collider.","Events occurring when two colliders start or stop colliding","Flags providing more information regarding a collision …","The collision pipeline, responsible for performing …","A compound shape with an aabb bounding volume.","A Compound shape.","A Compound shape.","A contact between two colliders.","A single contact between two collider.","Event occurring when the sum of the magnitudes of the …","A contact manifold between two colliders.","A contact manifold between two colliders.","Context given to custom contact modifiers to modify the …","The description of all the contacts between a pair of …","A 2D convex polygon.","","","Orientation with a clockwise orientaiton, i.e., with a …","A matrix that represent the cross product with a given …","A cuboid shape.","A cuboid shape.","A cuboid shape.","The <code>Collider::position</code> is taken into account.","A custom user-defined shape.","A custom user-defined shape with a type identified by a …","The default tolerance used for geometric operations.","If set, any triangle that results in a failing half-hedge …","If set, the triangles sharing two vertices with identical …","If set, two triangles sharing three vertices with …","The dimension of the space.","A dynamically sized column-major matrix.","Flag indicating that the <code>RigidBodyDominance</code> component of …","A dynamically sized column vector.","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","A color for debug-rendering.","Trait implemented by graphics backends responsible for …","Flags indicating what part of the physics engine should be …","The object currently being rendered by the debug-renderer.","Pipeline responsible for rendering the state of the …","Style used for computing colors when rendering the scene.","Degenerate triangle.","The two colliders are guaranteed not to touch any more.","The collider is given a density.","The dimension of the ambient space.","The joint is disabled by the user explicitly.","The collider is disabled by the user explicitly.","The joint wasn’t disabled by the user explicitly but it …","The collider wasn’t disabled by the user explicitly but …","A <code>RigidBodyType::Dynamic</code> body can be affected by all …","Flag indicating that the rigid-body was enabled or …","Flag indicating that whether or not the collider is …","Exclude from the query any collider attached to a …","Exclude from the query any collider attached to a fixed …","Exclude from the query any collider attached to a dynamic …","Exclude from the query any collider that is a sensor.","Exclude from the query any collider that is not a sensor.","The joint is enabled.","The collider is enabled.","Trait implemented by structures responsible for handling …","If set, Rapier will call <code>PhysicsHooks::filter_contact_pair</code> …","If set, Rapier will call …","Enable collision-detection between a collider attached to …","The set of degrees of freedom left free by a fixed joint.","The set of degrees of freedom left free by a prismatic …","The set of degrees of freedom left free by a revolute …","Shape-dependent identifier of a face.","An identifier of a feature of a convex polyhedron.","A <code>RigidBodyType::Fixed</code> body cannot be affected by external …","A fixed joint, locks all relative motion between two …","Create fixed joints using the builder pattern.","The solved spring-like equation is: …","Flag indicating that the collision groups of the collider …","The group n°1.","The group n°10.","The group n°11.","The group n°12.","The group n°13.","The group n°14.","The group n°15.","The group n°16.","The group n°17.","The group n°18.","The group n°19.","The group n°2.","The group n°20.","The group n°21.","The group n°22.","The group n°23.","The group n°24.","The group n°25.","The group n°26.","The group n°27.","The group n°28.","The group n°29.","The group n°3.","The group n°30.","The group n°31.","The group n°32.","The group n°4.","The group n°5.","The group n°6.","The group n°7.","The group n°8.","The group n°9.","A 2D heightfield with a generic storage buffer for its …","A generic joint.","Create generic joints using the builder pattern.","A triangle mesh.","A bit mask identifying groups for interaction.","If set, the half-edge topology of the trimesh will be …","A half-space delimited by an infinite plane.","A shape representing a full half-space.","A shape representing a full half-space.","A heightfield shape.","A heightfield shape.","A heightfield shape.","Indicates if a cell of an heightfield is removed or not. …","Trait describing all the types needed for storing an …","Type of the array containing the heightfield’s heights.","If this flag is set, the impulse joints will be rendered.","An impulse-based joint attached to two bodies.","An impulse-joint is being rendered.","The unique identifier of a joint added to the joint set. …","A set of impulse_joints that can be handled by a physics …","Parameters for a time-step of the physics engine.","A graph where nodes are collision objects and edges are …","Pairwise filtering using bit masks.","The description of all the contacts between a pair of …","Structure responsible for maintaining the set of active …","The transformation matrix type.","If this flag is set, all the joints will be rendered.","The type of a constraint Jacobian in twist coordinates.","The type of a slice of the constraint Jacobian in twist …","The type of a mutable slice of the constraint Jacobian in …","A bit mask identifying multiple degrees of freedom of a …","Identifiers of degrees of freedoms of a joint.","Enum indicating whether or not a joint is enabled.","The limits of a joint along one of its degrees of freedom.","A joint’s motor along one of its degrees of freedom.","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","A <code>RigidBodyType::KinematicPositionBased</code> body cannot be …","A <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …","The set of all translational degrees of freedom.","Flag indicating that the local mass-properties of this …","Flag indicating that the density or mass-properties of …","The set of degrees of freedom locked by a fixed joint.","The set of degrees of freedom locked by a prismatic joint.","The set of degrees of freedom locked by a revolute joint.","Flags affecting the behavior of the constraints solver for …","Max number of pairs of contact points from the same …","If set, the duplicate vertices of the trimesh will be …","Flag indicating that any component of this rigid-body has …","Flag indicating that any component of the collider has …","If set, Rapier will call …","If this flag is set, the multibody joints will be rendered.","Mass to be added to the rigid-body. This will also …","The collider is given a mass.","The local mass properties of a rigid-body.","The collider is given explicit mass-properties.","Mass properties to be added as-is.","The matrix type.","The greatest coefficient is chosen.","The smallest coefficient is chosen.","The spring-like model used for constraints resolution.","An articulated body simulated using the …","The temporary index of a multibody added to a …","An joint attached to two bodies based on the reduced …","A multibody joint is being rendered.","The unique handle of an multibody_joint added to a …","A set of rigid bodies that can be handled by a physics …","One link of a multibody.","The two coefficients are multiplied.","None of the groups.","The narrow-phase responsible for computing precise contact …","Excludes all colliders not attached to a dynamic …","Exclude all colliders attached to a non-fixed rigid-body …","Excludes all colliders not attached to a kinematic …","If set, the trimesh will be assumed to be oriented (with …","The point lies on the segment interior.","The point lies on an edge.","The point lies on the triangle interior.","The point lies on the triangle interior (for “solid” …","The point lies on a vertex.","The point lies on a vertex.","The orientation type.","Another element is being rendered.","Flag indicating that the <code>ColliderParent</code> component of the …","Flag indicating that the dominance groups of the parent of …","Flag indicating that the <code>RigidBodyPosition</code> component of …","Flag indicating that the <code>ColliderPosition</code> component of the …","A feature id where the feature type is packed into the …","Context given to custom collision filters to filter-out …","","","User-defined functions called by the physics engines …","The physics pipeline, responsible for stepping the whole …","The point type.","The the projection of a point on a collider.","A polygonal feature representing the local polygonal …","Trait implemented by convex shapes with features with …","A polyline.","A set of segments.","A set of segments.","The principal angular inertia of a rigid body.","A prismatic joint, locks all relative motion between two …","Create prismatic joints using the builder pattern.","","Storage needed to store a Qbvh.","A filter tha describes what collider should be included or …","Flags for excluding whole sets of colliders from a scene …","A pipeline for performing queries on all the colliders of …","Indicates how the colliders position should be taken into …","Flag set if a <code>CollisionEvent::Stopped</code> was fired because at …","If this flag is set, the local coordinate axes of …","Combination of flags indicating that the rigid-body cannot …","Flag indicating that the rigid-body cannot rotate along …","Flag indicating that the rigid-body cannot rotate along …","Flag indicating that the rigid-body cannot rotate along …","A ray that can be cast against colliders.","The intersection between a ray and a  collider.","The scalar type used throughout this crate.","A revolute joint, locks all relative motion except for …","Create revolute joints using the builder pattern.","A rigid body.","A rigid-body is being rendered.","The rb_activation status of a body.","Mass and angular inertia added to a rigid-body on top of …","A builder for rigid-bodies.","Information used for Continuous-Collision-Detection.","Flags describing how the rigid-body has been modified by …","The set of colliders attached to this rigid-bodies.","Damping factors to progressively slow down a rigid-body.","The dominance groups of a rigid-body.","The user-defined external forces applied to this …","Index of a node of the interaction graph.","The unique handle of a rigid body added to a <code>RigidBodySet</code>.","Internal identifiers used by the physics engine.","The mass properties of a rigid-body.","The position of this rigid-body.","A set of rigid bodies that can be handled by a physics …","The status of a body, governing the way it is affected by …","The velocities of this rigid-body.","A rope joint, limits the maximum distance between two …","Create rope joints using the builder pattern.","The rotation matrix type.","A convex polygon dilated by a sphere (so it has round …","A convex polygon with rounded corners.","A convex polygon with rounded corners.","A cuboid dilated by a sphere (so it has round corners).","A cuboid with rounded corners.","A cuboid with rounded corners.","A shape with rounded borders.","A triangle dilated by a sphere (so it has round corners).","A triangle with rounded corners.","A triangle with rounded corners.","Flag set if at least one of the colliders involved in the …","Flag indicating that the <code>ColliderShape</code> component of the …","SIMD_WIDTH - 1","The number of lanes of a SIMD number.","Flag indicating that the <code>RigidBodyActivation</code> component of …","If this flag is set, the solver contacts will be rendered.","The maximum number of possible rotations and translations …","A 2D symmetric-definite-positive matrix.","A segment shape.","A segment shape.","A segment shape.","Logical description of the location of a point on a …","A collider that can generate intersection and intersection …","Trait implemented by shapes usable by Rapier.","Enum representing the type of a shape.","The shape of a collider.","A SIMD bool with SIMD_WIDTH lanes.","Trait implemented by shapes composed of multiple simpler …","A SIMD float with SIMD_WIDTH lanes.","A collider that can generate contacts and contact events.","A contact seen by the constraints solver for computing …","Flags affecting the behavior of the constraints solver for …","A vector with a dimension equal to the maximum number of …","Event occurring when two colliders start colliding","Type of the array containing the heightfield’s cells …","Event occurring when two colliders stop colliding.","Traits of convex shapes representable by a support mapping …","The …","The …","The the time of impact between two shapes.","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","The dimension of the space multiplied by two.","Flag indicating that the <code>RigidBodyType</code> component of this …","Flag indicating that the <code>ColliderType</code> component of the …","Temporary index to and edge of the interaction graph.","A face of a triangle-mesh’s half-edge topology.","A half-edge of a triangle-mesh’s half-edge topology.","A vertex of a triangle-mesh’s half-edge topology.","Indicated an inconsistency in the topology of a triangle …","A single contact between two shape.","The translation type.","A triangle-mesh.","A triangle mesh shape.","A triangle mesh shape.","The connected-components of a triangle mesh.","The status of the cell of an heightfield.","Trait describing all the types needed for storing a …","The half-edge topology information of a triangle mesh.","A triangle shape.","A triangle shape.","A triangle shape.","Orientation of a triangle.","Description of the location of a point on a triangle.","Enum representing the shape with its actual type","","Packed feature id identifying an unknown feature.","The unit vector type.","Unknown identifier.","The vector type.","Shape-dependent identifier of a vertex.","The translational degree of freedom along the joint’s …","The translational degree of freedom along the local X axis …","The translational degree of freedom along the joint’s …","The translational degree of freedom along the local Y axis …","Compute the axis-aligned bounding box of this triangle …","Computes the world-space Aabb of this half-space.","Compute the axis-aligned bounding box of this polyline.","Computes the world-space Aabb of this convex polygon, …","Computes the world-space Aabb of this heightfield, …","","","The shapes Aabbs.","","","","","","The activation status of this rigid-body.","","Mutable reference to the activation status of this …","Create a new rb_activation status initialised with the …","The collision types enabled for this collider.","The set of active collision types for this collider.","Controls whether collision-detection happens between two …","Contact pairs enabled for this collider.","Iter through all the active dynamic rigid-bodies on this …","","The events enabled for this collider.","The set of events enabled for this collider.","The events enabled for this collider.","Events enabled for this collider.","The physics hooks enabled for this collider.","The set of physics hooks enabled for this collider.","The physics hooks enabled for contact pairs and …","Physics hooks enabled for this collider.","","","Iter through all the active kinematic rigid-bodies on this …","","","","","","","","","","Adds a collider to this rigid-body.","Adds to this rigid-body a constant force applied at its …","Adds to this rigid-body a constant force at the given …","Adds to this rigid-body a constant torque at its …","Mass-properties of this rigid-bodies, added to the …","Sets the additional mass of the rigid-body being built.","Sets the additional mass-properties of the rigid-body …","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Allow interaction with everything.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Amount of penetration the engine wont attempt to correct …","The angular damping coefficient of this rigid-body.","Sets the damping factor for the angular part of the …","Damping factor for gradually slowing down the angular …","Damping factor for gradually slowing down the angular …","The angular linear velocity bellow which the body can fall …","The angular velocity of this rigid-body.","Sets the initial angular velocity of the rigid-body to be …","The angular velocity of the rigid-body.","The angular velocity of the rigid-body to be built.","Appends a second triangle mesh to this triangle mesh.","Returns the update velocities after applying the given …","Apply a displacement to the multibody_joint.","Apply displacements, in generalized coordinates, to this …","Applies a force at the given world-space point of the …","Applies an impulse at the center-of-mass of this …","Applies an impulse at the center-of-mass of this …","Applies an impulse at the given world-space point of this …","Applies an impulse at the given world-space point of this …","Applies an angular impulse at the center-of-mass of this …","Applies an angular impulse at the center-of-mass of this …onverts this abstract shape to a ball, if it is one.","Converts this abstract shape to a mutable ball, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this abstract shape to a capsule, if it is one.","Converts this abstract shape to a mutable capsule, if it …","","","","","Converts this abstract shape to a compound shape, if it is …","Converts this abstract shape to a mutable compound shape, …","Converts this abstract shape to a convex polygon, if it is …","Converts this abstract shape to a mutable convex polygon, …","Converts this abstract shape to a cuboid, if it is one.","Converts this abstract shape to a mutable cuboid, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts this abstract shape to a halfspace, if it is one.","Converts this abstract shape to a halfspace, if it is one.","Converts this abstract shape to a heightfield, if it is …","Converts this abstract shape to a mutable heightfield, if …","","This velocity seen as a mutable slice.","Converts this shape to a polygonal feature-map, if it is …","","","","","Converts this abstract shape to a polyline, if it is one.","Converts this abstract shape to a mutable polyline, if it …","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","","","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts this abstract shape to a round convex polygon, if …","Converts this abstract shape to a mutable round convex …","Converts this abstract shape to a round cuboid, if it is …","Converts this abstract shape to a mutable round cuboid, if …","Converts this abstract shape to a round triangle, if it is …","Converts this abstract shape to a round triangle, if it is …","Converts this abstract shape to a segment, if it is one.","Converts this abstract shape to a mutable segment, if it …","Converts this abstract shape to the given shape, if it is …","Converts this abstract shape to the given mutable shape, …","This velocity seen as a slice.","Convents this shape into its support mapping, if it has …","","","","","Converts this abstract shape to a triangle, if it is one.","Converts this abstract shape to a mutable triangle, if it …","Converts this abstract shape to a triangle mesh, if it is …","Converts this abstract shape to a mutable triangle mesh, …","Gets the underlying shape as an enum.","","","","","","","","","","This velocity seen as a vector.","This velocity seen as a mutable vector.","","Attach a collider to this rigid-body.","Iterate through the handles of all the rigid-bodies …","Iterates through all the enabled impulse joints attached …","Iterates through all the impulse joints attached to the …","Iterates through all the joints attached to the given …","","Initialize a ball shape defined by its radius.","Initialize a new collider builder with a ball shape …","The barycentric coordinates corresponding to this point …","The barycentric coordinates corresponding to this point …","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","","","","","","","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","The set of rigid-bodies.","The set of rigid-bodies.","","Iterate through the handles of all the rigid-bodies …","Handle to the first body attached to this joint.","The first rigid body handle.","Handle to the second body attached to this joint.","The second rigid body handle.","","The position of the multibody link containing this …","The type of this rigid-body.","","","The radius of the rounded border.","The number of subdivision used to approimate the curved …omputes the world-space bounding sphere of this triangle …","Computes the world-space bounding sphere of this …","Computes the world-space bounding sphere of this polyline, …","Computes the world-space bounding sphere of this convex …","Computes the world-space bounding sphere of this …","","","","","Build the fixed joint.","Builds the generic joint.","Builds the prismatic joint.","Builds the revolute joint.","Builds the rope joint.","Build a new rigid-body with the parameters configured with …","Builds a new collider attached to the given rigid-body.","Sets whether or not the rigid-body to be created can sleep …","","Whether or not the rigid-body to be created can sleep if …","Create a new activation status that prevents the …","Initialize a capsule shape from its endpoints and radius.","Initialize a capsule shape aligned with the <code>x</code> axis.","Initialize a new collider builder with a capsule shape …","Initialize a capsule shape aligned with the <code>y</code> axis.","Initialize a new collider builder with a capsule shape …","","","","","","","","","","","Find the closest intersection between a ray and a set of …","Find the closest intersection between a ray and a set of …","Casts a shape at a constant linear velocity and retrieve …","","Is CCD active for this rigid-body?","","","","","","","","","","","Sets whether or not continuous collision-detection is …","Is CCD enabled for this rigid-body?","Whether continuous collision-detection is enabled for the …","The max distance between this rigid-body’s center of …","","","","","","","","","","","The distance used by the CCD solver to decide if a …","Index of the cell a point is on after vertical projection.","The width of a single cell of this heightfield.","The world-space center-of-mass of this rigid-body.","The CFM factor to be used in the constraints resolution.","","","Apply motion-clamping to the bodies affected by the given …","Update this data-structure after one or multiple …","Clears all the contacts of this contact pair.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this shape into a boxed trait-objecthe handle of the first collider involved in this …","The handle of the first collider involved in the potential …","The handle of the first collider involved in the potential …","The first collider involved in the contact.","The handle of the first collider involved in this pair.","The first collider involved in the contact pair.","The handle of the second collider involved in this …","The handle of the first collider involved in the potential …","The handle of the first collider involved in the potential …","The second collider involved in the contact.","The handle of the second ocllider involved in this pair.","The second collider involved in the contact pair.","The color of the colliders Aabbs.","The color of colliders attached to dynamic rigid-bodies.","The color of colliders attached to fixed rigid-bodies.","The color of colliders attached to kinematic rigid-bodies.","The color of colliders not attached to any rigid-body.","The handles of colliders attached to this rigid body.","The set of colliders.","The set of colliders.","","","","Finds all handles of all the colliders with an Aabb …","","The collision groups used by this collider.","Sets the collision groups used by this collider.","The groups controlling the pairs of colliders that can …","The collision groups for the collider being built.","Combines the coefficients used for solving the spring …","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initialize a compound shape defined by its subshapes.","Initialize a new collider builder with a compound shape.","Computes the Aabb of this shape with the given position.","","","","","","","","","","Compute the axis-aligned bounding box of this collider.","Computes the bounding-sphere of this shape with the given …","Adds to <code>self</code> the gravitational force that would result in …","Computes the Aabb of this shape.","","","","","","","","","","Computes the bounding-sphere of this shape.","","","","","","","","","","Computes the swept Aabb of this shape, i.e., the space it …","Compute the axis-aligned bounding box of this collider …","Returns the connected-component information of this …","","","The collor for the segments joining the two contact points.","","The total force magnitude beyond which a contact force …","Sets the total force magnitude beyond which a contact …","","The total force magnitude beyond which a contact force …","The contact graph containing all contact pairs and their …","","","The color of the contact normals.","The length of the contact normals.","The contact pair involving two specific colliders.","Returns the contact pair at the given temporary index.","","The contact pair involving two specific colliders.","All the contact pairs maintained by this narrow-phase.","Computes the contacts between two polygonal features.","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","All the contacts involving the given collider.","All the contacts involving the given collider.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is the given joint handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is the given body handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is this collider handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Creates a new shared shape that is the convex-hull of the …","Initializes a new collider builder with a 2D convex …","Creates a new shared shape that is a convex polygon formed …","Creates a new collider builder that is a convex polygon …","","Copy to <code>self</code> the geometric information from <code>contact</code>.","","","Counters used for benchmarking only.","Sets the coupled degrees of freedom for this joint’s …","The coupled degrees of freedom of this joint.","Initialize a cuboid shape defined by its half-extents.","Initialize a new collider builder with a cuboid shape …","The vector of damping applied to this multibody.","The damping coefficient of the motor’s spring-like …","","","Mutable vector of damping applied to this multibody.","0-1: the damping ratio used by the springs for Baumgarte …","The underlying generic joint.","The underlying generic joint.","The underlying generic joint.","The underlying joint data.","The joint’s description.","The joint’s description.","The underlying joint data.","The underlying joint data.","The underlying joint data.","User-data associated to this contact.","Create a compound shape from the <code>TriMesh</code>. This involves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default angular velocity bellow which a body can be …","Fill <code>out</code> with the non-zero entries of a damping that can …","The default density used by the collider builder.","","The default friction coefficient used by the collider …","The default linear velocity bellow which a body can be put …","","The amount of time the rigid-body must remain bellow …","Set the position of this collider in the local-space of …","The density of this collider.","Sets the uniform density of the collider this builder will …etach a collider from this rigid-body.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","The distance between the two contact points.","The distance between the two original contacts points …","","","The dominance group of this rigid-body.","Sets the dominance group of this rigid-body.","The dominance group of the rigid-body to be built.","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Draws a colored line.","Draws a chain of line.","Draws a set of line.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The timestep length (default: <code>1.0 / 60.0</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes the builder of a new dynamic rigid body.","The effective world-space angular inertia (that takes the …","The dominance group of this rigid-body.","The actual dominance group of this rigid-body, after …","The inverse mass taking into account translation locking.","The effective mass (that takes the potential translation …","The square-root of the world-space inverse angular inertia …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Enables of disable CCD (continuous collision-detection) …","Enable or disable the rigid-body after its creation.","Enable or disable the collider after its creation.","Whether or not the joint is enabled.","","Will the rigid-body being built be enabled?","Whether or not the collider is enabled.","Will the collider being built be enabled?","Only allow translations of this rigid-body around specific …multiplier for how much of the constraint violation …","The ERP coefficient, multiplied by the inverse timestep …","Set the collider that will be excluded from the scene …","If set, this collider will be excluded from the scene …","Exclude from the query any collider attached to a …","Exclude from the query any collider attached to a fixed …","Exclude from the query any collider attached to a dynamic …","Set the rigid-body that will be excluded from the scene …","If set, any collider attached to this rigid-body will be …","Exclude from the query any collider that is a sensor.","Exclude from the query any collider that is not a sensor.","","","","","","","","","","","","","","Extracts the connected components of this polyline, …","Converts a face feature id into a packed feature id.","The face associated to this half-edge.","The <code>face_colors[i]</code> gives the connected-component index of …","Computes the contacts between two polygonal faces.","Compute contacts points between a face and a vertex.","The faces of this half-edge representation.","The normal of the given feature.","The shape’s normal at the given point located on a …","","The feature ID of this polygonal feature.","The feature ID of the first shape involved in the contact.","The feature ID of the second shape involved in the contact.","Groups filter.","Applies the contact pair filter.","Applies the intersection pair filter.","Finds the contact with the smallest signed distance.","Find the first time a CCD-enabled body has a non-sensor …","Initializes the builder of a new fixed rigid body.","The flags of this triangle mesh.","","Flags for locking rotation and translation.","","Flags indicating what particular type of colliders should …","A flat view of the index buffer of this mesh.","A flat view of the index buffer of this mesh.","Creates a new tracked contact where its input may need to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accumulation of external forces (only for dynamic bodies).","","Apply forward-kinematics to this multibody and its related …","The friction coefficient of this collider.","Sets the friction coefficient of the collider this builder …","The friction coefficient of this collider.","The effective friction coefficient at this contact point.","The friction coefficient of the collider to be built.","The combine rule used by this collider to combine its …","Sets the rule to be used to combine two friction …","The rule applied to combine the friction coefficients of …","The rule used to combine two friction coefficients.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Computes the mass properties of a ball.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Computes the mass properties of a capsule.","Computes the mass properties of a compound shape.","Init a contact force event from a contact pair.","Creates a new 2D convex polygon from an arbitrary set of …","Computes the mass properties of a convex polygon.","Creates a new 2D convex polygon from a set of points …","Computes the mass properties of a cuboid.","","","","","","","","","","","","","","","Create a <code>TriMesh</code> from a set of points assumed to describe …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a slice to a rigid-body velocity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the mass properties of a triangle.","Computes the mass properties of a triangle-mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The generalized accelerations of this multibodies.","The generalized velocities of this multibodies.","The mutable generalized velocities of this multibodies.","Gets the joint with the given handle.","Gets a reference to the multibody identified by its <code>handle</code>.","Gets the rigid-body with the given handle.","Get the collider with the given handle.","Gets a reference to a multibody, based on its temporary …","Gets a mutable reference to a multibody, based on its …","Gets a mutable reference to the joint with the given …","Gets a mutable reference to the multibody identified by …","Gets a mutable reference to the rigid-body with the given …","Gets a mutable reference to the collider with the given …","Gets a mutable reference to the multibody identified by …","Gets the joint with the given handle without a known …","Gets the joint with the given handle without a known …","Gets the rigid-body with the given handle without a known …","Gets the collider with the given handle without a known …","Gets a mutable reference to the joint with the given …","Gets a mutable reference to the rigid-body with the given …","Gets a mutable reference to the collider with the given …","","","The potential energy of this body in a gravity field.","The scale factor applied to the gravity affecting this …","Sets the scale applied to the gravity force affecting the …","Gravity is multiplied by this scaling factor before it’s …","The scale factor applied to the gravity affecting the …","The set of faces grouped by connected components.","Only colliders with collision groups compatible with this …","If set, only colliders with collision groups compatible …","One of the half-edge with this vertex as endpoint.","The half-edge adjacent to this face, with a starting point …","The half-edges of this half-edge representation.","Initialize a plane shape defined by its outward normal.","Initialize a new collider build with a half-space shape …","","Handle of the rigid-body this collider is attached to.","Handle a collision event.","","Handle a force event.","","Maintain the narrow-phase internal state by taking …","Is there any active contact in this contact pair?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the heightfield a the given point after vertical …","Initializes an heightfield shape defined by its set of …","Initializes a collider builder with a heightfield shape …","The height at each cell endpoint.","","","The identity position.","","The impulse applied to enforce the joint’s limit.","The impulse applied by this motor.","The impulse, along the contact normal, applied by this …","The color of the line between a rigid-body’s …","The color of the line between the two anchors of an …","The impulses applied by this joint.","Create a new rb_activation status initialised with the …","","","","","","","","","Gets the interaction with the given index.","","","The index buffer of this mesh.","The index buffer of this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The shape being rounded.","Inserts the specified flags in-place.","Inserts a new joint into this set and retrieve its handle.","Inserts a new multibody_joint into this set.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Insert a rigid body into this set and retrieve its handle.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts a new collider to this set and retrieve its handle.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts a new collider to this set, attach it to the given …","","Integrate the position of this multibody_joint.","Integrate the velocities in <code>self</code> to compute obtain new …","Integrate these forces to compute new velocities.","Compute new positions after integrating the given forces …","","The interaction between the two collision objects …","The interaction between the two collision objects …","All the interactions on this graph.","All the interaction involving the collision object with …","All the interactions on this graph with the corresponding …","All the mutable references to interactions involving the …","If <code>false</code>, friction and non-penetration constraints will be …","","Computes the velocity need to travel from <code>self.position</code> to …","Are the colliders intersecting?","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","The intersection graph containing all intersection pairs …","","The intersection pair involving two specific colliders.","The intersection pair involving two specific colliders.","All the intersection pairs maintained by this narrow-phase.","Gets the handle of up to one collider intersecting the …","All the intersections involving the given collider.","Find all the colliders containing the given point.","Find the all intersections between a ray and a set of …","Retrieve all the colliders intersecting the given shape.","All the intersections involving the given collider.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonverts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inverse augmented mass matrix of this multibody.","","The inverse of the time-stepping length, i.e. the steps …","The inverse of the mass of a rigid-body.","The inverse of the principal angular inertia of the …","An always-invalid joint handle.","An always-invalid rigid-body handle.","An always-invalid rigid-body handle.","An always-invalid collider handle.","An always-invalid collider handle.","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if the body is not asleep.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Does the given feature ID identify a backface of this …","Should we treat this contact as a bouncy contact? If <code>true</code>, …","Is CCD active for this rigid-body?","Is CCD (continous collision-detection) enabled for this …","Is this shape known to be convex?","","","","","","Is this shape a <code>ConvexPolyhedron</code>?","Is this rigid-body dynamic (i.e. can move and be affected …","Is this rigid body dynamic?","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no impulse_joints in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no rigid bodies in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no colliders in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is this joint enabled?","Is this rigid-body enabled?","Is this collider enabled?","Is the identified feature a face?","Is this rigid-body fixed (i.e. cannot move)?","Is this rigid body fixed?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this rigid-body kinematic (i.e. can move but is …","Is this rigid body kinematic?","Is the velocity of this body not zero?","Is this rigid-body moving fast enough so that it may cause …","Whether or not this contact existed during the last …","Returns <code>true</code> if the point is located on the relative …","Checks if this link is the root of the multibody.","Are the rotations of this rigid-body locked?","Checks if the i-th segment has been removed.","Is this collider a sensor?","Is this collider a sensor?","Is this collider a sensor?","Is this rigid body sleeping?","Are the translations of this rigid-body locked?","Is the identified feature unknown?","Is the identified feature a vertex?","Are these velocities exactly equal to zero?","","Iterates through all the joint on this set.","Iterates through all the multibody joints from this set.","Iterates through all the rigid-bodies on this set.","Iterate through all the colliders on this set.","Iterate through all the enabled colliders on this set.","Iterates mutably through all the enabled colliders on this …","Iterates mutably through all the joint on this set.","Iterates mutably through all the rigid-bodies on this set.","Iterates mutably through all the colliders on this set.","Sets in <code>out</code> the non-zero entries of the multibody_joint …","Multiply the multibody_joint jacobian by generalized …","The multibody joint of this link.","The multibody joint of this link.","Returns the the joint between two rigid-bodies (if it …","The CFM (constraints force mixing) coefficient applied to …","","The fraction of critical damping applied to the joint for …","0-1: multiplier for how much of the joint violation will …","The joint ERP coefficient, multiplied by the inverse …","Retrieve the joint graph where edges are impulse_joints …","","","","","Iterates through all the joints between two rigid-bodies.","Initializes the builder of a new position-based kinematic …","Initializes the builder of a new velocity-based kinematic …","The kinetic energy of this rigid-body.","The kinetic energy of this body.","","","The number of impulse_joints on this set.","The number of rigid bodies on this set.","The number of colliders on this set.","The degrees-of-freedoms limited by this joint.","The joint limits along the specified axis.","Sets the joint limits along the specified axis.","The limit distance attached bodies can translate along the …","Sets the <code>[min,max]</code> limit distances attached bodies can …","The limit angle attached bodies can translate along the …","Sets the <code>[min,max]</code> limit angles attached bodies can rotate …","The limit maximum distance attached bodies can translate.","Sets the <code>[min,max]</code> limit distances attached bodies can …","The limits, along each degrees of freedoms of this joint.","The linear damping coefficient of this rigid-body.","Sets the damping factor for the linear part of the …","Damping factor for gradually slowing down the …","Damping factor for gradually slowing down the …","The threshold linear velocity bellow which the body can …","Reference <code>i</code>-th multibody link of this multibody.","The handle of this multibody link.","Mutable reference to the multibody link with the given id.","Iterator through all the links of this multibody.","","Mutable iterator through all the links of this multibody.","The linear velocity of this rigid-body.","Sets the initial linear velocity of the rigid-body to be …","The linear velocity of the rigid-body.","The linear velocity of the rigid-body to be built.","Gets the local axis-aligned bounding box of this triangle …","The Aabb of this compound in its local-space.","Computes the local-space Aabb of this half-space.","Gets the local axis-aligned bounding box of this polyline.","Computes the local-space Aabb of this convex polygon.","Computes the local-space Aabb of this heightfield.","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The anchor of this joint, expressed in the first …","Sets the anchor of this joint, expressed in the first …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The anchor of this joint, expressed in the second …","Sets the anchor of this joint, expressed in the second …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The principal (local X) axis of this joint, expressed in …","Sets the principal (local X) axis of this joint, expressed …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal (local X) axis of this joint, expressed in …","Sets the principal (local X) axis of this joint, expressed …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Computes the local-space bounding sphere of this triangle …","The bounding-sphere of this compound in its local-space.","Computes the local-space bounding sphere of this …","Computes the local-space bounding sphere of this polyline.","Computes the local-space bounding sphere of this convex …","Computes the local-space bounding sphere of this …","The center of mass of a rigid-body expressed in its …","The joint’s frame, expressed in the first rigid-body’s …","Sets the joint’s frame, expressed in the first …","Sets the joint’s frame, expressed in the first …","The joint’s frame, expressed in the first rigid-body’s …","The joint’s frame, expressed in the second …","Sets joint’s frame, expressed in the second …","Sets the joint’s frame, expressed in the second …","The joint’s frame, expressed in the second …","The local mass properties of the rigid-body.","The contact point in the local-space of the first shape.","The contact point in the local-space of the second shape.","Compute the support polygonal face of <code>self</code> towards the <code>dir</code>.","","","","","Same as <code>self.local_support_point</code> except that <code>dir</code> is …","","The position of the rigid-body attached to this link …","","The world-space transform of the rigid-body attached to …","","Add the specified axes to the set of axes locked by this …","Locks or unlocks all the rotations of this rigid-body.","Prevents this rigid-body from rotating because of forces.","Locks or unlocks all the rotations of this rigid-body.","Prevents this rigid-body from translating because of …","Sets the degrees of freedom locked by the joint.","The axes along which this rigid-body cannot translate or …","Sets the axes along which this rigid-body cannot translate …","The degrees-of-freedoms locked by this joint.","If this shape is shared, then the content of <code>self</code> is …","The contact manifold.","","The set of contact manifolds between the two colliders.","Iterates through all the impulse joints attached to the …","Applies <code>f</code> to each segment of this heightfield that …","Applies a function to one sub-shape of this composite …","","","","","","","","","","","","","","The mass of the rigid-body.","The mass.","The mass of this rigid body.","The mass of this collider.","Sets the mass of the collider this builder will build.","Compute the mass-properties of this shape given its …","","The mass-properties of this rigid-body.","The mass-properties of this collider.","","","","","","","","","Compute the local-space mass properties of this collider.","Sets the mass properties of the collider this builder will …","Controls the way the collider’s mass-properties are …","The material (friction and restitution properties) of this …","","The maximum bound of the joint limit.","Maximum number of substeps performed by the  solver …","The maximum force this motor can deliver.","The world-space (unit) direction of the force with …","The magnitude of the largest force at a contact point of …","The magnitude and (unit) direction of the maximum impulse …","Maximum amount of penetration the solver will attempt to …","The maximum velocity any point of any collider attached to …","Maximum number of iterations performed to remove the …","Maximum number of iterations performed to solve friction …","Maximum number of iterations performed to solve …","Groups memberships.","The minimum bound of the joint limit.","Minimum timestep size when using CCD with multiple …","Minimum number of dynamic bodies in each active island …","Flags controlling what part of the physics engine need to …","The spring-like model used for simulating this motor.","","","Modifies the set of contacts seen by the constraints …","The motor affecting the joint’s degree of freedom along …","The motor affecting the joint’s translational degree of …","The motor affecting the joint’s rotational degree of …","Configure both the target angle and target velocity of the …","The motor affecting the joint’s translational degree of …","The degrees-of-freedoms motorised by this joint.","Sets the maximum force the motor can deliver along the …","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","The spring-like motor model along the specified axis of …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","The motors, along each degrees of freedoms of this joint.","","","","","Iterates through all the multibodies on this set.","","The color of the line between a rigid-body’s …","The color of the line between the two anchors of a …","The total number of freedoms of this multibody.","The number of degrees of freedom allowed by the …","","Do these changes justify a broad-phase update?","Do these changes justify a narrow-phase update?","Initializes a new physics pipeline.","Initialize a new collision event handler from crossbeam …","Initializes a new physics pipeline.","Creates a new debug-render pipeline from a given style and …","Initializes a new CCD solver","Creates a new triangle mesh from a vertex buffer and an …","Creates a new empty island manager.","Creates a new fixed joint.","Creates a new builder for fixed joints.","Creates a new generic joint that locks the specified …","Creates a new generic joint builder.","Creates a new empty set of impulse_joints.","Creates a new multibody with no link.","Create a new empty set of multibodies.","Creates a new multibody link.","Creates a new multibody joint from its description.","Creates a new prismatic joint allowing only relative …","Creates a new builder for prismatic joints.","Creates a new revolute joint allowing only relative …","Creates a new revolute joint builder.","Creates a new rope joint limiting the max distance between …","Creates a new builder for rope joints.","Create a new rigid-body velocity component.","Initializes the mass properties with the given …","Initialize a new builder for a rigid body which is either …","Builds a new pair of rigid-body handles.","Create a new empty set of rigid bodies.","Creates a new tracked contact.","Create a new empty broad-phase.","Creates a new pair of collider handles.","Creates a new collider material with the given friction …","Builds a new compound shape.","Builds a new halfspace from its center and its normal.","Creates a new polyline from a vertex buffer and an index …","Creates a new empty collection of collision objects.","Initializes with the given interaction groups and …","Creates a new 2D heightfield with the given heights and …","Wraps the given shape as a shared shape.","Creates a new empty narrow-phase.","Initialize a new collider builder with the given shape.","Create a new empty set of colliders.","Initializes an empty query pipeline.","A query filter that doesn’t exclude any collider.","Initializes the builder of a new position-based kinematic …","Initializes the builder of a new velocity-based kinematic …","Initializes the builder of a new fixed rigid body.","The next half-edge.","The predicted position of this rigid-body.","The next position of the rigid-body.","Prevent all interactions.","Casts a shape with an arbitrary continuous motion and …","The contact normal that can be modified.","The halfspace planar boundary’s outward normal.","The world-space contact normal shared by all the contact …","The normals of the edges of this convex polygon.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Number of actives contacts, i.e., contacts that will be …","The number of cells of this heightfield.","The total number of connected components.","The number of links on this multibody.","The number of segments forming this polyline.","The number of triangles forming this mesh.","Maximum number of velocity constrains that can be …","The number of vertices on this polygon (must be &lt;= 4).","Returns a mitered offset of the polygon.","Excludes all colliders not attached to a dynamic …","Exclude all colliders attached to a non-fixed rigid-body …","Excludes all colliders not attached to a kinematic …","The rigid body this collider is attached to.","","The handle of the parent link.","","","","","","","","","","","","","","","","The world-space contact point.","Construct a fixed-size point directly from data.","The vertices of this convex polygon.","","Initializes a polyline shape defined by its vertex and …","Initializes a collider builder with a polyline shape …","","","Const position of this collider relative to its parent …","The world-space position of this rigid-body.","Sets the initial position (translation and orientation) of …","The world-space position of this collider.","Sets the initial position (translation and orientation) of …","The world-space position of the rigid-body.","The initial position of the rigid-body to be built.","The position of this collider.","The position of this collider wrt the body it is attached …","Sets the initial position (translation and orientation) of …","Set the predicate to apply a custom collider filtering …","If set, any collider for which this closure returns false …","Outputs the set of bodies as well as their first …","Predicts the next position of this rigid-body, by …","The maximal distance separating two objects that will …","The angular inertia along the principal inertia axes of …","","","","","","","","","","","","","","","","","","Projects a point on <code>self</code>, with a maximum projection …","Perform a point projection assuming a solid interior based …","Projects a point on <code>self</code> transformed by <code>m</code>, unless the …","","Find the projection of a point on the closest collider.","Find the projection of a point on the closest collider.","Update colliders positions after rigid-bodies moved.","","","The approximate kinetic energy of this rigid-body.","Gets the acceleration structure of the composite shape.","","The acceleration structure used by this triangle-mesh.","The acceleration structure used by this compound shape.","","","","","","","The query dispatcher used by this narrow-phase to select …","The query dispatcher used by this query pipeline for …","","","","The range of connected components. …he underlying raw graph structure of this interaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recompute the mass-properties of this rigid-bodies based …","Recompute the mass-properties of this rigid-bodies based …","","The relative dominance of the bodies involved in this …","","Removes the specified flags in-place.","Removes a joint from this set.","Removes an multibody_joint from this set.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes a rigid-body, and all its attached colliders and …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Remove a collider from this set and update its parent …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Deletes all the impulse_joints attached to the given …","Removes all the multibody joints attached to a rigid-body.","Removes all the multibody_joints from the multibody the …","Was at least one of the colliders involved in the …","","Render the scene.","Creates a new debug-render pipeline that renders everything","Render only the colliders from the scene.","Render contact.","Render only the joints from the scene.","Render only the rigid-bodies from the scene.","","Resets to zero all the constant (linear) forces manually …","Resets to zero all the constant torques manually applied …","The restitution coefficient of this collider.","Sets the restitution coefficient of the collider this …","The restitution coefficient of this collider.","The effective restitution coefficient at this contact …","The restitution coefficient of the collider to be built.","The combine rule used by this collider to combine its …","Sets the rule to be used to combine two restitution …","The rule applied to combine the restitution coefficients …","The rule used to combine two restitution coefficients.","Locks or unlocks rotations of this rigid-body along each …","Locks or unlocks rotations of this rigid-body along each …","Only allow translations of this rigid-body around specific …","Reverse the orientation of the triangle mesh.","Reverse the orientation of this polyline by swapping the …","","The handle of the first body involved in the potential …","The handle of the first body involved in the potential …","The first rigid-body involved in this contact manifold.","The handle of the first body involved in the potential …","The handle of the first body involved in the potential …","The second rigid-body involved in this contact manifold.","The length of the local coordinate axes rendered for a …","The handle of the rigid-body of this link.","Returns the link of this multibody attached to the given …","The first link of this multibody.","The Aabb of this heightfield.","","Mutable reference to the first link of this multibody.","The rotational part of this rigid-body’s position.","Sets the initial orientation of the rigid-body to be …","The rotational part of this collider’s position.","Sets the initial orientation of the collider to be created.","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Creates a new shared shape with rounded corners that is the","Initializes a new collider builder with a round 2D convex …","Creates a new shared shape with round corners that is a …","Creates a new collider builder that is a round convex …","Initialize a round cuboid shape defined by its …","Initialize a new collider builder with a round cuboid …","Initializes a triangle shape with round corners.","Initializes a collider builder with a triangle shape with …","The scale factor applied to this heightfield.","","Returns a scaled version of this triangle mesh.","Computes a scaled version of this half-space.","Computes a scaled version of this polyline.","Computes a scaled version of this convex polygon.","Returns a scaled version of this heightfield.","Get the <code>i</code>-th segment of this mesh.","Initialize a segment shape from its endpoints.","Initializes a collider builder with a segment shape.","The i-th segment of the heightfield if it has not been …","Transforms  the feature-id of a segment to the feature-id …","An iterator through all the segments of this mesh.","Iterator through all the segments of this heightfield.","Was at least one of the colliders involved in the …","Sets whether or not the collider built by this builder is …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the collision types enabled for this collider.","Sets the events enabled for this collider.","Sets the physics hooks enabled for this collider.","Sets the rigid-body’s additional mass.","Sets the rigid-body’s additional mass-properties.","Sets the angular damping coefficient of this rigid-body.","The angular velocity of this rigid-body.","Sets the type of this rigid-body.","Sets the collision groups of this collider.","Sets the total force magnitude beyond which a contact …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets the uniform density of this collider.","The dominance group of this rigid-body.","Sets the time-stepping length.","Set whether this joint is enabled or not.","Sets whether this rigid-body is enabled or not.","Sets whether or not this collider is enabled.","Locks or unlocks rotations of this rigid-body along each …","Locks or unlocks rotations of this rigid-body along each …","Sets the flags of this triangle mesh, controlling its …","Sets the friction coefficient of this collider.","Sets the combine rule used by this collider to combine its …","Sets the gravity scale facter for this rigid-body.","Sets the inverse time-stepping length (i.e. the frequency).","Sets the joint limits along the specified axis.","Sets the <code>[min,max]</code> limit distances attached bodies can …","Sets the <code>[min,max]</code> limit angle attached bodies can …","Sets the <code>[min,max]</code> limit distances attached bodies can …","Sets the linear damping coefficient of this rigid-body.","The linear velocity of this rigid-body.","Sets the joint’s anchor, expressed in the local-space of …","Sets anchor of this joint, expressed in the first …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets anchor of this joint, expressed in the second …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the principal (local X) axis of this joint, expressed …","Sets the principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Sets the principal (local X) axis of this joint, expressed …","Sets the principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Sets the joint’s frame, expressed in the first …","Sets the joint’s frame, expressed in the first …","Sets joint’s frame, expressed in the second …","Sets the joint’s frame, expressed in the second …","Sets the axes along which this rigid-body cannot translate …","Changes the mass on these mass-properties.","Sets the mass of this collider.","Sets the mass properties of this collider.","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Sets the maximum force the motor can deliver along the …","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","If this rigid body is kinematic, sets its future position …","If this rigid body is kinematic, sets its future …","If this rigid body is kinematic, sets its future …","Sets the parent of the given collider.","Sets the position and <code>next_kinematic_position</code> of this …","Sets the position of this collider.","Sets the position of this collider wrt. its parent …","Sets the restitution coefficient of this collider.","Sets the combine rule used by this collider to combine its …","Sets the rotational part of this rigid-body’s position.","Sets the rotational part of this collider’s position.","Sets the rotational part of this collider’s rotaiton …","Sets the scale factor applied to this heightfield.","Mark the i-th segment of this heightfield as removed or …","Sets whether or not this is a sensor collider.","Sets the shape of this collider.","Sets the solver groups of this collider.","Sets the translational part of this rigid-body’s …","Sets the translational part of this collider’s position.","Sets the translational part of this collider’s …","The geometric shape of this collider.","","The shape of the collider to be built.","A mutable reference to the geometric shape of this …","Gets the type tag of this shape.","","","","","","","","","","The shapes of this compound shape.","","Retrieve the SharedShape. Also see the <code>shape()</code> function","","","Put this rigid-body to sleep.","Put this rigid body to sleep.","If a rigid-body is sleeping, its attached entities will …","Sets whether or not the rigid-body is to be created asleep.","Is this body sleeping?","Whether or not the rigid-body is to be created asleep.","","The solver contacts that can be modified.","The contacts that will be seen by the constraints solver …","Flags used to control some aspects of the constraints …","The solver groups used by this collider.","Sets the solver groups used by this collider.","The groups controlling the pairs of collider that have …","The solver groups for the collider being built.","","","","","","The left-most x-coordinate of this heightfield.","Is this a <code>Started</code> collision event?","","Executes one step of the collision detection.","Executes one timestep of the physics simulation.","The stiffness coefficient of the motor’s spring-like …","Is this a <code>Stopped</code> collision event?","The style used to compute the line colors for each element …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","The number of subdivision used to approximate the curved …","","Get the ID of the feature with a normal that maximizes the …","","Same as <code>self.support_point</code> except that <code>dir</code> is normalized.","Swaps the two collider handles in <code>self</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The friction impulse along the vector orthonormal to the …","The desired tangent relative velocity at the contact point.","The target position of the motor.","The target velocity of the motor.","Test whether contact should be computed between two …","Check if interactions should be allowed based on the …","Tests if the given collider should be taken into account …","Applies the filters described by <code>self</code> to a collider to …","Since how much time can this body sleep?","The amount of time the rigid-body must remain below the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Discretize the boundary of this round cuboid as a …","Discretize the boundary of this round convex polygon as a …","Rasterize this heightfield as a (potentially …oggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Returns the topology information of this trimesh, if it …","","Accumulation of external torques (only for dynamic bodies).","The sum of all the forces between the two colliders.","The sum of the magnitudes of each force between the two …","The sum of all the impulses applied by contacts on this …","The sum of the magnitudes of the contacts on this contact …","Transform each element of the mass properties.","Transforms the vertices of <code>self</code> by the given position <code>pos</code>.","Transforms in-place the vertices of this triangle mesh.","Return <code>self</code> rotated by <code>rotation</code>.","The translational part of this rigid-body’s position.","Sets the initial translation of the rigid-body to be …","The translational part of this collider’s position.","Sets the initial translation of the collider to be created.","Get the <code>i</code>-th triangle of this mesh.","Initializes a triangle shape.","Initializes a collider builder with a triangle shape.","An iterator through all the triangles of this mesh.","Initializes a triangle mesh shape defined by its vertex …","Initializes a collider builder with a triangle mesh shape …","Initializes a triangle mesh shape defined by its vertex …","Initializes a collider builder with a triangle mesh shape …his half-edge twin on the adjacent triangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range of segment ids that may intersect the given …","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The width of a single cell of this heightfield, without …","Initializes and generate the velocity constraints …","Initializes and generate the velocity constraints …","Unpacks this feature id into an explicit enum.","Retrieves the value of the identifier if <code>self</code> is a face.","Revries the value of the identifier if <code>self</code> is a vertex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the broad-phase, taking into account the new …","Update the acceleration structure on the query pipeline.","Helper function to update <code>self</code> to emulate a …","Updates the set of bodies that needs CCD to be resolved.","Update the query pipeline incrementally, avoiding a …","Update the positions of all the colliders attached to this …","Update the acceleration structure on the query pipeline.","Update the world-space mass properties of <code>self</code>, taking …","An arbitrary user-defined 128-bit integer associated to …","Sets an arbitrary user-defined 128-bit integer associated …","User-defined data attached to the manifold.","User-defined data associated to this rigid-body.","An arbitrary user-defined 128-bit integer associated to …","A user-defined piece of data.","User-defined data associated to this collider.","The user-data of the collider being built.","Retrieves the constant force(s) that the user has added to …","Forces applied by the user.","Retrieves the constant torque(s) that the user has added …","Torque applied by the user.","Construct a fixed-size column vector directly from data.","","The velocity of the given world-space point on this …","The velocity of the given world-space point on this …","Initialize and generate velocity constraints to enforce, …","","Converts a vertex feature id into a packed feature id.","The first vertex of this edge.","The vertex buffer of this mesh.","The vertex buffer of this mesh.","","","The vertices of this half-edge representation.","Up to two vertices forming this polygonal feature.","The feature IDs of this polygon’s vertices.","The volume (or surface in 2D) of this collider.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forces the specified rigid-body to wake up if it is …","Wakes up this rigid-body.","Wakes up this rigid body if it is sleeping.","Sets the interaction mask of this filter.","Creates a new triangle mesh from a vertex buffer and an …","Sets the group this filter is part of.","Initializes a CCD solver with a custom <code>QueryDispatcher</code> …","Creates a new empty narrow-phase with a custom query …","Initializes an empty query pipeline with a custom …","","","","The world-space center of mass of the rigid-body.","The world-space center of mass of the rigid-body.","The world-space inverse angular inertia tensor of the …","Velocities set to zero.","","","Constructs a pair of artificial handles that are not …","The time used to integrate the rigid-body’s velocity and …","The edge shared between the two triangles.","The first triangle, with an orientation opposite to the …","The second triangle, with an orientation opposite to the …","Trait implemented by rotations that can be used inside of …","A 2D affine transformation. Stored as a homogeneous 3x3 …","A 3D affine transformation. Stored as a homogeneous 4x4 …","A array-based statically sized matrix data storage.","The bidiagonalization of a general matrix.","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","The Cholesky decomposition of a …","Trait <strong>alias</strong> for <code>Add</code> and <code>AddAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Div</code> and <code>DivAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Mul</code> and <code>MulAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Sub</code> and <code>SubAssign</code> with result of type <code>Self</code>.","The QR decomposition (with column pivoting) of a general …","A complex number in Cartesian form.","Trait shared by all complex fields and its subfields (like …","","","A dynamically sized column-major matrix.","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A dynamically sized column vector.","A column vector slice dynamic numbers of rows and columns.","A column vector slice dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","An allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","A range with a size that may be known at compile-time.","","","A dual quaternion.","Dim of dynamically-sized algebraic entities.","","The type of the elements of each lane of this SIMD value.","Euclidean norm.","Trait implemented by fields, i.e., complex numbers and …","LU decomposition with full row and column pivoting.","Hessenberg decomposition of a general matrix.","Marker trait indicating that a storage is stored …","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","A direct isometry, i.e., a rotation followed by a …","A 2-dimensional direct isometry using a unit complex …","A 3-dimensional direct isometry using a unit quaternion …","A 2-dimensional direct isometry using a rotation matrix …","A 3-dimensional direct isometry using a rotation matrix …","LU decomposition with partial (row) pivoting.","Lp norm.","The most generic column-major matrix (and vector) type.","A stack-allocated, column-major, 1x1 square matrix.","A stack-allocated, column-major, 1x2 matrix.","A stack-allocated, column-major, 1x3 matrix.","A stack-allocated, column-major, 1x4 matrix.","A stack-allocated, column-major, 1x5 matrix.","A stack-allocated, column-major, 1x6 matrix.","A heap-allocated, column-major, matrix with 1 rows and a …","A stack-allocated, column-major, 2x2 square matrix.","A stack-allocated, column-major, 2x1 matrix.","A stack-allocated, column-major, 2x3 matrix.","A stack-allocated, column-major, 2x4 matrix.","A stack-allocated, column-major, 2x5 matrix.","A stack-allocated, column-major, 2x6 matrix.","A heap-allocated, column-major, matrix with 2 rows and a …","A stack-allocated, column-major, 3x3 square matrix.","A stack-allocated, column-major, 3x1 matrix.","A stack-allocated, column-major, 3x2 matrix.","A stack-allocated, column-major, 3x4 matrix.","A stack-allocated, column-major, 3x5 matrix.","A stack-allocated, column-major, 3x6 matrix.","A heap-allocated, column-major, matrix with 3 rows and a …","A stack-allocated, column-major, 4x4 square matrix.","A stack-allocated, column-major, 4x1 matrix.","A stack-allocated, column-major, 4x2 matrix.","A stack-allocated, column-major, 4x3 matrix.","A stack-allocated, column-major, 4x5 matrix.","A stack-allocated, column-major, 4x6 matrix.","A heap-allocated, column-major, matrix with 4 rows and a …","A stack-allocated, column-major, 5x5 square matrix.","A stack-allocated, column-major, 5x1 matrix.","A stack-allocated, column-major, 5x2 matrix.","A stack-allocated, column-major, 5x3 matrix.","A stack-allocated, column-major, 5x4 matrix.","A stack-allocated, column-major, 5x6 matrix.","A heap-allocated, column-major, matrix with 5 rows and a …","A stack-allocated, column-major, 6x6 square matrix.","A stack-allocated, column-major, 6x1 matrix.","A stack-allocated, column-major, 6x2 matrix.","A stack-allocated, column-major, 6x3 matrix.","A stack-allocated, column-major, 6x4 matrix.","A stack-allocated, column-major, 6x5 matrix.","A heap-allocated, column-major, matrix with 6 rows and a …","The type of the result of a matrix cross product.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned matrix column-major matrix with <code>D</code> columns.","A matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A mutable matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A column-major matrix slice with <code>R</code> rows and <code>C</code> columns.","A column-major matrix slice with <code>D</code> rows and columns.","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","The type of the result of a matrix sum.","Renamed to <code>VecStorage</code>.","A matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A mutable matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A trait for abstract matrix norms.","The type of the norm.","Trait implemented by entities scan be be normalized and …","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A point in an euclidean space.","An owned D-dimensional column vector.","A 3D orthographic projection stored as a homogeneous 4x4 …","The reshaped storage type.","","","","","","","","","","","","","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","A sequence of row or column permutations.","A 3D perspective projection stored as a homogeneous 4x4 …","A point with <code>D</code> elements.","A statically sized 1-dimensional column point.","A statically sized 2-dimensional column point.","A statically sized 3-dimensional column point.","A statically sized 4-dimensional column point.","A statically sized 5-dimensional column point.","A statically sized 6-dimensional column point.","An invertible 2D general transformation. Stored as a …","An invertible 3D general transformation. Stored as a …","The QR decomposition of a general matrix.","A quaternion. See the type alias …","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","Trait shared by all reals.","","A reflection wrt. a plane.","A 1-dimensional reflection.","A 2-dimensional reflection.","A 3-dimensional reflection.","A 4-dimensional reflection.","A 5-dimensional reflection.","A 6-dimensional reflection.","The transform category that results from the …","A matrix storage that can be reshaped in-place.","A rotation matrix.","A 2-dimensional rotation matrix.","A 3-dimensional rotation matrix.","A dynamically sized row vector.","An owned D-dimensional row vector.","A statically sized D-dimensional row vector.","A matrix with one row and <code>D</code> columns .","A stack-allocated, 1-dimensional row vector.","A stack-allocated, 2-dimensional row vector.","A stack-allocated, 3-dimensional row vector.","A stack-allocated, 4-dimensional row vector.","A stack-allocated, 5-dimensional row vector.","A stack-allocated, 6-dimensional row vector.","A statically sized column-major matrix with <code>R</code> rows and <code>C</code> …","A column-major matrix slice with dimensions known at …","A column-major matrix slice with dimensions known at …","A column-major matrix view with dimensions known at …","A column-major matrix view with dimensions known at …","Singular Value Decomposition of a general matrix.","A statically sized D-dimensional column vector.","A column vector slice with dimensions known at …","A column vector slice with dimensions known at …","A column vector view with dimensions known at compile-time.","A column vector view with dimensions known at compile-time.","The data storage for the sum of two matrices with …","The basic scalar type for all structures of <code>nalgebra</code>.","A scale which supports non-uniform scaling.","A 1-dimensional scale.","A 2-dimensional scale.","A 3-dimensional scale.","A 4-dimensional scale.","A 5-dimensional scale.","A 6-dimensional scale.","Schur decomposition of a square matrix.","Lane-wise generalization of <code>bool</code> for SIMD booleans.","Type of the result of comparing two SIMD values like <code>self</code>.","Lane-wise generalisation of <code>ComplexField</code> for SIMD complex …","Lane-wise generalization of the standard <code>PartialOrd</code> for …","Lanewise generalization of <code>RealField</code> for SIMD reals.","Type of the coefficients of a complex number.","Base trait for every SIMD types.","A similarity, i.e., an uniform scaling, followed by a …","A 2-dimensional similarity.","A 3-dimensional similarity.","A 2-dimensional similarity using a rotation matrix for its …","A 3-dimensional similarity using a rotation matrix for its …","Type of the range size. May be a type-level integer.","A range with a size that may be known at compile-time.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","A square matrix.","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","Indicates that <code>Self</code> is a more specific <code>Transform</code> category …","Indicates that <code>Self</code> is a more general <code>Transform</code> category …","Eigendecomposition of a symmetric matrix.","Tridiagonalization of a symmetric matrix.","Tag representing an affine <code>Transform</code>. Its bottom-row is …","Trait implemented by phantom types identifying the …","Traits that gives the <code>Transform</code> category that is …","Tag representing the most general (not necessarily …","Tag representing the most general inversible <code>Transform</code> …","","","A transformation matrix in homogeneous coordinates.","A 2D general transformation that may not be invertible. …","A 3D general transformation that may not be inversible. …","A translation.","A 1-dimensional translation.","A 2-dimensional translation.","A 3-dimensional translation.","A 4-dimensional translation.","A 5-dimensional translation.","A 6-dimensional translation.","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","UDU factorization.","","L-infinite norm aka. Chebytchev norm aka. uniform norm …","An owned matrix with uninitialized data.","An owned matrix with uninitialized data.","A wrapper that ensures the underlying algebraic entity has …","A 2D rotation represented as a complex number with …","A unit dual quaternion. May be used to represent a …","A unit quaternions. May be used to represent a rotation.","A stack-allocated, 1-dimensional unit vector.","A stack-allocated, 2-dimensional unit vector.","A stack-allocated, 3-dimensional unit vector.","A stack-allocated, 4-dimensional unit vector.","A stack-allocated, 5-dimensional unit vector.","A stack-allocated, 6-dimensional unit vector.","A Vec-based matrix data storage. It may be …","A matrix with one column and <code>D</code> rows.","A stack-allocated, 1-dimensional column vector.","A stack-allocated, 2-dimensional column vector.","A stack-allocated, 3-dimensional column vector.","A stack-allocated, 4-dimensional column vector.","A stack-allocated, 5-dimensional column vector.","A stack-allocated, 6-dimensional column vector.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","The type of the result of a matrix sum.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","","","","","The column vector with a 1 as its fifth component, and …","The unit column vector with a 1 as its fifth component, …","The absolute value of <code>a</code>.","The absolute value of this complex number: …","","Computes the component-wise absolute value.","","","","","","","","","","","","","","","","","","Computes the principal value of the inverse cosine of <code>self</code>.","Calculates the quaternionic arccosinus.","","Computes the principal value of inverse hyperbolic cosine …","Calculates the hyperbolic quaternionic arccosinus.","Equivalent to <code>self.adjoint() * rhs</code>.","Equivalent to <code>self.adjoint() * rhs</code> but stores the result …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a scalar to <code>self</code>.","Adds a scalar to <code>self</code> in-place.","Equivalent to <code>self + rhs</code> but stores the result into <code>out</code> to …","The adjoint (aka. conjugate-transpose) of <code>self</code>.","Sets <code>self</code> to its adjoint (aka. conjugate-transpose).","Takes the adjoint (aka. conjugate-transpose) of <code>self</code> and …","Are all vector lanes true?","","","","","","","Returns the absolute value of the component with the …","Returns the absolute value of the component with the …","Lane-wise bitwise and of the vector elements.","The smallest angle between two vectors.","The rotation angle in [0; pi] of this unit quaternion.","The rotation angle in <code>]-pi; pi]</code> of this unit complex …","The rotation angle.","The rotation angle in [0; pi].","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","Is any vector lane true?","Appends to <code>self</code> a rotation given in the axis-angle form, …","Computes the transformation equal to <code>self</code> followed by a …","Computes in-place the transformation equal to <code>self</code> …","Adds the interchange of the row (or column) <code>i</code> with the row …","Appends to <code>self</code> the given rotation in-place.","Appends to <code>self</code> the given rotation in-place.","Appends in-place to <code>self</code> a rotation centered at the point …","Appends in-place to <code>self</code> a rotation centered at the point …","Appends in-place to <code>self</code> a rotation centered at the point <code>p</code>…","Appends in-place to <code>self</code> a rotation centered at the point <code>p</code>…","Computes the transformation equal to <code>self</code> followed by an …","The similarity transformation that applies a scaling …","Computes in-place the transformation equal to <code>self</code> …","Sets <code>self</code> to the similarity transformation that applies a …","Computes the transformation equal to <code>self</code> followed by a …","Computes the transformation equal to <code>self</code> followed by a …","Appends to <code>self</code> the given translation in-place.","Appends to <code>self</code> the given translation in-place.","Applies a closure <code>f</code> to modify each component of <code>self</code>.","Replaces each component of <code>self</code> by the result of a closure …","Returns <code>self</code> with each of its components replaced by the …","Uses the metric induced by the given <code>norm</code> to compute the …","Uses the given <code>norm</code> to compute the norm of <code>self</code>.","Computes the index and value of the vector component with …","Computes the index and value of the vector component with …","The argument of this complex numberreference to the underlying homogeneous transformation …","A reference to the underlying homogeneous transformation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable pointer to the start of the matrix.","Converts this array storage to a mutable slice.","Extracts a mutable slice containing the entire matrix …","A mutable slice containing all the components stored in …","Retrieves the mutable data buffer as a contiguous slice.","","","","","Returns a mutable reference to the underlying value. This …","A reference to this transformation seen as a <code>Projective3</code>.","A reference to this transformation seen as a <code>Projective3</code>.","Returns a pointer to the start of the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the single element in this matrix.","Get a mutable reference to the single element in this …","Converts this array storage to a slice.","Extracts a slice containing the entire matrix entries …","A slice containing all the components stored in this …","Retrieves the data buffer as a contiguous slice.","","","","","","The underlying data storage.","The underlying mutable data storage.","Reinterprets this quaternion as a 4D vector.","Transforms this quaternion into its 4D vector form (Vector …","Returns this matrix as a view.","Returns this matrix as a mutable view.","","Computes the principal value of the inverse sine of <code>self</code>.","Calculates the quaternionic arcsinus.","","Computes the principal value of inverse hyperbolic sine of …","Calculates the hyperbolic quaternionic arcsinus.","Gets the <code>width / height</code> aspect ratio of the view frustum.","","","","Assumes a matrix’s entries to be initialized. This …","","Computes the principal value of the inverse tangent of <code>self</code>…","Calculates the quaternionic arctangent.","","","Computes the principal value of inverse hyperbolic tangent …","Calculates the hyperbolic quaternionic arctangent.","Computes <code>self = a * x * c + b * self</code>.","The reflection axis.","The rotation axis of this unit quaternion or <code>None</code> if the …","The rotation axis. Returns <code>None</code> if the rotation angle is …","","The rotation axis and angle in (0, pi] of this unit …","The rotation axis and angle in (0, pi] of this complex …","The rotation axis and angle in (0, pi] of this rotation …","Computes <code>self = a * x + b * self</code>.","The column vector with a 1 as its sixth component, and …","The unit column vector with a 1 as its sixth component, …","[Reexported at the root of this crate.] Data structures …","The start index of the range.","The reflection bias.","","Computes the bidiagonalization using householder …","A bit mask representing the boolean state of each lanes of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bottom offset of the view cuboid.","Returns the the 1-norm of the complex component with the …","Returns the the 1-norm of the complex component with the …","Returns a new vector with the same magnitude as <code>self</code> …","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","","","Computes componentwise …","","","The center of two points.","Checks that the given matrix is a valid homogeneous …","","","","","Attempts to compute the Cholesky decomposition of this …","Returns a reference to the input value clamped to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this data storage to one that does not contain any …","Clones this transform into one that owns its data.","","Clones this matrix to one that owns its data.","","","","","Clones this unit quaternion into one that owns its data.","Clones this matrix into one that owns its data. The actual …","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes componentwise …","Computes the QR decomposition (with column pivoting) of …","","Returns a view containing the i-th column of this matrix.","Iterate through the columns of this matrix.","Mutably iterates through this matrix columns.","The mean of all the columns of this matrix.","Returns a view containing the i-th column of this matrix.","Returns a view containing the <code>n</code> first elements of the i-th …","Returns a view containing the <code>n</code> first elements of the i-th …","The product of all the columns of this matrix.","The sum of all the columns of this matrix.","The variance of all the columns of this matrix.","Extracts from this matrix a set of consecutive columns.","Extracts from this matrix <code>ncols</code> columns. The number of …","Extracts from this matrix <code>ncols</code> columns. The number of …","Extracts from this matrix <code>ncols</code> columns skipping <code>step</code> …","Extracts from this matrix <code>ncols</code> columns skipping <code>step</code> …","Extracts from this matrix a set of consecutive columns.","View containing all the columns indexed by the range <code>rows</code>.","Mutable view containing all the columns indexed by the …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Extracts from this matrix a set of consecutive columns …","Extracts from this matrix a set of consecutive columns …","The underlying complex number.","Computes the eigenvalues of this matrix.","Computes the complex eigenvalues of the decomposed matrix.","Componentwise matrix or vector division.","Inplace componentwise matrix or vector division.","Inplace componentwise matrix or vector division.","Componentwise matrix or vector multiplication.","Inplace componentwise matrix or vector multiplication.","Inplace componentwise matrix or vector multiplication.","Returns a column vector resulting from the folding of <code>f</code> on …","Returns a row vector where each element is the result of …","Returns a column vector where each element is the result …","Returns the complex conjugate. i.e. <code>re - i im</code>","","","The conjugate of <code>self</code>.","Compute the conjugate of this unit quaternion.","Compute the conjugate of this unit quaternion.","Compute the conjugate of this unit complex number.","The conjugate of this quaternion.","The conjugate of this dual quaternion, containing the …","The conjugate of the complex matrix <code>self</code> computed in-place.","Compute the conjugate of this unit quaternion in-place.","Compute in-place the conjugate of this unit complex number.","Compute the conjugate of this unit quaternion in-place.","Replaces this quaternion by its conjugate.","Replaces this quaternion by its conjugate.","Sets <code>self</code> to its adjoint.","The conjugate transposition of <code>self</code>.","Takes the conjugate and transposes <code>self</code> and store the …","Converts an object from one type to an equivalent or more …","Converts an object from one type to an equivalent or more …","Use with care! Same as <code>try_convert</code> but without any …","Use with care! Same as <code>try_convert</code> but without any …","Returns the convolution of the target vector and a kernel.","Returns the convolution of the target vector and a kernel.","Returns the convolution of the target vector and a kernel.","The coordinates of this point, i.e., the shift from the …","This quaternion as a 4D vector of coordinates in the …","Fills this matrix with the content of another one. Both …","Fills this matrix with the content of a slice. Both must …","","","","","Copies the sign of <code>sign</code> to <code>self</code>.","","Computes the cosine of <code>self</code>.","Calculates the quaternionic cosinus.","The cosine of the rotation angle.","Cardinal cos","","Computes the hyperbolic cosine of <code>self</code>.","Calculates the hyperbolic quaternionic cosinus.","","The 3D cross product between two vectors.","Computes the matrix <code>M</code> such that for all vector <code>v</code> we have …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","The diagonal matrix resulting from the factorization","Returns the diagonal elements as a matrix","The data storage that contains all the matrix components. …omputes the matrix determinant.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","The determinant of the matrix corresponding to this …","","","The diagonal of this matrix.","The diagonal part of this decomposed matrix.","The diagonal components of this decomposition.","","","","The value of this dimension.","","The distance between two points.","The squared distance between two pointsonstruct a dynamic matrix directly from data.","The dot product between two vectors or matrices (seen as …","The dot product of two quaternions.","The conjugate-linear dot product between two vectors or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The dual component of the quaternion","The underlying dual quaternion.","Construct a dynamic column vector directly from data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the eigenvalues of this matrix.","Computes the real eigenvalues of the decomposed matrix.","The unsorted eigenvalues of the decomposed matrix.","The eigenvectors of the decomposed matrix.","","","The index immediately after the last index inside of the …","","","","","","","Tests whether <code>self</code> and <code>rhs</code> are exactly equal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the euler angles corresponding to this unit …","Euler angles corresponding to this rotation from a …","Represent this rotation as Euler angles.","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes exponential of this matrix","Compute the exponential of a quaternion.","Compute the exponential of a quaternion.","","","Compute the exponential of a quaternion. Returns the …","","","Extends the number of columns of a <code>Matrix</code> with <code>Vector</code>s …","Extend the number of rows of a <code>Vector</code> with elements from …","Extend the number of columns of the <code>Matrix</code> with elements …","Extends the number of columns of the <code>VecStorage</code> with …","Extends the number of rows of the <code>VecStorage</code> with elements …","Extends the number of columns of the <code>VecStorage</code> with …","Extends the number of columns of the <code>VecStorage</code> with …","Extracts the i-th lane of <code>self</code>.","","","","","","","","","","","","","Extracts the i-th lane of <code>self</code> without bound-checking.","","","","","","","","","","","","","Creates an isometry that corresponds to the local frame of …","Creates an unit quaternion that corresponds to the local …","Creates a rotation that corresponds to the local frame of …","Creates an isometry that corresponds to the local frame of …","Creates an isometry that corresponds to the local frame of …","Creates an similarity that corresponds to a scaling factor …","Creates an similarity that corresponds to a scaling factor …","Sets all the elements of this matrix to <code>val</code>.","Sets all the elements of the selected column to <code>val</code>.","Sets all the diagonal elements of this matrix to <code>val</code>.","Sets all the elements of the lower-triangular part of this …","Copies the upper-triangle of this matrix to its …","Sets all the elements of the selected row to <code>val</code>.","Sets all the elements of the lower-triangular part of this …","Copies the upper-triangle of this matrix to its …","Sets all the elements of this matrix to the value returned …","Fills <code>self</code> with the identity matrix.","Extracts a compile-time number of consecutive columns from …","Extracts a compile-time number of consecutive columns from …","Extracts from this matrix a compile-time number of columns …","Extracts from this matrix a compile-time number of columns …","Resizes this matrix so that it contains <code>R2::value()</code> rows …","Extracts a compile-time number of consecutive rows from …","Extracts a compile-time number of consecutive rows from …","Extracts from this matrix a compile-time number of rows …","Extracts from this matrix a compile-time number of rows …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component …","Slices this matrix starting at its component …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","Returns a view of this matrix starting at its component …","Returns a view of this matrix starting at its component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Folds a function <code>f</code> on each entry of <code>self</code>.","Similar to <code>self.iter().fold(init, f)</code> except that <code>init</code> is …","Gets the y field of view of the view frustum.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Builds the unit complex number corresponding to the …","Creates a new statically-allocated matrix from the given …","Builds a 3D homogeneous rotation matrix from an axis and a …","Creates a new quaternion from a unit vector (the rotation …","Builds a 3D rotation matrix from an axis and a rotation …","Builds a rotation from a basis assumed to be orthonormal.","Builds an unit quaternion from a basis assumed to be …","Builds a rotation from a basis assumed to be orthonormal.","Builds a rotation from a basis assumed to be orthonormal.","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Builds a new matrix from its columns.","Creates a new unit complex number from a complex number.","Creates a new unit complex number from a complex number.","Creates a new point with the given coordinates.","Builds the unit complex number from the sinus and cosinus …","Creates a new matrix with the given data.","Creates a new matrix with the given data without …","Creates a square matrix with its diagonal set to <code>diag</code> and …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a new matrix with its diagonal filled with copies …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix with all its elements set to <code>elem</code>.","Creates a new rotation from Euler angles.","Creates a new unit quaternion from Euler angles.","Creates a new rotation from Euler angles.","","","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix filled with the results of a function …","Creates a new orthographic projection matrix from an …","Constructs a vector from coordinates in projective space, …","Creates a new point from its homogeneous vector …","","","","","","Constructs a pure quaternion.","","Return a unit dual quaternion representing the translation …","Creates a new similarity from its rotational and …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix with all its elements filled by an …","Builds an unit quaternion by extracting the rotation part …","Builds an unit complex by extracting the rotation part of …","Builds a rotation matrix by extracting the rotation part …","Builds a rotation matrix by extracting the rotation part …","Builds an unit complex by extracting the rotation part of …","Builds an unit quaternion by extracting the rotation part …","Builds a rotation matrix by extracting the rotation part …","Builds a rotation matrix by extracting the rotation part …","Creates a new transformation from the given homogeneous …","Creates a new rotation from the given square matrix.","Wraps the given matrix to interpret it as a 3D …","Wraps the given matrix to interpret it as a 3D perspective …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Return a dual quaternion representing the translation and …","Creates a new quaternion from its scalar and vector parts. …","Creates a new isometry from its rotational and …","Creates a new similarity from its rotational and …","Creates a new quaternion from its polar decomposition.","Creates a new unit quaternion from a quaternion.","Create a new matrix view without bounds checking and from …","Create a new matrix view without bounds checking and from …","Builds a pure-real complex number from the given value.","","Constructs a real quaternion.","Creates a dual quaternion from only its real part, with no …","Creates a dual quaternion from its rotation and …","Wraps the given reference, assuming it is already …","Creates a dual quaternion from a unit quaternion rotation.","Builds the unit complex number from the corresponding 2D …","Builds an unit quaternion from a rotation matrix.","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix with all its elements filled by an …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Builds a new matrix from its rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a 3D homogeneous rotation matrix from an axis and …","Builds a unit complex rotation from an angle in radian …","Creates a new unit quaternion rotation from a rotation …","Builds a 2 dimensional rotation matrix from an angle in …","Builds a 3D rotation matrix from an axis scaled by the …","Creates a new unit quaternion rotation from a rotation …","Creates a new similarity that applies only a scaling …","Builds a pure-real complex number from the given value.","","","","","","","","","","","","Creates a new mutable matrix view from the given data …","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new matrix view from the given data array.","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new point from a slice.","Creates a matrix view from an array and with dimensions …","Creates a mutable matrix view from an array and with …","Creates, without bound-checking, a mutable matrix view …","Creates, without bound-checking, a matrix view from an …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new mutable matrix view …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a mutable matrix view from an array and with …","Creates a matrix view from an array and with dimensions …","Creates, without bounds checking, a matrix view from an …","Creates, without bound-checking, a mutable matrix view …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds an instance of <code>Self</code> from a run-time value. Panics …","","","","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a new heap-allocated matrix from the given …","Creates a new heap-allocated matrix from the given …","Creates a new heap-allocated matrix from the given …","Creates a quaternion from a 4D vector. The quaternion …","Creates a new translation from the given vector.","","","","","","","","","","","","","","","","","","","","","","","","","Computes the LU decomposition with full pivoting of <code>matrix</code>.","","","Computes <code>self = alpha * a * b + beta * self</code>, where …","Computes <code>self = alpha * a.adjoint() * b + beta * self</code>, …","Computes <code>self = alpha * a.transpose() * b + beta * self</code>, …","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is a …","Computes <code>self = alpha * a.adjoint() * x + beta * self</code>, …","Computes <code>self = alpha * a.transpose() * x + beta * self</code>, …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","[Reexported at the root of this crate.] Data structures …","Computes <code>self = alpha * x * y.transpose() + beta * self</code>.","Computes <code>self = alpha * x * y.transpose() + beta * self</code>, …","Computes <code>self = alpha * x * y.adjoint() + beta * self</code>.","Produces a view of the data at the given index, or <code>None</code> if …","","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","Produces a mutable view of the data at the given index, or …","Retrieves a reference to the i-th element without …","Produces a view of the data at the given index, without …","Gets a reference to i-th element of this point without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Returns a mutable view of the data at the given index, …","Gets a mutable reference to i-th element of this point …","","","Retrieves the upper trapezoidal submatrix <code>H</code> of this …","Divides quaternion into two.","Indicates whether a <code>Transform</code> with the category <code>Self</code> has a …","","","","","","","","","","","","","","","","","","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is an …","Computes <code>self = alpha * x * y.adjoint() + beta * self</code>, …","The hermitian part of <code>self</code>, i.e., …","","Computes the Hessenberg decomposition of this matrix using …","Computes (self.conjugate() * self + other.conjugate() * …","","Returns imaginary unit","Computes the index of the vector component with the …","Computes the index of the matrix component with the …","Computes the index of the vector component with the …","Computes the index of the vector component with the …","Computes the index of the matrix component with the …","The rotation identity.","Creates a new identity transform.","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","","The rotation identity.","The unit complex number multiplicative identity.","The unit dual quaternion multiplicative identity, which …","","","Creates a new square identity rotation of the given …","The quaternion multiplicative identity.","The dual quaternion multiplicative identity.","Creates a new identity translation.","Creates a new identity scale.","Creates a new identity isometry.","Creates a new identity similarity.","Creates a new statically-allocated sequence of <code>D</code> identity …","Creates a new dynamically-allocated sequence of <code>n</code> identity …","Creates a new identity matrix.","Creates a new sequence of D identity permutations.","Merges the value of <code>if_value()</code> and <code>else_value()</code> depending …","Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and …","Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and …","Imaginary portion of the complex number","The imaginary part of this quaternion.","The imaginary part of this complex number.","","Computes the index of the vector component with the …","Computes the index of the vector component with the …","","","Produces a view of the data at the given index, or panics …","","","","","","","","","Produces a mutable view of the data at the given index, or …","","","","Returns the infimum of <code>a</code> and <code>b</code>.","Computes the infimum (aka. componentwise min) of two …","Computes the infimum (aka. componentwise min) of two …","Returns simultaneously the infimum and supremum of <code>a</code> and <code>b</code>.","Computes the (infimum, supremum) of two matrices/vectors.","Computes the (infimum, supremum) of two points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the inner product (also known as the dot …","Inserts a column filled with <code>val</code> at the <code>i-th</code> position.","Updates the decomposition such that we get the …","Inserts <code>n</code> columns filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>ninsert.value()</code> columns starting at the <code>i-th</code> place …","Inserts <code>D</code> columns filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>D::dim()</code> rows filled with <code>val</code> starting at the <code>i-th</code> …","Inserts a row filled with <code>val</code> at the <code>i-th</code> position.","Inserts <code>n</code> rows filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>ninsert.value()</code> rows at the <code>i-th</code> place of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the underlying matrix.","Retrieves the underlying value.","Unwraps the underlying matrix.","Retrieves the underlying homogeneous matrix.","Retrieves the underlying homogeneous matrix.","","","Builds a matrix data storage that does not contain any …","","Moves this matrix into one that owns its data.","","","","","Moves this unit quaternion into one that owns its data.","Moves this matrix into one that owns its data. The actual …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this 1x1 matrix into a scalar.","Extracts the original slice from this storage.","Extracts the original slice from this storage.","Extracts the original slice from this storage","Returns <code>1/self</code>","","","Computes <code>self.inverse() * rhs</code> in a more efficient way.","Applies this sequence of permutations in reverse to the …","Applies this sequence of permutations in reverse to the …","The rotation inverse.","Inverts this transformation. Use <code>.try_inverse</code> if this …","Inverts this dual quaternion if it is not zero.","","Inverts this complex number if it is not zero.","Inverts this quaternion if it is not zero.","","Inverts <code>self</code>.","","Inverts <code>self</code>.","Inverts <code>self</code>.","Inverts <code>self</code>.","Retrieves the inverse of the underlying homogeneous matrix.","Retrieves the inverse of the underlying homogeneous matrix.","Computes the inverse of the decomposed matrix.","Change <code>self</code> to its inverse.","Inverts this transformation in-place. Use <code>.try_inverse_mut</code> …","Inverts this dual quaternion in place if it is not zero.","","Inverts this quaternion if it is not zero.","Inverts in-place this unit complex number.","","Inverts <code>self</code> in-place.","","Inverts <code>self</code> in-place.","Inverts <code>self</code> in-place.","Inverts <code>self</code> in-place.","Apply the inverse rotation to the given point.","Transform the given point by the inverse of this …","Rotate the given point by the inverse of this unit complex …","Rotate a point by the inverse of this unit quaternion. …","","","Rotate and translate a point by the inverse of this unit …","Rotate the given point by the inverse of this rotation. …","","Translate the given point by the inverse of this …","Transform the given point by the inverse of this isometry. …","Transform the given point by the inverse of this …","Apply the inverse rotation to the given unit vector.","Rotate the given vector by the inverse of this unit …","Rotate a unit vector by the inverse of this unit …","Rotate a vector by the inverse of this unit quaternion. …","Rotate the given vector by the inverse of this rotation. …","","Transform the given unit vector by the inverse of this …","Apply the inverse rotation to the given vector.","Transform the given vector by the inverse of this …","Rotate a vector by the inverse of this unit quaternion, …","","Rotate the given vector by the inverse of this unit …","","Rotate a vector by the inverse of this unit quaternion. …","Rotate the given vector by the inverse of this rotation. …","","Transform the given vector by the inverse of this …","Transform the given vector by the inverse of this …","Inverts <code>self</code>.","","","Indicates whether this data buffer stores its elements …","","","","","","Indicates if <code>try_convert</code> will succeed without actually …","Returns true if the matrix contains no elements.","Returns true if the underlying vector contains no elements.","Returns true if the point contains no elements.","Returns true if the permutation sequence contains no …","","","Checks if the given complex number is finite","Indicated if this is the identity matrix within a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the given complex number is infinite","Returns <code>true</code> if this matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Checks if the given complex number is NaN","Checks if the given complex number is normal","","Checks that <code>Mᵀ × M = Id</code>.","Check if the quaternion is pure.","Is the sign of this real number negative?","Is the sign of this real number positive?","Checks that this matrix is orthogonal and has a …","Indicates if this is a square matrix.","Indicates whether this decomposition contains an …","","","","","The part of this similarity that does not include the …","The unit dual quaternion needed to make <code>self</code> and <code>other</code> …","Iterates through this matrix coordinates in column-major …","Iterates through this point coordinates.","Mutably iterates through this matrix coordinates.","Mutably iterates through this point coordinates.","The column vector with <code>val</code> as its i-th component.","The column unit vector with <code>T::one()</code> as its i-th component.","The kronecker product of two matrices (aka. tensor product …","Retrieves the lower-triangular factor of the Cholesky …","The lower triangular matrix of this decomposition.","The lower triangular matrix of this decomposition.","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Retrieves the lower-triangular factor of the Cholesky …","The lower triangular matrix of this decomposition.","The number of lanes of this SIMD value.","","","","","","","","","","","","","","","The left offset of the view cuboid.","Left quaternionic division.","","The total number of elements of this matrix.","The number of elements on the underlying vector.","The dimension of this point.","The number of non-identity permutations applied by this …","","Returns <code>self * (1.0 - t) + rhs * t</code>, i.e., the linear blend …","Linear interpolation between two unit dual quaternions.","Linear interpolation between two unit quaternions.","Linear interpolation between two points.","Linear interpolation between two quaternion.","Linear interpolation between two dual quaternions.","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","[Reexported at the root of this crate.] Factorization of …","Compute the index corresponding to the irow-th row and …","","Computes the principal value of natural logarithm of <code>self</code>.","Compute the natural logarithm of a quaternion.","Compute the natural logarithm of a quaternion.","","","","","Computes the natural logarithm of determinant of the …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","","","","","","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix without …","Builds a left-handed look-at view matrix without …","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix including a …","Builds a left-handed look-at view matrix including a …","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix without …","Builds a right-handed look-at view matrix without …","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix including …","Builds a right-handed look-at view matrix including …","Extracts the lower triangular part of this matrix …","The Lp norm of this matrix.","","","Computes the LU decomposition with partial (row) pivoting …","","","A synonym for the norm of this matrix.","A synonym for the norm of this quaternion.","A synonym for the squared norm of this matrix.","A synonym for the squared norm of this quaternion.","Returns a matrix containing the result of <code>f</code> applied to …","Returns a point containing the result of <code>f</code> applied to each …","Apply the given function to this matrix’s diagonal and …","Applies a function to each lane of <code>self</code>.","Returns a matrix containing the result of <code>f</code> applied to …","A reference to the underlying matrix.","A reference to the underlying matrix representation of …","","","","","Construct a fixed-size matrix directly from data.","A mutable reference to underlying matrix. Use …","A mutable reference to the underlying matrix …","A mutable reference to the underlying matrix.","A mutable reference to the underlying matrix …","Same as <code>cmp::max</code>.","","","","","","","","Returns the component with the largest value.","The largest finite positive value representable using this …","","","","","The mean of all the elements of this matrix.","Create the mean unit quaternion from a data structure …","Use the metric induced by this norm to compute the metric …","Compute the distance between <code>self</code> and <code>rhs</code> using the metric …","","","","Same as <code>cmp::min</code>.","","","","","","","","Returns the component with the smallest value.","The smallest finite positive value representable using …","","","","","The modulus of this complex number.","","The squared modulus of this complex numberquivalent to <code>self * rhs</code> but stores the result into <code>out</code> to …","The name of this dimension, i.e., the singleton <code>Self</code>.","","The number of columns of this matrix.","","","","","","","","","","","","","","","","Negates <code>self</code> in-place.","Create a new Complex","Creates a new reflection wrt. the plane orthogonal to the …","A dynamic size equal to <code>value</code>.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Builds the unit complex number corresponding to the …","Creates a new unit quaternion rotation from a rotation …","Creates a new dynamic matrix data storage from the given …","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Builds a 3 dimensional rotation matrix from an axis and an …","Builds a 2 dimensional rotation matrix from an angle in …","Creates a new quaternion from its individual components. …","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Creates a new isometry from a translation and a rotation …","Creates a new isometry from a translation and a rotation …","Creates a new 2D isometry from a translation and a …","Creates a new 2D isometry from a translation and a …","Creates a new similarity from a translation, rotation …","Creates a new similarity from a translation, a rotation, …","Creates a new similarity from a translation and a rotation …","Creates a new similarity from a translation, rotation …","Creates a new orthographic projection matrix.","Creates a new perspective matrix from the aspect ratio, y …","Computes the Bidiagonal decomposition using householder …","Attempts to compute the Cholesky decomposition of <code>matrix</code>.","Computes the <code>ColPivQR</code> decomposition using householder …","Computes the LU decomposition with full pivoting of <code>matrix</code>.","Computes the Hessenberg decomposition using householder …","Computes the LU decomposition with partial (row) pivoting …","Computes the QR decomposition using householder …","Computes the Schur decomposition of a square matrix.","Computes the Singular Value Decomposition of <code>matrix</code> using …","Computes the eigendecomposition of the given symmetric …","Computes the tridiagonalization of the symmetric matrix <code>m</code>.","Computes the UDU^T factorization.","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Creates a new reflection wrt. the plane orthogonal to the …","Creates a new unit quaternion rotation from a rotation …","Creates a new homogeneous matrix that applies a distinct …","Creates a new homogeneous matrix that applies a scaling …","Creates a new homogeneous matrix that applies a scaling …","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Deprecated: Use <code>Matrix4::face_towards</code> instead.","Deprecated: Use <code>Isometry::face_towards</code> instead.","Deprecated: Use <code>Isometry::face_towards</code> instead.","Deprecated: Use <code>UnitQuaternion::face_towards</code> instead.","Deprecated: Use <code>Rotation3::face_towards</code> instead.","Deprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.","Deprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.","Creates a new homogeneous matrix for an orthographic …","Creates a new homogeneous matrix for a perspective …","Builds a 3D homogeneous rotation matrix from an axis and …","Builds a 2 dimensional homogeneous rotation matrix from an …","Builds a 3D homogeneous rotation matrix from an axis and …","Creates a new homogeneous matrix that applies the same …","Creates a new homogeneous matrix that applies a pure …","Create a new matrix view without bounds checking.","Create a new matrix view without bounds checking.","Wraps the given value, assuming it is already normalized.","Computes the Cholesky decomposition of <code>matrix</code> without …","Computes the Singular Value Decomposition of <code>matrix</code> using …","Create a new matrix view without bounds checking.","Create a new matrix view without bounds checking.","Attempts to approximate the Cholesky decomposition of …","Computes the Hessenberg decomposition using householder …","Normalized linear interpolation between two unit …","Normalized linear interpolation between two unit …","Are all vector lanes false?","Apply this norm to the given matrix.","Computes the norm.","","","The L2 norm of this matrix.","","","","","The norm of this quaternion.","","The sum of the absolute value of this complex number’s …","","Returns the square of the norm (since <code>T</code> doesn’t …","Computes the squared norm.","","The squared L2 norm of this vector.","","","The squared norm of this quaternion.","","Returns a normalized version of this matrix.","Normalizes this quaternion.","Normalizes this quaternion.","Normalizes this matrix in-place and returns its norm.","Normalizes this quaternion.","Normalizes this quaternion.","The number of rows of this matrix.","","","The off-diagonal part of this decomposed matrix.","The off-diagonal components of this decomposition.","","","Gets the multiplicative identity element.","","","Creates a new identity transform.","","","","","","","","","","","","","","","","","","Creates a new identity isometry.","","","Creates a new identity similarity.","Lane-wise bitwise or of the vector elements.","Creates a new point with all coordinates equal to zero.","","","Applies the given closure to each element of the …","","","Orthonormalizes the given family of vectors. The largest …","Calculates the outer product (also known as the wedge …","Retrieves the column permutation of this decomposition.","The row permutations of this decomposition.","The row permutations of this decomposition.","","","","Uses the given matrix as-is without any checks or …","Clamp <code>value</code> between <code>min</code> and <code>max</code>. Returns <code>None</code> if <code>value</code> is …","Compare <code>a</code> and <code>b</code> using a partial ordering relation.","","","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt;= b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt; b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt;= b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt; b</code>.","Return the maximum of <code>a</code> and <code>b</code> if they are comparable.","Return the minimum of <code>a</code> and <code>b</code> if they are comparable.","Sorts two values in increasing order using a partial …","Applies this sequence of permutations to the columns of <code>rhs</code>…","Applies this sequence of permutations to the rows of <code>rhs</code>.","The perpendicular product between two 2D column vectors, …","","Construct a fixed-size point directly from data.","Computes the Polar Decomposition of  a <code>matrix</code> (indirectly …","The polar decomposition of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","Raise this matrix to an integral power <code>exp</code>.","Raises this matrix to an integral power <code>exp</code> in-place.","","Raises <code>self</code> to a complex power.","","Raises <code>self</code> to a floating point power.","Raise this unit complex number to a given floating power.","Raise the quaternion to a given floating power.","Raise the rotation to a given floating power, i.e., …","Raise the rotation to a given floating power, i.e., …","Raise the quaternion to a given floating power.","","Raises <code>self</code> to a signed integer power.","","Raises <code>self</code> to an unsigned integer power.","Computes the transformation equal to a non-uniform scaling …","Computes in-place the transformation equal to a …","Computes the transformation equal to an uniform scaling …","The similarity transformation that applies a scaling …","Computes in-place the transformation equal to an uniform …","Sets <code>self</code> to the similarity transformation that applies a …","Computes the transformation equal to a translation …","Computes the transformation equal to a translation …","","","","","The product of all the elements of this matrix.","Calculates the projection of <code>self</code> onto <code>other</code> (also known …","Projects a point. Faster than matrix multiplication.","Projects a point. Faster than matrix multiplication.","Projects a vector. Faster than matrix multiplication.","Projects a vector. Faster than matrix multiplication.","Computes the pseudo-inverse of this matrix.","Inverts <code>self</code>.","Computes the pseudo-inverse of the decomposed matrix.","The matrix data pointer.","","","","","","","","The matrix mutable data pointer.","","","","","Convert quaternion to pure quaternion.","Constructs a new vector of higher dimension by appending …","Computes the orthogonal matrix <code>Q</code> of this decomposition.","The column permutations of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","","","Multiplies the provided matrix by the transpose of the <code>Q</code> …","Multiplies the provided matrix by the transpose of the <code>Q</code> …","Computes the QR decomposition of this matrix.","","Computes the quadratic form …","Computes the quadratic form …","Computes the quadratic form …","Computes the quadratic form …","The underlying quaternion.","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Computes the rank of this matrix.","Computes the rank of the decomposed matrix, i.e., the …","Given the Cholesky decomposition of a matrix <code>M</code>, a scalar …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Real portion of the complex number","The real part of this complex number.","","The real component of the quaternion","","","","","","","","","","Rebuild the original matrix.","Rebuild the original matrix.","Recomputes the original symmetric matrix.","Applies the reflection to the columns of <code>rhs</code>.","Applies the reflection to the rows of <code>lhs</code>.","Applies the reflection to the rows of <code>lhs</code>.","Applies the reflection to the columns of <code>rhs</code>.","Calculates the rejection of <code>self</code> from <code>other</code> (also known as …","","Tests whether <code>self</code> and <code>rhs</code> are equal up to a given epsilon.","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the <code>i</code>-th column from this matrix.","Updates the decomposition such that we get the …","Removes <code>n</code> consecutive columns from this matrix, starting …","Removes all columns in <code>indices</code>   ","Removes <code>nremove.value()</code> columns from this matrix, starting …","Removes <code>D::dim()</code> consecutive columns from this matrix, …","Removes <code>D::dim()</code> consecutive rows from this matrix, …","Removes the <code>i</code>-th row from this matrix.","Removes <code>n</code> consecutive rows from this matrix, starting with …","Removes all rows in <code>indices</code>   ","Removes <code>nremove.value()</code> rows from this matrix, starting …","Normalizes this vector again. This is useful when repeated …","Ensure this rotation is an orthonormal rotation matrix. …","Ensure this rotation is an orthonormal rotation matrix. …","Normalizes this vector again using a first-order Taylor …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix with all its elements set to <code>elem</code>.","Replaces the i-th lane of <code>self</code> by <code>val</code>.","","","","","","","","","","","","","Replaces the i-th lane of <code>self</code> by <code>val</code> without …","","","","","","","","","","","","","Reshapes the storage into the output storage type.","","Reshapes <code>self</code> such that it has dimensions …","","","","","","","Resizes this matrix so that it contains <code>new_nrows</code> rows and …","Resizes the underlying mutable data storage and unwraps it.","Resizes <code>self</code> such that it has dimensions …","Resizes this matrix horizontally, i.e., so that it …","Changes the number of column of this matrix in-place.","Resizes this matrix in-place.","Resizes this matrix vertically, i.e., so that it contains …","Changes the number of rows of this matrix in-place.","The right offset of the view cuboid.","Right quaternionic division.","Return the rotation part of this unit dual quaternion.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","The pure rotational part of this isometry.","The unit complex needed to make <code>a</code> and <code>b</code> be collinear and …","The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …","The rotation matrix required to align <code>a</code> and <code>b</code> but with its …","The rotation matrix required to align <code>a</code> and <code>b</code> but with its …","The unit complex needed to make <code>a</code> and <code>b</code> be collinear and …","The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …","The unit complex number needed to make <code>self</code> and <code>other</code> …","The unit quaternion needed to make <code>self</code> and <code>other</code> coincide.","The rotation matrix needed to make <code>self</code> and <code>other</code> coincide.","The rotation matrix needed to make <code>self</code> and <code>other</code> coincide.","The isometry that applies the rotation <code>r</code> with its axis …","The similarity that applies the scaling factor <code>scaling</code>, …","","","Returns a view containing the i-th row of this matrix.","Iterate through the rows of this matrix.","Mutably iterates through this matrix rows.","The mean of all the rows of this matrix.","The mean of all the rows of this matrix. The result is …","Returns a view containing the i-th row of this matrix.","Returns a view containing the <code>n</code> first elements of the i-th …","Returns a view containing the <code>n</code> first elements of the i-th …","The product of all the rows of this matrix.","The product of all the rows of this matrix. The result is …","The sum of all the rows of this matrix.","The sum of all the rows of this matrix. The result is …","The variance of all the rows of this matrix.","The variance of all the rows of this matrix. The result is …","Extracts from this matrix a set of consecutive rows.","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix a set of consecutive rows.","View containing all the rows indexed by the range <code>rows</code>.","Mutable view containing all the rows indexed by the range …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Extracts from this matrix a set of consecutive rows …","Extracts from this matrix a set of consecutive rows …","The scalar part <code>w</code> of this quaternion.","Multiplies this complex number by <code>factor</code>.","Multiplies <code>self</code> by the scalar <code>t</code>.","","Multiplies each component of the complex matrix <code>self</code> by …","Multiply <code>self</code> by n.","","","Multiplies each component of the complex matrix <code>self</code> by …","","","The rotation angle returned as a 1-dimensional vector.","The rotation axis of this unit quaternion multiplied by …","The rotation angle returned as a 1-dimensional vector.","The rotation axis multiplied by the rotation angle.","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The scaling factor of this similarity transformation.","","Computes the Schur decomposition of a square matrix.","Screw linear interpolation between two unit quaternions. …","Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>.","","","","","","","","","","","","","Creates a new matrix by extracting the given set of …","Creates a new matrix by extracting the given set of rows …","","Updates this perspective matrix with a new <code>width / height</code> …","Sets the bottom offset of the view cuboid.","Sets the view cuboid offsets along the <code>y</code> axis.","Sets the category of this transform.","Fills the selected column of this matrix with the content …","Fills the diagonal of this matrix with the content of the …","Updates this perspective with a new y field of view of the …","Sets the left offset of the view cuboid.","Sets the view cuboid offsets along the <code>x</code> axis.","Sets the magnitude of this vector.","","Fills the diagonal of this matrix with the content of the …","Sets the right offset of the view cuboid.","Fills the selected row of this matrix with the content of …","The scaling factor of this similarity transformation.","Sets the top offset of the view cuboid.","","Sets the far plane offset of the view cuboid.","Updates this perspective matrix with a new far plane …","Sets the near plane offset of the view cuboid.","Updates this perspective matrix with a new near plane …","Sets the near and far plane offsets of the view cuboid.","Updates this perspective matrix with new near and far …","The dimension of the matrix at run-time. Arr length of …","","The shape of this matrix returned as the tuple (number of …","","","","","","","The shape of this matrix wrapped into their representative …","The exponential part of this complex number: …","The absolute value of this complex number: …","","","","","","","","","","","","","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","","","","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","The argument of this complex number.","","","","","","","","","","","","","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","","","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","","Computes the principal value of the inverse tangent of <code>self</code>…","","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","","","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Returns a new vector with the same magnitude as <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","Clamps each lane of <code>self</code> between the corresponding lane of …","","","","","","","","","","","","","","","Copies the sign of <code>sign</code> to <code>self</code>.","","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","","Cardinal cos","","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","","","","","Lanewise <em>equal</em> <code>==</code> comparison.","","","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>greater or equal</em> <code>&gt;=</code> comparison.","","","Lanewise <em>greater than</em> <code>&gt;</code> comparison.","","","The max value among all lanes of <code>self</code>.","","","The min value among all lanes of <code>self</code>.","","","Computes the product of all the lanes of <code>self</code>.","","","","","","","","","","","","Computes the sum of all the lanes of <code>self</code>.","","","","","","","","","","","","Computes (self.conjugate() * self + other.conjugate() * …","","","","","","","","","","","","The imaginary part of this complex number.","","","","","","","","","","","","Lanewise <em>less or equal</em> <code>&lt;=</code> comparison.","","","","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","","","","","","","","","","","","","","","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","","","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>less than</em> <code>&lt;</code> comparison.","","","Lanewise max value.","","","Lanewise min value.","","","The modulus of this complex number.","","","","","","","","","","","","The squared modulus of this complex number.","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>not equal</em> <code>!=</code> comparison.","","","The sum of the absolute value of this complex number’s …","","","","","","","","","","","","","","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","","","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","","","","","","","","","","","","","The real part of this complex number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies this complex number by <code>factor</code>.","","","","","","","","","","","","","The exponential part of this complex number: …","","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","","","","","","","","","","","","","","Cardinal sine","","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","","","","","","","","","","","","","","","","","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","","Computes the tangent of <code>self</code>.","","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","","Computes the hyperbolic tangent of <code>self</code>.","","The exponential form of this complex number: (modulus, …","","The polar form of this complex number: (modulus, arg)","","","","","","","","","","","","","Attempt to inverse this quaternion.","Attempts to normalize <code>self</code>.","Normalizes this matrix in-place and return its norm.","","Divides this complex number by <code>factor</code>.","","","","","","","","","","","","","Computes the sine of <code>self</code>.","Calculates the quaternionic sinus.","The sine of the rotation angle.","","","Cardinal sine","Computes the singular values of this matrix. The singular …","The singular values of this SVD.","Computes the singular values of this matrix. The singular …","","Computes the hyperbolic sine of <code>self</code>.","Calculates the hyperbolic quaternionic sinus.","","","","The number of elements of the range, i.e., …","Computes the spherical linear interpolation between two …","Computes the spherical linear interpolation between two …","Spherical linear interpolation between two rotations …","Spherical linear interpolation between two unit …","Spherical linear interpolation between two rotation …","Spherical linear interpolation between two rotation …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices a sub-matrix containing the rows indexed by the …","Slices a mutable sub-matrix containing the rows indexed by …","Slices this matrix starting at its component …","Slices this matrix starting at its component …","Returns the solution of the system <code>self * x = b</code> where <code>self</code> …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the system <code>self * x = b</code> where <code>self</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the system <code>self * x = b</code> where <code>self</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Sort the estimated components of the SVD by its singular …","Initializes an SIMD value with each lanes set to <code>val</code>.","","","","","","","","","","","","","","Computes the principal value of the square root of <code>self</code>.","Calculates square root.","Calculates square of a quaternion.","The stride of this point. This is the number of buffer …","The spacing between consecutive row elements and …","","The strides (row stride, column stride) of this matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to <code>self + rhs</code> but stores the result into <code>out</code> to …","","","","The sum of all the elements of this matrix.","","","Example","Example","Returns the supremum of <code>a</code> and <code>b</code>.","Computes the supremum (aka. componentwise max) of two …","Computes the supremum (aka. componentwise max) of two …","Computes the Singular Value Decomposition using implicit …","Computes the Singular Value Decomposition using implicit …","Swaps two entries.","Swaps two columns in-place.","Swaps two rows in-place.","Swaps two elements without bound-checking.","Swaps two entries without bound-checking.","Swaps two entries without bound-checking.","Swaps two elements using their linear index without …","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is a …","Computes <code>self = alpha * x * y.transpose() + beta * self</code>, …","Computes the eigendecomposition of this symmetric matrix.","Computes the eigenvalues of this symmetric matrix.","The symmetric part of <code>self</code>, i.e., …","Computes the tridiagonalization of this symmetric matrix.","","","Computes the tangent of <code>self</code>.","Calculates the quaternionic tangent.","","Computes the hyperbolic tangent of <code>self</code>.","Calculates the hyperbolic quaternionic tangent.","Converts this unit quaternion into its equivalent Euler …","Creates Euler angles from a rotation.","The exponential form of this complex number: (modulus, …","","","Converts this transform into its equivalent homogeneous …","Yields the homogeneous matrix for this matrix, i.e., …","Computes the coordinates in projective space of this …","Converts this unit complex number into its equivalent …","Converts this unit dual quaternion interpreted as an …","Converts this unit quaternion into its equivalent …","Converts this point into a vector in homogeneous …","Converts this rotation into its equivalent homogeneous …","Converts this translation into its equivalent homogeneous …","Converts this Scale into its equivalent homogeneous …","Converts this isometry into its equivalent homogeneous …","Converts this similarity into its equivalent homogeneous …","Computes the corresponding homogeneous matrix.","Computes the corresponding homogeneous matrix.","","","","","","","Builds an isometry from this unit dual quaternion.","Converts this isometry into its equivalent homogeneous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The polar form of this complex number: (modulus, arg)","converts SVD results to Polar decomposition form of the …","This transformation seen as a <code>Projective3</code>.","This transformation seen as a <code>Projective3</code>.","Builds a rotation matrix from this unit quaternion.","Builds the rotation matrix corresponding to this unit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this 1x1 matrix by reference into a scalar.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The top offset of the view cuboid.","Fills this matrix with the content of the transpose …","The dot product between the transpose of <code>self</code> and <code>rhs</code>.","Equivalent to <code>self.transpose() * rhs</code>.","Equivalent to <code>self.transpose() * rhs</code> but stores the result …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes a trace of a square matrix, i.e., the sum of its …","Apply the rotation to the given point.","Transform the given point by this transformation.","Transforms the given point, assuming the matrix <code>self</code> uses …","Transforms the given point, assuming the matrix <code>self</code> uses …","","Rotate the given point by this unit complex number.","","Rotate and translate a point by this unit dual quaternion …","Rotate a point by this unit quaternion.","Rotate the given point.","","Translate the given point.","Translate the given point.","Transform the given point by this isometry.","Transform the given point by this similarity.","Apply the rotation to the given vector.","Transform the given vector by this transformation, …","Transforms the given vector, assuming the matrix <code>self</code> uses …","Rotate a vector by this unit dual quaternion, ignoring the …","","Rotate a vector by this unit quaternion.","","Rotate the given vector by this unit complex number.","Rotate the given vector.","","Transform the given vector by this isometry, ignoring the …","Transform the given vector by this similarity, ignoring …","Return the translation part of this unit dual quaternion.","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","The pure translational part of this isometry.","Transposes <code>self</code>.","Transposes <code>self</code>.","Transposes the square matrix <code>self</code> in-place.","Transposes <code>self</code> in-place.","Transposes <code>self</code> and store the result into <code>out</code>.","","","","","Attempts to cast the components of <code>self</code> to another type.","Attempts to convert an object to a more specific one.","Attempts to convert an object to a more specific one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to invert this transformation. You may use …","Attempts to invert this square matrix.","Inverts this quaternion if it is not zero.","Inverts this dual quaternion if it is not zero.","Inverts <code>self</code>.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Attempts to invert this transformation in-place. You may …","Attempts to invert this square matrix in-place. Returns …","Inverts this quaternion in-place if it is not zero.","Inverts this dual quaternion in-place if it is not zero.","Inverts <code>self</code> in-place.","Computes the inverse of the decomposed matrix and outputs …","Translate the given point by the inverse of this Scale.","Performs a LU decomposition to overwrite <code>out</code> with the …","Attempts to interpolate between two isometries using a …","Attempts to interpolate between two isometries using a …","Attempts to normalize the given vector and return it …","Attempts to compute the Schur decomposition of a square …","Attempts to compute the Singular Value Decomposition of …","Computes the eigendecomposition of the given symmetric …","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Attempts to compute the Singular Value Decomposition of …","Returns a normalized version of this matrix unless its …","Normalizes this matrix in-place or does nothing if its …","Attempts to compute the Polar Decomposition of  a <code>matrix</code> …","Attempts to compute the Schur decomposition of a square …","Computes the screw-linear interpolation between two unit …","Sets the magnitude of this vector unless it is smaller …","Computes the spherical linear interpolation between two …","Computes the spherical linear interpolation between two …","Computes the spherical linear interpolation between two …","","","Attempts to compute the Singular Value Decomposition of …","Attempts to compute the Singular Value Decomposition of …","Computes the eigendecomposition of the given symmetric …","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the orthogonal matrix <code>U</code> of this <code>U * D * V</code> …","The upper triangular matrix of this decomposition.","The upper triangular matrix of this decomposition.","The left-singular vectors <code>U</code> of this SVD.","The upper triangular matrix resulting from the …","Attempts to compute the UDU decomposition of this matrix.","","","","","","","","","","","","","","","Builds a matrix with uninitialized elements of type …","Unpacks this decomposition into its three matrix factors …","Retrieves the lower-triangular factor of the Cholesky …","Unpacks this decomposition into its two matrix factors.","The two matrices of this decomposition and the row and …","Retrieves <code>(q, h)</code> with <code>q</code> the orthogonal matrix of this …","The row permutations and two triangular matrices of this …","Unpacks this decomposition into its two matrix factors.","Retrieves the unitary matrix <code>Q</code> and the …","Retrieve the orthogonal transformation, diagonal, and off …","Retrieves the lower-triangular factor of the Cholesky …","Retrieves the upper trapezoidal submatrix <code>H</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieve the diagonal, and off diagonal elements of this …","Un-projects a point. Faster than multiplication by the …","Un-projects a point. Faster than multiplication by the …","Divides this complex number by <code>factor</code>.","","Divides <code>self</code> by the scalar <code>t</code>.","Divides each component of the complex matrix <code>self</code> by the …","Divides <code>self</code> by n.","","Divides each component of the complex matrix <code>self</code> by the …","","","","Retrieves the underlying matrix. Deprecated: Use …","Retrieves the underlying value. Deprecated: use …","Unwraps the underlying matrix. Deprecated: Use …","Retrieves the underlying homogeneous matrix. Deprecated: …","Retrieves the underlying homogeneous matrix. Deprecated: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts the upper triangular part of this matrix …","","Computes the orthogonal matrix <code>V_t</code> of this <code>U * D * V_t</code> …","The right-singular vectors <code>V^t</code> of this SVD.","Gets the run-time value of <code>self</code>. For type-level integers, …","","","","The variance of all the elements of this matrix.","The vector part <code>(i, j, k)</code> of this quaternion.","The translation coordinates, i.e., how much is added to a …","The scale coordinates, i.e., how much is multiplied to a …","Construct a fixed-size column vector directly from data.","The mutable vector part <code>(i, j, k)</code> of this quaternion.","Computes the row and column coordinates of the i-th …","Gets a reference to the i-th element of this column vector …","Gets a mutable reference to the i-th element of this …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","Returns a view containing the rows indexed by the range …","Return a mutable view containing the rows indexed by the …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The column vector with a 1 as its fourth component, and …","The unit column vector with a 1 as its fourth component, …","Computes the wilkinson shift, i.e., the 2x2 symmetric …","Wraps <code>val</code> into the range <code>[min, max]</code> using modular …","The column vector with a 1 as its first component, and …","The unit column vector with a 1 as its first component, …","Lane-wise bitwise xor of the vector elements.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","The column vector with a 1 as its second component, and …","The unit column vector with a 1 as its second component, …","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","The column vector with a 1 as its third component, and …","The unit column vector with a 1 as its third component, …","Gets the additive identity element.","","","","","","","","","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix with all its elements set to 0.","The far plane offset of the view cuboid.","Gets the far plane offset of the view frustum.","Replaces each component of <code>self</code> by the result of a closure …","Folds a function <code>f</code> on each pairs of entries from <code>self</code> and …","Returns a matrix containing the result of <code>f</code> applied to …","Applies a function to each lane of <code>self</code> paired with the …","Replaces each component of <code>self</code> by the result of a closure …","Returns a matrix containing the result of <code>f</code> applied to …","The near plane offset of the view cuboid.","Gets the near plane offset of the view frustum.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","A array-based statically sized matrix data storage.","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","","","A dynamically sized column-major matrix.","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A dynamically sized column vector.","A column vector slice dynamic numbers of rows and columns.","A column vector slice dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","An allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","A range with a size that may be known at compile-time.","","","Dim of dynamically-sized algebraic entities.","","Euclidean norm.","Marker trait indicating that a storage is stored …","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","Lp norm.","The most generic column-major matrix (and vector) type.","A stack-allocated, column-major, 1x1 square matrix.","A stack-allocated, column-major, 1x2 matrix.","A stack-allocated, column-major, 1x3 matrix.","A stack-allocated, column-major, 1x4 matrix.","A stack-allocated, column-major, 1x5 matrix.","A stack-allocated, column-major, 1x6 matrix.","A heap-allocated, column-major, matrix with 1 rows and a …","A stack-allocated, column-major, 2x2 square matrix.","A stack-allocated, column-major, 2x1 matrix.","A stack-allocated, column-major, 2x3 matrix.","A stack-allocated, column-major, 2x4 matrix.","A stack-allocated, column-major, 2x5 matrix.","A stack-allocated, column-major, 2x6 matrix.","A heap-allocated, column-major, matrix with 2 rows and a …","A stack-allocated, column-major, 3x3 square matrix.","A stack-allocated, column-major, 3x1 matrix.","A stack-allocated, column-major, 3x2 matrix.","A stack-allocated, column-major, 3x4 matrix.","A stack-allocated, column-major, 3x5 matrix.","A stack-allocated, column-major, 3x6 matrix.","A heap-allocated, column-major, matrix with 3 rows and a …","A stack-allocated, column-major, 4x4 square matrix.","A stack-allocated, column-major, 4x1 matrix.","A stack-allocated, column-major, 4x2 matrix.","A stack-allocated, column-major, 4x3 matrix.","A stack-allocated, column-major, 4x5 matrix.","A stack-allocated, column-major, 4x6 matrix.","A heap-allocated, column-major, matrix with 4 rows and a …","A stack-allocated, column-major, 5x5 square matrix.","A stack-allocated, column-major, 5x1 matrix.","A stack-allocated, column-major, 5x2 matrix.","A stack-allocated, column-major, 5x3 matrix.","A stack-allocated, column-major, 5x4 matrix.","A stack-allocated, column-major, 5x6 matrix.","A heap-allocated, column-major, matrix with 5 rows and a …","A stack-allocated, column-major, 6x6 square matrix.","A stack-allocated, column-major, 6x1 matrix.","A stack-allocated, column-major, 6x2 matrix.","A stack-allocated, column-major, 6x3 matrix.","A stack-allocated, column-major, 6x4 matrix.","A stack-allocated, column-major, 6x5 matrix.","A heap-allocated, column-major, matrix with 6 rows and a …","The type of the result of a matrix cross product.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned matrix column-major matrix with <code>D</code> columns.","A matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A mutable matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A column-major matrix slice with <code>R</code> rows and <code>C</code> columns.","A column-major matrix slice with <code>D</code> rows and columns.","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","The type of the result of a matrix sum.","Renamed to <code>VecStorage</code>.","A matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A mutable matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A trait for abstract matrix norms.","The type of the norm.","Trait implemented by entities scan be be normalized and …","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned D-dimensional column vector.","The reshaped storage type.","","","","","","","","","","","","","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","A matrix storage that can be reshaped in-place.","A dynamically sized row vector.","An owned D-dimensional row vector.","A statically sized D-dimensional row vector.","A matrix with one row and <code>D</code> columns .","A stack-allocated, 1-dimensional row vector.","A stack-allocated, 2-dimensional row vector.","A stack-allocated, 3-dimensional row vector.","A stack-allocated, 4-dimensional row vector.","A stack-allocated, 5-dimensional row vector.","A stack-allocated, 6-dimensional row vector.","A statically sized column-major matrix with <code>R</code> rows and <code>C</code> …","A column-major matrix slice with dimensions known at …","A column-major matrix slice with dimensions known at …","A column-major matrix view with dimensions known at …","A column-major matrix view with dimensions known at …","A statically sized D-dimensional column vector.","A column vector slice with dimensions known at …","A column vector slice with dimensions known at …","A column vector view with dimensions known at compile-time.","A column vector view with dimensions known at compile-time.","The data storage for the sum of two matrices with …","The basic scalar type for all structures of <code>nalgebra</code>.","Type of the range size. May be a type-level integer.","A range with a size that may be known at compile-time.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","A square matrix.","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","","","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","","L-infinite norm aka. Chebytchev norm aka. uniform norm …","An owned matrix with uninitialized data.","An owned matrix with uninitialized data.","A wrapper that ensures the underlying algebraic entity has …","A stack-allocated, 1-dimensional unit vector.","A stack-allocated, 2-dimensional unit vector.","A stack-allocated, 3-dimensional unit vector.","A stack-allocated, 4-dimensional unit vector.","A stack-allocated, 5-dimensional unit vector.","A stack-allocated, 6-dimensional unit vector.","A Vec-based matrix data storage. It may be …","A matrix with one column and <code>D</code> rows.","A stack-allocated, 1-dimensional column vector.","A stack-allocated, 2-dimensional column vector.","A stack-allocated, 3-dimensional column vector.","A stack-allocated, 4-dimensional column vector.","A stack-allocated, 5-dimensional column vector.","A stack-allocated, 6-dimensional column vector.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","The type of the result of a matrix sum.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","","","","","","Abstract definition of a matrix data storage allocator.","Retrieves the mutable data buffer as a contiguous slice.","Retrieves the data buffer as a contiguous slice.","The start index of the range.","Clones this data storage to one that does not contain any …","Compatibility constraints between matrix shapes, e.g., for …","Structures to which matrices and vector can be …","The data storage that contains all the matrix components. …","","The default matrix data storage allocator.","The value of this dimension.","Traits and tags for identifying the dimension of all …","","","The index immediately after the last index inside of the …","Builds an instance of <code>Self</code> from a run-time value. Panics …","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","Retrieves a reference to the i-th element without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Indexing","Builds a matrix data storage that does not contain any …","","Indicates whether this data buffer stores its elements …","Matrix iterators.","Compute the index corresponding to the irow-th row and …","","","Use the metric induced by this norm to compute the metric …","","","","","The name of this dimension, i.e., the singleton <code>Self</code>.","","Apply this norm to the given matrix.","Computes the norm.","Computes the squared norm.","","The matrix data pointer.","","","The matrix mutable data pointer.","Reshapes the storage into the output storage type.","Multiply <code>self</code> by n.","The dimension of the matrix at run-time. Arr length of …","","","The number of elements of the range, i.e., …","Abstract definition of a matrix data storage.","The spacing between consecutive row elements and …","","","","","Swaps two elements without bound-checking.","Swaps two elements using their linear index without …","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","Mechanisms for working with values that may not be …","Divides <code>self</code> by n.","Gets the run-time value of <code>self</code>. For type-level integers, …","","A matrix allocator of a memory buffer that may contain …","The type of buffer this allocator can instantiate.","The type of buffer with uninitialized components this …","A matrix reallocator. Changes the size of the memory …","Restricts the given number of rows and columns to be …","The number of columns of the result of a componentwise …","The number of rows of the result of a componentwise …","Restricts the given number of rows to be equal.","Allocates a buffer initialized with the content of the …","Allocates a buffer initialized with the content of the …","Allocates a buffer with the given number of rows and …","Assumes a data buffer to be initialized.","Reallocates a buffer of shape <code>(RTo, CTo)</code>, possibly reusing …","Constraints <code>C1</code> and <code>R2</code> to be equivalent.","Constraints <code>D1</code> and <code>D2</code> to be equivalent.","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","Constraints D1 and D2 to be equivalent, where they both …","Constraints <code>D1</code> and <code>D2</code> to be equivalent. They are both …","Constraints <code>D1</code> and <code>D2</code> to be equivalent. They are both …","A type used in <code>where</code> clauses for enforcing constraints.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coden allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","","","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","","","Dim of dynamically-sized algebraic entities.","","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","","","","","","","","","","","","","","","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","","","","The value of this dimension.","","","Builds an instance of <code>Self</code> from a run-time value. Panics …","","","","","","","","The name of this dimension, i.e., the singleton <code>Self</code>.","","","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","Gets the run-time value of <code>self</code>. For type-level integers, …","A helper trait used for indexing operations.","A helper trait used for indexing operations.","The output type returned by methods.","The output type returned by methods.","An iterator through the columns of a matrix.","An iterator through the mutable columns of a matrix.","An iterator through a dense matrix with arbitrary strides …","An iterator through a dense matrix with arbitrary strides …","An iterator through the rows of a matrix.","An iterator through the mutable rows of a matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new iterator for the given matrix storage.","Creates a new iterator for the given matrix storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","Marker trait indicating that a storage is stored …","The reshaped storage type.","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","A matrix storage that can be reshaped in-place.","The data storage for the sum of two matrices with …","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","Retrieves the mutable data buffer as a contiguous slice.","Retrieves the data buffer as a contiguous slice.","Clones this data storage to one that does not contain any …","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","Retrieves a reference to the i-th element without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Builds a matrix data storage that does not contain any …","Indicates whether this data buffer stores its elements …","Compute the index corresponding to the irow-th row and …","The matrix data pointer.","The matrix mutable data pointer.","Reshapes the storage into the output storage type.","The dimension of the matrix at run-time. Arr length of …","The spacing between consecutive row elements and …","Swaps two elements without bound-checking.","Swaps two elements using their linear index without …","A type implementing <code>InitStatus</code> indicating that the value …","This trait is used to write code that may work on matrices …","A type implementing <code>InitStatus</code> indicating that the value …","The type of the values with the initialization status …","","","","","","","","","","","Retrieve a mutable reference to the element, assuming that …","","","Retrieve a reference to the element, assuming that it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Initialize the given element.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by rotations that can be used inside of …","A 2D affine transformation. Stored as a homogeneous 3x3 …","A 3D affine transformation. Stored as a homogeneous 4x4 …","A dual quaternion.","A direct isometry, i.e., a rotation followed by a …","A 2-dimensional direct isometry using a unit complex …","A 3-dimensional direct isometry using a unit quaternion …","A 2-dimensional direct isometry using a rotation matrix …","A 3-dimensional direct isometry using a rotation matrix …","A point in an euclidean space.","A 3D orthographic projection stored as a homogeneous 4x4 …","A 3D perspective projection stored as a homogeneous 4x4 …","A point with <code>D</code> elements.","A statically sized 1-dimensional column point.","A statically sized 2-dimensional column point.","A statically sized 3-dimensional column point.","A statically sized 4-dimensional column point.","A statically sized 5-dimensional column point.","A statically sized 6-dimensional column point.","An invertible 2D general transformation. Stored as a …","An invertible 3D general transformation. Stored as a …","A quaternion. See the type alias …","A reflection wrt. a plane.","A 1-dimensional reflection.","A 2-dimensional reflection.","A 3-dimensional reflection.","A 4-dimensional reflection.","A 5-dimensional reflection.","A 6-dimensional reflection.","The transform category that results from the …","A rotation matrix.","A 2-dimensional rotation matrix.","A 3-dimensional rotation matrix.","A scale which supports non-uniform scaling.","A 1-dimensional scale.","A 2-dimensional scale.","A 3-dimensional scale.","A 4-dimensional scale.","A 5-dimensional scale.","A 6-dimensional scale.","A similarity, i.e., an uniform scaling, followed by a …","A 2-dimensional similarity.","A 3-dimensional similarity.","A 2-dimensional similarity using a rotation matrix for its …","A 3-dimensional similarity using a rotation matrix for its …","Indicates that <code>Self</code> is a more specific <code>Transform</code> category …","Indicates that <code>Self</code> is a more general <code>Transform</code> category …","Tag representing an affine <code>Transform</code>. Its bottom-row is …","Trait implemented by phantom types identifying the …","Traits that gives the <code>Transform</code> category that is …","Tag representing the most general (not necessarily …","Tag representing the most general inversible <code>Transform</code> …","A transformation matrix in homogeneous coordinates.","A 2D general transformation that may not be invertible. …","A 3D general transformation that may not be inversible. …","A translation.","A 1-dimensional translation.","A 2-dimensional translation.","A 3-dimensional translation.","A 4-dimensional translation.","A 5-dimensional translation.","A 6-dimensional translation.","A 2D rotation represented as a complex number with …","A unit dual quaternion. May be used to represent a …","A unit quaternions. May be used to represent a rotation.","","","","Checks that the given matrix is a valid homogeneous …","The coordinates of this point, i.e., the shift from the …","This quaternion as a 4D vector of coordinates in the …","The dual component of the quaternion","Indicates whether a <code>Transform</code> with the category <code>Self</code> has a …","The rotation identity.","The rotation inverse.","Change <code>self</code> to its inverse.","Apply the inverse rotation to the given point.","Apply the inverse rotation to the given unit vector.","Apply the inverse rotation to the given vector.","The part of this similarity that does not include the …","","","","","The real component of the quaternion","The pure rotational part of this isometry.","","Apply the rotation to the given point.","Apply the rotation to the given vector.","The pure translational part of this isometry.","The translation coordinates, i.e., how much is added to a …","The scale coordinates, i.e., how much is multiplied to a …","The bidiagonalization of a general matrix.","The Cholesky decomposition of a …","The QR decomposition (with column pivoting) of a general …","LU decomposition with full row and column pivoting.","Hessenberg decomposition of a general matrix.","LU decomposition with partial (row) pivoting.","A sequence of row or column permutations.","The QR decomposition of a general matrix.","Singular Value Decomposition of a general matrix.","Schur decomposition of a square matrix.","Eigendecomposition of a symmetric matrix.","Tridiagonalization of a symmetric matrix.","UDU factorization.","Functions for balancing a matrix.","","","The diagonal matrix resulting from the factorization","","","","The unsorted eigenvalues of the decomposed matrix.","The eigenvectors of the decomposed matrix.","Construction of givens rotations.","","Construction of householder elementary reflections.","","","","","","","","","","","","","The singular values of this SVD.","","","","Performs a LU decomposition to overwrite <code>out</code> with the …","The left-singular vectors <code>U</code> of this SVD.","The upper triangular matrix resulting from the …","","","The right-singular vectors <code>V^t</code> of this SVD.","Computes the wilkinson shift, i.e., the 2x2 symmetric …","Applies in-place a modified Parlett and Reinsch matrix …","Computes in-place <code>D * m * D.inverse()</code>, where <code>D</code> is the …","A Givens rotation.","","","","","","The cos part of this roration.","","Computes the rotation <code>R</code> required such that the <code>x</code> component …","Computes the rotation <code>R</code> required such that the <code>y</code> component …","","","","","","","","","Returns the argument unchanged.","","","The Givents rotation that does nothing.","","Calls <code>U::from(self)</code>.","","","","","The inverse of this givens rotation.","","Initializes a Givens rotation from its non-normalized …","Initializes a Givens rotation from its components.","","","Performs the multiplication <code>rhs = self * rhs</code> in-place.","Performs the multiplication <code>lhs = lhs * self</code> in-place.","The sin part of this roration.","","","","","","","","Initializes a Givens rotation form its non-normalized …","","","","","The Jumpy collision shape type.","Resource that maps <code>ColliderShape</code>s to a rapier <code>SharedShape</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The player is alarmed!! Like a lit grenade was just thrown …","A kind of emote the player can make.","A component representing a region in which a player should …","A component representing the current emote state of a …","The player is emoting.","","","","Marker component for a player hat.","The player is not emoting","","","Events that can be used to trigger player actions, such as …","The player index, for example Player 1, Player 2, and so …","Marker component indicating that a player has been killed.","Contains the entities of the extra player layers, such as …","The state of the player controller.","","","Resource that tracks which players have already been …","Whether or not this emote region is active. This provides …","The number of frames that this state has been active.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A buffer to prevent the player from spamming emotes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ID for the current state.","","","","","","","","","","System that makes sure the swords held by AI are despawned …","","","","","","","","","","","","","","","","","","","","","","","","","Despawn a player.","Whether or not the player must be looking at the center of …","","","","","","","","","","","","","","","","","","","","","","","","The emote the player should make","","","","Equip player hats that have been picked up and used.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kill a player.","The ID of the state that the player was in in the last …","Buffers planned AI movements","The entity that owns this emote region.","Indicates the player is taking pause for the given number …","Animate the player’s fins while","","","","For each player, whether they have spawned before.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the player’s inventory","The size of the emote region","","","The player that the AI is targeting.","Tick timer that is used for AI pausing logic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System that reads the <code>PlayerLayers</code> component and updates …","Have the player use the item they are carrying, if any.","","","","","","","","","","","","The state of the player controller.","Adds a system to the appropriate stage in a <code>Session</code> for a …","Adds a system to the appropriate stage in a <code>Session</code> for a …","The number of frames that this state has been active.","","","","","","","","","The ID for the current state.","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","The ID of the state that the player was in in the last …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Random Number generator, powered by the <code>WyRand</code> …","Variant for fast PRNGs, like Wyrand.","Trait for enabling creating new <code>TurboCore</code> instances from …","Determines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …","This trait provides the means to easily generate all …","Resource that can produce deterministic, pseudo-random …","A Random Number generator, powered by the <code>WyRand</code> algorithm.","Variant for slower PRNGs, like ChaCha8.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","Base trait for implementing a PRNG. Only one method must be","Enum for determining the kind of PRNG, whether a fast one, …","Extension trait for automatically implementing all …","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","","","","Returns a random boolean value.","","","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","","","","","","","","","Generate a random digit in the given <code>radix</code>.","","","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Fills a mutable buffer with random bytes.","Forks a <code>TurboCore</code> instance by deterministically deriving a …","Returns the argument unchanged.","","","","","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a <code>usize</code> value for stable indexing across different …","","Calls <code>U::from(self)</code>.","","","","","","Returns a random <code>isize</code> within a given range bound.","Generates a random <code>char</code> in the range a-z.","Partially shuffles a slice by a given amount and returns …","","","","","Reseeds the <code>SeededCore</code> with a new seed/state.","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","","Shuffles a slice randomly in O(n) time.","","","","","","","","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Creates a new <code>SeededCore</code> with a specific seed value.","","Simple easing calculator","","","","","","","","","Macro to “derive” ( not really a derive macro ) …","","","","","","","Clamps a sin wave between a minimum and maximum value.","","Simple easing calculator","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clamps a sin wave between a minimum and maximum value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source of player control inputs","Settings to configure the <code>handle_egui_input</code> system","A gamepad control with the given index","Resource containing the global player control inputs.","The first keyboard controls","The second keyboard controls","Player control input state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to <code>true</code>, gamepad inputs will not be converted to …","If set to <code>true</code>, then all keyboard inputs will be sucked …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Iterator over inputs that originated from gamepads.","Get the player inputs for the next game simulation frame.","","","Game system that takes the raw input events and converts …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the internal state with new inputs. This must be …","","","","","","Playing the character select music.","Playing the credits music.","Playing the fight music.","The amount of time to spend fading the music in and out.","","Playing the main menu music.","The music playback state.","Music is not playing.","Bevy resource containing the in-game music playlist …","","","","","","","","","","","","","","Get the current audio instance, if one is contained.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","System that plays music according to the game mode.","","","","","","","","","","","","","","","","","","","","","","","","","The index of the song in the shuffled playlist.","The handle to the audio instance.","The <code>A</code> key.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","Let <code>Path</code> and <code>PathBuf</code> have <code>absolutize</code> and …","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","The allocator return an error","The <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","Component that may be added to entities with an <code>AtlasSprite</code>…","Component that may be added to an <code>AtlasSprite</code> to control …","The <code>Apostrophe</code> / <code>&#39;</code> key.","The <code>Apps</code> key.","A thread-safe reference-counting pointer. ‘Arc’ stands …","Types that can be used as the backing store for a SmallVec","Helper type for storing asset extensions.","An identifier for an asset.","<code>AssetIo</code> is a trait that is implemented for backends …","The kind of asset a type represents.","Context provided to custom asset loaders in the …","The progress that has been made loading the game assets.","A custom assset loader.","Contains that path to an asset, and the pack_dir that it …","A borrowed version of <code>AssetLoc</code>.","An asset pack contains assets that are loaded by the game.","The unique ID for an asset pack.","A requirement specifier for an asset pack, made up of the …","Specifies an asset pack, and it’s exact version.","Struct responsible for loading assets into it’s …","Extension trait for the bones <code>AssetServer</code>.","The inner state of the asset server.","Stores assets for later retrieval.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","Atlas image component.","An animated sprite component.","A mutable memory location with dynamically checked borrow …","A handle to a resource from a <code>Resources</code> collection.","An atomic borrow of a <code>SchemaRef</code>.","An atomic borrow of a <code>SchemaRefMut</code>.","The audio file asset loader.","The audio manager resource which can be used to play …","The audio source asset type, contains no data, but …","The <code>Ax</code> key.","An axis event.","The <code>B</code> key.","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","The <code>Back</code> / <code>Backspace</code> key.","The <code>Backslash</code> / <code>\\\\</code> key.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","A boolean.","Metadata describing a border image.","A button rendered with a <code>BorderImageMeta</code>","A 9-patch style bordered frame.","has a reference to T","has a reference to T","The represents a <code>SchemaBox</code> with given type inside.","The <code>Left Bracket</code> / <code>[</code> key.","The <code>Right Bracket</code> / <code>]</code> key.","A button event.","The border images to use for a <code>ButtonThemeMeta</code> when the …","The state of a button, ether pressed or released.","Metadata describing a themed button.","","The <code>C</code> key.","The <code>AssetPackId</code> of the core pack.","","The <code>Calculator</code> key.","Makes an entity behave like a camera.","Component for an entity with camera shake.","A size setting for a camera.","Queue that can be used to send camera trauma events.","Overflow <code>usize::MAX</code> or other error during size computation","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","An ID for an asset that has changed.","A unique content ID.","Resource for controlling the clear color.","Error type for APIs with fallible heap allocation","The <code>Colon</code> / <code>:</code> key.","Color type.","The <code>Comma</code> / <code>,</code> key.","A resource containing the <code>Commands</code> command queue.","A <code>SystemParam</code> that can be used to schedule systems that …","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","The <code>Compose</code> key on Linux.","The gamepad was connected.","A connection event.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Left Control</code> key.","The <code>Right Control</code> key.","The <code>Convert</code> key.","The <code>Copy</code> key.","YAML format for the core asset pack’s <code>pack.yaml</code> file.","A <code>StageLabel</code> for the 5 core stages.","Error creating ID","An asset with a custom asset loader.","The <code>Cut</code> key.","The <code>D</code> key.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","","","","","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Loaded image data","Default plugins for bones framework games.","Default plugins for bones framework sessions.","The <code>Delete</code> key.","Derive macro for deriving <code>Deref</code> on structs with one field.","Derive macro for deriving <code>DerefMut</code> on structs with one …","A <strong>data structure</strong> that can be deserialized from any data …","","The gamepad was disconnected.","The <code>Down</code> / <code>Down Arrow</code> key.","An iterator that removes the items from a <code>SmallVec</code> and …","Dummy <code>AssetIo</code> implementation used for debugging or as a …","A <code>Duration</code> type to represent a span of time, typically …","The <code>E</code> key.","","Extension trait with helpers for the egui context","Resource containing the <code>egui::Context</code> that can be used to …","Shared resource that, if inserted, allows you to modify …","Extension trait with helpers for egui responses","Resource for configuring egui rendering.","Resource that maps image handles to their associated egui …","The <code>End</code> key.","Holds a list of alive entities.","Iterator over entities returned by <code>Entities::iter_with</code>.","An entity index.","Iterator over entities using the provided bitset.","Type represents an enum, which in the C layout is called a …","Schema data for an enum.","A type for an enum tag for <code>EnumSchemaInfo</code>.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","Euler rotation sequences.","A reference to image data stored in the external bones …","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","<code>f32</code>","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","<code>f64</code>","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","All false.","All false.","All false.","All false.","All false.","Variant for fast PRNGs, like Wyrand.","The index of a field in a struct in a <code>Schema</code>.","<code>AssetIo</code> implementation that loads from the filesystem.","The first stage","The camera will be a fixed height with a width dependent …","The camera will be a fixed width with a height dependent …","Specialization of of the fluent bundle that is used by …","An asset containing a <code>FluentBundle</code>.","An asset containing a <code>FluentResource</code>.","A font asset.","The <code>Font</code> asset loader.","Font metadata for buttons, headings, etc, describing the …","Trait for enabling creating new <code>TurboCore</code> instances from …","Trait implemented for types that can produce an instance …","Creates an instance of the type this trait is implemented …","The <code>G</code> key.","Determines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …","","","The <code>Game</code> encompasses a complete bones game’s logic, …","","A specific gamepad axis that may have changed.","A gamepad axis event.","A specific button on a gamepad.","A gamepad button event.","A gamepad connection event.","The kind of gamepad connection event.","A gamepad event.","Resource containing the gamepad input events detected this …","This trait provides the means to easily generate all …","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","A typed handle to an asset.","The <code>Cid</code> of an asset that has changed.","Trait implemented for types that have a <code>Schema</code>.","Derive macro for the <code>HasSchema</code> trait.","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","Error for hex crate errors","Error type for hex color decoding","The <code>Home</code> key.","The <code>I</code> key.","<code>i128</code>","<code>i16</code>","<code>i32</code>","<code>i64</code>","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","<code>i8</code>","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The index of a field. Works for tuple fields and named …","Image component.","The system input parameter.","An error returned when an asset pack does not support the …","The <code>Insert</code> key, next to the <code>Backspace</code> key.","","An iterator that consumes a <code>SmallVec</code> and yields its items …","Converts a function into a <code>System</code>.","The ID is in the wrong format.","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","The type of the array’s elements.","The type of iterator this query item creates","The <code>J</code> key.","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a keyboard key.","A keyboard input event.","Resource containing the keyboard input events detected on …","The <code>L</code> key.","A <code>Ulid</code> with a human-readable ascii prefix.","Error creating a <code>LabeledId</code>.","Errors that can happen while parsing a <code>LabeledId</code>.","The fifth stage","A value which is initialized on the first access.","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","","","","","","","Error for unexpected length of hex string","The number of lines scrolled.","An asset that has been loaded.","Struct containing all the game’s loaded assets, …","The location of an asset that has changed.","Borrow the localization field from the root asset.","Asset containing all loaded localizations, and functions …","The <code>M</code> key.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","The <code>Mail</code> key.","Type represents a <code>SchemaMap</code>.","A margin specification.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","An equivalent to <code>Option&lt;T&gt;</code> that has a stable memory layout …","This type provides a way to store data to which you either …","This type is basically the same as <code>MaybeOwned</code>, but works …","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","Non-persistent <code>Storage</code> backend.","Context provided while loading a metadata asset.","This is a metadata asset that can be loaded from JSON or …","The middle mouse button.","The <code>Minus</code> / <code>-</code> key.","","A button on the mouse.","A mouse button input event.","Resource containing the mouse input events made this frame.","Mouse scroll-wheel input event.","The unit that a <code>MouseScrollEvent</code> is in.","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","All NAN:s.","All NAN:s.","All NAN:s.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","The duration of one nanosecond.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","","The name of a field.","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","","An error returned when trying to access an uninitialized …","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","The <code>O</code> key.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","","The <code>Oem102</code> key.","Run once and stop.","Opaque data that cannot described by a schema.","","","Another mouse button with the associated number.","owns T","owns T","Type-erased Box-like pointer to some unknown type chosen …","The <code>P</code> key.","YAML format for asset packs’ <code>pack.yaml</code> file.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The type of the parameter, ranging over the lifetime of …","The <code>Paste</code> key.","A component for rendering a 2D line path, made up of a …","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The <code>Period</code> / <code>.</code> key.","The number of pixels scrolled.","The <code>PlayPause</code> key.","The <code>Plus</code> / <code>+</code> key.","The fourth stage","The <code>Power</code> key.","The second stage","The prefix was not ASCII.","The prefix was too long ( greater than 63 chars ).","The button is pressed.","The <code>PrevTrack</code> key.","A type of primitive.","The type represents a primitive value.","Type-erased borrow of some unknown type chosen when …","Extension trait with utils for <code>Ptr</code>.","Type-erased mutable borrow of some unknown type chosen …","Extension trait with utils for <code>PtrMut</code>.","The <code>Q</code> key.","A quaternion representing an orientation.","A type representing a component-joining entity query.","The <code>R</code> key.","","Wrapper for a borrowed <code>AtomicCell</code> that will released lock …","Wrapper for mutably borrowed <code>AtomicCell</code> that will released …","The button is released.","Resource containing the <code>RendererApi</code> implementation …","Trait for the interface exposed by external bones …","Reset when finished.","<code>SystemParam</code> for getting read access to a resource.","<code>SystemParam</code> for getting read access to a resource and …","<code>SystemParam</code> for getting mutable access to a resource.","<code>SystemParam</code> for getting mutable access to a resource and …","A collection of resources.","The <code>Return</code> / <code>Enter</code> key.","sRGBA color","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","","","","","","","Get the root asset of the core asset pack and cast it to …","Internal resource used to cache the field of the root …","The <code>S</code> key.","A typed version of <code>SchemaBox</code>.","Global <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …","The duration of one second.","Variant for slower PRNGs, like ChaCha8.","Typed version of a <code>SchemaMap</code>.","A typed version of a <code>SchemaVec</code>.","Type data for asset handles.","A owning, type-erased <code>Box</code>-like container for types with a …","Schema information describing the memory layout of a type.","Derivable schema <code>type_data</code> for types that implement …","A struct that implements <code>DeserializeSeed</code> and can be used …","Error returned when a field is not found in a schema.","A unique identifier for a schema registered in the …","A schema describes the data layout of a type, to enable …","Layout information computed for <code>SchemaData</code>.","Untyped schema-aware “HashMap”.","A custom asset loader implementation for a metadata asset.","Error type when attempting to cast between types with …","A schema reference, containing the ID of the pack that …","The load context for a <code>SchemaRefMut</code>.","An untyped reference that knows the <code>Schema</code> of the pointee …","An untyped mutable reference that knows the <code>Schema</code> of the …","A schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …","A struct that implements <code>Serialize</code> and wraps around a …","A type-erased <code>Vec</code>-like collection that for items with the …","The <code>Scroll</code> / <code>Scroll Lock</code> key.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","","The <code>Semicolon</code> / <code>;</code> key.","A <strong>data structure</strong> that can be serialized into any data …","","A bones game. This includes all of the game worlds, and …","Resource that allows you to configure the current session.","Trait for plugins that can be installed into a <code>Session</code>.","A session runner is in charge of advancing a <code>Session</code> …","Container for multiple game sessions.","The value is set.","Resource providing a noise source for <code>CameraShake</code> entities …","The <code>Left Shift</code> key.","The <code>Right Shift</code> key.","A collection of systems that will be run in order.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","A <code>Vec</code>-like container that can store a small number of …","The <code>Snapshot</code> / <code>Print Screen</code> key.","","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","A 2D sprite component","Trait for things that may be used to identify a system …","","The intermediate state for the parameter, that may be …","A piece of audio loaded into memory all at once.","Struct containing a static system.","The <code>Stop</code> key.","A Stopwatch is a struct that track elapsed time when …","Persitent storage resource.","Trait implemented by storage backends.","A Rust <code>String</code>. Must be manipulated with Rust string …","The type represents a struct.","A field in a <code>StructSchemaInfo</code>.","Schema data for a struct.","The <code>Left Super</code> key. Generic keyboards usually display this …","The <code>Right Super</code> key. Generic keyboards usually display …","The type of the system that is output","The <code>Sysrq</code> key.","Trait implemented by systems.","Trait used to implement parameters for <code>System</code> functions.","Trait for system stages. A stage is a","An ordered collection of <code>SystemStage</code>s.","The <code>T</code> key.","A fast, non-cryptographic, thread-local random number …","All true.","All true.","All true.","All true.","All true.","The <code>Tab</code> / <code>   </code> key.","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","A tilemap tile component.","A tilemap layer component.","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","Convenience trait for constructing a <code>SmallVec</code>","The main transform component.","Base trait for implementing a PRNG. Only one method must be","Enum for determining the kind of PRNG, whether a fast one, …","Extension trait for automatically implementing all …","The <code>U</code> key.","<code>u128</code>","A <code>u16</code>.","<code>u16</code>","A <code>u32</code>.","<code>u32</code>","<code>u64</code>","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A <code>u8</code>.","<code>u8</code>","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A Ulid is a unique 128-bit lexicographically sortable …","The ULID could not be parsed.","Extension trait for <code>Ulid</code>.","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","Extension trait for helper methods on <code>UnsafeCell</code>","The value is not set.","An untyped resource that may be inserted into …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","Mutable iterator over pointers in an untyped component …","Mutable iterator over pointers in an untyped component …","An untyped handle to an asset.","Storage for un-typed resources.","Helper trait for unwraping each item in an array.","The <code>Up</code> / <code>Up Arrow</code> key.","The third stage","A handle representing a string in the global string cache.","A standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …","A standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …","The <code>V</code> key.","Information about an enum variant for <code>EnumSchemaInfo</code>.","Type represents a <code>SchemaVec</code>, where each item in the vec …","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector.","","A 4-dimensional vector.","","","","<strong>SemVer version</strong> as defined by https://semver.org.","A custom viewport specification for a <code>Camera</code>.","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive W axis.","","The <code>Wake</code> key.","Asset IO implementation that loads assets from a URL.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","","Information about the window the game is running in.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","The <code>X</code> key.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","The <code>Y</code> key.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","The <code>Yen</code> key.","","The <code>Z</code> key.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","A duration of zero time.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","","","","","","","","Get alpha.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Get an absolute path. This works even if the path does not …","Get an absolute path. This works even if the path does not …","Get an absolute path. This works even if the path does not …","Whether or not this session should have it’s systems run.","Whether or not this session should be active after this …","Whether or not the camera is enabled and rendering.","","","Add a system to be run at the end of the stage.","","","","","","","","","","Adds two quaternions.","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds two 4x4 matrices.","Add a system that will run only once, before all of the …","Add a system to this stage.","","Add a <code>System</code> to the stage with the given label.","Adds trauma to the camera, capping it at 1.0","Advance the time exactly by the given duration.","","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","System for automatically animating sprites with the …","Install animation utilities into the given <code>SystemStages</code>.","The collection of animations in this animation bank.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Given a unit vector return two other vectors that together …","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","Returns any unit vector that is orthogonal to the given …","Returns any unit vector that is orthogonal to the given …","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modify the iteration bitsetet the cached string as a C char*.","Get this ustr as a CStr","Dereferences and returns result wrapped in the <code>Ref</code>.","Dereferences and returns result wrapped in the <code>RefMut</code>.","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Gets a mutable pointer from this owned pointer.","","","Converts reference and returns result wrapped in the <code>RefMut</code>…","Returns a <code>&amp;mut</code> if possible.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns the total number of nanoseconds contained by this …","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Returns a raw pointer to the underlying data in this cell.","Returns a raw pointer to the vector’s buffer.","Gets the underlying pointer, erasing the associated …","Gets an immutable reference from this mutable reference","Gets an immutable pointer from this owned pointer.","","","Converts reference and returns result wrapped in the <code>Ref</code>.","","","","","Borrow as an <code>AssetLocRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Converts a reference of <code>T</code> to a <code>SchemaRefMut</code>","Converts a reference of <code>T</code> to a <code>SchemaRef</code>","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","Get the cached string as a &amp;str","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Transforms this <code>Ptr</code> into an <code>PtrMut</code>","","Receiver for asset changes, used to implement hot reloads.","Sender for asset changes, used by the <code>AssetIo</code> …","Content addressed cache of raw bytes for asset data.","Maps the handle of the asset to it’s content ID.","Helper function to return type data for a custom asset …","The asset server.","The base URL to load assets from.","Maps asset content IDs, to assets that have been loaded by …","","","","","The atlas handle.","The texture atlas to use for the layer","The axis that has changed.","Get blue in sRGB colorspace.","","The backend storage API.","","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for combining bitsets with bit_or.","","","","","","","","Read the bitset containing the list of entites with this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","","","","","","Shorthand for setting bits on the bitset container.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>bool</code> vector mask types. ","Returns a random boolean value.","Set the button border image","If border_only is set to <code>true</code>, then the middle section of …","","Set the scale of the border image.","","The size of the border on each side.","The border images to use for different button states.","This module contains types that can be used to implement …","This is used create an instance of the system parame, …","","","","","","","","","","","","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrow the resource.","","","","","","","","","Lock the resource for reading.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrow the resource.","","","","","","","","","Lock the resource for read-writing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bottom margin.","","","The bundles for all loaded languages.","The gamepad button.","The button that the event refers to.","The mouse button events sent this frame.","The state of the keyboard button.","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","The cache of objects that have been read","The number of items the vector can hold without …","","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","","","The camera will always restore to this position.","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","The content ID of the loaded asset.","","","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Remove all elements from the vector.","Clear the UI focus","Clears the killed entity list.","When the button is clicked on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone the inner data, creating a new copy instead of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function pointer that may be used to clone data with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare the major, minor, patch, and pre-release value of …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","The color of the path.","The sprite’s color tint","The sprite’s color tint","The font color.","The number of columns in the atlas.","","","","","","","","","","","","","","","","Stores the world components.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check whether or not this component store has data for the …","Check whether or not the bitset contains the given entity.","Check whether or not the resoruce with the given ID is …","Check whether or not a resource is in the store.","Wrap the error value with additional context.","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Read the core asset pack.","","The directory to load the core asset pack.","The core asset pack, if it’s been loaded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor that) is the same as <code>Ulid::new()</code>, but that …","Create a new session, and borrow it mutably so it can be …","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","","","","","","","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","The metadata asset load context.","","The current animation.","The bundle selected as the current language.","","","","","Creates a dangling pointer with specified alignment. See …","","","The loaded data of the asset.","The egui font data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","The the length of time in seconds for the camera trauma to …","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The game’s default asset pack.","The default button state.","","The function pointer that may be used to write a default …","Delete a session.","Whether or not this session should be deleted.","Have the renderer delete the session.","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","The <code>Cid</code>s of the assets this asset depends on.","The dependency list of this asset. This should be updated …","The content IDs of any assets needed by this asset as a …","The maximum depth to render (on a scale from 0.0 to 1.0).","The minimum depth to render (on a scale from 0.0 to 1.0).","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms this <code>Ptr&lt;T&gt;</code> into a <code>&amp;T</code> with the same lifetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Transforms this <code>PtrMut&lt;T&gt;</code> into a <code>&amp;mut T</code> with the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize this value from the given Serde deserializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function that may be used to deserialize the type.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Generate a random digit in the given <code>radix</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …et the number of assets that have had their data …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","Creates a draining iterator that removes the specified …onsumes the <code>OwningPtr</code> to drop the underlying data of type …","The function pointer that may be used to drop data with …","Returns the duration of the timer.","Returns the duration of the audio.","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much time has advanced since <code>startup</code>, as …","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer. Guaranteed to be …","","","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns the elapsed time since the last <code>reset</code> of the …","","","","","","","","","","","List the names of the non-core asset pack folders that are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function pointer that may be used to compare two …onstructs an event at the error level.","Get the number of assets that have errored while loading.","","The type of connection event.","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Copy elements from a slice and append them to the vector.","<code>f32</code> vector, quaternion and matrix types. ","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","<code>f64</code> vector, quaternion and matrix types. ","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","The font-family to use.","The name of the loaded font family.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is a struct, then the field offsets will contain …","The fields in the struct, in the order they are defined.","Fills a mutable buffer with random bytes.","Makes a new <code>Ref</code> for an optional component of the borrowed …","Makes a new <code>RefMut</code> for an optional component of the …","Returns <code>true</code> if the timer has reached its duration at …","","","Whether or not the flip the sprite horizontally.","Whether or not the flip the sprite horizontally.","Whether or not to flip the tile horizontally.","Whether or not the flip the sprite vertically.","Whether or not the flip the sprite vertically.","Whether or not to flip tile vertically.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","A helper macro to simplify creation of FluentArgset this response to focused if nothing else is focused","Set whether or not the button focuses itself automatically …","","When the button is hovered for focused on.","The font family, size, and color to use for the button.","","","Create an <code>UntypedComponentStore</code> that is valid for the …","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Forks a <code>TurboCore</code> instance by deterministically deriving a …","The frames per second to play the animation at.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","The frames in the animation.","The raw samples that make up the audio.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new Ustr from the given &amp;str.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Loads a cursor wrapping audio file data into a …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","","Loads an audio file into a <code>StaticSoundData</code>.","","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Loads an audio file from a type that implements Symphonia…","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","","","","","","","","","","","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates a <code>SmallVec</code> directly from the raw components of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a rotation.","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …reate a transform from a scale.","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Create a quaternion that rotates <code>v.length()</code> radians around …","Create a new <code>UntypedAtomicResource</code> for the given schema, …","Creates a new timer with a given duration in seconds.","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</codereate a transform from a translation.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Return the data for the type.","Creates a <code>ComponentStore</code> from an <code>UntypedComponentStore</code>.","Create from an <code>UntypedAtomicResource</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion from a 4D vector.","Creates <code>Self</code> using data from the given <code>World</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","Creates a new rotation quaternion.","The full name of the type, including any module specifiers.","Get green in sRGB colorspace.","The version of the game. This is used to evaluate whether …","The game <code>VersionReq</code> this asset pack is compatible with.","The required game version to be compatible with this asset …","The version of the game that the pack is not compatible …","The ID of the gamepad.","The ID of the gamepad.","The ID of the gamepad.","The gampad events.","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Returns the generation of this <code>Entity</code>.","","","","Gets an immutable reference to the component of <code>Entity</code>.","Indexes the slice without doing bounds checks","Get a reference to the component storage for the given …","","Borrow a session from the sessions list.","Gets the reference to the result of this lazy value if it …","Borrow a component store.","Borrow a loaded asset.","Get a reference to an untyped resource.","Borrow a resource.","Get’s the tile at the given position in the layer, …","Get the <code>egui::TextureId</code> for the given bones <code>Handle&lt;Image&gt;</code>.","Get data from the storage cache.","Get a localized message.","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Gets a clone of the resource cell for the resource of the …","Get the untyped component storage by the component’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get mutable references s to the component data for …","Get mutable references s to the component data for …","Get <code>SchemaRefMut</code>s to the component data for multiple …","Gets a mutable reference to the component of <code>Entity</code>.","Returns a mutable reference to the underlying data.","Get a mutable reference to the component storage for the …","","Borrow a session from the sessions list.","Gets the reference to the result of this lazy value if it …","Borrow a component store.","Mutably borrow a loaded asset.","Get a mutable reference to an untyped resource.","Mutably borrow a resource.","Get data mutably from the storage cache.","Get data from the storage cache or insert it’s default …","Get data mutably from the storage cache or insert it’s …","Get a <code>SchemaRef</code> to the component for the given <code>Entity</code> if …","Get a <code>SchemaRefMut</code> to the component for the given <code>Entity</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrow a resource from the world, if it exists.","Borrow a resource from the world, if it exists.","Shortens a type name to remove all module paths.","Get a global runtime state from the EGUI context, …","This is called to produce the intermediate state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrow a <code>LoadedAsset</code> associated to the given handle.","Borrow a <code>LoadedAsset</code> associated to the given handle.","Get a localized message with the provided arguments.","The size of the layer in tiles.","Re-allocate to set the capacity to …","Responds to any asset changes reported by the <code>AssetIo</code> …","","Whether or not the session systems in it’s <code>stages</code> have …","Whether or not the startup systems have been run yet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function pointer that may be used to hash the value.","New <code>Color</code> from sRGB colorspace.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","<code>i32</code> vector types. ","Returns a random <code>i32</code> value.","<code>i64</code> vector types. ","Returns a random <code>i64</code> value.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns a random <code>i8</code> value.","The unique identifier for the stage.","Returns a unique identifier for the stage.","","","Get the Egui font ID.","The runtime ID of the asset.","The unique identifier for the stage.","The unique ID of the asset pack.","The ID of the asset pack.","The asset pack ID.","The unique ID of the asset pack.","","Get the index of the tile at the given position.","","","","The tile index in the tilemap texture.","The image for the atlas.","The sprite image handle.","The image for the border.","The size of the border image in pixels.","Implements the <code>BitSet</code> trait members for your type through …","","Specify schemas to import from other asset packs.","Increment the number of assets that have been downloaded …","Increment the number of assets that have errored during …","Increment the number of assets that have been loaded by …","Increment the number of assets that need to be loaded by …","Lists the packs that have not been loaded due to an …","","Returns a <code>usize</code> value for stable indexing across different …","Returns the index of this <code>Entity</code>.","","","","","","","","","","","","","","","","","","","","The current frame in the animation.","This is the current index in the animation, with an <code>idx</code> of …","","","","","","","","","","","","","","","","","","","","","Constructs an event at the info level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize component storage for type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a system parameter.","Initialize a resource of type <code>T</code> by inserting it’s …","Initialize a resource that will be shared across game …","Initialize the contained systems for the given <code>world</code>.","Initialize the system, creating any component or resource …","This will be called to give the parameter a chance to …","","","","","","","","","","","","","This should be called once to initialize the system, …","Initialize the systems in the stages agains the <code>World</code>.","The maximum number of elements this vector can hold inline","The asset server inner state.","Inserts a component for the given <code>Entity</code> index. Returns …","Insert component data for the given entity and get the …","","Insert an element at position <code>index</code>, shifting all elements …","Insert a resource.","Insert a resource.","Insert the data into storage cache.","Insert component data for the given entity and get the …","Insert a resource.","Insert a resource cell.","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Returns true if the entity already had a component of this …","Insert a resource.","Insert a resource that will be shared across all game …","Insert a new stage, after another existing stage","Insert a new stage, before another existing stage","Install the plugin into the <code>Session</code>.","","","Install a plugin.","Install a <code>GamePlugin</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonverts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Consumes the <code>AtomicCell</code>, returning the wrapped value.","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","","","","","","","Return the contained data in it’s owned form.","Return the contained data in it’s owned formplits wrapper into two parts. One is reference to the …","Splits wrapper into two parts. One is reference to the …","Convert into a typed <code>ComponentStore</code>.","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Consumes this <code>Lazy</code> returning the stored value.","Convert a SmallVec to a Vec, without reallocating if the …","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","The <code>AssetIo</code> implementation used to load assets.","Checks if the <code>Entity</code> is still alive.","Returns <code>true</code> if the vector is empty","Returns true if the length is zero.","Get whether or not all the assets are done loading.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …eturns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns true if the data is owned else false.","Returns true if the data is owned else false.","Returns <code>true</code> if the clock is currently paused.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this <code>Duration</code> spans no time.","Returns a random <code>isize</code> within a given range bound.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","","Iterate over sessions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Mutably iterate over sessions.","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over the entities and components in the given …","Return an iterator over the provided bitset.","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","","","","Iterates over entities using the provided bitset.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns <code>true</code> only on the tick the timer reached its …","The key code of the pressed key, if applicable.","The key events that have been detected this frame.","","Kill an entity.","Returns entities in the killed list.","","The kind of schema.","The last animation that was playing.","","The layout of the type.","Convert into a reference to the underlying data.","Convert into a reference to the underlying data.","The left margin.","","The number of elements stored in the vector","","Get the length (in bytes) of this string.","","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Hints to the compiler that the branch condition is likely …","List of indexes into the <code>points</code> vector, for which that …","Get an event listener that will be notified each time …","Load the asset from raw bytes.","Read the entire collection of objects from storage with …","","","Load the asset","Load the data from the storage backend.","","Load another asset as a child of this asset.","Load an asset.","Load the bytes of the asset at the given path, but return …","Like <code>load_asset()</code> but forces the asset to reload, even it …","Load all assets. This is usually done in an async task.","Load the core asset pack.","Get the binary contents of an asset.","","","","Load the asset pack with the given folder name, or else …","The asset load progress.","Get the number of assets that have been downloaded and …","The location of the asset.","The location that the asset is being loaded from.","The pack and path the asset was loaded from.","","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Generates a random <code>char</code> in the range a-z.","Remove the component info for dead entities.","","Consumes a value and creates an <code>OwningPtr</code> to it while …","Internally converts the type into it’s owned variant.","Internally converts the type into it’s owned variant.","Makes a new <code>Ref</code> for a component of the borrowed data.","Makes a new <code>RefMut</code> for a component of the borrowed data.","","","","Splits a <code>Ref</code> into multiple <code>Ref</code>s for different components …","Splits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …","Set the margin. This will be applied on the outside of the …","Set the margin. This will be applied on the outside of the …","","","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum offset angle in radians that the camera shake …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","The maximum offset position that the camera shake can …","Helper function to return type data for a metadata asset.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Set the minimum size for the button","","","Returns the mode of the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not this is a monospace font.","The movement of the mouse this frame.","the scroll movement.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","Multiplies two quaternions. If they each represent a …","","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Multiplies two 2x2 matrices.","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","Transforms a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The human-readable name for the stage, used for error …","Returns the human-readable name of the label, used in …","Get a best-effort name for the system, used in diagnostics.","","","","The human-readable name for the stage, used for error …","A best-effort name for the system, for diagnostic purposes.","The display name of the asset pack.","The name of the schema.","The short name of the type.","The name of the enum variant.","The name of the field. Will be <code>None</code> if this is a field of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Creates a new <code>AtomicCell</code> containing value.","Create a new labeled ID with the given prefix.","Create a arbitrary <code>UntypedComponentStore</code>.","Constructs a new <code>Time</code> instance with a specific startup …","Construct an empty vector","Creates a new instance from a raw pointer.","Create an empty <code>Session</code>.","Wraps external reference into <code>Ref</code>.","Create an empty game with an asset server.","Create a new <code>FileAssetIo</code>.","Create a new <code>WebAssetIo</code> with the given URL as the core …","Initialize a new <code>DummyIo</code> from an iterator of …","Creates a new lazy value with the given initializing …","Wraps external reference into <code>RefMut</code>.","Create a new button","Create a new frame with the given <code>BorderImageMeta</code>","Create <code>Version</code> with an empty pre-release and build …","Create a new, empty stage, for the given label.","Creates a new <code>Entity</code> from the provided index and …","Initialize a new <code>AssetServer</code>.","Creates a new <code>UntypedAtomicResource</code> storing the given data.","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new atomic resource.","Create a new <code>CameraShake</code> component with the provided …","Create a new <code>AtlasSprite</code> from the given atlas handle.","Create a new tile layer","Create a new egui input hook.","Create a new unpaused <code>Stopwatch</code> with no elapsed time.","Creates a new timer with a given duration.","Create a new <code>World</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new <code>Duration</code> from the specified number of whole …","Create a new labeled ID with the given prefix and ULID.","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","The offset of the first tile from the top-left of the …","Set a different border to use when the mouse is clicking …","","Set a different border to use when focusing / hovering …","","Convert this <code>Maybe</code> into an <code>Option</code>.","Creates a left-handed orthographic projection matrix with …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","The ID of the pack, or <code>None</code> if it refers to the core pack.","The pack_dir of the pack that the asset is in.","The pack_dir of the pack that the asset is in.","The unique ID of the asset pack this asset is located in.","The directory of the pack that","Maps the directory names of asset packs to their …","The metadata of the pack that could not be loaded.","The asset pack this was loaded from, or <code>None</code> if it is from …","Read the loaded asset packs.","Extra asset packs. The key is the the name of the asset …","","The asset packs that have been loaded.","The directory to load the asset packs from.","Set the padding. This will be applied on the inside of the …","Set the padding. This will be applied on the inside of the …","","","The amount of padding between tiles.","The amount of space to pad around the internal edges of …","Paint the frame into the given rect.","","Create <code>Version</code> by parsing from string representation.","","","","","","","","","","","","","","","Partially shuffles a slice by a given amount and returns …","","The path to the asset in it’s pack.","The path to the asset in it’s pack.","The path to the asset, relative to the root of the asset …","Maps the asset <code>AssetLoc</code> to it’s handle.","Stops the clock, preventing it from advancing until …","Pauses the stopwatch. Any call to <code>tick</code> while paused will …","Pauses the Timer. Disables the ticking of the timer.","Returns <code>true</code> if the stopwatch is paused.","Returns <code>true</code> if the timer is paused.","","","List of assets that have been changed and that we are …","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Creates a right-handed perspective projection matrix with […","","","The list of points in the path","Remove an item from the end of the vector and return it, …","","Get the position of the tile at the given index.","The physical position to render this viewport to within …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","Get the precomputed hash for this string","Get the prefix of the ID.","","Get whether or not the button is pressed.","The priority of this session relative to other sessions in …","Cameras with a higher priority will be rendered on top of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Transforms the given 3D vector as a point, applying …","Transforms this <code>PtrMut</code> into an <code>OwningPtr</code>","","The pointer to load.","","","","","","Append an item to the vector.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","The system queue that will be run at the end of the stage","The event queue.","Get red in sRGB colorspaceeturns a copy of the contained value.","Consumes the <code>OwningPtr</code> to obtain ownership of the …","","","","","","","","","","","","","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Gets a <code>PtrMut</code> from this with a smaller lifetime.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …egister the default assets from <code>bones_framework</code>.","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the remaining time using Duration","Returns the remaining time in seconds","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Remove the component data for the entity if it exists.","","Remove and return the element at position <code>index</code>, shifting …","Remove a resource.","Remove data for a type from the storage.","Remove the component data for the entity if it exists.","If there is a previous value, <code>true</code> will be returned.","Remove a shared resource, if it is present in the world.","Whether or not to repeat the animation","Replaces the wrapped value with a new one, returning the …","Replaces the wrapped value with a new one computed from f, …","Reseeds the <code>SeededCore</code> with a new seed/state.","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resets the stopwatch. The reset doesn’t affect the …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Borrow a resource from the world.","Borrow a resource from the world.","","Stores the world resources.","","Restore the world state.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","List of assets that depend on the given assets.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","Create an <code>egui::RichText</code> that can be passed to <code>ui.label()</code>.","The runtime ID of the handle","The right margin.","Get the core asset pack’s root asset.","The root asset for the asset pack.","The path to the root asset for the pack.","The path to the root asset for the pack.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","The rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","The number of rows in the atlas.","Execute the systems on the given <code>world</code>.","Run the system.","Execute the systems on the given <code>world</code>.","","","This is run every time the system is executed","Run a system once, assuming any necessary initialization …","Run a system once.","The session runner to use for this session.","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","The sample rate of the audio (in Hz).","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Write the entire collection of objects to storage, …","Save the data to the storage backend.","","The scale of the entity.","The scale to render the border image at.","Custom scale for the UI.","The scan code of the pressed key.","Get this type’s <code>Schema</code>.","Get the schema of the components stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the schema of the resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The schema of the asset being loaded.","","","The schema of the type pointed to by the handle, if this …","The schema of this variant.","The schema of the field.","","","","","Schemas provided in the asset pack.","The registered schemas.","","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Send a camera trauma event.","By default, buttons senses clicks. Change this to a …","","Serialize this value into the given Serde serializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The asset server.","The sessions that make up the game.","","Set the tile at the given position, to a certain entity.","","Sets the element at <code>index</code>.","","","Sets the element at <code>index</code>.","","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","","Sets the element at <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set alpha.","Set blue in sRGB colorspace.","Sets the duration of the timer.","Sets the elapsed time of the stopwatch.","Sets the elapsed time of the timer without any other …","Set green in sRGB colorspace.","Set the <code>AssetIo</code> implementation.","Sets the length of a vector.","Sets the mode of the timer.","Set red in sRGB colorspace.","Set a global runtime state from the EGUI context.","Settings for the sound.","Get the shared resource of a given type out of this <code>Game</code>s …","Get the shared resource cell of a given type out of this …","Get the shared resource of a given type out of this <code>Game</code>s …","Collection of resources that will have a shared instance …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the button","Render the frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shrink the capacity of the vector as much as possible.","Shuffles a slice randomly in O(n) time.","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns the number of items the array can hold.","Get the size in pixels of the entire atlas image.","The logical size of the window’s client area.","The height of the camera in in-game pixels.","The physical size of the viewport rectangle to render to …","The font size.","","","","","Performs a spherical linear interpolation between <code>self</code> and …","Performs a spherical linear interpolation between <code>self</code> and …","Makes a new <code>Ref</code> for a sub-slice of the borrowed slice.","Makes a new <code>RefMut</code> for a sub-slice of the borrowed slice.","Creates a <code>SmallVec</code> containing the arguments.","Snapshot the world state.","List of sorted session keys.","","Utility function that spawns the camera in a default …","The speed that the screen is shook.","Returns <code>true</code> if the data has spilled into a separate …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","The system","The stages in the collection, in the order that they will …","","","","The systems that should run at startup.","Whether the button was pressed or released.","Step the simulation once.","Step the game simulation.","","","","","The asset store.","","","","","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","Subtracts two 4x4 matrices.","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the wrapped value of self with the wrapped value of …","Remove the element at position <code>index</code>, replacing it with …","Traits adding swizzle methods to all vector types. ","Convert into a <code>System</code>.","","The collection of systems that are associated to the game …","The list of systems in the stage.","The layout of the enum tag.","","","Takes the wrapped value, leaving <code>Default::default()</code> in its …","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","","","","Create a button with the given theme.","The thickness of the line.","Advance the stopwatch by <code>delta</code> seconds. If the stopwatch …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","Get the position in pixels of the top-left corner of the …","The size of each tile in the atlas.","The size of each tile in the layer.","The vector of tile slots in this layer.","The amount of time the current frame has been playing","Returns the number of times a repeating timer finished …","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Returns the rotation angles for the given euler rotation …","Get the number of assets that must be loaded.","Acquires a mutable reference to owned data.","","","","","","","","","","","","Get an owned String copy of this string.","","","","","","","","","","","","","","","","","Clone data to an owned <code>AssetLoc</codextracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Returns the rotation axis scaled by the rotation in …","Construct a new <code>SmallVec</code> from a sliceemoves the alignment requirement of this pointer","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","The top margin.","Constructs an event at the trace level.","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","The position of the entity in the world.","","","","","Unsafely alter the lifetime of this <code>PtrMut</code>.","Unsafely alter the lifetime of this <code>Ptr</code>.","","","Transposes a <code>Ref</code> of an <code>Option</code> into an <code>Option</code> of a <code>Ref</code>. …","Transposes a <code>RefMut</code> of an <code>Option</code> into an <code>Option</code> of a <code>RefMut</code>…","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Value from 0-1 that indicates the intensity of the shake. …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Shorten the vector, keeping the first <code>len</code> elements and …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","Immutably borrows the wrapped value, returning <code>None</code> if the …","Mutably borrows the wrapped value, returning an error if …","Immutably borrows the wrapped value, returning <code>None</code> if the …","Mutably borrows the wrapped value, returning <code>None</code> if the …","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …he checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","Get a reference to the component storage for the given …","Borrow a loaded asset.","Get mutable references s to the component data for …","Get a mutable reference to the component storage for the …","Re-allocate to set the capacity to …","Insert component data for the given entity and get the …","Insert component data for the given entity and get the …ry to extract the inner schema box, if this is the …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Remove the component data for the entity if it exists.","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Container for storing <code>Schema</code> type datashe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Create a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.","Convert into typed <code>Ref</code>. This panics if the schema doesn’…","Convert into typed <code>RefMut</code>. This panics if the schema doesn…","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","<code>u32</code> vector types. ","Returns a random <code>u32</code> value.","<code>u64</code> vector types. ","Returns a random <code>u64</code> value.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns a random <code>u8</code> value.","","The Bones Framework UI plugin.","Get the <code>Ulid</code> of the ID.","","Undo the effect of leaked guards on the borrow state of …","The unit the mouse scroll is in.","Hints to the compiler that the branch condition is …","Resumes the clock if paused.","Unpauses the stopwatch. Resume the effect of ticking on …","Unpauses the Timer. Resumes the ticking of the timer.","Convert the handle to an <code>UntypedHandle</code>.","Borrow the underlying <code>UntypedResources</code> store.","","","","Mutably borrow the underlying <code>UntypedResources</code> store.","Unwrap all the items in an arraypdates the internal time measurements.","Update the CID by combining it’s current data with the …","System for updating <code>AnimatedSprite</code>s based on thier …","Updates time with a specified <code>Instant</code>.","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","Create a new Ustr from the given &amp;str.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","The value of the button, for example, this will be <code>1.0</code> …","The value of the axis.","","Info for the enum variants.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","The version number of the asset pack.","The version of the asset pack.","The version of the asset pack.","The version of the asset pack.","An optional viewport override, allowing you to specify …","Whether or not this session should be rendered.","Whether or not this session should be visibleonstructs an event at the warn level.","Subscribe to asset changes.","","Tell the asset backend to watch for changes and trigger …","Filesystem watcher if enabled.","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","The mouse wheel event sent this frame.","Egui widgets.","Create a new storage resource with the given backend …","Wraps external reference into <code>Ref</code>. And associates it with …","Wraps external reference into <code>RefMut</code>. And associates it …","Construct an empty vector with enough capacity …","Clone the font and set a new color.","Wrap the error value with additional context that is …","Create a <code>SystemStages</code> collection, initialized with a stage …","Returns a clone of the <code>StaticSoundData</code> with the modified …","Creates a new <code>SeededCore</code> with a specific seed value.","Returns a clone of the <code>StaticSoundData</code> with the specified …","Create a new <code>CameraShake</code> component with the provided …","The ECS world for the core.","If <code>true</code>, the text will wrap to stay within the max width …","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternion.","","","Returns the vector part of the quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>extension</code> is the portion of the extension that comes …","The list of file extensions to load this asset from.","The loader implementation for the asset.","The layout that was passed to the allocator","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","The alignment of the data.","The size of the data.","The schema of the key type.","The schema of the value type.","Iterator of a chain of source errors.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Error</code> type, a wrapper around a dynamic error type.","Equivalent to Ok::&lt;_, anyhow::Error&gt;(value).","<code>Result&lt;T, Error&gt;</code>","Construct an ad-hoc error from a string or existing non-…","","","","","","","","","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","Wrap the error value with additional context.","","","","","","","","","Attempt to downcast the error object to a concrete type.","","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","Construct an ad-hoc error from a string or existing non-…","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","","","Create a new error object from a printable error message.","Create a new error object from any error type.","","","","","","","","The lowest level cause of this error — this error’s …","","","","","","","","","","","","","","","","","","","","","Wrap the error value with additional context that is …","A boolean.","The represents a <code>SchemaBox</code> with given type inside.","Type represents an enum, which in the C layout is called a …","Schema data for an enum.","A type for an enum tag for <code>EnumSchemaInfo</code>.","<code>f32</code>","<code>f64</code>","Trait implemented for types that can produce an instance …","Trait implemented for types that have a <code>Schema</code>.","Derive macro for the <code>HasSchema</code> trait.","<code>i128</code>","<code>i16</code>","<code>i32</code>","<code>i64</code>","<code>i8</code>","Type represents a <code>SchemaMap</code>.","Opaque data that cannot described by a schema.","A type of primitive.","The type represents a primitive value.","Schema information describing the memory layout of a type.","A schema describes the data layout of a type, to enable …","Layout information computed for <code>SchemaData</code>.","A Rust <code>String</code>. Must be manipulated with Rust string …","The type represents a struct.","A field in a <code>StructSchemaInfo</code>.","Schema data for a struct.","<code>u128</code>","A <code>u16</code>.","<code>u16</code>","A <code>u32</code>.","<code>u32</code>","<code>u64</code>","A <code>u8</code>.","<code>u8</code>","Information about an enum variant for <code>EnumSchemaInfo</code>.","Type represents a <code>SchemaVec</code>, where each item in the vec …","Allocation and collection utilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the enum, if this is a enum.","Get the primitive, if this is a primitive.","Converts a reference of <code>T</code> to a <code>SchemaRefMut</code>","Converts a reference of <code>T</code> to a <code>SchemaRef</code>","Get the struct, if this is a struct.","Get the schema of the items in the vector, if this is a …","","","","","","","","","","","","","","","","","","","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …","","","","","","","","","","The function pointer that may be used to clone data with …","","","","","","","","","","","","","","","","","","","Calculate the layout of the type represented by the schema.","The function pointer that may be used to write a default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function pointer that may be used to drop data with …","","","","","","","","","","The function pointer that may be used to compare two …","","","","","","","","","","","","","","","","","","","","","If this is a struct, then the field offsets will contain …","The fields in the struct, in the order they are defined.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Return the data for the type.","The full name of the type, including any module specifiers.","Recursively checks whether or not the schema contains any …","","The function pointer that may be used to hash the value.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of schema.","Get the memory layout of the enum tag.","The layout of the type.","The short name of the type.","The name of the enum variant.","The name of the field. Will be <code>None</code> if this is a field of …","The prelude.","Schema-aware smart pointers.","","","","","","","","","","","","","","","","","","","","","","","Traits implementing raw function calls for cloning, …","","Global schema registry.","Get this type’s <code>Schema</code>.","The schema of this variant.","The schema of the field.","Serde implementations for <code>Schema</code>.","The layout of the enum tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …","","","","","","","","","","","","","","","","","","","Container for storing <code>Schema</code> type datas.","","","","","","","","","","The Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …","","","","","","","","","","Info for the enum variants.","","","","","","","","","","The alignment of the data.","The size of the data.","The schema of the key type.","The schema of the value type.","Extension trait for the <code>Layout</code> type that copies useful …","A low-level memory allocation utility for creating a …","Iterator over items in a <code>ResizableAlloc</code>.","Mutable iterator over items in a <code>ResizableAlloc</code>.","Typed version of a <code>SchemaMap</code>.","A typed version of a <code>SchemaVec</code>.","Iterator over items in an <code>SVec</code>.","Iterator over items in an <code>SVec</code>.","Untyped schema-aware “HashMap”.","A <code>TypeMap</code>-like structure that can store items that …","A type-erased <code>Vec</code>-like collection that for items with the …","Iterator over <code>SchemaVec</code>.","Mutable iterator over <code>SchemaVec</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the capacity.","Get the capacity of the backing buffer.","Get the capacity of the vec.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an item in the vec.","Get a reference to an item in the map.","Get an item from the vec.","Get a value out of the map for the given key.","Get data out of the store.","Get an item in the vec.","Get a mutable reference to an item in the map.","Get an item from the vec.","Get a value out of the map for the given key.","Get the item with the given index.","Get an untyped reference to an item in the map.","Get an item with the given index.","Get an untyped reference to an item in the map.","Safety","Safety","Get the hash of this <code>SchemaVec</code>.","Get the hash of the <code>SVec</code>.","","","","","","","","","","","","","","","","","","","","","","","Insert an entry into the map, returning the previous …","Insert an item into the map.","Insert data into the store","Insert an untyped item into the map.","Safety","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into an untyped <code>SchemaMap</code>.","Convert to an untyped <code>SchemaVec</code>.","Convert into a typed <code>SMap</code>.","Convert into a typed <code>SVec</code>.","Returns <code>true</code> if the vector has zero items in it.","Returns <code>true</code> if there are no items in the vector.","Returns <code>true</code> if the map is empty.","","","","","","","","","","","","","Iterate over the allocation.","Iterate over values in the vec","Iterate over entries in the map.","Iterate over references to the items in the vec.","Iterate over entries in the map.","Iterate mutably over the allocation.","Iterate mutably over values in the vec","Iterate over entries in the map.","Iterate over mutable references to the items in the vec.","Iterate over entries in the map.","Get the schema for the map keys.","","Iterate over keys in the map.","Iterate over keys in the map.","Get the layout.","","Get the number of items in the vector.","Get the length of the vector.","Get the number of entries in the map.","","","","Create a new <code>ResizableAlloc</code> for the given memory layout. …","Initialize an empty <code>SchemaVec</code> for items with the given …","Initialize the <code>SMap</code>.","Create a new, empty <code>SVec</code>.","Create a new map, with the given key and value schemas.","","","","","","","","","","to ensure that the following address will satisfy <code>align</code> …","Pop an item off the vec.","Pop an item off of the vector.","Pop the last item off of the end of the vector.","Get a read-only pointer to the allocation","","Get a mutable pointer to the allocation","Push an item to the vec.","Push an item onto the vector.","Push the item into the end of the vector.","","","","","","","","","","","","","","","","","","","","","","","Raw version of the <code>eq()</code> function. Not meant for normal use.","","Raw version of the <code>hash()</code> function. Not meant for normal …","Remove an item from the map.","Remove an item.","Remove data from the store.","Untypededly remove an item.","Safety","Creates a layout describing the record for <code>n</code> instances of …","Resize the buffer, re-allocating it’s memory.","Get the schema of items in this <code>SchemaVec</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an item in the vec.","Get a value out of the map for the given key.","Get an item in the vec.","Get a value out of the map for the given key.","Get an untyped reference to an item in the map.","Get an untyped reference to an item in the map.","Insert an item into the map.","Insert an untyped item into the map.","","","","","","","","","","","","","Convert into a typed <code>SMap</code>.","Try to convert into a typed <code>SVec</code>.","Pop an item off the vec.","Push an item to the vec.","Push the item into the end of the vector.","Remove an item.","Untypededly remove an item.","","","","","","","","","","","","","Get a pointer to the item with the given index without …","Get a pointer to the item with the given index without …","","","","","","","","","","","","","Get the schema for the map values.","","Iterate over values in the map.","Iterate over values in the map.","Iterate over values in the map.","Iterate over values in the map.","","","","","","","","","","","","","","","","","","Create a new <code>ResizableAlloc</code> with the given capacity.","A boolean.","The represents a <code>SchemaBox</code> with given type inside.","Type represents an enum, which in the C layout is called a …","Schema data for an enum.","A type for an enum tag for <code>EnumSchemaInfo</code>.","<code>f32</code>","<code>f64</code>","The index of a field in a struct in a <code>Schema</code>.","Trait implemented for types that can produce an instance …","Trait implemented for types that have a <code>Schema</code>.","Derive macro for the <code>HasSchema</code> trait.","<code>i128</code>","<code>i16</code>","<code>i32</code>","<code>i64</code>","<code>i8</code>","The index of a field. Works for tuple fields and named …","Type represents a <code>SchemaMap</code>.","The name of a field.","Opaque data that cannot described by a schema.","A type of primitive.","The type represents a primitive value.","The number of bits in a Ulid’s random portion","A typed version of <code>SchemaBox</code>.","Global <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …","Typed version of a <code>SchemaMap</code>.","A typed version of a <code>SchemaVec</code>.","A owning, type-erased <code>Box</code>-like container for types with a …","Schema information describing the memory layout of a type.","Derivable schema <code>type_data</code> for types that implement …","A struct that implements <code>DeserializeSeed</code> and can be used …","Error returned when a field is not found in a schema.","A unique identifier for a schema registered in the …","A schema describes the data layout of a type, to enable …","Layout information computed for <code>SchemaData</code>.","Untyped schema-aware “HashMap”.","Error type when attempting to cast between types with …","An untyped reference that knows the <code>Schema</code> of the pointee …","An untyped mutable reference that knows the <code>Schema</code> of the …","A schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …","A struct that implements <code>Serialize</code> and wraps around a …","A type-erased <code>Vec</code>-like collection that for items with the …","A Rust <code>String</code>. Must be manipulated with Rust string …","The type represents a struct.","A field in a <code>StructSchemaInfo</code>.","Schema data for a struct.","The number of bits in a Ulid’s time portion","<code>u128</code>","A <code>u16</code>.","<code>u16</code>","A <code>u32</code>.","<code>u32</code>","<code>u64</code>","A <code>u8</code>.","<code>u8</code>","A Ulid is a unique 128-bit lexicographically sortable …","Information about an enum variant for <code>EnumSchemaInfo</code>.","Type represents a <code>SchemaVec</code>, where each item in the vec …","","","","","","","","","","Converts a reference of <code>T</code> to a <code>SchemaRefMut</code>","Converts a reference of <code>T</code> to a <code>SchemaRef</code>","","","","","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …","","The function pointer that may be used to clone data with …","","","","","","Gets the datetime of when this Ulid was created accurate …","","The function pointer that may be used to write a default …","","","","The function that may be used to deserialize the type.","","","The function pointer that may be used to drop data with …","","","","The function pointer that may be used to compare two …","","","","","","","If this is a struct, then the field offsets will contain …","The fields in the struct, in the order they are defined.","","","","","Returns the argument unchanged.","","Creates a Ulid using the provided bytes array.","Creates a new Ulid with the given datetime","Creates a new Ulid with the given datetime and random …","Create a Ulid from separated parts.","","","Creates a Ulid from a Crockford Base32 encoded string","","Return the data for the type.","","","The full name of the type, including any module specifiers.","","The function pointer that may be used to hash the value.","","","Increment the random number, make sure that the ts millis …","","Calls <code>U::from(self)</code>.","","","","","","Test if the Ulid is nil","","The kind of schema.","The layout of the type.","","","","The short name of the type.","The name of the enum variant.","The name of the field. Will be <code>None</code> if this is a field of …","Creates a new Ulid with the current time (UTC)","","The ‘nil Ulid’.","","","","","","Gets the random section of this ulid","","","","","","Get this type’s <code>Schema</code>.","","","","The schema of this variant.","The schema of the field.","","The registered schemas.","","The layout of the enum tag.","Gets the timestamp section of this ulid","Returns the bytes of the Ulid in big-endian order.","","","Creates a Crockford Base32 encoded string that represents …","Creates a Crockford Base32 encoded string that represents …","","","","Cast a reference of this type to a reference of another …","Cast a mutable reference of this type to a reference of …","","","Container for storing <code>Schema</code> type datas.","","The Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …","","","Info for the enum variants.","","","Creates a new Ulid using data from the given random number …","The alignment of the data.","The size of the data.","The schema of the key type.","The schema of the value type.","The index of a field in a struct in a <code>Schema</code>.","The index of a field. Works for tuple fields and named …","The display error message for this error type.","The name of a field.","A typed version of <code>SchemaBox</code>.","A owning, type-erased <code>Box</code>-like container for types with a …","Error returned when a field is not found in a schema.","Error type when attempting to cast between types with …","An untyped reference that knows the <code>Schema</code> of the pointee …","An untyped mutable reference that knows the <code>Schema</code> of the …","","","","","","","","","","","","","","","","","","","","","","","","","","Borrow this box as a <code>SchemaRefMut</code>.","Get the raw pointer","Get the pointer.","Borrow this box as a <code>SchemaRef</code>.","","","","","","","","","","","","","","","","Cast this pointer to a reference to a type with a matching …","Cast this pointer to a mutable reference to a type with a …","Cast this pointer to a reference to a type with a matching …","Cast this box to a mutable reference to a type with a …","Cast this box to a reference to a type with a …","","","","","","","","","","","","Create a new <code>SchemaBox</code> for a type with a <code>Schema</code> that has a …","","","","","","Safety","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a pointer to a field.","Get a ref to the field with the given name/index, and …","Get a pointer to a field.","Get a ref to the field with the given name/index, and …","","","","","","","","","","Deallocate the memory stored in the box, but don’t run …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>SchemaRefMut</code> from a raw pointer and it’s …","Create a new <code>SchemaRef</code> from a raw pointer and it’s …","Create a new <code>SchemaBox</code> from raw parts.","","","","","","","","","","","","","","","","","Get a pointer to a field.","Get a reference to the field with the given name/index, if …","Get a pointer to a field.","Get a mutable reference to the field with the given …","Get the hash of this schema box, if supported.","","Get the hash of this schema box.","Get the hash of this schema box, if supported.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Convert this ref into a ref to one of it’s fields.","Cast this box to it’s inner type and return it.","Unsafely convert this box into an owned T.","","","","","","","","Convert into an <code>SBox</code> if the schema of T matches.","Convert into a <code>SchemaBox</code>","","","","","","","","Create a new <code>SchemaRefMut</code> from a reference to a type that …","Create a new <code>SchemaBox</code> from an owned type.","Create a new <code>SBox</code>.","Create a new <code>SchemaRef</code> from a reference to a type that …","","","","","","","","","","","","","","","","","","","Get the <code>Schema</code> for the pointer.","Get the <code>Schema</code> for the pointer.","","","Get the <code>Schema</code> for the pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast this pointer to a reference to a type with a matching …","Cast this pointer to a mutable reference to a type with a …","Cast this pointer to a mutable reference to a type with a …","Cast this box to a mutable reference to a type with a …","Cast this box to a reference to a type with a …","","","","","","","","","Get the hash of this schema box, if supported.","","","","","","","","Convert this ref into a ref to one of it’s fields.","Cast this box to it’s inner type and return it.","Convert into an <code>SBox</code> if the schema of T matches.","","","","","","","","Allocates a <code>SchemaBox</code> for the given <code>Schema</code>, but <strong>doesn’t </strong>…","","","","","","","","","","","","","","","Trait implemented automatically for types that implement …","Trait implemented automatically for types that implement …","Trait implemented automatically for types that implement …","Trait implemented automatically for types that implement <code>Eq</code>…","Trait implemented automatically for types that implement …","Write the default value of the type to the pointer.","Write the default value of the type to the pointer.","Write the default value of the type to the pointer.","Get the hash of the type.","Get the hash of the type.","Global <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …","A unique identifier for a schema registered in the …","A schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Register a schema with the registry.","The registered schemas.","","","","","","","","","","","","","","","","","","Derivable schema <code>type_data</code> for types that implement …","A struct that implements <code>DeserializeSeed</code> and can be used …","A struct that implements <code>Serialize</code> and wraps around a …","","","","","","","","","","","","","","","","","","","","","","","Use this <code>SchemaDeserialize</code> to deserialize data from the …","The function that may be used to deserialize the type.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","The allocator return an error","Types that can be used as the backing store for a SmallVec","has a reference to T","has a reference to T","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","Error creating ID","Derive macro for deriving <code>Deref</code> on structs with one field.","Derive macro for deriving <code>DerefMut</code> on structs with one …","An iterator that removes the items from a <code>SmallVec</code> and …","Variant for fast PRNGs, like Wyrand.","Trait for enabling creating new <code>TurboCore</code> instances from …","Determines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …","This trait provides the means to easily generate all …","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The ID is in the wrong format.","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","The type of the array’s elements.","A <code>Ulid</code> with a human-readable ascii prefix.","Error creating a <code>LabeledId</code>.","Errors that can happen while parsing a <code>LabeledId</code>.","This type provides a way to store data to which you either …","This type is basically the same as <code>MaybeOwned</code>, but works …","owns T","owns T","Type-erased Box-like pointer to some unknown type chosen …","The prefix was not ASCII.","The prefix was too long ( greater than 63 chars ).","Type-erased borrow of some unknown type chosen when …","Extension trait with utils for <code>Ptr</code>.","Type-erased mutable borrow of some unknown type chosen …","Extension trait with utils for <code>PtrMut</code>.","Variant for slower PRNGs, like ChaCha8.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","A <code>Vec</code>-like container that can store a small number of …","A fast, non-cryptographic, thread-local random number …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Convenience trait for constructing a <code>SmallVec</code>","Base trait for implementing a PRNG. Only one method must be","Enum for determining the kind of PRNG, whether a fast one, …","Extension trait for automatically implementing all …","A Ulid is a unique 128-bit lexicographically sortable …","The ULID could not be parsed.","Extension trait for <code>Ulid</code>.","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","A handle representing a string in the global string cache.","A standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …","A standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …","","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Returns a random boolean value.","","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","","Constructor that) is the same as <code>Ulid::new()</code>, but that …","","Creates a dangling pointer with specified alignment. See …","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","Safety","Safety","Generate a random digit in the given <code>radix</code>.","","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Fills a mutable buffer with random bytes.","Forks a <code>TurboCore</code> instance by deterministically deriving a …","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Shortens a type name to remove all module paths.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a <code>usize</code> value for stable indexing across different …","Returns a random <code>isize</code> within a given range bound.","","","Hints to the compiler that the branch condition is likely …","Generates a random <code>char</code> in the range a-z.","Partially shuffles a slice by a given amount and returns …","","The prelude.","","Returns a copy of the contained value.","Reseeds the <code>SeededCore</code> with a new seed/state.","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","Shuffles a slice randomly in O(n) time.","Returns the number of items the array can hold.","Creates a <code>SmallVec</code> containing the arguments.","","","Construct a new <code>SmallVec</code> from a slice.","Unsafely alter the lifetime of this <code>PtrMut</code>.","Unsafely alter the lifetime of this <code>Ptr</code>.","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","","Hints to the compiler that the branch condition is …","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","Create a new Ustr from the given &amp;str.","","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Creates a new <code>SeededCore</code> with a specific seed value.","The layout that was passed to the allocator","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","The allocator return an error","Types that can be used as the backing store for a SmallVec","has a reference to T","has a reference to T","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","Error creating ID","Derive macro for deriving <code>Deref</code> on structs with one field.","Derive macro for deriving <code>DerefMut</code> on structs with one …","An iterator that removes the items from a <code>SmallVec</code> and …","Variant for fast PRNGs, like Wyrand.","Trait for enabling creating new <code>TurboCore</code> instances from …","Determines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …","This trait provides the means to easily generate all …","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The ID is in the wrong format.","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","The type of the array’s elements.","A <code>Ulid</code> with a human-readable ascii prefix.","Error creating a <code>LabeledId</code>.","Errors that can happen while parsing a <code>LabeledId</code>.","This type provides a way to store data to which you either …","This type is basically the same as <code>MaybeOwned</code>, but works …","owns T","owns T","Type-erased Box-like pointer to some unknown type chosen …","The prefix was not ASCII.","The prefix was too long ( greater than 63 chars ).","Type-erased borrow of some unknown type chosen when …","Extension trait with utils for <code>Ptr</code>.","Type-erased mutable borrow of some unknown type chosen …","Extension trait with utils for <code>PtrMut</code>.","Variant for slower PRNGs, like ChaCha8.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","A <code>Vec</code>-like container that can store a small number of …","A fast, non-cryptographic, thread-local random number …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Convenience trait for constructing a <code>SmallVec</code>","Base trait for implementing a PRNG. Only one method must be","Enum for determining the kind of PRNG, whether a fast one, …","Extension trait for automatically implementing all …","A Ulid is a unique 128-bit lexicographically sortable …","The ULID could not be parsed.","Extension trait for <code>Ulid</code>.","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","A handle representing a string in the global string cache.","A standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …","A standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …","","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Returns a random boolean value.","","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","","Constructor that) is the same as <code>Ulid::new()</code>, but that …","","Creates a dangling pointer with specified alignment. See …","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","Safety","Safety","Generate a random digit in the given <code>radix</code>.","","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Fills a mutable buffer with random bytes.","Forks a <code>TurboCore</code> instance by deterministically deriving a …","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Shortens a type name to remove all module paths.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a <code>usize</code> value for stable indexing across different …","Returns a random <code>isize</code> within a given range bound.","","","Hints to the compiler that the branch condition is likely …","Generates a random <code>char</code> in the range a-z.","Partially shuffles a slice by a given amount and returns …","","Convenience re-export of common traits, structs and utils.","","Returns a copy of the contained value.","Reseeds the <code>SeededCore</code> with a new seed/state.","A fast but <strong>not</strong> cryptographically secure PRNG based on …","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","Shuffles a slice randomly in O(n) time.","Returns the number of items the array can hold.","Creates a <code>SmallVec</code> containing the arguments.","","","Construct a new <code>SmallVec</code> from a slice.","Unsafely alter the lifetime of this <code>PtrMut</code>.","Unsafely alter the lifetime of this <code>Ptr</code>.","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","","Hints to the compiler that the branch condition is …","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","Create a new Ustr from the given &amp;str.","","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Creates a new <code>SeededCore</code> with a specific seed value.","The layout that was passed to the allocator","Memory allocation APIs","A module for working with borrowed data.","The <code>Box&lt;T&gt;</code> type for heap allocation.","Collection types.","Utilities related to FFI bindings.","Utilities for formatting and printing <code>String</code>s.","Creates a <code>String</code> using interpolation of runtime …","Single-threaded reference-counting pointers. ‘Rc’ …","Utilities for the slice primitive type.","Utilities for the <code>str</code> primitive type.","A UTF-8–encoded, growable string.","Thread-safe reference-counting pointers.","Types and Traits for working with asynchronous tasks.","A contiguous growable array type with heap-allocated …","Creates a <code>Vec</code> containing the arguments.","The <code>AllocError</code> error indicates an allocation failure that …","An implementation of <code>Allocator</code> can allocate, grow, shrink, …","The global memory allocator.","A memory allocator that can be registered as the standard …","Layout of a block of memory.","","The parameters given to <code>Layout::from_size_align</code> or some …","The minimum byte alignment for a memory block of this …","","Creates a layout describing the record that can hold a …","Allocate memory with the global allocator.","Allocate memory as described by the given <code>layout</code>.","Allocate zero-initialized memory with the global allocator.","Behaves like <code>alloc</code>, but also ensures that the contents are …","Attempts to allocate a block of memory.","","","Behaves like <code>allocate</code>, but also ensures that the returned …","Creates a layout describing the record for a <code>[T; n]</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a “by reference” adapter for this instance of …","","","","","","","","","","","","","Creates a <code>NonNull</code> that is dangling, but well-aligned for …","Deallocate memory with the global allocator.","Deallocate the block of memory at the given <code>ptr</code> pointer …","Deallocates the memory referenced by <code>ptr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a layout describing the record for <code>self</code> followed by","Creates a layout describing the record for <code>self</code> followed by","","","","","","","Produces layout describing a record that could be used to …","Produces layout describing a record that could be used to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Constructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …","Creates a layout, bypassing all checks.","","","","","","","","Attempts to extend the memory block.","","Behaves like <code>grow</code>, but also ensures that the new contents …","Abort on memory allocation error or failure.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Constructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.","Creates a layout by rounding the size of this layout up to …","","Returns the amount of padding we must insert after <code>self</code> to …","","","","","","","","","","","","","","Reallocate memory with the global allocator.","Shrink or grow a block of memory to the given <code>new_size</code> in …","Creates a layout describing the record for <code>n</code> instances of …","","Creates a layout describing the record for <code>n</code> instances of …","","Attempts to shrink the memory block.","The minimum size in bytes for a memory block of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait for borrowing data.","A trait for mutably borrowing data.","Borrowed data.","A clone-on-write smart pointer.","Owned data.","The resulting type after obtaining ownership.","A generalization of <code>Clone</code> to borrowed data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Immutably borrows from an owned value.","","","Mutably borrows from an owned value.","","","","","","Uses borrowed data to replace owned data, usually by …","","","","","","","","","","","","Creates an owned Cow&lt;’a, B&gt; with the default value for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>String</code> reference into a <code>Borrowed</code> variant. No …","","Returns the argument unchanged.","Creates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.","Converts the string reference into a <code>Cow::Borrowed</code>.","Converts the string reference into a <code>Cow::Borrowed</code>.","Moves the string into a <code>Cow::Owned</code>.","Converts a <code>CString</code> into an owned <code>Cow</code> without copying or …","Creates a clone-on-write pointer from a reference to …","Creates a clone-on-write pointer from an owned instance of …","Converts a string slice into a <code>Borrowed</code> variant. No heap …","Creates a clone-on-write pointer from a reference to <code>Path</code>.","Creates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.","Creates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of …","Converts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or …","Converts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or …","Converts a <code>String</code> into an <code>Owned</code> variant. No heap …","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Extracts the owned data.","","","","","Returns true if the data is borrowed, i.e. if <code>to_mut</code> would …","","","Returns true if the data is owned, i.e. if <code>to_mut</code> would be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acquires a mutable reference to the owned form of the data.","Creates owned data from borrowed data, usually by cloning.","","","","","","","","","","","","","","","","","","","","","","","A pointer type that uniquely owns a heap allocation of …","ThinBox.","","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","Converts to <code>Box&lt;[T], A&gt;</code>.","Converts to <code>Box&lt;T, A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new box with a <code>clone()</code> of this box’s contents.","","","","","","","","","","","Copies <code>source</code>’s contents into <code>self</code> without creating a …","","","","","","","","","","","","","Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete typeeturns the argument unchanged.","Converts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>","","","Returns the argument unchanged.","Converts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>","","Converts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>","Converts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …","Converts a <code>T</code> into a <code>Box&lt;T&gt;</code>","Converts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>","Converts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>str</code> into a box of dyn <code>Error</code>.","Converts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …","Creates a boxed <code>Path</code> from a clone-on-write pointer.","Converts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or …","Converts a <code>String</code> into a box of dyn <code>Error</code>.","Converts a type of <code>Error</code> into a box of dyn <code>Error</code>.","","Convert a vector into a boxed slice.","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …","Converts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>","","","","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …","Copies the string into a newly allocated Box&lt;OsStr&gt;.","Converts a <code>Cow</code> into a box of dyn <code>Error</code>.","Converts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …","Creates a boxed <code>Path</code> from a reference.","Converts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying …","Converts a <code>PathBuf</code> into a Box&lt;Path&gt;.","","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given allocator.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>","","","Consumes the <code>Box</code>, returning the wrapped value.","","","","Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …","Consumes the <code>Box</code>, returning a wrapped raw pointer.","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …","","","","","","","","","","","","","","","","","","","","","","","","","Consumes and leaks the <code>Box</code>, returning a mutable reference, …","","","","","","","","","","","","","","","","","","","","","","","Moves a type to the heap with its <code>Metadata</code> stored in the …","Allocates memory on the heap and then places <code>x</code> into it.","Allocates memory in the given allocator then places <code>x</code> into …","","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Moves a type to the heap with its <code>Metadata</code> stored in the …","","","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new boxed slice with uninitialized contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …ttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","Attempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","","","Allocates memory on the heap then places <code>x</code> into it, …","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","","","","","","","","","","","Writes the value and converts to <code>Box&lt;T, A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","The memory allocator returned an error","An ordered map based on a B-Tree.","An ordered set based on a B-Tree.","A priority queue implemented with a binary heap.","Error due to the computed capacity exceeding the collection…","A doubly-linked list with owned nodes.","The error type for <code>try_reserve</code> methods.","Details of the allocation that caused a <code>TryReserveError</code>","A double-ended queue implemented with a growable ring …","","","","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","Moves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …","Moves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …","Moves all elements from <code>other</code> to the end of the list.","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pair of slices which contain, in order, the …","","","Returns a slice of all values in the underlying vector, in …","Returns a pair of slices which contain, in order, the …","Provides a reference to the back element, or <code>None</code> if the …","Provides a reference to the back element, or <code>None</code> if the …","Provides a mutable reference to the back element, or <code>None</code> …","Provides a mutable reference to the back element, or <code>None</code> …","A priority queue implemented with a binary heap.","Binary searches this <code>VecDeque</code> for a given element. If the …","Binary searches this <code>VecDeque</code> with a comparator function.","Binary searches this <code>VecDeque</code> with a key extraction …","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","An ordered map based on a B-Tree.","An ordered set based on a B-Tree.","","","","Returns the number of elements the binary heap can hold …","Returns the number of elements the deque can hold without …","Drops all items from the binary heap.","Clears the map, removing all elements.","Clears the set, removing all elements.","Removes all elements from the <code>LinkedList</code>.","Clears the deque, removing all values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains an element equal to the …","Returns <code>true</code> if the <code>LinkedList</code> contains an element equal …","Returns <code>true</code> if the deque contains an element equal to the …","Returns <code>true</code> if the map contains a value for the specified …","","","","Provides a cursor at the back element.","Provides a cursor with editing operations at the back …","Provides a cursor at the front element.","Provides a cursor with editing operations at the front …","","Creates an empty <code>BinaryHeap&lt;T&gt;</code>.","Creates an empty <code>BTreeMap</code>.","Creates an empty <code>BTreeSet</code>.","Creates an empty <code>LinkedList&lt;T&gt;</code>.","Creates an empty deque.","","","","","","","","","","","","","","","","","","","","Visits the elements representing the difference, i.e., the …","","","","","","","","Clears the binary heap, returning an iterator over the …","Removes the specified range from the deque in bulk, …","","Clears the binary heap, returning an iterator over the …","","","","","","","","","","","","","","","","","","","","","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an iterator that visits all elements (key-value …","Creates an iterator that visits all elements in ascending …","Creates an iterator which uses a closure to determine if …","Returns a reference to the first element in the set, if …","Returns the first entry in the map for in-place …","Returns the first key-value pair in the map. The key in …","","","","","","","","","","","Returns the argument unchanged.","Converts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.","Converts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;(K, V)&gt;</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.","Converts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.","Returns the argument unchanged.","Turn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.","Converts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.","Returns the argument unchanged.","","Returns the argument unchanged.","Always evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides a reference to the front element, or <code>None</code> if the …","Provides a reference to the front element, or <code>None</code> if the …","Provides a mutable reference to the front element, or <code>None</code> …","Provides a mutable reference to the front element, or <code>None</code> …","Returns a reference to the value corresponding to the key.","Returns a reference to the element in the set, if any, …","","Provides a reference to the element at the given index.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","","Provides a mutable reference to the element at the given …","","","","","","","","","Returns a reference to the value corresponding to the …","","","","","","","","","","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts an element at <code>index</code> within the deque, shifting all …","","Visits the elements representing the intersection, i.e., …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves each …","","","","","","Gets an iterator for moving out the <code>BTreeSet</code>’s contents.","","Consumes the list into an iterator yielding elements by …","","Consumes the deque into a front-to-back iterator yielding …","","","Returns an iterator which retrieves elements in heap order.","Creates a consuming iterator visiting all the keys, in …","","","","","","","","","Consumes the <code>BinaryHeap</code> and returns a vector in sorted …","Creates a consuming iterator visiting all the values, in …","Consumes the <code>BinaryHeap</code> and returns the underlying vector …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Checks if the binary heap is empty.","Returns <code>true</code> if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the <code>LinkedList</code> is empty.","Returns <code>true</code> if the deque is empty.","","","","","","","","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","","Returns an iterator visiting all values in the underlying …","Gets an iterator over the entries of the map, sorted by …","Gets an iterator that visits the elements in the <code>BTreeSet</code> …","Provides a forward iterator.","","Returns a front-to-back iterator.","Gets a mutable iterator over the entries of the map, …","Provides a forward iterator with mutable references.","Returns a front-to-back iterator that returns mutable …","Gets an iterator over the keys of the map, in sorted order.","Details about the allocation that caused the error","","Returns a reference to the last element in the set, if any.","Returns the last entry in the map for in-place …","Returns the last key-value pair in the map. The key in …","Returns the length of the binary heap.","Returns the number of elements in the map.","Returns the number of elements in the set.","Returns the length of the <code>LinkedList</code>.","Returns the number of elements in the deque.","","","","","","","A doubly-linked list with owned nodes.","Returns a <code>Cursor</code> pointing at the first element that is …","Returns a <code>CursorMut</code> pointing at the first element that is …","Rearranges the internal storage of this deque so it is one …","","","","","Creates an empty <code>BinaryHeap</code> as a max-heap.","Makes a new, empty <code>BTreeMap</code>.","Makes a new, empty <code>BTreeSet</code>.","Creates an empty <code>LinkedList</code>.","Creates an empty deque.","Creates an empty <code>BinaryHeap</code> as a max-heap, using <code>A</code> as …","Makes a new empty BTreeMap with a reasonable choice for B.","Makes a new <code>BTreeSet</code> with a reasonable choice of B.","Constructs an empty <code>LinkedList&lt;T, A&gt;</code>.","Creates an empty deque.","","","","","Returns the index of the partition point according to the …","Returns the greatest item in the binary heap, or <code>None</code> if …","Returns a mutable reference to the greatest item in the …","Removes the greatest item from the binary heap and returns …","","Removes the last element from a list and returns it, or …","Removes the last element from the deque and returns it, or …","Removes and returns the first element in the map. The key …","Removes the first element from the set and returns it, if …","Removes the first element and returns it, or <code>None</code> if the …","Removes the first element and returns it, or <code>None</code> if the …","Removes and returns the last element in the map. The key …","Removes the last element from the set and returns it, if …","Pushes an item onto the binary heap.","","Appends an element to the back of a list.","Appends an element to the back of the deque.","Adds an element first in the list.","Prepends an element to the deque.","Constructs a double-ended iterator over a sub-range of …","Constructs a double-ended iterator over a sub-range of …","Creates an iterator that covers the specified range in the …","Constructs a mutable double-ended iterator over a …","Creates an iterator that covers the specified mutable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill <code>buf</code> with the contents of the “front” slice as …","","","","","","","","","","","","","","","","","","Removes a key from the map, returning the value at the key …","If the set contains an element equal to the value, removes …","Removes the element at the given index and returns it.","Removes and returns the element at <code>index</code> from the deque. …","","Removes a key from the map, returning the stored key and …","Adds a value to the set, replacing the existing element, …","Reserves capacity for at least <code>additional</code> elements more …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> …","Reserves the minimum capacity for at least <code>additional</code> more …","Modifies the deque in-place so that <code>len()</code> is equal to …","Modifies the deque in-place so that <code>len()</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","","Rotates the double-ended queue <code>n</code> places to the left.","Rotates the double-ended queue <code>n</code> places to the right.","","","","","","","","Discards capacity with a lower bound.","Shrinks the capacity of the deque with a lower bound.","Discards as much additional capacity as possible.","Shrinks the capacity of the deque as much as possible.","","","Splits the collection into two at the given key. Returns …","Splits the collection into two at the value. Returns a new …","Splits the list into two at the given index. Returns …","Splits the deque into two at the given index.","Returns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>…","Swaps elements at indices <code>i</code> and <code>j</code>.","Removes an element from anywhere in the deque and returns …","Removes an element from anywhere in the deque and returns …","Visits the elements representing the symmetric difference, …","","Removes and returns the element in the set, if any, that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shortens the deque, keeping the first <code>len</code> elements and …","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","Tries to reserve capacity for at least <code>additional</code> elements …","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","Tries to reserve the minimum capacity for at least …","","","","","","","","","","","","Visits the elements representing the union, i.e., all the …","","","","","","","","Returns a <code>Cursor</code> pointing at the last element that is …","Returns a <code>CursorMut</code> pointing at the last element that is …","Gets an iterator over the values of the map, in order by …","Gets a mutable iterator over the values of the map, in …","A double-ended queue (deque) implemented with a growable …","","","","","","","","Creates an empty <code>BinaryHeap</code> with at least the specified …","Creates an empty deque with space for at least <code>capacity</code> …","Creates an empty <code>BinaryHeap</code> with at least the specified …","Creates an empty deque with space for at least <code>capacity</code> …","","","","","","The layout of allocation request that failed","A priority queue implemented with a binary heap.","A draining iterator over the elements of a <code>BinaryHeap</code>.","A draining iterator over the elements of a <code>BinaryHeap</code>.","An owning iterator over the elements of a <code>BinaryHeap</code>.","","An iterator over the elements of a <code>BinaryHeap</code>.","Structure wrapping a mutable reference to the greatest …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>binary_heap::IntoIter</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes heap elements in heap order.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the peeked value from the heap and returns it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ordered map based on a B-Tree.","A cursor over a <code>BTreeMap</code>.","A cursor over a <code>BTreeMap</code> with editing operations.","A view into a single entry in a map, which may either be …","An iterator produced by calling <code>extract_if</code> on BTreeMap.","An owning iterator over the entries of a <code>BTreeMap</code>.","An owning iterator over the keys of a <code>BTreeMap</code>.","An owning iterator over the values of a <code>BTreeMap</code>.","An iterator over the entries of a <code>BTreeMap</code>.","A mutable iterator over the entries of a <code>BTreeMap</code>.","An iterator over the keys of a <code>BTreeMap</code>.","An occupied entry.","A view into an occupied entry in a <code>BTreeMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","An iterator over a sub-range of entries in a <code>BTreeMap</code>.","A mutable iterator over a sub-range of entries in a …","A vacant entry.","A view into a vacant entry in a <code>BTreeMap</code>. It is part of …","An iterator over the values of a <code>BTreeMap</code>.","A mutable iterator over the values of a <code>BTreeMap</code>.","","","","","","","","","","","","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a read-only cursor pointing to the current element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>btree_map::Iter</code>.","Creates an empty <code>btree_map::IterMut</code>.","Creates an empty <code>btree_map::IntoIter</code>.","Creates an empty <code>btree_map::Keys</code>.","Creates an empty <code>btree_map::Values</code>.","Creates an empty <code>btree_map::IntoKeys</code>.","Creates an empty <code>btree_map::IntoValues</code>.","Creates an empty <code>btree_map::Range</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entry in the map that was already occupied.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Sets the value of the entry with the <code>OccupiedEntry</code>’s key,","Inserts a new element into the <code>BTreeMap</code> after the current …","Inserts a new element into the <code>BTreeMap</code> after the current …","Inserts a new element into the <code>BTreeMap</code> before the current …","Inserts a new element into the <code>BTreeMap</code> before the current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the key.","Converts the entry into a mutable reference to its value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to this entry’s key.","Gets a reference to the key that would be used when …","Gets a reference to the key in the entry.","Returns a reference to the key of the element that the …","Returns a reference to the key of the element that the …","","Returns a mutable reference to the key of the element that …","Returns a reference to the key and value of the element …","Returns a reference to the key and value of the element …","Returns a reference to the key and mutable reference to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Moves the cursor to the next element of the <code>BTreeMap</code>.","Moves the cursor to the next element of the <code>BTreeMap</code>.","Moves the cursor to the previous element of the <code>BTreeMap</code>.","Moves the cursor to the previous element of the <code>BTreeMap</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Returns a reference to the next element.","Returns a reference to the key and value of the next …","Returns a reference to the previous element.","Returns a reference to the key and value of the previous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes the value of the entry out of the map, and returns …","Removes the current element from the <code>BTreeMap</code>.","Removes the current element from the <code>BTreeMap</code>.","Take ownership of the key and value from the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the element that the …","Returns a reference to the value of the element that the …","The value which was not inserted, because the entry was …","Returns a mutable reference to the value of the element …","","","","","","","","","","","","","","","","","","An ordered set based on a B-Tree.","A lazy iterator producing elements in the difference of …","An iterator produced by calling <code>extract_if</code> on BTreeSet.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>BTreeSet</code>.","An iterator over the items of a <code>BTreeSet</code>.","An iterator over a sub-range of items in a <code>BTreeSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>BTreeSet</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>btree_set::Iter</code>.","Creates an empty <code>btree_set::IntoIter</code>.","Creates an empty <code>btree_set::Range</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codecursor over a <code>LinkedList</code>.","A cursor over a <code>LinkedList</code> with editing operations.","An iterator produced by calling <code>extract_if</code> on LinkedList.","An owning iterator over the elements of a <code>LinkedList</code>.","An iterator over the elements of a <code>LinkedList</code>.","A mutable iterator over the elements of a <code>LinkedList</code>.","A doubly-linked list with owned nodes.","","","","","","","","","","","","","","","","","","","","Returns a read-only cursor pointing to the current element.","Provides a reference to the back element of the cursor’s …","Provides a reference to the back element of the cursor’s …","Provides a mutable reference to back element of the cursor…","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the element that the cursor is …","Returns a reference to the element that the cursor is …","","","Creates an empty <code>linked_list::Iter</code>.","","Creates an empty <code>linked_list::IntoIter</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Provides a reference to the front element of the cursor’…","Provides a reference to the front element of the cursor’…","Provides a mutable reference to the front element of the …","","","","","Returns the cursor position index within the <code>LinkedList</code>.","Returns the cursor position index within the <code>LinkedList</code>.","","","","","","","","","Inserts a new element into the <code>LinkedList</code> after the …","Inserts a new element into the <code>LinkedList</code> before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the next element.","Returns a reference to the next element.","Returns a reference to the previous element.","Returns a reference to the previous element.","","Removes the last element from the cursor’s parent list …","Removes the first element from the cursor’s parent list …","","Appends an element to the back of the cursor’s parent …","Appends an element to the front of the cursor’s parent …","","","","","","","","","","","","","Removes the current element from the <code>LinkedList</code>.","Removes the current element from the <code>LinkedList</code> without …","","","","","","Inserts the elements from the given <code>LinkedList</code> after the …","Inserts the elements from the given <code>LinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A draining iterator over the elements of a <code>VecDeque</code>.","An owning iterator over the elements of a <code>VecDeque</code>.","An iterator over the elements of a <code>VecDeque</code>.","A mutable iterator over the elements of a <code>VecDeque</code>.","A double-ended queue implemented with a growable ring …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating invalid UTF-8 when converting a <code>CString</code>…","An error indicating that an interior nul byte was found.","","","","","","","","","","","","","","","","","","","","","Returns the contents of this <code>CString</code> as a slice of bytes.","Returns a slice of <code>u8</code>s bytes that were attempted to …","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","","Converts a Vec&lt;NonZeroU8&gt; into a <code>CString</code> without copying …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retakes ownership of a <code>CString</code> that was transferred to C …","","","","","","","","","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Returns the bytes that were attempted to convert to a …","Equivalent to <code>CString::into_bytes()</code> except that the …","Consumes this error, returning original <code>CString</code> which …","Consumes the <code>CString</code> and transfers ownership of the string …","","","","","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","","","","","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the underlying UTF-8 error that was the cause of …","","","","","Possible alignments returned by <code>Formatter::align</code>","This structure represents a safely precompiled version of …","<code>b</code> formatting.","Indication that contents should be center-aligned.","<code>?</code> formatting.","Derive macro generating an impl of the trait <code>Debug</code>.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","Format trait for an empty format, <code>{}</code>.","The error type which is returned from formatting a message …","Configuration for formatting.","Indication that contents should be left-aligned.","<code>e</code> formatting.","<code>x</code> formatting.","<code>o</code> formatting.","<code>p</code> formatting.","The type returned by formatter methods.","Indication that contents should be right-aligned.","<code>E</code> formatting.","<code>X</code> formatting.","A trait for writing or formatting into Unicode-accepting …","Flag indicating what form of alignment was requested.","","Determines if the <code>#</code> flag was specified.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the formatted string, if it has no arguments to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>DebugList</code> builder designed to assist with …","Creates a <code>DebugMap</code> builder designed to assist with …","Creates a <code>DebugSet</code> builder designed to assist with …","Creates a <code>DebugStruct</code> builder designed to assist with …","Creates a <code>DebugTuple</code> builder designed to assist with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the contents of an iterator of entries to the set …","Adds the contents of an iterator of entries to the list …","Adds the contents of an iterator of entries to the map …","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new entry to the map output.","","","","","","","","","","","","","","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","","Character used as ‘fill’ whenever there is alignment.","","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Marks the struct as non-exhaustive, indicating to the …","Flags for formatting","","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","","","","","","","","","","The <code>format</code> function takes an <code>Arguments</code> struct and returns …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the key part of a new entry to the map output.","This function takes a string slice and emits it to the …","Performs the correct padding for an integer which has …","","","Optionally specified precision for numeric types. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines if the <code>0</code> flag was specified.","Determines if the <code>-</code> flag was specified.","Determines if the <code>+</code> flag was specified.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the value part of a new entry to the map output.","","","","","","","","","","Optionally specified integer width that the output should …","","The <code>write</code> function takes an output stream, and an <code>Arguments</code>…","Writes a <code>char</code> into this writer, returning whether the …","","Glue for usage of the <code>write!</code> macro with implementors of …","Writes some formatted information into this instance.","","Writes a string slice into this writer, returning whether …","Writes some data to the underlying buffer contained within …","","A single-threaded reference-counting pointer. ‘Rc’ …","A uniquely owned <code>Rc</code>","<code>Weak</code> is a version of <code>Rc</code> that holds a non-owning reference …","","","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","Provides a raw pointer to the data.","Returns a raw pointer to the object <code>T</code> pointed to by this …","","","Converts to <code>Rc&lt;T&gt;</code>.","Converts to <code>Rc&lt;[T]&gt;</code>.","","","","","","","","","Makes a clone of the <code>Rc</code> pointer.","Makes a clone of the <code>Weak</code> pointer that points to the same …","","","Comparison for two <code>Rc</code>s.","","","Decrements the strong reference count on the <code>Rc&lt;T&gt;</code> …","Decrements the strong reference count on the <code>Rc&lt;T&gt;</code> …","Creates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …","","","","","","","","","","","","Attempt to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.","","","","Downcasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.","Creates a new <code>Weak</code> pointer to this allocation.","Creates a new weak reference to the <code>UniqueRc</code>","Drops the <code>Rc</code>.","","Drops the <code>Weak</code> pointer.","","","","","","","","Equality for two <code>Rc</code>s.","","","","","","","","","","","","","Converts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> …","","Converts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …","Copies the string into a newly allocated Rc&lt;OsStr&gt;.","Allocate a reference-counted string slice and copy <code>v</code> into …","Returns the argument unchanged.","Converts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the …","Converts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents …","Create a reference-counted pointer from a clone-on-write …","Allocate a reference-counted string slice and copy <code>v</code> into …","Converts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> …","Converts a reference-counted string slice into a byte …","Converts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Move a boxed object to a new, reference counted, …","Allocate a reference-counted slice and move <code>v</code>’s items …","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the <code>Iterator</code> and collects it into an …","Constructs an <code>Rc&lt;T&gt;</code> from a raw pointer.","Converts a raw pointer previously created by <code>into_raw</code> back …","Constructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided …","Converts a raw pointer previously created by <code>into_raw</code> back …","","","","","","","","","","","‘Greater than or equal to’ comparison for two <code>Rc</code>s.","Returns a mutable reference into the given <code>Rc</code>, if there are","Returns a mutable reference into the given <code>Rc</code>, without any …","Greater-than comparison for two <code>Rc</code>s.","","Increments the strong reference count on the <code>Rc&lt;T&gt;</code> …","Increments the strong reference count on the <code>Rc&lt;T&gt;</code> …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the inner value, if the <code>Rc</code> has exactly one strong …","Consumes the <code>Rc</code>, returning the wrapped pointer.","Consumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.","Consumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.","Converts the <code>UniqueRc</code> into a regular <code>Rc</code>","","","","","","","‘Less than or equal to’ comparison for two <code>Rc</code>s.","","Less-than comparison for two <code>Rc</code>s.","Makes a mutable reference into the given <code>Rc</code>.","Inequality for two <code>Rc</code>s.","Constructs a new <code>Rc&lt;T&gt;</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …","Creates a new <code>UniqueRc</code>","Constructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Constructs a new <code>Rc</code> in the provided allocator.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory, …","Constructs a new <code>Rc</code> with uninitialized contents.","Constructs a new <code>Rc</code> with uninitialized contents in the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Partial comparison for two <code>Rc</code>s.","","","Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>…","","","","Returns <code>true</code> if the two <code>Rc</code>s point to the same allocation …","Returns <code>true</code> if the two <code>Weak</code>s point to the same allocation …","","","","","","","","","","","","","","Gets the number of strong (<code>Rc</code>) pointers to this allocation.","Gets the number of strong (<code>Rc</code>) pointers pointing to this …","","","","","","","","","","","","","","","","","","","","","Constructs a new <code>Rc&lt;T&gt;</code>, returning an error if the …","Constructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, …","Constructs a new <code>Rc</code> with uninitialized contents, returning …","Constructs a new <code>Rc</code> with uninitialized contents, in the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Returns the inner value, if the <code>Rc</code> has exactly one strong …","","","","If we have the only reference to <code>T</code> then unwrap it. …","","","","Attempts to upgrade the <code>Weak</code> pointer to an <code>Rc</code>, delaying …","","","","Gets the number of <code>Weak</code> pointers to this allocation.","Gets the number of <code>Weak</code> pointers pointing to this …","","An iterator over a slice in (non-overlapping) chunks (<code>N</code> …","An iterator over a slice in (non-overlapping) mutable …","A windowed iterator over a slice in overlapping chunks (<code>N</code> …","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","Helper trait for <code>[T]::concat</code>.","An iterator over the escaped version of a byte slice.","An iterator over slice in (non-overlapping) chunks …","An iterator over slice in (non-overlapping) mutable chunks …","Immutable slice iterator","Mutable slice iterator.","Helper trait for <code>[T]::join</code>","The resulting type after concatenation","The resulting type after concatenation","The output type returned by methods.","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","An iterator over subslices separated by elements that …","An iterator over the subslices of the vector which are …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","A helper trait used for indexing operations.","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over the mutable subslices of the vector which …","An iterator over the mutable subslices of the vector which …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over overlapping subslices of length <code>size</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Views the underlying data as a mutable subslice of the …","","","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Returns a slice which contains items not yet handled by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of <code>[T]::concat</code>","","","","","","","","","","","","","","","Creates an empty slice iterator.","Creates an empty slice iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a reference to T into a slice of length 1 …","Forms a mutable slice from a pointer range.","Forms a slice from a pointer range.","Forms a slice from a pointer and a length.","Performs the same functionality as <code>from_raw_parts</code>, except …","Converts a reference to T into a slice of length 1 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a shared reference to the output at this location, …","Returns a mutable reference to the output at this …","Returns a shared reference to the output at this location, …","Returns a mutable reference to the output at this …","Returns a shared reference to the output at this location, …","Returns a mutable reference to the output at this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Views the underlying data as a subslice of the original …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of <code>[T]::join</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs bounds-checking of a range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …n iterator over the bytes of a string slice.","An iterator over the <code>char</code>s of a string slice, and their …","An iterator over the <code>char</code>s of a string slice.","An iterator of <code>u16</code> over the string encoded as UTF-16.","The associated error which can be returned from parsing.","The return type of <code>str::escape_debug</code>.","The return type of <code>str::escape_default</code>.","The return type of <code>str::escape_unicode</code>.","Parse a value from a string","An iterator over the lines of a string, as string slices.","Created with the method <code>lines_any</code>.","Created with the method <code>match_indices</code>.","Created with the method <code>matches</code>.","An error returned when parsing a <code>bool</code> using <code>from_str</code> fails","Created with the method <code>rmatch_indices</code>.","Created with the method <code>rmatches</code>.","Created with the method <code>rsplit</code>.","Created with the method <code>rsplitn</code>.","Created with the method <code>rsplit_terminator</code>.","Created with the method <code>split</code>.","An iterator over the non-ASCII-whitespace substrings of a …","An iterator over the substrings of a string, terminated by …","Created with the method <code>splitn</code>.","Created with the method <code>split_terminator</code>.","An iterator over the non-whitespace substrings of a string,","An item returned by the <code>Utf8Chunks</code> iterator.","An iterator used to decode a slice of mostly UTF-8 bytes …","Errors which can occur when attempting to interpret a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides more information about the failure:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a boxed slice of bytes to a boxed string slice …","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a string <code>s</code> to return a value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a slice of bytes to a string slice.","Converts a mutable slice of bytes to a mutable string …","Converts a slice of bytes to a string slice without …","Converts a slice of bytes to a string slice without …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the invalid sequence that caused a failure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new iterator to decode the bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the byte position of the next character, or the …","The string Pattern API.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string","Returns remainder of the split stringeturns the next validated UTF-8 substring.","","Returns the index in the given string up to which valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Associated type for <code>&lt;&amp;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","Associated type for <code>&lt;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","Associated type for <code>&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","Associated type for <code>&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","Associated type for <code>&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","Expresses that every byte of the haystack has been …","A marker trait to express that a <code>ReverseSearcher</code> can be …","Expresses that a match of the pattern has been found at …","A string pattern.","Expresses that <code>haystack[a..b]</code> has been rejected as a …","A reverse searcher for a string pattern.","Result of calling <code>Searcher::next()</code> or …","A searcher for a string pattern.","Associated searcher for this pattern","Associated type for <code>&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Getter for the underlying string to be searched in","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs the associated searcher from <code>self</code> and the …","Checks whether the pattern matches anywhere in the haystack","","","","","","","","Checks whether the pattern matches at the front of the …","Checks whether the pattern matches at the back of the …","","","Performs the next search step starting from the front.","","","","","","","Performs the next search step starting from the back.","","","","","","","Finds the next <code>Match</code> result. See <code>next()</code>.","","","","","","","Finds the next <code>Match</code> result. See <code>next_back()</code>.","","","","","","","Finds the next <code>Reject</code> result. See <code>next()</code> and <code>next_match()</code>.","","","","","Finds the next <code>Reject</code> result. See <code>next_back()</code>.","","","","","","","","","","","","","","","","","","","","","Removes the pattern from the front of haystack, if it …","Removes the pattern from the back of haystack, if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A draining iterator for <code>String</code>.","A possible error value when converting a <code>String</code> from a …","A possible error value when converting a <code>String</code> from a …","A type alias for <code>Infallible</code>.","A UTF-8–encoded, growable string.","A trait for converting a value to a <code>String</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns a byte slice of this <code>String</code>’s contents.","Returns a slice of <code>u8</code>s bytes that were attempted to …","","","Converts a <code>String</code> into a mutable string slice.","","","Returns a mutable reference to the contents of this <code>String</code>.","","","","","","","","","Returns the remaining (sub)string of this iterator as a …","","Extracts a string slice containing the entire <code>String</code>.","","","","","","","","","","","","","Returns this <code>String</code>’s capacity, in bytes.","","","","Truncates this <code>String</code>, removing all contents.","","","","","","","","","","","","","","Creates an empty <code>String</code>.","","","","","","","","","","","","","","","","","","","Removes the specified range from the string in bulk, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copies elements from <code>src</code> range to the end of the string.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Converts a <code>&amp;String</code> into a <code>String</code>.","Allocates an owned <code>String</code> from a single character.","","Returns the argument unchanged.","Converts a <code>&amp;mut str</code> into a <code>String</code>.","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …","Converts a <code>&amp;str</code> into a <code>String</code>.","Converts a clone-on-write string to an owned instance of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates a new <code>String</code> from a length, capacity, and pointer.","","","","","","","","","","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing …","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","","","","","","","","","","","","","","","","","","","","","","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Converts this <code>String</code> into a Box&lt;str&gt;.","Converts a <code>String</code> into a byte vector.","Returns the bytes that were attempted to convert to a …","","","Decomposes a <code>String</code> into its raw components.","","","","","","","","Returns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…","","","","","","","","","","Consumes and leaks the <code>String</code>, returning a mutable …","Returns the length of this <code>String</code>, in bytes, not <code>char</code>s or …","","","","","Creates a new empty <code>String</code>.","","","","","","","","","","","Removes the last character from the string buffer and …","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","","","","","","","","","","","","","","","","","","","","","","","","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Remove all matches of pattern <code>pat</code> in the <code>String</code>.","","","","Removes the specified range in the string, and replaces it …","Reserves capacity for at least <code>additional</code> bytes more than …","Reserves the minimum capacity for at least <code>additional</code> …","Retains only the characters specified by the predicate.","","","","","Shrinks the capacity of this <code>String</code> with a lower bound.","Shrinks the capacity of this <code>String</code> to match its length.","","","Splits the string into two at the given byte index.","","","","","","","","","","","","","","Converts the given value to a <code>String</code>.","","","","","","","","","","","","","Shortens this <code>String</code> to the specified length.","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> bytes …","Tries to reserve the minimum capacity for at least …","","","","","","","Returns the type name of this value’s type.","","","Returns the UUID associated with this value’s type.","","","","","Fetch a <code>Utf8Error</code> to get more details about the conversion …","","","","","","Creates a new empty <code>String</code> with at least the specified …","","","A thread-safe reference-counting pointer. ‘Arc’ stands …","<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference …","","","Returns a reference to the underlying allocator.","","","","","","","","","","","","Provides a raw pointer to the data.","Returns a raw pointer to the object <code>T</code> pointed to by this …","","","Converts to <code>Arc&lt;[T]&gt;</code>.","Converts to <code>Arc&lt;T&gt;</code>.","","","","","","","","","Makes a clone of the <code>Arc</code> pointer.","Makes a clone of the <code>Weak</code> pointer that points to the same …","","","","","","Comparison for two <code>Arc</code>s.","","","","","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating memory. …","","","","","","","","","Attempt to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …","","","","Downcasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …","Creates a new <code>Weak</code> pointer to this allocation.","Drops the <code>Arc</code>.","","","Drops the <code>Weak</code> pointer.","","","","","","","","","","Equality for two <code>Arc</code>s.","","","","","","","","","","","","","","","","","Converts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …","Converts an atomically reference-counted string slice into …","Create an atomically reference-counted pointer from a …","Copies the string into a newly allocated Arc&lt;OsStr&gt;.","Allocate a reference-counted slice and move <code>v</code>’s items …","Converts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …","Converts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …","Converts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code>","","Returns the argument unchanged.","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Move a boxed object to a new, reference-counted allocation.","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Returns the argument unchanged.","Takes each element in the <code>Iterator</code> and collects it into an …","Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.","Converts a raw pointer previously created by <code>into_raw</code> back …","Constructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.","Converts a raw pointer previously created by <code>into_raw</code> back …","","","","","","","","","‘Greater than or equal to’ comparison for two <code>Arc</code>s.","Returns a mutable reference into the given <code>Arc</code>, if there …","Returns a mutable reference into the given <code>Arc</code>, without …","Greater-than comparison for two <code>Arc</code>s.","","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the inner value, if the <code>Arc</code> has exactly one strong …","Consumes the <code>Arc</code>, returning the wrapped pointer.","Consumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.","","","","","","","‘Less than or equal to’ comparison for two <code>Arc</code>s.","","","Less-than comparison for two <code>Arc</code>s.","Makes a mutable reference into the given <code>Arc</code>.","","","","Inequality for two <code>Arc</code>s.","Constructs a new <code>Arc&lt;T&gt;</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …","Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Constructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.","Constructs a new <code>Weak&lt;T, A&gt;</code>, without allocating any …","","Constructs a new <code>Arc</code> with uninitialized contents.","Constructs a new <code>Arc</code> with uninitialized contents in the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Partial comparison for two <code>Arc</code>s.","","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …","","","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …","Returns <code>true</code> if the two <code>Weak</code>s point to the same allocation …","","","","","","","","","","","","","","","","","","","","","","","Gets the number of strong (<code>Arc</code>) pointers to this …","Gets the number of strong (<code>Arc</code>) pointers pointing to this …","","","","","","","","","","","","","","","","","Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …","Constructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …","Constructs a new <code>Arc</code> with uninitialized contents, …","Constructs a new <code>Arc</code> with uninitialized contents, in the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …","Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …","Returns the inner value, if the <code>Arc</code> has exactly one strong …","","","If we have the only reference to <code>T</code> then unwrap it. …","","","Attempts to upgrade the <code>Weak</code> pointer to an <code>Arc</code>, delaying …","","","Gets the number of <code>Weak</code> pointers to this allocation.","Gets an approximation of the number of <code>Weak</code> pointers …","","","","The implementation of waking a task on an executor.","Wake this task.","Wake this task without consuming the waker.","A draining iterator for <code>Vec&lt;T&gt;</code>.","An iterator which uses a closure to determine if an …","An iterator that moves out of a vector.","A splicing iterator for <code>Vec</code>.","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","","","","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an unsafe mutable pointer to the vector’s …","Returns the remaining items of this iterator as a mutable …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer, or a …","","","","","","","","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a slice.","Extracts a slice containing the entire vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of elements the vector can hold …","","","","","","","Clears the vector, removing all values.","","","","","","","","","","","","","","","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates an empty <code>vec::IntoIter</code>.","Creates an empty <code>Vec&lt;T&gt;</code>.","","","","","","","","","","","","","","","","","","","","","Removes the specified range from the vector in bulk, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","","","","","Creates an iterator which uses a closure to determine if …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;T&gt;</code> and move <code>s</code>’s items into it.","","Returns the argument unchanged.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Convert a clone-on-write slice into a vector.","","Converts a <code>CString</code> into a Vec&lt;u8&gt;.","Convert a boxed slice into a vector by transferring …","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts an element at position <code>index</code> within the vector, …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Converts the vector into <code>Box&lt;[T]&gt;</code>.","","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","","","","","","Creates a consuming iterator, that is, one that moves each …","","","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","","","","","","","","","Returns <code>true</code> if the vector contains no elements.","","","","","","","","","Keep unyielded elements in the source <code>Vec</code>.","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","","Returns the number of elements in the vector, also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the last element from a vector and returns it, or …","","","","Appends an element to the back of a collection.","","Appends an element if there is sufficient spare capacity, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes and returns the element at position <code>index</code> within …","","","","","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> more …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","","","Forces the length of the vector to <code>new_len</code>.","","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","","","","","","","","","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","","","","","Removes an element from the vector and returns it.","","","","","","","","","","","","","","","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","","","","","","","","Returns the type name of this value’s type.","","","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …","","","","","","Read bytes asynchronously.","Extension trait for <code>AsyncBufRead</code>.","Read bytes asynchronously.","Extension trait for <code>AsyncRead</code>.","Seek bytes asynchronously.","Extension trait for <code>AsyncSeek</code>.","Write bytes asynchronously.","Extension trait for <code>AsyncWrite</code>.","A future represents an asynchronous computation obtained …","Extension trait for <code>Future</code>.","Values yielded by the stream.","The type of value produced on completion.","A stream of values produced asynchronously.","Extension trait for <code>Stream</code>.","Tests if <code>predicate</code> returns <code>true</code> for all items in the …","Tests if <code>predicate</code> returns <code>true</code> for any item in the stream.","Boxes the future and changes its type to …","Boxes the stream and changes its type to …","Boxes the future and changes its type to <code>dyn Future + &#39;a</code>.","Boxes the stream and changes its type to <code>dyn Stream + &#39;a</code>.","Boxes the reader and changes its type to …","Boxes the writer and changes its type to …","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Catches panics while polling the future.","Appends another stream to the end of this one.","Creates an adapter which will chain this stream with …","Clones all items.","Closes the writer.","Collects all items in the stream into a collection.","Tells this buffer that <code>amt</code> bytes have been consumed from …","Consumes <code>amt</code> buffered bytes.","Copies all items.","Counts the number of items in the stream.","Repeats the stream from beginning to end, forever.","Enumerates items, mapping them to <code>(index, item)</code>.","Returns the contents of the internal buffer, filling it …","Keeps items of the stream for which <code>predicate</code> returns <code>true</code>.","Filters and maps items of the stream using a closure.","Finds the first item of the stream for which <code>predicate</code> …","Applies a closure to items in the stream and returns the …","Maps items to streams and then concatenates them.","Concatenates inner streams.","Flushes the stream to ensure that all buffered contents …","Accumulates a computation over the stream.","Calls a closure on each item of the stream.","Fuses the stream so that it stops yielding items after the …","Combinators for the <code>Future</code> trait.","Calls a closure on each item and passes it on.","Tools and combinators for I/O.","Returns the last item in the stream.","Returns a stream over the lines of this byte stream.","Maps items of the stream to new values using a closure.","Retrieves the next item in the stream.","Gets the <code>n</code>th item of the stream.","Returns the result of <code>self</code> or <code>other</code> future, preferring <code>self</code>…","Merges with <code>other</code> stream, preferring items from <code>self</code> …","Partitions items into those for which <code>predicate</code> is <code>true</code> …","Pins a variable of type <code>T</code> on the stack and rebinds it as …","Attempt to resolve the future to a final value, registering","A convenience for calling <code>Future::poll()</code> on <code>!</code><code>Unpin</code> types.","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Attempt to flush the object, ensuring that any buffered …","Attempt to pull out the next value of this stream, …","A convenience for calling <code>Stream::poll_next()</code> on <code>!</code><code>Unpin</code> …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Finds the index of the first item of the stream for which …","Traits <code>Future</code>, <code>Stream</code>, <code>AsyncRead</code>, <code>AsyncWrite</code>, <code>AsyncBufRead</code>,","Returns the result of <code>self</code> or <code>other</code> future, with no …","Merges with <code>other</code> stream, with no preference for either …","Reads some bytes from the byte stream.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads all bytes and appends them into <code>buf</code> until a newline …","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Reads all bytes and appends them into <code>buf</code> until the …","Like <code>read()</code>, except it reads into a slice of buffers.","Unwraps <code>Poll&lt;T&gt;</code> or returns <code>Pending</code>.","Maps items of the stream to new values using a state value …","Seeks to a new position in a byte stream.","Returns the bounds on the remaining length of the stream.","Skips the first <code>n</code> items of the stream.","Skips items while <code>predicate</code> returns <code>true</code>.","Returns a stream over the contents of this reader split on …","Yields every <code>step</code>th item.","Combinators for the <code>Stream</code> trait.","Takes only the first <code>n</code> items of the stream.","Creates an adapter which will read at most <code>limit</code> bytes …","Takes items while <code>predicate</code> returns <code>true</code>.","Maps items of the stream to new values using an async …","Collects all items in the fallible stream into a …","Accumulates a fallible computation over the stream.","Calls a fallible closure on each item of the stream, …","Retrieves the next item in the stream.","Collects a stream of pairs into a pair of collections.","Writes some bytes into the byte stream.","Writes an entire buffer into the byte stream.","Like <code>write()</code>, except that it writes a slice of buffers.","Zips up two streams into a single stream of pairs.","Type alias for …","Type alias for <code>Pin&lt;Box&lt;dyn Future&lt;Output = T&gt; + &#39;static&gt;&gt;</code>.","Future for the <code>FutureExt::catch_unwind()</code> method.","A future represents an asynchronous computation obtained …","Extension trait for <code>Future</code>.","Future for the <code>or()</code> function and the <code>FutureExt::or()</code> …","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn()</code> function.","Future for the <code>poll_once()</code> function.","Future for the <code>race()</code> function and the <code>FutureExt::race()</code> …","Future for the <code>ready()</code> function.","Future for the <code>try_zip()</code> function.","Future for the <code>yield_now()</code> function.","Future for the <code>zip()</code> function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread on a future.","","","","","","","","","","","","","","","","","","","","","Boxes the future and changes its type to …","Boxes the future and changes its type to <code>dyn Future + &#39;a</code>.","Catches panics while polling the future.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the result of the future that completes first, …","Returns the result of <code>self</code> or <code>other</code> future, preferring <code>self</code>…","","","","","Creates a future that is always pending.","Attempt to resolve the future to a final value, registering","","A convenience for calling <code>Future::poll()</code> on <code>!</code><code>Unpin</code> types.","","","","","","","","","","Creates a future from a function returning <code>Poll</code>.","Polls a future just once and returns an <code>Option</code> with the …","Returns the result of the future that completes first, …","Returns the result of <code>self</code> or <code>other</code> future, with no …","","","","","","","","","","","Creates a future that resolves to the provided value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins two fallible futures, waiting for both to complete …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wakes the current task and returns <code>Poll::Pending</code> once.","Joins two futures, waiting for both to complete.","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","An entity already exists, often a file.","Program argument list too long.","Asserts that a type implementing <code>std::io</code> traits can be …","A wrapper around a type that implements <code>AsyncRead</code> or …","Read bytes asynchronously.","Extension trait for <code>AsyncBufRead</code>.","Read bytes asynchronously.","Extension trait for <code>AsyncRead</code>.","Seek bytes asynchronously.","Extension trait for <code>AsyncSeek</code>.","Write bytes asynchronously.","Extension trait for <code>AsyncWrite</code>.","Blocks on all async I/O operations and implements <code>std::io</code> …","Type alias for <code>Pin&lt;Box&lt;dyn AsyncRead + Send + &#39;static&gt;&gt;</code>.","Type alias for <code>Pin&lt;Box&lt;dyn AsyncWrite + Send + &#39;static&gt;&gt;</code>.","The operation failed because a pipe was closed.","Adds buffering to a reader.","Adds buffering to a writer.","Reader for the <code>AsyncReadExt::bytes()</code> method.","Reader for the <code>AsyncReadExt::chain()</code> method.","Future for the <code>AsyncWriteExt::close()</code> method.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Cross-device or cross-filesystem (hard) link or rename.","Sets the offset to the current position plus the specified …","Gives an in-memory buffer a cursor for reading and writing.","Deadlock (avoided).","A non-empty directory was specified where an empty …","Reader for the <code>empty()</code> function.","Sets the offset to the size of this object plus the …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A list specifying general categories of I/O error.","Executable file is busy.","File larger than allowed or supported.","Loop in the filesystem or IO subsystem; often, too many …","Filesystem quota was exceeded.","Future for the <code>AsyncBufReadExt::fill_buf()</code> method.","Future for the <code>AsyncWriteExt::flush()</code> method.","The remote host is not reachable.","This operation was interrupted.","Data not valid for the operation were encountered.","A filename was invalid.","A parameter was incorrect.","The filesystem object is, unexpectedly, a directory.","Stream for the <code>AsyncBufReadExt::lines()</code> method.","The system’s networking is down.","The network containing the remote host is not reachable.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","An entity was not found, often a file.","Seek on unseekable file.","A custom error that does not fall under any other I/O …","An operation could not be completed, because it failed to …","The operation lacked the necessary privileges to complete.","Future for the <code>AsyncReadExt::read_exact()</code> method.","Future for the <code>AsyncReadExt::read()</code> method.","The read half returned by <code>split()</code>.","Future for the <code>AsyncBufReadExt::read_line()</code> method.","The filesystem or storage medium is read-only, but a write …","Future for the <code>AsyncReadExt::read_to_end()</code> method.","Future for the <code>AsyncReadExt::read_to_string()</code> method.","Future for the <code>AsyncBufReadExt::read_until()</code> method.","Future for the <code>AsyncReadExt::read_vectored()</code> method.","Reader for the <code>repeat()</code> function.","Resource is busy.","A specialized <code>Result</code> type for I/O operations.","Enumeration of possible methods to seek within an I/O …","Future for the <code>AsyncSeekExt::seek()</code> method.","Writer for the <code>sink()</code> function.","Stream for the <code>AsyncBufReadExt::split()</code> method.","Stale network file handle.","Sets the offset to the provided number of bytes.","The underlying storage (typically, a filesystem) is full.","Reader for the <code>AsyncReadExt::take()</code> method.","The I/O operation’s timeout expired, causing it to be …","Too many (hard) links to the same filesystem object.","An error returned when an operation could not be completed …","This operation is unsupported on this platform.","The operation needs to block to complete, but the blocking …","Future for the <code>AsyncWriteExt::write_all()</code> method.","Future for the <code>AsyncWriteExt::write()</code> method.","The write half returned by <code>split()</code>.","Future for the <code>AsyncWriteExt::write_vectored()</code> method.","An error returned when an operation could not be completed …oxes the reader and changes its type to …","Boxes the writer and changes its type to …","","","","","","","","","","","","","Returns a reference to the internal buffer.","Returns a reference to the internal buffer.","","","","","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","","","","","","Creates an adapter which will chain this stream with …","","","","","","","","","","","","","Closes the writer.","Attempt to shutdown the I/O handle.","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","Consumes <code>amt</code> buffered bytes.","","","","","","The context we are using to poll the future.","Copies the entire contents of a reader into a writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to downgrade the inner error to <code>E</code> if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty reader.","","","","","","","","","","","","","","","","","","","","","Returns the contents of the internal buffer, filling it …","","","Flushes the stream to ensure that all buffered contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shows a human-readable description of the <code>ErrorKind</code>.","","","Returns the argument unchanged.","","","Convert a <code>serde_json::Error</code> into an <code>io::Error</code>.","Convert the <code>Error</code> to an <code>io::Error</code>, preserving the original …","Converts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.","Returns the argument unchanged.","","","","","","Converts an <code>ErrorKind</code> into an <code>Error</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of an <code>Error</code> from a particular OS …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the inner error wrapped by …","Gets a mutable reference to the inner I/O handle.","Gets a mutable reference to the async I/O handle.","Gets a mutable reference to the underlying reader.","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying buffer.","Gets a mutable reference to the underlying reader.","Gets mutable references to the underlying readers.","Returns a reference to the inner error wrapped by this …","Gets a reference to the inner I/O handle.","Gets a reference to the async I/O handle.","Gets a reference to the underlying reader.","Gets a reference to the underlying writer.","Gets a reference to the underlying buffer.","Gets a reference to the underlying reader.","Gets references to the underlying readers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual reader/writer we are wrapping.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the <code>Error</code>, returning its inner error (if any).","Extracts the inner I/O handle.","Extracts the inner async I/O handle.","Unwraps the buffered reader, returning the underlying …","Unwraps the buffered writer, returning the underlying …","Unwraps the cursor, returning the underlying buffer.","Unwraps the adapter, returning the underlying reader.","Unwraps the adapter, returning the underlying readers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Returns the number of bytes before this adapter will …","","Returns a stream over the lines of this byte stream.","Creates a new I/O error from a known kind of error as well …","Wraps an I/O handle implementing <code>std::io</code> traits.","Wraps an I/O handle implementing <code>AsyncRead</code> or <code>AsyncWrite</code> …","Wraps an async I/O handle into a blocking interface.","Creates a buffered reader with the default buffer capacity.","Creates a buffered writer with the default buffer capacity.","Creates a cursor for an in-memory buffer.","Creates a new I/O error from an arbitrary error payload.","","","","","","","","","","","","","","","","","Attempt to close the object.","","","","","","","","","Attempt to return the contents of the internal buffer, …","","","","","","Attempt to flush the object, ensuring that any buffered …","","","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","","","","","","","Attempt to seek to an offset, in bytes, in a stream.","","Seeks to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Poll this <code>AsyncAsSync</code> for some function.","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","Attempt to write bytes from <code>bufs</code> into the object using …","","","","","Returns the current position of this cursor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the OS error that this error represents (if any).","Reads some bytes from the byte stream.","","","","","","","Reads the exact number of bytes required to fill <code>buf</code>.","Reads all bytes and appends them into <code>buf</code> until a newline …","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Reads all bytes and appends them into <code>buf</code> until the …","Like <code>read()</code>, except it reads into a slice of buffers.","","","","","","","","","","","","Creates an infinite reader that reads the same byte …","","","Seeks to a new position in a byte stream.","","","","Puts a limit on the number of bytes.","Sets the position of this cursor.","Creates a writer that consumes and drops all data.","","Splits a stream into <code>AsyncRead</code> and <code>AsyncWrite</code> halves.","Returns a stream over the contents of this reader split on …","","","Creates an adapter which will read at most <code>limit</code> bytes …reates a buffered reader with the specified capacity.","Creates a buffered writer with the specified buffer …","Writes some bytes into the byte stream.","","","Writes an entire buffer into the byte stream.","Like <code>write()</code>, except that it writes a slice of buffers.","","","","","","","","Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","A future represents an asynchronous computation obtained …","Values yielded by the stream.","The type of value produced on completion.","A stream of values produced asynchronously.","Extension trait for <code>AsyncRead</code>.","Extension trait for <code>Future</code>.","Extension trait for <code>AsyncWrite</code>.","Extension trait for <code>AsyncSeek</code>.","Extension trait for <code>AsyncBufRead</code>.","Extension trait for <code>Stream</code>.","Tests if <code>predicate</code> returns <code>true</code> for all items in the …","Tests if <code>predicate</code> returns <code>true</code> for any item in the stream.","Boxes the future and changes its type to …","Boxes the stream and changes its type to …","Boxes the future and changes its type to <code>dyn Future + &#39;a</code>.","Boxes the stream and changes its type to <code>dyn Stream + &#39;a</code>.","Boxes the reader and changes its type to …","Boxes the writer and changes its type to …","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Catches panics while polling the future.","Appends another stream to the end of this one.","Creates an adapter which will chain this stream with …","Clones all items.","Closes the writer.","Collects all items in the stream into a collection.","Tells this buffer that <code>amt</code> bytes have been consumed from …","Consumes <code>amt</code> buffered bytes.","Copies all items.","Counts the number of items in the stream.","Repeats the stream from beginning to end, forever.","Enumerates items, mapping them to <code>(index, item)</code>.","Returns the contents of the internal buffer, filling it …","Keeps items of the stream for which <code>predicate</code> returns <code>true</code>.","Filters and maps items of the stream using a closure.","Finds the first item of the stream for which <code>predicate</code> …","Applies a closure to items in the stream and returns the …","Maps items to streams and then concatenates them.","Concatenates inner streams.","Flushes the stream to ensure that all buffered contents …","Accumulates a computation over the stream.","Calls a closure on each item of the stream.","Fuses the stream so that it stops yielding items after the …","Calls a closure on each item and passes it on.","Returns the last item in the stream.","Returns a stream over the lines of this byte stream.","Maps items of the stream to new values using a closure.","Retrieves the next item in the stream.","Gets the <code>n</code>th item of the stream.","Returns the result of <code>self</code> or <code>other</code> future, preferring <code>self</code>…","Merges with <code>other</code> stream, preferring items from <code>self</code> …","Partitions items into those for which <code>predicate</code> is <code>true</code> …","Attempt to resolve the future to a final value, registering","A convenience for calling <code>Future::poll()</code> on <code>!</code><code>Unpin</code> types.","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Attempt to flush the object, ensuring that any buffered …","Attempt to pull out the next value of this stream, …","A convenience for calling <code>Stream::poll_next()</code> on <code>!</code><code>Unpin</code> …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Finds the index of the first item of the stream for which …","Returns the result of <code>self</code> or <code>other</code> future, with no …","Merges with <code>other</code> stream, with no preference for either …","Reads some bytes from the byte stream.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads all bytes and appends them into <code>buf</code> until a newline …","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Reads all bytes and appends them into <code>buf</code> until the …","Like <code>read()</code>, except it reads into a slice of buffers.","Maps items of the stream to new values using a state value …","Seeks to a new position in a byte stream.","Returns the bounds on the remaining length of the stream.","Skips the first <code>n</code> items of the stream.","Skips items while <code>predicate</code> returns <code>true</code>.","Returns a stream over the contents of this reader split on …","Yields every <code>step</code>th item.","Takes only the first <code>n</code> items of the stream.","Creates an adapter which will read at most <code>limit</code> bytes …","Takes items while <code>predicate</code> returns <code>true</code>.","Maps items of the stream to new values using an async …","Collects all items in the fallible stream into a …","Accumulates a fallible computation over the stream.","Calls a fallible closure on each item of the stream, …","Retrieves the next item in the stream.","Collects a stream of pairs into a pair of collections.","Writes some bytes into the byte stream.","Writes an entire buffer into the byte stream.","Like <code>write()</code>, except that it writes a slice of buffers.","Zips up two streams into a single stream of pairs.","Future for the <code>StreamExt::all()</code> method.","Future for the <code>StreamExt::any()</code> method.","Iterator for the <code>block_on()</code> function.","Type alias for …","Type alias for <code>Pin&lt;Box&lt;dyn Stream&lt;Item = T&gt; + &#39;static&gt;&gt;</code>.","Stream for the <code>StreamExt::chain()</code> method.","Stream for the <code>StreamExt::cloned()</code> method.","Future for the <code>StreamExt::collect()</code> method.","Stream for the <code>StreamExt::copied()</code> method.","Future for the <code>StreamExt::count()</code> method.","Stream for the <code>StreamExt::cycle()</code> method.","Stream for the <code>empty()</code> function.","Stream for the <code>StreamExt::enumerate()</code> method.","Stream for the <code>StreamExt::filter()</code> method.","Stream for the <code>StreamExt::filter_map()</code> method.","Future for the <code>StreamExt::find()</code> method.","Future for the <code>StreamExt::find_map()</code> method.","Stream for the <code>StreamExt::flat_map()</code> method.","Stream for the <code>StreamExt::flatten()</code> method.","Future for the <code>StreamExt::fold()</code> method.","Future for the <code>StreamExt::for_each()</code> method.","Stream for the <code>StreamExt::fuse()</code> method.","Stream for the <code>StreamExt::inspect()</code> method.","Values yielded by the stream.","Stream for the <code>iter()</code> function.","Future for the <code>StreamExt::last()</code> method.","Stream for the <code>StreamExt::map()</code> method.","Future for the <code>StreamExt::next()</code> method.","Future for the <code>StreamExt::nth()</code> method.","Stream for the <code>once()</code> function.","Stream for the <code>once_future()</code> method.","Stream for the <code>or()</code> function and the <code>StreamExt::or()</code> …","Future for the <code>StreamExt::partition()</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn()</code> function.","Future for the <code>StreamExt::position()</code> method.","Stream for the <code>race()</code> function and the <code>StreamExt::race()</code> …","Stream for the <code>repeat()</code> function.","Stream for the <code>repeat_with()</code> function.","Stream for the <code>StreamExt::scan()</code> method.","Stream for the <code>StreamExt::skip()</code> method.","Stream for the <code>StreamExt::skip_while()</code> method.","Stream for the <code>StreamExt::step_by()</code> method.","A stream of values produced asynchronously.","Extension trait for <code>Stream</code>.","Stream for the <code>StreamExt::take()</code> method.","Stream for the <code>StreamExt::take_while()</code> method.","Stream for the <code>StreamExt::then()</code> method.","Future for the <code>StreamExt::try_collect()</code> method.","Future for the <code>StreamExt::try_fold()</code> method.","Future for the <code>StreamExt::try_for_each()</code> method.","Future for the <code>StreamExt::try_next()</code> method.","Stream for the <code>try_unfold()</code> function.","Stream for the <code>unfold()</code> function.","Future for the <code>StreamExt::unzip()</code> method.","Stream for the <code>StreamExt::zip()</code> method.","","","","","Tests if <code>predicate</code> returns <code>true</code> for all items in the …","","Tests if <code>predicate</code> returns <code>true</code> for any item in the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a stream into a blocking iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes the stream and changes its type to …","Boxes the stream and changes its type to <code>dyn Stream + &#39;a</code>.","Appends another stream to the end of this one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones all items.","Collects all items in the stream into a collection.","","Copies all items.","Counts the number of items in the stream.","","","Repeats the stream from beginning to end, forever.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty stream.","Enumerates items, mapping them to <code>(index, item)</code>.","","","","","","","","","","","","","","Keeps items of the stream for which <code>predicate</code> returns <code>true</code>.","Filters and maps items of the stream using a closure.","Finds the first item of the stream for which <code>predicate</code> …","","Applies a closure to items in the stream and returns the …","","","","Maps items to streams and then concatenates them.","Concatenates inner streams.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accumulates a computation over the stream.","","Calls a closure on each item of the stream.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuses the stream so that it stops yielding items after the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls a closure on each item and passes it on.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codereates a stream from an iterator.","","Returns the last item in the stream.","","","Maps items of the stream to new values using a closure.","","","","","","","","","","","","","","","","","Retrieves the next item in the stream.","","","","","","Gets the <code>n</code>th item of the stream.","","Creates a stream that yields a single item.","Creates a stream that invokes the given future as its …","Merges two streams, preferring items from <code>stream1</code> whenever …","Merges with <code>other</code> stream, preferring items from <code>self</code> …","","Partitions items into those for which <code>predicate</code> is <code>true</code> …","Creates a stream that is always pending.","","","","","","","","","","","","","","","","","","","Creates a stream from a function returning <code>Poll</code>.","Attempt to pull out the next value of this stream, …","A convenience for calling <code>Stream::poll_next()</code> on <code>!</code><code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds the index of the first item of the stream for which …","","","","","","","","","","Merges two streams, with no preference for either stream …","Merges with <code>other</code> stream, with no preference for either …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an infinite stream that yields the same item …","Creates an infinite stream from a closure that generates …","","","Maps items of the stream to new values using a state value …","","","Returns the bounds on the remaining length of the stream.","","","","","","","","","","Skips the first <code>n</code> items of the stream.","Skips items while <code>predicate</code> returns <code>true</code>.","","","","","Yields every <code>step</code>th item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes only the first <code>n</code> items of the stream.","Takes items while <code>predicate</code> returns <code>true</code>.","Maps items of the stream to new values using an async …ollects all items in the fallible stream into a …","Accumulates a fallible computation over the stream.","Calls a fallible closure on each item of the stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the next item in the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a stream from a seed value and a fallible async …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a stream from a seed value and an async closure …","Collects a stream of pairs into a pair of collections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zips up two streams into a single stream of pairs.","A builder for default Fx hashers.","A <code>HashMap</code> using a default Fx hasher.","A <code>HashSet</code> using a default Fx hasher.","This hashing algorithm was extracted from the Rustc …","This hashing algorithm was extracted from the Rustc …","This hashing algorithm was extracted from the Rustc …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","A convenience function for when you need a quick usize …","","","","A convenience function for when you need a quick 32-bit …","A convenience function for when you need a quick 64-bit …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","Returns the number of elements the map can hold without …","Returns the number of elements the set can hold without …","Clears the map, removing all key-value pairs. Keeps the …","Clears the set, removing all values.","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns <code>true</code> if the map contains a value for the specified …","","","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","","","","","","","Visits the values representing the difference, i.e., the …","","","","","Clears the map, returning all key-value pairs as an …","Clears the set, returning all elements in an iterator.","","","","","","","Gets the given key’s corresponding entry in the map for …","Gets the given value’s corresponding entry in the set …","Gets the given key’s corresponding entry by reference in …","","","","","","","Checks if this value is equivalent to the given key.","","","","","","","","","","","","","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","","","Drains elements which are true under the given predicate, …","Drains elements which are true under the given predicate, …","","","","Returns the argument unchanged.","Examples","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns a reference to the value corresponding to the key.","","Returns a reference to the value in the set, if any, that …","","","Returns the key-value pair corresponding to the supplied …","Returns the key-value pair corresponding to the supplied …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","","Returns a mutable reference to the value corresponding to …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","","Inserts a value computed from <code>f</code> into the set if the given …","","","","","","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the set’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","","","","Inserts a key-value pair into the map.","Adds a value to the set.","","Insert a key-value pair into the map without checking if …","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates a consuming iterator, that is, one that moves each …","Creates a consuming iterator, that is, one that moves each …","","Creates a consuming iterator visiting all the keys in …","","","","","","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","","","","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all key-value pairs in arbitrary …","","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","Returns the number of elements in the set.","","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashMap</code> using the given allocator.","Creates an empty <code>HashSet</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","","","","","","","","","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","","","","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Returns a mutable reference to the <code>RawTable</code> used …","","","","","","","","","","","","","","","","","","","","","","Removes a key from the map, returning the value at the key …","","Removes a value from the set. Returns whether the value was","Removes a key from the map, returning the stored key and …","Adds a value to the set, replacing the existing value, if …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Retains only the elements specified by the predicate.","","","","","","","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","Shrinks the capacity of the set as much as possible. It …","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Visits the values representing the union, i.e., all the …","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","","","","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …he entry in the map that was already occupied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the key and value in the entry.","Gets a mutable reference to the key and value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","","","","","Gets a mutable reference to the key in the entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","","","","","","","","","","","","","","","","","","","","","","","","","","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …he value which was not inserted, because the entry was …","","","","","","","","","","","","","","","","","","","","","","","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","","","","","","","","","","","","","","","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","","","","","","","","","","","","","","","","","","","Takes the value out of the entry, and returns it. Keeps …","Replaces the entry, returning the old value. The new value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","","","","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","","","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last element of data table.","Returns pointer to start of data table.","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","","","","","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","","","","","","","","","","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator which consumes all elements from the …","","","","","","","","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","","","","","","","","","Returns an iterator over every element in the table. It is …","","","","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","","","","","","","","","","","","","","","","","","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","","","","","","","","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …","A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","","","","","","","","","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","","","","","","","","","","","","","","","Returns the current state of this <code>Once</code>.","","","","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","","","","","","","","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","","","","","","","","","","Returns a reference to the original <code>Mutex</code> object.","","","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","","","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","","","","","","","","","","","","","","","","","","","","","","","","","","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","","","","","","","","","","","","","","","","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","","","","","","","","","","","","","","","","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …","A Random Number generator, powered by the <code>WyRand</code> …","Variant for fast PRNGs, like Wyrand.","Trait for enabling creating new <code>TurboCore</code> instances from …","Determines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …","This trait provides the means to easily generate all …","A Random Number generator, powered by the <code>WyRand</code> algorithm.","Variant for slower PRNGs, like ChaCha8.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","Base trait for implementing a PRNG. Only one method must be","Enum for determining the kind of PRNG, whether a fast one, …","Extension trait for automatically implementing all …","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","","","","","","","","","","","Returns a random boolean value.","","","","","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","","Clones the <code>AtomicRng</code> by deterministically deriving a new …","","","","Initialises a default instance of <code>Rng</code>. Warning, the …","Initialises a default instance of <code>AtomicRng</code>. Warning, the …","","","","","Generate a random digit in the given <code>radix</code>.","","","","","","","","","","","","","","","","","","","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Fills a mutable buffer with random bytes.","","","","","Forks a <code>TurboCore</code> instance by deterministically deriving a …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","","","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a <code>usize</code> value for stable indexing across different …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a random <code>isize</code> within a given range bound.","Generates a random <code>char</code> in the range a-z.","Creates a new <code>Rng</code> with a randomised seed.","Creates a new <code>AtomicRng</code> with a randomised seed.","Partially shuffles a slice by a given amount and returns …","","","","","","","","","Reseeds the <code>SeededCore</code> with a new seed/state.","","","Reseeds the current thread-local generator.","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","Shuffles a slice randomly in O(n) time.","","","","","","","","","","","","","","","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","","","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","","","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Creates a new <code>SeededCore</code> with a specific seed value.","","","A Random Number generator, powered by the <code>WyRand</code> …","A Random Number generator, powered by the <code>WyRand</code> algorithm.","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","Encapsulates shared borrowing state.","Encapsulates exclusive borrowing state.","Lock type used by [<code>AtomicCell</code>].","","","","","","","","","","","Returns true if there are too many read refs.","Returns true if there are too many write refs.","Borrows can be cloned.","Borrows can be cloned.","Clones immutable borrow of specified lock. This function …","Clones mutable borrow of specified lock. This function …","","","","","","","","","","","Returns dummy atomic borrow that doesn’t actually locks …","Returns dummy atomic borrow that doesn’t actually locks …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if specified lock value is borrowed.","","","Returns true if specified lock value is borrowed immutably.","Returns true if specified lock value is borrowed mutably.","","","Create atomic borrow lock. Initially not borrowed.","","","Releases immutable borrow of specified lock. This function …","Releases mutable borrow of specified lock. This function …","Restore previously leaked <code>AtomicBorrow</code> instance.","Restore previously leaked <code>AtomicBorrowMut</code> instance.","","","","","","","Attempts to borrow specified lock immutably.","Attempts to borrow specified lock mutably.","","","","","Attempts to borrow lock immutably.","Attempts to borrow lock mutably.","","","","","","","DashMap is an implementation of a concurrent associative …","DashSet is a thin wrapper around <code>DashMap</code> using <code>()</code> as the …","Implementation detail that is exposed due to generic …","A read-only view into a <code>DashMap</code>. Allows to obtain raw …","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","Safety","","","","Safety","","Safety","","Modify a specific value according to a function.","Modify every value in the map according to a function.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Returns how many keys the set can store without …","Returns how many key-value pairs the map can store without …","Removes all keys in the set.","Removes all key-value pairs in the map.","","","","","","","","","","","","","","Checks if the set contains a specific key.","Returns <code>true</code> if the map contains a value for the specified …","Checks if the map contains a specific key.","","","","","","","","","","","","","","","","","","","","Advanced entry API that tries to mimic …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns a reference to the value corresponding to the key.","Get a reference to an entry in the set","Get an immutable reference to an entry in the map","Returns the key-value pair corresponding to the supplied …","Get a mutable reference to an entry in the map","Hash a given item to produce a usize. Uses the provided or …","Hash a given item to produce a usize. Uses the provided or …","Returns a reference to the map’s <code>BuildHasher</code>.","","","","","","","Inserts a key into the set. Returns true if the key was …","Inserts a key and a value into the map. Returns the old …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Consumes this <code>ReadOnlyView</code>, returning the underlying …","","","","Wraps this <code>DashMap</code> into a read-only view. This view allows …","","","","","Returns <code>true</code> if the map contains no elements.","Checks if the set is empty or not.","Checks if the map is empty or not.","","","","","","An iterator visiting all key-value pairs in arbitrary …","Creates an iterator over a DashMap yielding immutable …","Creates an iterator over a DashMap yielding immutable …","Iterator over a DashMap yielding mutable references.","","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","Fetches the total number of keys stored in the set.","Fetches the total number of key-value pairs stored in the …","","","Creates a new DashSet with a capacity of 0.","Creates a new DashMap with a capacity of 0.","","","","","","","","","","","","Removes an entry from the map, returning the key if it …","Removes an entry from the map, returning the key and value …","Removes an entry from the set, returning the key if the …","Removes an entry from the map, returning the key and value …","","Retain elements that whose predicates return true and …","Retain elements that whose predicates return true and …","","","","","","Remove excess capacity to reduce memory usage.","Remove excess capacity to reduce memory usage.","","","","","","","","","","","","","","","","","","Advanced entry API that tries to mimic …","","","","","Get an immutable reference to an entry in the map, if the …","Get a mutable reference to an entry in the map, if the …","","","","","Advanced entry API that tries to mimic …","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","Scoped access into an item of the map according to a …","","","","","Creates a new DashMap with a specified starting capacity.","Creates a new DashMap with a specified starting capacity.","Creates a new DashMap with a specified starting capacity …","Creates a new DashMap with a specified starting capacity …","Creates a new DashMap with a specified starting capacity, …","Creates a new DashMap with a specified capacity and shard …","Creates a new DashMap with a capacity of 0 and the …","Creates a new DashMap with a capacity of 0 and the …","Creates a new DashMap with a specified hasher and shard …","Creates a new DashMap with a specified shard amount","Iterator over a DashMap yielding immutable references.","Iterator over a DashMap yielding mutable references.","Iterator over a DashMap yielding key value pairs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply a function to the stored value if it exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Sets the value of the entry, and returns a reference to …","","","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Into the key of the entry.","","","","","","","","","","Get the key of the entry.","","","","","Return a mutable reference to the element if it exists, …","Return a mutable reference to the element if it exists, …","Return a mutable reference to the element if it exists, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The shard wasn’t locked, and the value wasn’t present …","The shard was locked.","The value was present in the map, and the lock for the …","Represents the result of a non-blocking read from a DashMap…","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if the shard wasn’t locked, and the value …","","Returns <code>true</code> if the shard was locked.","Returns <code>true</code> if the value was present in the map, and the …","","","","","","","If <code>self</code> is Present, returns the reference to the value in …","","If <code>self</code> is Present, returns the reference to the value in …","","","","","","","","Indicate whether or not a popup will be shown above or …","Indicated an alias, e.g. a shortcut","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Something can be scrolled in any direction (panned).","An area on the screen that can be moved by dragging.","","","","","","","","","","Convenience for <code>Self::Max</code>","","Painted behind all floating windows","","","Normal labels. Easily readable, doesn’t take up too much …","","Clickable button with text.","Buttons. Maybe slightly bigger than <code>Self::Body</code>.","","Load the image from some raw bytes.","","","","","On Mac: ⌘ Command key, elsewhere: Ctrl key","","Backend-specific painting.","Touch operation has been disrupted by something (various …","Hover a cell in a table","Horizontal or vertical center.","A panel that covers the remainder of the screen, i.e. …","Boolean on/off control with text label.","","Circle with optional outline and fill.","A <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.","A header which can be collapsed/expanded, revealing a …","","The response from showing a <code>CollapsingHeader</code>.","RGBA image.","This format is used for space-efficient color …","","A 2D RGBA color image in RAM.","A drop-down selection menu with a descriptive label.","","IME composition ended with this final result.","IME composition start.","A new IME candidate is being suggested.","Your handle to egui.","A context menu is available","The integration detected a “copy” event (e.g. Cmd+C).","Indicate that a copy will be made","Request an elevated amount of animations and flair for the …","For precision work","A cubic Bézier Curve.","A mouse cursor icon.","The integration detected a “cut” event (e.g. Cmd+X).","","","","","","","","Debug layer, always painted last / on top","Default text style - will use <code>TextStyle::Body</code>, unless …","Normal cursor icon, whatever that is.","","Layout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…","A numeric value that you can change by dragging the …","","A file dropped into egui.","","Infinite range that contains everything, from -∞ to …","Infinite rectangle that contains every point.","","User lifted the finger or pen from the surface, or slid …","","","An input event generated by the integration.","Controls which events that a focused widget will have …","Fit the image to an exact size.","The first extra mouse button on some mice. In web …","The second extra mouse button on some mice. In web …","","","","","","","","","","","","","","","","","","","","","","Used for the font texture.","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","How to select a sized font.","Directly select size and font family","A single-channel image designed for the font texture.","A way to select <code>FontId</code>, either by picking one directly or …","Extra scale and vertical tweak to apply to all text of a …","Popups, menus etc that should always be painted on top of …","Fit the image to a fraction of the available size.","Add a background, frame and/or margin to a rectangular …","What egui emits each frame from <code>crate::Context::run</code>.","","","","","","Text that has been laid out, ready for painting.","Use exactly this galley when painting the text.","The thing you are hovering can be grabbed","You are grabbing the thing you are hovering","A simple grid layout.","","Heading. Probably larger than <code>Self::Body</code>.","Scale to height.","Question mark","","","A file about to be dropped into egui.","A clickable hyperlink, e.g. to …","","","A function that paints the <code>ComboBox</code> icon","egui tracks widgets frame-to-frame using <code>Id</code>s.","<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …","A widget which displays an image.","A clickable image within a frame.","","An image stored in RAM.","This type determines how the image should try to fit …","","This type determines the constraints on how the size of an …","This type tells the <code>Ui</code> how to load an image.","Request a standard amount of attention-grabbing actions.","Returned when we wrap some ui-code and want to return both …","Input state that egui updates each frame.","","","","","Keyboard keys.","A key was pressed or released.","A keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.","","Convenience for <code>Self::Min</code>","","","","","","","","","","Linear magnification and minification.","Static text.","","An identifier for a paint layer. Also acts as an …","The layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.","Use this <code>LayoutJob</code> when laying out the text.","","Number of lines","A line between two points.","Linearly interpolate the nearest neighbors, creating a …","Clickable text, that looks like a hyperlink.","e.g. a hyperlink","","The Mac ⌘ Command key","Textures allocated using <code>TextureManager</code>.","","Right or bottom.","The data that egui persists between frames.","Textured triangles in two dimensions.","A general triangle mesh.","The tertiary mouse button is usually the middle mouse …","Normal moveable windows that you reorder by click","Left or top.","The virtual keycode for the Minus key.","Names of different modifier keys.","State of the modifier keys. These must be fed to egui.","A font where each character is the same width (<code>w</code> is the …","Same size as <code>Self::Body</code>, but used when monospace is …","A raw mouse wheel event as sent by the backend (minus the …","The unit associated with the numeric value of a mouse …","User moves a touch point along the surface. This event is …","Omnidirectional move icon (e.g. arrows in all cardinal …","All you probably need to know about a multi-touch gesture.","","Alt, Ctrl, Shift, Cmd","An invalid <code>Rangef</code> filled with <code>f32::NAN</code>.","An invalid <code>Rect</code> filled with <code>f32::NAN</code>.","Nearest magnification and minification.","Same as <code>Stroke::default</code>.","","The inverse of <code>Self::EVERYTHING</code>: stretches from positive …","The inverse of <code>Self::EVERYTHING</code>: stretches from positive …","Number of pointer buttons supported by egui, i.e. the …","One of the names in <code>FontDefinitions::families</code>.","A user-chosen style, found in <code>Style::text_styles</code>.","Show the nearest pixel value.","Can’t drop here","Show no cursor","Paint nothing. This can be useful as a placeholder.","Forbidden","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Extends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …","","What URL to open, and how.","Some global options that you can read and write.","Different layer categories","Fit the image to its original size, scaled by some factor.","If you cannot fit any of the above slots.","","Number of pages","","","If you want to paint some 3D shapes inside an egui region, …","Information passed along with <code>PaintCallback</code> (…","Helper to paint shapes and text to a specific region on a …","Special layer between panels and windows","The integration detected a “paste” event (e.g. Cmd+V).","A series of lines between points. The path can have a …","The non-rendering part of what egui emits each frame.","The virtual keycode for the Plus/Equals key.","Number of ui points (logical pixels)","Mouse button (or similar for touch input)","A mouse button was pressed or released (or a touch started …","The mouse left the screen, or the last/primary touch input …","The mouse or touch moved to a new place.","Mouse or touch state.","Pointing hand, used for e.g. web links","A position on screen.","The primary mouse button is usually the left one.","Shows that processing is being done, but that the program …","A simple progress bar.","A font where some characters are wider than other (e.g. ‘…","","A quadratic Bézier Curve.","","","","Convenience for <code>Self::Max</code>","","","","","One out of several alternatives, either selected or not.","","Includive range of floats, i.e. <code>min..=max</code>, but more …","What the integrations provides to egui at the start of …","A rectangular region of space.","Rectangle with optional outline and fill.","Information given to the backend about when it is time to …","Reset the attention request and interrupt related …","A region that can be resized by dragging the bottom right …","Resize a column","Resize something rightwards (e.g. when dragging the …","Horizontal resize <code>-</code> to make something wider or more narrow …","Diagonal resize <code>/</code> (right-up to/from left-down)","Resize something up (e.g. when dragging the top edge of …","Resize something up and right (e.g. when dragging the …","Resize something up and left (e.g. when dragging the …","Diagonal resize <code>\\\\</code> (left-up to/from right-down)","Resize a row","Resize something downwards (e.g. when dragging the bottom …","Resize something down and right (e.g. when dragging the …","Resize something down and left (e.g. when dragging the …","Vertical resize <code>|</code> (up-down or down-up)","Resize something leftwards (e.g. when dragging the left …","The result of adding a widget to a <code>Ui</code>.","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","Text and optional style choices for it.","","","How rounded the corners of things should be","","","⌥ ⌃ ⇧ ⌘ - NOTE: not supported by the default egui …","Scale original size by some factor.","How many points (logical pixels) the user scrolled.","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","The secondary mouse button is usually the right one, and …","One out of several alternatives, either selected or not. …","","What sort of interaction is a widget sensitive to?","A visual separator. A horizontal or vertical line …","A paint primitive such as a circle or a piece of text. …","A panel that covers the entire left or right side of a <code>Ui</code> …","Scale to size.","Given as a hint for image loading requests.","Control a number with a slider.","","Specifies the orientation of a <code>Slider</code>.","Used when small text is needed.","","A spinner widget used to indicate loading.","User just placed a touch point on the touch surface","","Describes the width and color of a line.","Specifies the look and feel of egui.","Use a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…","","An ugly color that is planned to be replaced before making …","Convenience for <code>Self::Min</code>","","","","","Text.","Text input, e.g. via keyboard.","Text caret, e.g. “Click here to edit text”","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","","Formatting option for a section of text.","Alias for a <code>FontId</code> (font of a certain size).","Load the image from an existing texture.","How the texture texels are filtered.","Used to paint images.","What texture to use in a <code>Mesh</code> mesh.","How the texture texels are filtered.","What has been allocated and freed during the last period.","Things floating on top of everything else, like tooltips. …","A panel that covers the entire top or bottom of a <code>Ui</code> or …","","On touch screens, report this <em>in addition to</em> …","this is a <code>u64</code> as values of this kind can always be …","Unique identification of a touch occurrence (finger or pen …","In what phase a touch event is in.","","","This is what you use to place widgets.","Load the image from a URI, e.g. …","Your own texture, defined in any which way you want. The …","Types of attention to request from a user when a native …","","Recursively nest more shapes - sometimes a convenience to …","A vector has a direction and length. A <code>Vec2</code> is often used …","","Vertical text caret, e.g. “Click here to edit vertical …","Controls the visual style (colors etc) of egui.","","","","Not yet ready, try later.","Anything implementing Widget can be added to a <code>Ui</code> with …","Describes a widget such as a <code>crate::Button</code> or a …","This is how you specify text for a widget.","The different types of built-in widgets in egui","Helper so that you can do <code>TextEdit::State::read…</code>","Scale to width.","Builder for a floating window which can be dragged, …","The native window gained or lost focused (e.g. the user …","","","","","","","The zero position, the origin. The top left corner in a …","A <code>Rect</code> filled with zeroes.","","No rounding on any corner.","","Zoom scale factor this frame (e.g. from ctrl-scroll or …","Enhance!","Let’s get a better overview","For use in tests; especially doctests.","For use in tests; especially doctests.","","","","","","","Add a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …","It is up to the caller to make sure there is room for this.","","","","Add a new bytes loader.","Uniformly colored rectangle.","Add a single <code>Widget</code> that is possibly disabled, i.e. greyed …","Add a section that is possibly disabled, i.e. greyed out …","Add a new image loader.","Rectangle with a texture and color.","Add a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …","Add extra space before the next widget.","Add a new texture loader.","Add a triangle.","Add a single <code>Widget</code> that is possibly invisible.","Add a section that is possibly invisible, i.e. greyed out …","Returns an additive version of self","Return an additive version of this color (alpha = 0)","Allocate a rect without interacting with it.","Repaint after this duration. If zero, repaint as soon as …","How imprecise do we expect the mouse/touch input to be? …","","Returns a range of given size within a specified range.","e.g. center a size within a given frame","","","Allocate at least as much space as needed, and interact …","Returns a <code>Rect</code> with exactly what you asked for.","Convenience function to get a region to paint on.","Allocate a specific part of the <code>Ui</code>.","Allocate space for a widget and check for interaction in …","Reserve this much space and move the cursor. Returns where …","Allocated the given space and then adds content to that …","Allocated the given rectangle and then adds content to …","Allocated the given space and then adds content to that …","","","Either of the alt keys are down (option ⌥ on Mac).","","Set anchor and distance.","Set anchor and distance.","","Used e.g. to anchor a piece of text to a part of the …","Measures the angle of the vector.","Create a unit vector with the given CW angle (in radians).","Whether to display a loading animation when progress <code>&lt; 1</code>. …","","Returns a value in the range [0, 1], to indicate “how on…","Like <code>Self::animate_bool</code> but allows you to control the …","Smoothly animate an <code>f32</code> value.","How many seconds a typical animation should last.","","Were there any type of click this frame?","Is any pointer button currently down?","True if any member is NaN.","True if any member is NaN.","True if any member is NaN.","Is any popup open?","Was any pointer button pressed (<code>!down -&gt; down</code>) this frame? …","Was any pointer button released (<code>down -&gt; !down</code>) this frame?","True if there currently are any fingers touching egui.","Append all the indices and vertices of <code>other</code> to <code>self</code>.","","Add on new input.","Add on new output.","Add on new output.","Append all the indices and vertices of <code>other</code> to <code>self</code> …","Append to an existing <code>LayoutJob</code>","","","Obtain the previous rectangle of an area.","","Show an arrow starting at <code>origin</code> and going in the …","If <code>true</code>, pressing arrows will act on the widget, and NOT …lip <code>min</code> and <code>max</code> if needed, so that <code>min &lt;= max</code> after.","A view of the underlying data as <code>&amp;[u8]</code>","A view of the underlying data as <code>&amp;mut [u8]</code>","Returns this buffer as a <code>str</code>.","width / height","Width / height","More readable version of <code>self.max(lower_limit)</code>","","","Make sure each corner has a rounding of at least this.","More readable version of <code>self.min(upper_limit)</code>","","","Make sure each corner has a rounding of at most this.","Same as <code>ui.next_auto_id().with(id_source)</code>","For each axis, should the containing area shrink if the …","","Not resizable, just takes the size of its contents. Also …","Not manually resizable, just takes the size of its …","The available height at the moment, given the current …","How much space is still available after panels has been …","In case of a wrapping layout, how much space is left on …","The available space at the moment, given the current …","In case of a wrapping layout, how much space is left on …","The available width at the moment, given the current …","","","","","Fill-color behind the text.","Prefer using <code>RichText</code> directly!","","When using this font’s metrics to layout a row, shift …","","An alternative to calling <code>Self::run</code>.","","A solid color to put behind the image. Useful for …","A solid color to put behind the image. Useful for …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","","","","None iff collapsed.","None iff collapsedreate a bi-directional (horizontal and vertical) scroll …","The id should be globally unique, e.g. …","<code>max.y</code>","","<code>max.y</code>","Place elements vertically, bottom up.","","Usage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>","Was the button given clicked this frame?","Was the button given double clicked this frame?","Is this button currently down?","Show a background behind buttons.","Was the button given pressed this frame?","Was the button given released this frame?","Was the button given triple clicked this frame?","","<code>width x height x bytes_per_pixel</code>","Set by the <code>eframe</code> web backend.","","","Can be used to cache computations from one frame to …","Calculate a bounding rectangle.","Returns the size the image will occupy in the final UI.","Calculate the final on-screen size in points.","Paint something custom (e.g. 3D stuff).","A canvas to draw on.","","","The center of the range","","","","This will make the next added widget centered and …","For when you want to add a single widget to a layout, and …","","What the underlying data changed?","Sets the limit for the amount of characters can be entered","","Reads the given character range.","If the given <code>Id</code> has been used previously the same frame at …","Show a checkbox.","","","Create a new <code>Ui</code> at a specific region.","Create a new <code>Ui</code> at a specific region with a specific id.","","","","","","","Equivalent to <code>x.clamp(min, max)</code>","Return the given points clamped to be inside the rectangle …","","Clamp incoming and outgoing values to this range.","","If set to <code>true</code>, all incoming and outgoing values will be …","","Restore to default state, but without freeing memory.","Clears all characters in this buffer","","Clear memory of any animations.","","Sense clicks and hover, but not drags.","buttons, sliders, windows, …","Sense both clicks, drags and hover (e.g. a slider or …","Returns true if this widget was clicked this frame by the …","Returns true if this widget was clicked this frame by the …","<code>true</code> if there was a click <em>outside</em> this widget this frame.","Screen-space rectangle for clipping what we paint in this …","Everything painted in this <code>Painter</code> will be clipped against …","Clip rectangle in points.","Clip / scissor rectangle. Only show the part of the <code>Mesh</code> …","","The “scissor” or “clip” rectangle. This is what …","Allow child widgets to be just on the border and still …","When <code>true</code> (default), overflowing text will be clippedlose the menu we are in (including submenus), if any.","Close the open popup, if any.","A line that closes back to the start point again.","","","","","","","","","Show text as monospace with a gray background.","Monospace label with different background color.","Prefer using <code>RichText</code> directly!","","Background color behind code-styled monospaced labels.","A <code>TextEdit</code> for code editing.","Build a <code>TextEdit</code> focused on code editing. By default it …","Can the window be collapsed by clicking on its title?","","A <code>CollapsingHeader</code> that starts out collapsed.","Show a background behind collapsing headers.","Override text color.","Override text color if, and only if, this is a <code>RichText</code>.","Sets the spinner’s color.","","Text color","","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","","Show colored text.","","Temporarily split a <code>Ui</code> into several columns.","On Windows and Linux, set this to the same value as <code>ctrl</code>. …","true if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.","","","","","","","","","What goes between the names","Constrains this window to the screen bounds.","Constrains this area to the screen bounds.","","","Constraint the movement of the window to the given …","Constraint the movement of the window to the given …","Check for a key press. If found, <code>true</code> is returned and the …","Check if the given shortcut has been pressed.","Containers are pieces of the UI which wraps other pieces …","","","Whether another set of modifiers is contained in this set …","","Response to secondary clicks (right-clicks) by showing the …","A convex polygon with a fill and optional stroke.","If set, put this text in the system clipboard. Ignore if …","Copy the given text to the system clipboard.","If the pointer button is down, will it register as a click …","Count presses of a key. If non-zero, the presses are …","","How to align things on the cross axis. For vertical …","","Justify the cross axis? For vertical layouts justify mean …","Either of the control keys are down. When checking for …","","Get a reference to the parent <code>Context</code>.","Get a reference to the parent <code>Context</code>.","","Used for optionally showing a tooltip and checking for …","The current frame number.","Set current position of the window. If the window is …","Positions the window but you can still move it.","The contents of some editable text (for <code>TextEdit</code> fields).","Where the next widget will be put.","When <code>true</code> (default), the cursor will initially be placed …","","","","","Cursor at the given position within the galley","Set the cursor to this icon.","","","","Set custom formatter defining how numbers are converted …","Set custom formatter defining how numbers are converted …","","","Set custom parser defining how the text input is parsed …","Set custom parser defining how the text input is parsed …","","","Default dark theme.","A dark canvas to draw on.","If true, the visuals are overall dark with light text. If …","Turn a line into dashes.","Turn a line into dashes. If you need to create many dashed …","Read-only access to the shared <code>IdTypeMap</code>, which stores …","Read-only access to <code>IdTypeMap</code>, which stores superficial …","This map stores some superficial state for all widgets …","Read-write access to the shared <code>IdTypeMap</code>, which stores …","Read-write access to <code>IdTypeMap</code>, which stores superficial …","","Options to help debug why egui behaves strangely.","Whether or not to debug widget layout on hover.","Shows where the next widget is going to be placed","Paint on top of everything else","","text with a background","","","","","","","","","","","","","","","Specifies the default fonts if the feature <code>default_fonts</code> …","","","The default is linear for both magnification and …","","The epaint font texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","The initial height of the <code>SidePanel</code>. Defaults to …","Set initial height of the window.","Preferred / suggested height. Actual height will depend on …","","By default, the <code>CollapsingHeader</code> is collapsed. Call …","Set initial collapsed state of the window","","","Set initial position of the window.","","","Set initial position and size of the window.","Set initial size of the window.","","","The initial wrapping width of the <code>SidePanel</code>.","Set initial width of the window.","Preferred / suggested width. Actual width will depend on …","","Deletes a range of text <code>char_range</code> from this buffer.","How much the pointer moved compared to last frame, in …his can be used by a text-to-speech system to describe …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The desired height of the bar. Will use the default …","","","Set the number of rows to show by default. The default for …","The desired width of the bar. Will use all horizontal …","Set to 0.0 to keep as small as possible. Set to …","","","","","The distance from the rect to the position, squared.","The distance from the rect to the position.","","","The dot-product of two vectors.","Turn a line into equally spaced dots.","Returns true if this widget was double-clicked this frame …","Returns true if this widget was double-clicked this frame …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sense drags and hover, but not clicks.","sliders, windows, scroll bars, scroll areas, …","Modify an angle. The given angle should be in radians, but …","Modify an angle. The given angle should be in radians, but …","","","If dragged, how many points were we dragged and in what …","The widget was being dragged, but now it has been released.","The widget was being dragged by the button, but now it has …","Did a drag on this widgets begin this frame?","Did a drag on this widgets by the button begin this frame?","Enable/disable scrolling on the window by dragging with …","Can the user drag the scroll area to scroll?","","","","When dragging the value, how fast does it move?","","The style to use for <code>DragValue</code> text.","The widgets is being dragged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dragged files dropped into egui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An assert that is only active when <code>egui</code> is compiled with …","Set to true the text was truncated due to …","No fonts.","Control the scrolling behavior.","If you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …","If <code>false</code> the window will be grayed out and non-interactive.","If false, no content responds to click and widgets will be …","Was the widget enabled? If false, there was no interaction …","","","","Whether the widget is enabled.","Cursor to one-past last character.","Call at the end of each frame.","","Move to the next row in a grid layout or wrapping layout. …good color for error text (e.g. red).","If <code>true</code>, pressing escape will act on the widget, and NOT …","","In-order events received this frame.","Events that may be useful to e.g. a screen reader.","In-order events received this frame","This can be used by a text-to-speech system to describe …","A <code>Rect</code> that contains every point above a certain y …","A <code>Rect</code> that contains every point below a certain y …","If true, all windows, menus, tooltips etc are to be …","","A <code>Rect</code> that contains every point to the left of the given …","A <code>Rect</code> that contains every point to the right of the given …","Enforce this exact height.","Enforce this exact width.","An example color image, useful for tests.","Expand by this much on each side, keeping the center","Expand by this much in each direction, keeping the center","Expand by this much in each direction, keeping the center","","Expand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …","Ensure we are big enough to contain the given x-coordinate.","Ensure we are big enough to contain the given y-coordinate.","Show tooltips explaining <code>DragValue</code>:s etc when hovered.","Add many shapes at once.","","Expand to include the given x coordinate","Expand to include the given y coordinate","Extra spacing between letters, in points.","Extra spacing between letters, in points.","","Very dark or light color (for corresponding theme). Used …","When fading out things, we fade the colors towards this.","","Something just barely different from the background color. …","Set the <code>TextStyle</code> unless it has already been set","Set the <code>TextStyle</code> unless it has already been set","Which fonts (names) to use for each <code>FontFamily</code>.","Select the font family.","What font family to use.","","Override background fill color. Note that this will …","The fill color of the bar.","","","","","Get all events that matches the given filter.","Determines how the image should shrink/expand/stretch/etc. …","Fit the image to an exact size.","Fit the image to a fraction of the available space.","Fit the image to its original size with some scaling.","Set an exact number of decimals to display. Values will …","Set an exact number of decimals to display.","Sets the window position and prevents it from being …","Positions the window and prevents it from being moved","Sets the window pos and size and prevents it from being …","Sets the window size and prevents it from being resized by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which widget has keyboard focus?","","this widgets want focus. Anything interactive + labels …","Senses no clicks or drags, but can be focused with the …","The native window has the keyboard focus (i.e. is …","The native window has the keyboard focus (i.e. is …","Pick a <code>FontId</code> or <code>TextStyle</code>.","Select the font and size. This overrides the value from …","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","Read the font height of the selected text style.","","","Read-only access to <code>Fonts</code>.","Read-only access to <code>Fonts</code>.","Read-only access to the shared <code>Fonts</code>.","Read-write access to <code>Fonts</code>.","Current force of the touch (average of the forces of the …","Release all memory and textures related to images used in …","Release all memory and textures related to the given image …","","","Format the given shortcut in a human-readable way (e.g. …","Change the background color, margins, etc.","Change the background color, margins, etc.","Change the background color, margins, etc.","Turn off the frame","Default is <code>true</code>. If set to <code>false</code> there will be no frame …","Change the background color, margins, etc.","Turn off the frame","","","","","","","","The current frame number.","Textures to free after painting.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Transparent black","Load the image from some raw bytes.","","","","","","","Create a <code>ColorImage</code> from flat opaque gray data.","Without label.","Label shown next to the combo box","","","","","left-top corner plus a size (stretching right-down).","","","Bounding-box around the points.","","","","Create a <code>ColorImage</code> from flat RGB data.","","From <code>sRGBA</code> with premultiplied alpha.","","","From <code>sRGBA</code> WITHOUT premultiplied alpha.","","Create a <code>ColorImage</code> from flat un-multiplied RGBA dataoad the image from an existing texture.","Returns the bounding rectangle of the two points.","Load the image from a URI.","","Transparent white","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Was the <code>CollapsingHeader</code> fully closed (and not being …","Was the <code>CollapsingHeader</code> fully open (and not being …","","","True if this widget has keyboard focus this frame, but didn…","","Paint text that has already been laid out in a <code>Galley</code>.","The text color in the <code>Galley</code> will be replaced with the …","Paint text that has already been laid out in a <code>Galley</code>.","Multiply with 0.5 to make color half as opaque, …","Used to get a unique ID when implementing one of the …","","","","Create a <code>Hyperlink</code> to the current <code>file!()</code> on github.","Create a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …","Show larger buttons for switching between light and dark …","Show a small button to switch to/from dark/light mode …","Returned a “grayed out” version of the given color.","Put into a <code>Frame::group</code>, visually grouping the contents …","For when you want to group a few widgets together within a …","Extend each end of the separator line by this much.","","Helpers for zooming the whole GUI of an app (changing …","","Does this widget have keyboard focus?","This widget has the keyboard focus (i.e. is receiving key …","","Do we have a pointer?","","","","","","","","","","","","","","","","","","","","","","Response of the actual clickable header.","Show large text.","Use <code>TextStyle::Heading</code>.","Prefer using <code>RichText</code> directly!","","","","","The allowable height range for the panel.","","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Highlight this widget, to make it look like it is hovered, …","Highlight this widget, to make it look like it is hovered, …","Size hint for e.g. rasterizing an svg.","Show a faint hint text when the text field is empty.","","A horizontal line.","Paints a horizontal line.","Start a ui with horizontal layout. After you have called …","Explicitly ask for a horizontal line.","Create a horizontal scroll area.","Set the horizontal align of the inner text.","e.g. for when aligning text within a button.","Like <code>Self::horizontal</code>, but allocates the full vertical …","","e.g. for adjusting the placement of something.","Set the horizontal scroll offset position.","Like <code>Self::horizontal</code>, but aligns content with top.","Start a ui with horizontal layout that wraps to a new row …","Senses no clicks or drags. Only senses mouse hover.","If it is a good idea to show a tooltip, where is pointer?","If it is a good idea to show a tooltip, where is pointer? …","The pointer is hovering above this widget or the widget …","Dragged files hovering over egui.","Enable/disable horizontal scrolling. <code>false</code> by default.","Turn on/off scrolling on the horizontal axis.","Link to a web page.","The color used for <code>Hyperlink</code>,","Shortcut for <code>add(Hyperlink::new(url).text(label))</code>.","Use the provided function to render a different …","Use the provided function to render a different <code>ComboBox</code> …","","","Assign a unique id to the Window. Required if the title …","","A unique identity of this <code>Ui</code>.","Use if you want to set an explicit <code>Id</code> for this widget.","","Assign an explicit and globally unique id.","","","","","","","","","The <code>Id</code> of the widget/area this response pertains.","Explicitly set the source of the <code>Id</code> of this widget, …","A source for the unique <code>Id</code>, e.g. …","A source for the unique <code>Id</code>, e.g. …","A source for the unique <code>Id</code>, e.g. …","","","","","","","An image at the given position.","Show an image available at the given <code>uri</code>.","Creates a button with an image. The size of the image as …","An image at the given position.","","","Creates a button with an image to the left of the text. …","Show a spinner when loading an image.","","","Associate some static bytes with a <code>uri</code>.","Include an image in the binary.","Create a child ui which is indented to the right.","Draw a vertical lien left of indented region, in e.g. …","","","","","","","","Which font face in the file to use. When in doubt, use <code>0</code>.","","","","","","","","Draw as triangles (i.e. the length is always multiple of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What the user closure returned.","Margin within the painted frame.","Margin within the painted frame.","Read-only access to the shared <code>InputState</code>.","Read-only access to <code>InputState</code>.","Read-write access to the shared <code>InputState</code>.","Read-write access to <code>InputState</code>.","Inserts text <code>text</code> into this buffer at character index …","Show the state of egui, including its input and output.","Helper: equivalent to …","How perceptually intense (bright) is the color?","Check for clicks, drags and/or hover on a specific region …","Check for more interactions (e.g. sense clicks on a …","Use this style for interactive things. Note that you must …","Should the cursor change when the user hovers over an …","Where the pointer (mouse/touch) were when when this widget …","If you detect a click or drag and wants to know where it …","","","Check for clicks, and drags on a specific region that is …","If <code>false</code> the window will be non-interactive.","If false, clicks goes straight through to what is behind …","","","How and when interaction happens.","Default is <code>true</code>. If set to <code>false</code> then you cannot interact …","Returns true if we sense either clicks or drags.","","Register this widget as being interested in getting …","The intersection of two <code>Rect</code>, i.e. the area covered by …","The overlap of two ranges, i.e. the range that is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeayout with wrap mode based on the containing <code>Ui</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Showing UI:s for egui/epaint types.","Is the alpha=0 ?","Is the alpha=0 ?","Is any widget being dragged?","Is this specific widget being dragged?","Is an egui context menu open?","Just because the mouse is down doesn’t mean we are …","","True if width is zero or color is transparent","","","","","If <code>false</code>, the <code>Ui</code> does not allow any interaction and the …","","True if all members are also finite.","True if all members are also finite.","True if all members are also finite.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the chain of bytes, image, or texture …","","Is the pointer currently moving? This is smoothed so a few …","Can this text be edited?","<code>width &lt; 0 || height &lt; 0</code>","","","Is the pointer button currently down on this widget? This …","Is the pointer (mouse/touch) over any egui area?","Is the given popup open?","<code>width &gt; 0 &amp;&amp; height &gt; 0</code>","Can be used for culling: if <code>false</code>, then no part of <code>rect</code> …","","Do all corners have the same rounding?","","","Is the pointer currently still? This is smoothed so a few …","Was the tooltip open last frame?","Is egui currently using the pointer position (e.g. …","Are all indices within the bounds of the contained …","","","","","","","","","If <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …","Tilt the characters to the right.","Prefer using <code>RichText</code> directly!","","","The job that this galley is the result of. Contains the …","","Is the given key currently held down?","Was the given key pressed this frame?","Was the given key released this frame?","","Show some text.","","The text on labels, buttons, checkboxes etc.","","Associate a label with a control for accessibility.","For logarithmic sliders, the largest positive value we are …","","","Set by the <code>eframe</code> web backend.","","Latest reported pointer position. When tapping a touch …","","","Use this to paint stuff within this <code>Ui</code>.","Where we paint","","Which layer the widget is part of.","Top-most layer at the given position.","Top-most layer at the given position.","An iterator over all layers. Back-to-front. Top is last.","Get a full-screen painter for a new or existing layer","Handles paint layers, i.e. how things are sometimes …","Read the <code>Layout</code>.","Will wrap text at the given width and line break at <code>\\\\n</code>.","Do layout and position the galley in the ui, without …","Will line break at <code>\\\\n</code>.","Override how text is being shown inside the <code>TextEdit</code>.","","The id should be globally unique, e.g. …","<code>min.x</code>","","","","<code>min.x</code>","Place elements horizontally, left to right.","","","","","Linear interpolation.","Linearly interpolate towards another point, so that …","Linearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…","Linearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…","Linearly self towards other rect.","Default light theme.","Show radio-buttons to switch between light and dark mode.","Show small toggle-button for light and dark mode.","A line through many points.","Explicit line height of the text in points.","Explicit line height of the text in points.","","A line between two points. More efficient than calling …","Paints a line from the first point to the second.","Multiply with 0.5 to make color half as opaque in linear …","Looks like a hyperlink.","Image loading","Errors","","Load the image from its <code>Image::source</code>, returning the …","","Allocate a texture.","The loaders of bytes, images, and textures.","When <code>false</code> (default), pressing TAB will move focus to the …","Set an event filter for a widget.","Make this a logarithmic slider. This is great for when the …","The widget had keyboard focus and lost it, either because …","","The Mac ⌘ Command key. Should always be set to <code>false</code> on …","","How to filter when magnifying (when texels are larger than …","How to align things on the main axis.","","Main axis direction","Justify the main axis?","","If true, wrap around when reading the end of the main …","Whether or not the <code>ImageFit</code> should maintain the image’s …","Whether or not the final size should maintain the original …","Use this to generate widget ids for widgets that have …","Set margin of text. Default is [4.0,2.0]","","","Report the data shown by this widget changed.","Check for equality but with proper handling of …","","","","","The other corner, opposing <code>Self::min</code>. Usually the right …","","Set soft maximum width (wrapping width) of each column.","Set a maximum number of decimals to display. Values will …","Set a maximum number of decimals to display.","","","","Returns the maximum of <code>self.x</code> and <code>self.y</code>.","Maximum height of the panel.","The maximum height of the outer frame of the scroll area.","Set the max height of the image.","New widgets will <em>try</em> to fit within this rectangle.","Won’t expand to larger than this","Set the max size of the image.","","","Determines the maximum size of the image.","Maximum size of one side of the font texture.","Maximum size of one side of a texture.","Maximum width of the panel.","The maximum width of the outer frame of the scroll area.","Set the max width of the image.","Read-only access to the shared <code>Memory</code>.","Read-only access to <code>Memory</code>.","Read-write access to the shared <code>Memory</code>.","Read-write access to <code>Memory</code>.","Shows the contents of <code>Self::memory</code>.","Menu bar functionality (very basic so far).","","Create a menu button that when clicked will show the given …","Create a menu button with an image that when clicked will …","","","","Tight bounding box around all the meshes in all the rows. …","Returns true if this widget was clicked this frame by the …","Is the middle button currently down?","With the <code>eframe</code> web backend, this is set to the mime-type …","With the <code>eframe</code> web backend, this is set to the mime-type …","","","","One of the corners of the rectangle, usually the left top …","Set minimum width of each column. Default: …","","Set a minimum number of decimals to display. Normally you …","Set a minimum number of decimals to display.","","","Returns the minimum of <code>self.x</code> and <code>self.y</code>.","Minimum height of the panel.","Set minimum height of the window.","Won’t shrink to smaller than this","Where and how large the <code>Ui</code> is already. All widgets that …","Set minimum height of each row. Default: …","","The minimum height of a vertical scroll area which …","","The minimum width of a horizontal scroll area which …","Size of content; same as <code>min_rect().size()</code>","Set the minimum size of the button.","Set the minimum size of the <code>TextEdit</code>.","Won’t shrink to smaller than this","","","","Minimum width of the panel.","Set minimum width of the window.","Won’t shrink to smaller than this","How to filter when minifying (when texels are smaller than …","Which modifier keys are down at the start of the frame?","","Which modifier keys are down at the start of the frame?","Show monospace (fixed width) text.","","Use <code>TextStyle::Monospace</code>.","Prefer using <code>RichText</code> directly!","If <code>false</code> the window will be immovable.","moveable by dragging the area?","","Moves the given area to the top in its <code>Order</code>.","","","","","","Calls <code>InputState::multi_touch</code>.","Returns details about the currently ongoing multi-touch …","A <code>TextEdit</code> for multiple lines. Pressing enter key will …","","Multiply with e.g. 0.5 to make us half transparent","","Is there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…","Usage: …","Debug-name.","Human-readable English name.","Name of the file. Set by the <code>eframe</code> web backend.","Radius of the rounding of the North-East (right top) …","","Create a scroll area where both direction of scrolling is …","The <code>CollapsingHeader</code> starts out collapsed unless you call …","Create new <code>ComboBox</code> with id and label","The id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.","The id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.","The window title is used as a unique <code>Id</code> and must be …","","","If you are using egui, use <code>egui::Context::load_texture</code> …","Create a new <code>Grid</code> with a locally unique identifier.","","Create an image filled with the given color.","","","Create a new <code>Ui</code>.","","","","","","","","","Progress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…","","Creates a new horizontal slider.","","Create a scroll area where you decide which axis has …","","","Generate a new <code>Id</code> by hashing some source (e.g. a string or …","","Create a painter to a specific layer within a certain clip …","","","","Load the image from some source.","Create a new spinner that uses the style’s <code>interact_size</code> …","","","","","","If <code>true</code>, open the url in a new tab. If <code>false</code> open it in …","This is the <code>Id</code> that will be assigned to the next widget …","","Where do we expect a zero-sized widget to be placed?","","","","Style to use for non-interactive widgets.","","Safe normalize: returns zero if input is zero.","A special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>","Setting this will allow the last column to expand to take …","","Total number of indices in all the row meshes.","How many times was the given key pressed this frame?","Number of touches (fingers) on the surface. Value is ≥ 2 …","Total number of vertices in all the row meshes.","Radius of the rounding of the North-West (left top) corner.","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","","","Show this text when hovering if the widget is disabled.","Show this UI when hovering if the widget is disabled.","When hovered or dragged, use this icon for the mouse …","When hovered, use this icon for the mouse cursor.","Show this text if the widget was hovered (i.e. a tooltip).","Like <code>on_hover_text</code>, but show the text next to cursor.","Show this UI if the widget was hovered (i.e. a tooltip).","Like <code>on_hover_ui</code>, but show the ui next to cursor.","Calling <code>.open(Some(true))</code> will make the collapsing header …","Call this to add a close-button to the window title bar.","","","Always open this hyperlink in a new browser tab.","Open the given popup, and close all other.","Open an URL in a browser.","Open the given url in a web browser.","If set, open this url.","0.0 if fully closed, 1.0 if fully open, and something …","","Read-only access to <code>Options</code>.","Global egui options.","Read-write access to <code>Options</code>.","<code>order(Order::Foreground)</code> for an Area that should always be …","","","Vertical or horizontal slider? The default is horizontal.","","","What operating system are we running on?","Margin outside the painted frame.","Margin outside the painted frame.","All the data egui returns to the backend at the end of …","Read-only access to the shared <code>PlatformOutput</code>.","Read-only access to <code>PlatformOutput</code>.","","Read-write access to the shared <code>PlatformOutput</code>.","Read-write access to <code>PlatformOutput</code>.","If set this will change the font family and size for all …","Override default text color for all text.","If set this will change the default <code>TextStyle</code> for all …","","Paint the image in the given rectangle.","Paint the spinner in the given rectangle.","","Use this to paint stuff within this <code>Ui</code>.","","Create a painter for a sub-region of this Ui.","Panel background color","","","","","","","","","If true, hide the letters from view and prevent copying …","","Set by the <code>egui-winit</code> backend.","Set by the <code>egui-winit</code> backend.","Size of a physical pixel in logical gui coordinates …","Where the “root” of the window is.","Where the “root” of the area is.","","The pixels, row by row, from top to bottom.","The coverage value.","The number of physical pixels for each logical point.","Also known as device pixel ratio, &gt; 1 for high resolution …","Pixels per point.","The number of physical pixels for each logical point. …","Also known as device pixel ratio, &gt; 1 for high resolution …","Also known as device pixel ratio, &gt; 1 for high resolution …","","Non-rendering related output.","","","State of the mouse or simple touch gestures which can be …","","If it is a good idea to show a tooltip, where is pointer?","If you detect a click or drag and wants to know where it …","Latest reported pointer position.","","","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","","<code>pos2(x, y) == Pos2::new(x, y)</code>","Returns a 0-width Rect.","Returns a 0-width Rect.","","Returns the point on the rect’s frame or in the center …","Should be set to the expected time between frames when …","Estimated time until next frame (provided we repaint right …","","Show a prefix before the number, e.g. “x: “","Show a prefix before the number, e.g. “x: “","","","If true, the most common glyphs (ASCII) are pre-rendered …","Where did the current click/drag originate? <code>None</code> if no …","","When did the current click/drag originate? <code>None</code> if no …","","The previous text value.","Was the primary button clicked this frame?","Is the primary button currently down?","Was the primary button pressed this frame?","Was the primary button released this frame?","What to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.","","","Create a child Ui with an explicit <code>Id</code>.","Add a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …","","","Show a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…","Show a <code>RadioButton</code>. It is selected if …","Align text to top. Only applicable together with …","Prefer using <code>RichText</code> directly!","","","The raw input we got this frame from the backendhere to paint.","Bounding rect.","The area of the screen we are talking about.","Is the pointer (mouse/touch) above this rectangle in this …","","","","","Create a new Image from a patch of the current image. This …","Clone a sub-region as a new image.","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","If <code>Duration::is_zero()</code>, egui is requesting immediate …","Replaces all contents of this string with <code>text</code>","Give keyboard focus to a specific widget. See also …","Request that this widget get keyboard focus.","Call this if there is need to repaint the UI, i.e. if you …","Request repaint after at most the specified duration …","Make room for this many additional triangles (will reserve …","Make room for this many additional vertices. See also …","Forget window positions, sizes etc. Can be used to …","Show a button to reset a value to its default. The button …","Show a button to reset a value to its default. The button …","Reset to the default style set in <code>Context</code>.","Can panel be resized by dragging the edge of it?","Can panel be resized by dragging the edge of it?","Can the user resize the window by dragging its edges?","Can you resize it with the mouse?","","","","Usage: …","","","","Look up this <code>TextStyle</code> in <code>Style::text_styles</code>.","","The response of the area.","The id should be globally unique, e.g. …","<code>max.x</code>","","","","","<code>max.x</code>","Place elements horizontally, right to left.","","Rotates the vector by 90°, i.e positive X to positive Y …","Rotate by some angle about an origin, in-place.","Rotate the image about an origin by some angle","Rotate the bounds (will expand the <code>Rect</code>)","Rotate the image about an origin by some angle","Rotation in radians. Moving fingers around each other will …","","","Useful for pixel-perfect rendering.","Useful for pixel-perfect rendering.","Useful for pixel-perfect rendering.","Set the rounding of the button.","","Round the corners of the image.","","","Round the corners of the image.","Rows of text, from top to bottom.","Run the ui code for one frame.","","","","Scale the font’s glyphs by this much. this is only a …","Create a scoped child ui.","This is a signal to any backend that we want the …","Position and size of the egui area.","","Position and size of the area that egui should use, in …","Position and size of the egui area.","Full size of the screen, in pixels.","","Enable/disable horizontal/vertical scrolling. <code>false</code> by …","Turn on/off scrolling on the horizontal/vertical axes.","Set the visibility of both horizontal and vertical scroll …","","How many points the user scrolled.","Set the horizontal and vertical scroll offset position.","Adjust the scroll position of any parent <code>ScrollArea</code> so …","Adjust the scroll position until this UI becomes visible.","Adjust the scroll position of any parent <code>ScrollArea</code> so …","Scroll this many points in the given direction, in the …","","Radius of the rounding of the South-East (right bottom) …","Was the secondary button clicked this frame?","Returns true if this widget was clicked this frame by the …","Is the secondary button currently down?","Was the secondary button pressed this frame?","Was the secondary button released this frame?","Can the <code>CollapsingHeader</code> be selected by clicking it? …","","Show a label which can be selected or not.","Show selectable text. It is selected if …","If you set this to ‘true’, the <code>CollapsingHeader</code> will …","If <code>true</code>, mark this button as “selected”.","checkboxes, radio-buttons etc","If <code>true</code>, mark this button as “selected”.","","","","The current value of checkboxes and radio buttons.","","What we show as the currently selected value","","","By default, buttons senses clicks. Change this to a …","Make the label respond to clicks and/or drags.","By default, buttons senses clicks. Change this to a …","Make the image respond to clicks and/or drags.","","","The senses (click and/or drag) that the widget was …","","","Shortcut for <code>add(Separator::default())</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assign a new image to an existing texture.","Modify an existing <code>Shape</code>.","New or changed textures. Apply before painting.","<code>max.y</code>","Keep size","Screen-space rectangle for clipping what we paint in this …","Everything painted in this <code>Painter</code> will be clipped against …","Set the cursor icon.","Turn on/off whether or not to debug widget layout on hover.","Set which widget is being dragged.","Calling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …","If true, all windows, menus, tooltips etc are to be …","Set an event filter for a widget.","Tell <code>egui</code> which fonts to use.","keep min","Set both the minimum and maximum height.","<code>ui.set_height_range(min..=max);</code> is equivalent to …","Redirect where you are painting.","<code>min.x</code>","Set the maximum height of the ui. You won’t be able to …","Set the maximum size of the ui. You won’t be able to …","Set the maximum width of the ui. You won’t be able to …","Set the minimum height of the ui. This can’t shrink the …","Set the minimum size of the ui. This can’t shrink the …","Set the minimum width of the ui. This can’t shrink the …","Set the operating system we are running on.","Assign a new image to a subregion of the whole texture.","Set the number of physical pixels for each logical point. …","For integrations: this callback will be called when an …","<code>max.x</code>","Set row height in horizontal wrapping layout.","","Changes apply to this <code>Ui</code> and its subsequent children.","The <code>Style</code> used by all new windows, panels etc.","<code>min.y</code>","Calling <code>set_visible(false)</code> will cause all further widgets …","The <code>Visuals</code> used by all subsequent windows, panels etc.","keep min","Set both the minimum and maximum width.","<code>ui.set_width_range(min..=max);</code> is equivalent to …","Show a ui for settings (style and tessellation options).","","","What to paint.","Either of the shift keys are down.","","Is shift the only pressed button?","Short and readable summary","Short and readable summary","Short and readable summary","Show some text on the right side of the button, in weak …","","","Show the panel at the top level.","Show the panel at the top level.","Returns <code>None</code> if the window is not open (if <code>Window::open</code> …","","Show the <code>TextEdit</code>, returning a rich <code>TextEditOutput</code>.","","","Show the panel at the top level.","","Show the <code>ScrollArea</code>, and add the contents to the viewport.","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Should the <code>CollapsingHeader</code> show a background behind it? …","","Show a list of items with the given selected index.","Show the panel inside a <code>Ui</code>.","Show the panel inside a <code>Ui</code>.","Show the panel inside a <code>Ui</code>.","Show a spinner when the image is loading.","","","Show the progress in percent on the progress bar.","Efficiently show only the visible part of a large number …","Show a separator line, even when not interacting with it?","Show a separator line, even when not interacting with it?","","","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","Show the combo box, with the given ui code for the menu …","","Control whether or not the slider shows the current value. …","","This can be used to only paint the visible part of the …","Shrink by this much on each side, keeping the center","Shrink by this much in each direction, keeping the center","Contract each end of the separator line by this much.","Shrink by this much in each direction, keeping the center","Helper: shrinks the max height to the current height, so …","","Fit the image to 100% of its available size, shrinking it …","Helper: shrinks the max width to the current width, so …","","","","Signed distance to the edge of the box.","","No newlines (<code>\\\\n</code>) allowed. Pressing enter key will result …","width x height","<code>rect.size() == Vec2 { x: rect.width(), y: rect.height() }</code>","","","Select the font size (in points). This overrides the value …","","Sets the spinner’s size. The size sets both the height …","width, height.","width, height","Height in points.","","","","width x height","Pretend like <code>count</code> widgets have been allocated.","","Show trailing color behind the circle of a <code>Slider</code>. Default …","Show small text.","Make this a small button, suitable for embedding into text.","Smaller text.","Prefer using <code>RichText</code> directly!","","A button as small as normal body text.","For e.g. exponents.","Prefer using <code>RichText</code> directly!","For logarithmic sliders that includes zero: what is the …","Turn smart aim on/off. Default is ON. There is almost no …","","","","Set spacing between columns/rows. Default: …","The current spacing options for this <code>Ui</code>. Short for …","How much space we take up. The line is painted in the …","","","Sizes and distances between widgets","Mutably borrow internal <code>Spacing</code>. Changes apply to this <code>Ui</code> …","The length of the range, i.e. <code>max - min</code>.","","The default egui fonts supports around 1216 emojis in …","How much the value changes when dragged one point (logical …","","Shortcut for <code>add(Spinner::new())</code>","Set both <code>x</code> and <code>y</code> to the same value.","Split rectangle in left and right halves. <code>t</code> is expected to …","Split rectangle in left and right halves at the given <code>x</code> …","This is for platforms that only support 16-bit index …","Split rectangle in top and bottom halves. <code>t</code> is expected to …","Split rectangle in top and bottom halves at the given <code>y</code> …","<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …","Returns the textures as <code>sRGBA</code> premultiplied pixels, row by …","Time since last frame (in seconds), but gracefully handles …","Position of the pointer at the time the gesture started.","Change which row number the grid starts on. This can be …","","Point in time when the gesture started.","","Sets the minimal change of the value.","The scroll handle will stick to the bottom position even …","","The scroll handle will stick to the rightmost position …","Stop dragging any widget.","Stop editing of active <code>TextEdit</code> (if any).","","Draw a line through the text, crossing it out.","Prefer using <code>RichText</code> directly!","","","If <code>true</code>, add a subtle background color to every other row.","Whether or not Grids and Tables should be striped by …","Override button stroke. Note that this will override any …","","","","","Show text that stand out a bit (e.g. slightly brighter).","Extra strong text (stronger color).","Prefer using <code>RichText</code> directly!","","","egui theme (spacing, colors, etc).","Style options for this <code>Ui</code> and its children.","The <code>Style</code> used by all subsequent windows, panels etc.","","","Mutably borrow internal <code>Style</code>. Changes apply to this <code>Ui</code> …","Mutate the <code>Style</code> used by all subsequent windows, panels …","Edit the active <code>Style</code>.","","","","","","","Add a suffix to the number, this can be e.g. a unit (“°…","Add a suffix to the number, this can be e.g. a unit (“°…","","","Total margins on both sides","Surrender keyboard focus for a specific widget. See also …","Surrender keyboard focus for this widget.","Radius of the rounding of the South-West (left bottom) …","Emoji or name representing the key","Margins with the same size on opposing sides","If <code>true</code>, pressing tab will act on the widget, and NOT move …","Clears all characters in this buffer and returns a string …","Helper: move volatile (deltas and events), clone the rest.","Take everything ephemeral (everything except <code>cursor_icon</code> …","Tessellate the given shapes into triangle meshes.","Read-only access to <code>TessellationOptions</code>.","Controls the tessellator.","Read-write access to <code>TessellationOptions</code>.","Low-level texture manager.","","","","","A custom text to display on the progress bar.","The full, non-elided text of the input job.","Show a text next to the slider (e.g. explaining what the …","Lay out and paint some text.","","","","","","","","","","","","","","","","","","","","","The color and width of the text cursor","Screen-space position of text edit cursor (used for IME).","show where the text cursor would be if you clicked","","A <code>TextEdit</code> for multiple lines. Pressing enter key will …","No newlines (<code>\\\\n</code>) allowed. Pressing enter key will result …","Selected range of characters in <code>Self::current_text_value</code>.","","","Override the <code>TextStyle</code>.","Override the <code>TextStyle</code> if, and only if, this is a <code>RichText</code>.","","The height of text of this text style","All known text styles.","The <code>FontFamily</code> and size you want to use for a specific …","","The texture to use when drawing these triangles.","Texture options used when creating the texture.","","Size of the texture, if known.","Show stats about the allocated textures.","Texture changes since last frame (including the font …","Monotonically increasing time, in seconds. Relative to …","Time in seconds. Relative to whatever. Used for animation.","","How long has it been (in seconds) since the pointer was …","Multiply image color with this. Default is WHITE (no tint).","Multiply image color with this. Default is WHITE (no tint).","Multiply image color with this. Default is WHITE (no tint).","","Show title bar on top of the window? If <code>false</code>, the window …","Premultiplied RGBA","Premultiplied RGBA","Convert <code>Min =&gt; 0.0</code>, <code>Center =&gt; 0.5</code> or <code>Max =&gt; 1.0</code>.","Converts to floating point values in the range 0-1 without …","Returns an opaque version of self","Returns an opaque version of self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Treat this vector as a position. <code>v.to_pos2()</code> is equivalent …","unmultiply the alpha","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert <code>Min =&gt; -1.0</code>, <code>Center =&gt; 0.0</code> or <code>Max =&gt; 1.0</code>.","-1, 0, or +1 for each axis","","unmultiply the alpharemultiplied RGBA","Premultiplied RGBA","The vector from origin to this position. <code>p.to_vec2()</code> is …","Toggle the given popup between closed and open.","Acts like a checkbox, but looks like a <code>SelectableLabel</code>.","The id should be globally unique, e.g. …","<code>min.y</code>","","Place elements vertically, top to bottom.","Top-down layout justified so that buttons etc fill the …","<code>min.y</code>","inner margin plus outer margin.","","Display trailing color behind the slider’s circle. …","","","Translate location by this much, in-place","Move the shape by this many points, in-place.","Move all the graphics at the given layer.","Relative movement (comparing previous frame and current …","Returns true if this widget was triple-clicked this frame …","Returns true if this widget was triple-clicked this frame …","If <code>true</code>, the text will stop at the max width of the <code>Ui</code>, …ry loading the bytes from the given uri using any …","Try loading the image from the given uri using any …","Try loading the texture from the given uri using any …","","Extra scale and vertical tweak to apply to all text of …","The type of widget this is.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocate space, interact, paint, and return a <code>Response</code>.","","","","","","","","","","","","","","","","","","","","","Is the pointer (mouse/touch) above this <code>Ui</code>? Equivalent to …","Draw a line under the text.","Prefer using <code>RichText</code> directly!","","","The union of two bounding rectangle, i.e. the minimum <code>Rect</code> …","A logical “or” operation. For instance …","The logical “or” of two <code>Sense</code>s.","Time since last frame, in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the value on each key press when text-editing the …","","Get the <code>uri</code> that this image was constructed from.","","","How much space is used by panels and windows.","How much space is used by panels and windows.","Miscellaneous tools used by the rest of egui.","Select UV range. Default is (0,0) in top-left, (1,1) …","Select UV range. Default is (0,0) in top-left, (1,1) …","Select UV range. Default is (0,0) in top-left, (1,1) …","If you use a small font and <code>Align::TOP</code> you can get the …","The current value of sliders etc.","<code>vec2(x, y) == Vec2::new(x, y)</code>","Current velocity of pointer.","","Start a ui with vertical layout. Widgets will be …","Explicitly ask for a vertical line.","Make this a vertical slider.","Create a vertical scroll area.","Set the vertical align of the inner text.","e.g. for when aligning text within a button.","Start a ui with vertical layout. Widgets will be …","Start a ui with vertical layout. Widgets will be …","","Set the vertical scroll offset position.","The vertex data indexed by <code>indices</code>.","Viewport in points.","The viewport rectangle. This is what you would use in e.g. …","The visual bounding rectangle (includes stroke widths)","The current visuals settings of this <code>Ui</code>. Short for …","Colors etc.","Mutably borrow internal <code>visuals</code>. Changes apply to this <code>Ui</code> …","A vertical line.","Paints a vertical line.","Enable/disable vertical scrolling. <code>false</code> by default.","Turn on/off scrolling on the vertical axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, egui is currently listening on text input (e.g. …","True if egui is currently interested in the pointer (mouse …","","A good color for warning text (e.g. orange).","Helper function that adds a label when compiling with …","Check reusing of <code>Id</code>s, and show a visual warning on screen …","Was this popup visible last frame?","Show text that is weaker (fainter color).","Extra weak text (fainter color).","Prefer using <code>RichText</code> directly!","","","For accessibility.","","Widgets are pieces of GUI such as <code>Label</code>, <code>Button</code>, <code>Slider</code> …","Visual styles of widgets","Set the outer width of the button and menu.","","","","","","","The allowable width range for the panel.","","","Window background color.","","","","","","","Generate a new <code>Id</code> by hashing the parent <code>Id</code> and the given …","Call the provided function with the given ID pushed on the …","Create a painter for a sub-region of this <code>Painter</code>.","The alignment to use on the cross axis.","Justify widgets along the cross axis?","Redirect shapes to another paint layer.","Redirect where you are painting.","The new layout will take up all available space.","The alignment to use on the main axis.","Justify widgets on the main axis?","Wrap widgets when we overflow the main axis?","Returns a response with a modified <code>Self::rect</code>.","Setting this will allow for dynamic coloring of rows of …","","","","","","Controls whether text wrap is used for the selected text","If <code>true</code>, the text will wrap to stay within the max width …","If <code>true</code>, the text will wrap to stay within the max width …","","","If set, labels buttons wtc will use this to determine …","","Should text wrap in this <code>Ui</code>?","Returns an alignment by the X (horizontal) axis","How far to the right.","Rightwards. Width.","","Returns an alignment by the Y (vertical) axis","How far down.","Downwards. Height.","Shift font’s glyphs downwards by this amount of logical …","Shift font’s glyphs downwards by this fraction of the …","","Zoom scale factor this frame (e.g. from ctrl-scroll or …","Proportional zoom factor (pinch gesture).","2D non-proportional zoom scale factor this frame (e.g. …","2D non-proportional zoom factor (pinch gesture).","","What mouse button? For touches, use <code>PointerButton::Primary</code>.","The amount scrolled horizontally and vertically. The …","Hashed device identifier (if available; may be zero). Can …","Describes how hard the touch device was pressed. May …","Unique identifier of a finger/pen. Value is stable from …","","The state of the modifier keys at the time of the event.","The state of the modifier keys at the time of the event.","The state of the modifier keys at the time of the event.","One of: start move end cancel.","Where is the pointer?","Position of the touch (or where the touch was last …","Was it pressed or released?","Was it the button/touch pressed this frame, or released?","If this is a <code>pressed</code> event, is it a key-repeat?","The unit of scrolling: points, lines, or pages.","","","The unique identifier for this image, e.g. …","","","A <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>HashSet</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Type alias for HashMap&lt;K, V, ahash::RandomState&gt;","A convenience trait that can be used together with the …","Type alias for HashSet&lt;K, ahash::RandomState&gt;","A convenience trait that can be used together with the …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","","","","","","","","","","","","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>AHashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","Constructs a new AHasher with keys based on this …","","","","","","","","","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","Creates an empty <code>AHashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","","Examples","","Returns the argument unchanged.","Returns the argument unchanged.","This crates a hashmap from the provided iterator using …","This crates a hashset from the provided iterator using …","","","","","","","","","","","","","","","","","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Calculates the hash of a single value. This provides a …","Returns a reference to the value corresponding to the …","","","","","Inserts a key-value pair into the map.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Creates a consuming iterator visiting all the keys in …","","","","","Creates a consuming iterator visiting all the values in …","","","","","","","","","Constructs a new HashMap","Constructs a new HashSet","This crates a hashmap using RandomState::new which obtains …","This crates a hashset using RandomState::new. See the …","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","","","","","","","","","","","","","","","","","Removes a key from the map, returning the value at the key …","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new HashMap with a given initial capacity","Constructs a new HashSet with a given initial capacity","This crates a hashmap with the specified capacity using …","This crates a hashset with the specified capacity using …","","","","","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …","","","","","","","","A supplier of Randomness used for different hashers. See …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","","Provides an optional way to manually supply a source of …","","Indicate whether or not a popup will be shown above or …","An area on the screen that can be moved by dragging.","","A panel that covers the remainder of the screen, i.e. …","A header which can be collapsed/expanded, revealing a …","The response from showing a <code>CollapsingHeader</code>.","A drop-down selection menu with a descriptive label.","Add a background, frame and/or margin to a rectangular …","A function that paints the <code>ComboBox</code> icon","A region that can be resized by dragging the bottom right …","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","A panel that covers the entire left or right side of a <code>Ui</code> …","A panel that covers the entire top or bottom of a <code>Ui</code> or …","Builder for a floating window which can be dragged, …","","","","None iff collapsed.","None iff collapsed.","","","","","","","","","","","","","","","","","","","","Response of the actual clickable header.","","","","","","","","","","","","Margin within the painted frame.","","","","","","","","","","","","","0.0 if fully closed, 1.0 if fully open, and something …","","Margin outside the painted frame.","Panels are <code>Ui</code> regions taking up e.g. the left side of a <code>Ui</code> …","","Show popup windows, tooltips, context menus etc.","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","","","","","","","Coordinate system names:","","","","","","","","","","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","","","","","","","Was this popup visible last frame?","","","","","","A header which can be collapsed/expanded, revealing a …","The response from showing a <code>CollapsingHeader</code>.","This is a a building block for building collapsing regions.","From <code>CollapsingState::show_header</code>.","A function that paints an icon indicating if the region is …","","","","","","","Returns the response of the collapsing button, the custom …","None iff collapsed.","None iff collapsed.","Returns the response of the collapsing button, the custom …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Response of the actual clickable header.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","0 for closed, 1 for open, with tweening","0.0 if fully closed, 1.0 if fully open, and something …","Paint the arrow icon that indicated if the region is open …","","","","","","","","","Show body if we are open, with a nice animation between …","Show body if we are open, with a nice animation between …","Shows header and body (if expanded).","Paint this CollapsingState’s toggle button. Takes an …","","","","","","","","","","","","","","","","","","","","","","","","","","A panel that covers the remainder of the screen, i.e. …","","State regarding panels.","","<code>Left</code> or <code>Right</code>","A panel that covers the entire left or right side of a <code>Ui</code> …","","A panel that covers the entire top or bottom of a <code>Ui</code> or …","<code>Top</code> or <code>Bottom</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the panel (from previous frame).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","Was this popup visible last frame?","","","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","","Indicate whether the horizontal and vertical scroll bars …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the content. If this is larger than …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","<code>Id</code> of the <code>ScrollArea</code>.","","","","","What the user closure returned.","Where on the screen the content is (excludes scroll bars).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Positive offset means scrolling down/right","","","","","","","","","","","","","","","","The current state of the scroll area.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the current kinetic scrolling velocity.","","","","Backend-specific painting.","","Circle with optional outline and fill.","How to paint a circle.","A <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.","A <code>Shape</code> within a clip rectangle.","RGBA image.","This format is used for space-efficient color …","A 2D RGBA color image in RAM.","A cubic Bézier Curve.","A cubic Bézier Curve.","Used for the font texture.","Font of unknown size.","How to select a sized font.","A single-channel image designed for the font texture.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","Hue, saturation, value, alpha. All in the range [0, 1]. No …","Like Hsva but with the <code>v</code> value (brightness) being gamma …","An image stored in RAM.","A change to an image.","A line between two points.","Textures allocated using <code>TextureManager</code>.","Textured triangles in two dimensions.","A general triangle mesh.","","A version of <code>Mesh</code> that uses 16-bit indices.","A font where each character is the same width (<code>w</code> is the …","","One of the names in <code>FontDefinitions::families</code>.","Paint nothing. This can be useful as a placeholder.","If you want to paint some 3D shapes inside an egui region, …","Information passed along with <code>PaintCallback</code> (…","Collected allocation statistics for shapes and meshes.","A series of lines between points. The path can have a …","A path which can be stroked and/or filled (if closed).","A position on screen.","A rendering primitive - either a <code>Mesh</code> or a <code>PaintCallback</code>.","A font where some characters are wider than other (e.g. ‘…","A quadratic Bézier Curve.","A quadratic Bézier Curve.","A rectangular region of space.","Rectangle with optional outline and fill.","How to paint a rectangle.","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","How rounded the corners of things should be","The color and fuzziness of a fuzzy shape. Can be used for …","A paint primitive such as a circle or a piece of text. …","Describes the width and color of a line.","Tessellation quality options","Converts <code>Shape</code>s into triangles (<code>Mesh</code>).","Text.","How to paint some text on screen.","Contains font data in an atlas, where each character …","Used to paint images.","What texture to use in a <code>Mesh</code> mesh.","Low-level manager for allocating textures.","Your own texture, defined in any which way you want. The …","Recursively nest more shapes - sometimes a convenience to …","A vector has a direction and length. A <code>Vec2</code> is often used …","The 2D vertex type.","The UV coordinate of a white region of the texture mesh. …","alpha 0-1. A negative value signifies an additive color …","alpha 0-1. A negative value signifies an additive color …","Allocate a new texture.","Returns the coordinates of where the rect ended up, and …","Get meta-data about all allocated textures in some …","Rotate text by this many radians clockwise. The pivot is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call at the start of each frame with the latest known …","The maximum distance between the original curve and the …","Used for egui windows in dark mode.","Used for egui windows in light mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Paint something custom (e.g. 3D stuff).","","Clip rectangle in points.","","Clip / scissor rectangle. Only show the part of the <code>Shape</code> …","Clip / scissor rectangle. Only show the part of the <code>Mesh</code> …","Number of separate clip rectangles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, connect the first and last of the points together.","A line that closes back to the start point again.","If <code>true</code> (default) cull certain primitives before …","sRGBA with premultiplied alpha","Color of the opaque center of the shadow.","","A convex polygon with a fill and optional stroke.","","If true, no clipping will be done.","Output the clip rectangles to be painted.","Output the text-containing rectangles.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set to true the text was truncated due to …","An assert that is only active when <code>epaint</code> is compiled with …","The default value will be 1.0e-5, it will be used during …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The shadow extends this much outside the rect. The size of …","List of all known font families.","What font family to use.","","Use “feathering” to smooth out the edges of shapes as …","The size of the the feathering, in physical pixels.","","","","Fill is only supported for convex polygons.","How to fill the rectangle.","When this get high, it might be time to clear and start …","If the rect should be filled with a texture, which one?","","","Find out the t value for the point where the curve is …","find a set of points that approximate the cubic Bézier …","find a set of points that approximate the quadratic …","find a set of points that approximate the cubic Bézier …","","","","","","","","","","","","How full is the font atlas?","Call at the end of each frame (before painting) to get the …","Current size of the font image. Pass this to …","","Iterates through the curve invoking a callback at each …","Compute a flattened approximation of the curve, invoking a …","Free an existing texture.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a cubic Bézier curve based on 4 points and stroke.","Create a new quadratic Bézier shape based on the 3 points …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the whole texture.","The laid out text, from <code>Fonts::layout_job</code>.","Width of this character in points.","hue 0-1","hue 0-1","Can we display this glyph?","Can we display all the glyphs in this text?","","","What to set the texture to.","","Draw as triangles (i.e. the length is always multiple of …","Draw as triangles (i.e. the length is always multiple of …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Are all indices within the bounds of the contained …","","Is this affecting the whole texture? If <code>false</code>, this is a …","The job that this galley is the result of. Contains the …","Will wrap text at the given width and line break at <code>\\\\n</code>.","Like <code>Self::layout</code>, made for when you want to pick a color …","Layout some text.","Will line break at <code>\\\\n</code>.","A line through many points.","Logical bounding rectangle (ignoring stroke width)","Logical bounding rectangle (ignoring stroke width)","The other corner, opposing <code>Self::min</code>. Usually the right …","","Tight bounding box around all the meshes in all the rows. …","Get meta-data about a specific texture.","","One of the corners of the rectangle, usually the left top …","Helper module that adds extra checks when the …","Radius of the rounding of the North-East (right top) …","Create a new <code>Tessellator</code>.","Create a new <code>Fonts</code> for text layout. This call is …","","","","","Total number of allocated textures.","","","Total number of indices in all the row meshes.","","Total number of vertices in all the row meshes.","Radius of the rounding of the North-West (left top) corner.","","","","If set, the text color in the galley will be ignored and …","Update a sub-region of an existing texture.","The pixels, row by row, from top to bottom.","The coverage value.","","Pixels per point.","","The number of physical pixels for each logical point. …","The first point is the starting point and the last one is …","The first point is the starting point and the last one is …","Filled paths should prefer clockwise order.","If <code>None</code>, set the whole texture to <code>Self::image</code>.","Logical pixel coordinates (points). (0,0) is the top left …","Top left corner of the first character.","<code>pos2(x, y) == Pos2::new(x, y)</code>","Returns the locations and sizes of pre-rasterized discs …","","If <code>true</code>, small filled circled will be optimized by using …","What to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where to paint.","Bounding rect.","Increase the retain-count of the given texture.","If <code>true</code> (default) align text to mesh grid. This makes the …","","How rounded the corners are. Use <code>Rounding::ZERO</code> for no …","Height of one row of text in points","","Rows of text, from top to bottom.","saturation 0-1","saturation 0-1","Calculate the point (x,y) at t based on the cubic Bézier …","Calculate the point (x,y) at t based on the quadratic …","","","Full size of the screen, in pixels.","Radius of the rounding of the South-East (right bottom) …","","","","","","","","","","","Assign a new image to an existing texture, or update a …","Set the <code>Rect</code> to use for culling.","The shape","","","","","","","","width, height.","width, height","Height in points.","Tooltips, menus, …, for dark mode.","Tooltips, menus, …, for light mode.","split the original cubic curve into a new one within a …","Collect statistics about what is being painted.","","","","","","Color and thickness of the line.","The thickness and color of the outline.","Radius of the rounding of the South-West (left bottom) …","Call to get the change to the image since last call.","Take and reset changes since last frame.","","Tessellate a single <code>CircleShape</code> into a <code>Mesh</code>.","Tessellate a clipped shape into a list of primitives.","Tessellate a single <code>CubicBezierShape</code> into a <code>Mesh</code>.","Tessellate a line segment between the two points with the …","Tessellate a single <code>Mesh</code> into a <code>Mesh</code>.","Tessellate a single <code>PathShape</code> into a <code>Mesh</code>.","Tessellate a single <code>QuadraticBezierShape</code> into a <code>Mesh</code>.","Tessellate a single <code>Rect</code> into a <code>Mesh</code>.","Tessellate a single <code>Shape</code> into a <code>Mesh</code>.","Turns <code>Shape</code>:s into sets of triangles.","Tessellate a single <code>TextShape</code> into a <code>Mesh</code>.","Converts graphics primitives into textured triangles.","","Everything related to text, fonts, text layout, cursors …","","","The font atlas. Pass this to <code>crate::Tessellator</code>.","The texture to use when drawing these triangles.","The texture to use when drawing these triangles.","","","","","","","","","","","","","","","","Convert the quadratic Bézier curve to one <code>PathShape</code>. The …","Convert the cubic Bézier curve to one or two <code>PathShape</code>’…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform the curve with the given transform.","Transform the curve with the given transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add this underline to the whole text. You can also set an …","","","","","","","","","","","","","","","","","","","","Normalized texture coordinates. (0, 0) is the top left …","What UV coordinates to use for the texture?","value 0-1, in gamma-space (~perceptually even)","value 0-1","<code>vec2(x, y) == Vec2::new(x, y)</code>","The vertex data indexed by <code>indices</code>.","The vertex data indexed by <code>indices</code>.","","Viewport in points.","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle","","","","","","","","","","","","","","","","","","","","","How far to the right.","Rightwards. Width.","How far down.","Downwards. Height.","","","This format is used for space-efficient color …","Hue, saturation, value, alpha. All in the range [0, 1]. No …","Like Hsva but with the <code>v</code> value (brightness) being gamma …","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","alpha 0-1. A negative value signifies an additive color …","alpha 0-1. A negative value signifies an additive color …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An assert that is only active when <code>epaint</code> is compiled with …","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","From linear RGBA with premultiplied alpha","From linear RGBA without premultiplied alpha","","","","From <code>sRGBA</code> with premultiplied alpha","From <code>sRGBA</code> without premultiplied alpha","","","","","","","linear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …","linear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …","hue 0-1","hue 0-1","All ranges in 0-1, rgb is linear.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","gamma [0, 255] -&gt; linear [0, 1].","linear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.","gamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …","linear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …","","","","","","","","All ranges in 0-1, rgb is linear.","saturation 0-1","saturation 0-1","Cheap and ugly. Made for graying out disabled <code>Ui</code>s.","","","","","","Represents additive colors using a negative alpha.","","","","","","","","","","","","","","","","","","value 0-1, in gamma-space (~perceptually even)","value 0-1","","","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Horizontal or vertical center.","This struct tracks recent values of some time series.","The identity rotation: nothing rotates","Is this an integer type?","Largest finite value","Smallest finite value","Right or bottom.","Left or top.","Extends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …","Implemented for all builtin numeric types","Helper trait to implement <code>lerp</code> and <code>remap</code>.","A position on screen.","Includive range of floats, i.e. <code>min..=max</code>, but more …","Helper trait to implement <code>lerp</code> and <code>remap</code>.","A rectangular region of space.","Linearly transforms positions from one <code>Rect</code> to another.","Represents a rotation in the 2D plane. A rotation of …","A vector has a direction and length. A <code>Vec2</code> is often used …","Values must be added with a monotonically increasing time, …","One- and two-dimensional alignment (<code>Align::Center</code>, …","Return true when arguments are the same within some …","","","","","","","","","","","","","","More readable version of <code>self.max(lower_limit)</code>","More readable version of <code>self.min(upper_limit)</code>","","Average times rate. If you are keeping track of individual …","","","","","","","","","","","","","","","","","","Identity rotation","","","","","","","","","","","","","","","","Amount of time contained from start to end in this <code>History</code>.","","An assert that is only active when <code>emath</code> is compiled with …","","","","","","","","","","","Calculate a lerp-factor for exponential smoothing using a …","Remove samples that are too old.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Angle is clockwise in radians. A 𝞃/4 = 90° rotation …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Where in the range is this value? Returns 0-1 if within …","","","","","","","","<code>(time, value)</code> pairs Time difference between values can be …","","","Current number of values kept in history","The factor by which vectors will be scaled.","","Linear interpolation.","","The other corner, opposing <code>Self::min</code>. Usually the right …","","","","","Mean time difference between values in this <code>History</code>.","","One of the corners of the rectangle, usually the left top …","","","","","","","Example:","","Wrap angle to <code>[-PI, PI]</code> range.","","<code>pos2(x, y) == Pos2::new(x, y)</code>","","","","","","","","","","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","Round a value to the given number of decimal places.","","The scale factors.","","","Find “simple” numbers is some range. Used by sliders.","","","","","","","","","","","","","","","","","Total number of values seen. Includes those that have been …","","Transforms the given coordinate in the <code>from</code> space to the <code>to</code>…","Transforms the given coordinate in the <code>from</code> space to the <code>to</code>…","Transforms the given rectangle in the <code>in</code>-space to a …","","","","","","","","","","","","","","","<code>vec2(x, y) == Vec2::new(x, y)</code>","Calculate a smooth velocity (per second) over the entire …","","","","How far to the right.","Rightwards. Width.","How far down.","Downwards. Height.","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Horizontal or vertical center.","Right or bottom.","Left or top.","Allocates a rectangle of the specified <code>size</code> inside the …","Find the “simplest” number in a closed range [min, max]…","RGBA image.","A 2D RGBA color image in RAM.","Used for the font texture.","A single-channel image designed for the font texture.","An image stored in RAM.","A change to an image.","What to set the texture to.","","The pixels, row by row, from top to bottom.","The coverage value.","If <code>None</code>, set the whole texture to <code>Self::image</code>.","width, height.","width, height","Provides interior mutability.","An RAII implementation of a “scoped lock” of a mutex. …","Provides interior mutability.","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Aggregate information about a bunch of allocations.","Collected allocation statistics for shapes and meshes.","","","","","","","","","Number of separate clip rectangles","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A connected line (without thickness or gaps) which can be …","","Tessellation quality options","Converts <code>Shape</code>s into triangles (<code>Mesh</code>).","","","","","","","","","","","","","","The maximum distance between the original curve and the …","","","","","","","","","","","","","If <code>true</code> (default) cull certain primitives before …","If true, no clipping will be done.","Output the clip rectangles to be painted.","Output the text-containing rectangles.","","","","","","","","","","","The default value will be 1.0e-5, it will be used during …","","","","","","","","Use “feathering” to smooth out the edges of shapes as …","The size of the the feathering, in physical pixels.","The path is taken to be closed (i.e. returning to the …","Like <code>Self::fill</code> but with texturing.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Helpers for constructing paths","","","If <code>true</code>, small filled circled will be optimized by using …","","","","","","","","If <code>true</code> (default) align text to mesh grid. This makes the …","","","","A closed path (returning to the first point).","Open-ended.","Turns <code>Shape</code>:s into sets of triangles.","","","","","","","","","","","","","","","","","","","Add one quadrant of a circle","overwrites existing points","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","How to select a sized font.","Extra scale and vertical tweak to apply to all text of a …","The collection of fonts used by <code>epaint</code>.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","","Describes the task of laying out text.","","A font where each character is the same width (<code>w</code> is the …","One of the names in <code>FontDefinitions::families</code>.","Suggested character to use to replace those in password …","A font where some characters are wider than other (e.g. ‘…","","The tessellated output of a row.","One <code>\\\\t</code> character is this many spaces wide.","Formatting option for a section of text.","Controls the text wrapping and elision of a <code>LayoutJob</code>.","Helper for adding a new section when building a <code>LayoutJob</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ascent</code> value from the font","","","When using this font’s metrics to layout a row, shift …","","","","","","","","","","","","","","","If <code>true</code>: Allow breaking between any characters. If <code>false</code> …","If <code>true</code>, all <code>\\\\n</code> characters will result in a new <em>paragraph</em>, …","Range into the galley text","Closest char at the desired x coordinate. Returns …","Excludes the implicit <code>\\\\n</code> after the <code>Row</code>, if any.","Includes the implicit <code>\\\\n</code> after the <code>Row</code>, if any.","The character this glyph represents.","","","","","","","","","","","","","","","","","","","Text color","Different types of text cursors, i.e. ways to point into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set to true the text was truncated due to …","If true, this <code>Row</code> came from a paragraph ending with a <code>\\\\n</code>. …","","","","","","","","","","","","","","","","","","","","","","","Extra spacing between letters, in points.","Which fonts (names) to use for each <code>FontFamily</code>.","What font family to use.","The first row must be at least this high. This is in case …","","","","","","","Get the right font implementation from size and <code>FontFamily</code>.","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","The height of the tallest font used in the job.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","The range of vertices in the mesh the contain glyphs. …","One for each <code>char</code>.","How to horizontally align the text (<code>Align::LEFT</code>, …","Can we display this glyph?","Can we display all the glyphs in this text?","","","","","Which font face in the file to use. When in doubt, use <code>0</code>.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The job that this galley is the result of. Contains the …","Justify text so that word-wrapped rows fill the whole …","Layout text into a <code>Galley</code>.","Can be used for first row indentation.","Explicit line height of the text in points.","Same y range for all characters with the same <code>TextFormat</code>.","Maximum amount of rows the text galley should have.","","Wrap text so that no row is wider than this.","","","The tessellated text, using non-normalized (texel) UV …","Tight bounding box around all the meshes in all the rows. …","Bounds of the mesh, and can be used for culling. Does NOT …","","Create a new <code>FontsImpl</code> for text layout. This call is …","A row can be as long as it need to be.","Total number of indices in all the row meshes.","Total number of vertices in all the row meshes.","Character to use to represent elided text.","","","The number of physical pixels for each logical point. …","Baseline position, relative to the galley. Logical …","","","","","","","","","","","","","","","","","","","","","Bounding rect.","Logical bounding rectangle based on font heights etc. Use …","Rows of text, from top to bottom.","Scale the font’s glyphs by this much. this is only a …","Index into <code>LayoutJob::sections</code>. Decides color etc.","This is included in case there are no glyphs","The different section, which can have different fonts, …","","","","","","","Break on <code>\\\\n</code> and at the given wrap width.","Does not break on <code>\\\\n</code>, but shows the replacement character …","","Height in points.","Advance width and line height.","","","The text on this row, excluding the implicit <code>\\\\n</code> if any.","The complete text of this job, referenced by <code>LayoutSection</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Elide text that doesn’t fit within the given width, …","","","","","","","","","","","","","","","Extra scale and vertical tweak to apply to all text of …","","","","","","","","","","","","","","","","Position and size of the glyph in the font texture, in …","If you use a small font and <code>Align::TOP</code> you can get the …","The mesh, ready to be rendered.","","","","","","","","Controls the text wrapping and elision.","","Shift font’s glyphs downwards by this amount of logical …","Shift font’s glyphs downwards by this fraction of the …","Character cursor","All different types of cursors together. They all point to …","Paragraph Cursor","Row Cursor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Character based (NOT bytes). It is fine if this points to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Character offset (NOT byte offset!).","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Character based (NOT bytes). It is fine if this points to …","0 is first paragraph, and so on. Note that a single …","","If this cursors sits right at the border of a wrapped row …","If this cursors sits right at the border of a wrapped row …","","","","","","","","","","","","","","","0 is first row, and so on. Note that a single paragraph …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Linearly interpolate the nearest neighbors, creating a …","Show the nearest pixel value.","How the texture texels are filtered.","Low-level manager for allocating textures.","Meta-data about an allocated texture.","How the texture texels are filtered.","What has been allocated and freed during the last period.","","","","","","","","4 or 1","Size in bytes. width x height x <code>Self::bytes_per_pixel</code>.","","","","","","","","","","","","","","","","","Textures to free after painting.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","How to filter when magnifying (when texels are larger than …","","How to filter when minifying (when texels are smaller than …","A human-readable name useful for debugging.","","The texture filtering mode to use when rendering.","","","","Free when this reaches zero.","New or changed textures. Apply before painting.","width x height","","","","","","","","","","Extension trait to provide <code>ord()</code> method.","Wraps a floating-point value to add total order and hash. …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Hash the given value with a predictable hasher.","","Hash the given value with the given hasher.","","Calls <code>U::from(self)</code>.","","","","","","","Type to provide total order, useful as key in sorted …","","","","","","","","","","","","","","","The suggested keyboard shortcuts for global gui zooming.","Make everything larger.","Show buttons for zooming the ui.","Make everything smaller.","Let the user scale the GUI (change …","","","","","","Painted behind all floating windows","Debug layer, always painted last / on top","Popups, menus etc that should always be painted on top of …","An identifier for a paint layer. Also acts as an …","Normal moveable windows that you reorder by click","Different layer categories","A list of <code>Shape</code>s paired with a clip rectangle.","Special layer between panels and windows","A unique identifier of a specific <code>Shape</code> in a <code>PaintList</code>.","Things floating on top of everything else, like tooltips. …","Returns the index of the new <code>Shape</code> that can be used with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Modify an existing <code>Shape</code>.","","","","","","","","","Translate each <code>Shape</code> and clip rectangle by this much, …","","","","","","","","","","","Represents a byte buffer.","","Represents a loader capable of loading raw unstructured …","Represents bytes which are currently being loaded.","Maps URI:s to <code>Bytes</code>, e.g. found with <code>include_bytes!</code>.","","Scale to height.","","An <code>ImageLoader</code> decodes raw bytes into a <code>ColorImage</code>.","Represents an image which is currently being loaded.","Represents a failed attempt at loading an image.","The loaders of bytes, images, and textures.","Runtime error: Loading was attempted, but failed (e.g. “…","Programmer error: There are no image loaders installed.","Programmer error: Failed to find the bytes for this image …","Programmer error: Failed to parse the bytes as an image …","Programmer error: no matching <code>TextureLoader</code>. Because of …","A specific loader does not support this scheme, protocol …","Bytes are being loaded.","Image is loading.","Texture is loading.","Bytes are loaded.","Image is loaded.","Texture is loaded.","","Scale original size by some factor.","","Scale to size.","Given as a hint for image loading requests.","A texture with a known size.","","","A <code>TextureLoader</code> uploads a <code>ColorImage</code> to the GPU, returning …","Represents a texture is currently being loaded.","Scale to width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the loader caches any data, this should return the size …","If the loader caches any data, this should return the size …","If the loader caches any data, this should return the size …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementations may use this to perform work at the end of …","Implementations may use this to perform work at the end of …","Implementations may use this to perform work at the end of …","","","","","","","","","","","","Forget the given <code>uri</code>.","Forget the given <code>uri</code>.","Forget the given <code>uri</code>.","","","Forget all URIs ever given to this loader.","Forget all URIs ever given to this loader.","Forget all URIs ever given to this loader.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Fetch the id and size from a <code>TextureHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Used to get a unique ID when implementing one of the …","Unique ID of this loader.","Unique ID of this loader.","Unique ID of this loader.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try loading the bytes from the given uri.","Try loading the image from the given uri.","Try loading the texture from the given uri.","","","Create a <code>SizedTexture</code> from a texture <code>id</code> with a specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","File contents, e.g. the contents of a <code>.png</code>.","Mime type of the content, e.g. <code>image/png</code>.","Set if known (e.g. from a HTTP header, or by parsing the …","Set if known (e.g. from a HTTP header, or by parsing the …","","Set if known (e.g. from a HTTP header, or by parsing the …","Set if known (e.g. from a HTTP header, or by parsing the …","","","","","","","","","","The menu bar goes well in a <code>TopBottomPanel::top</code>, but can …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Construct a top level menu in a menu bar. This would be …","Construct a top level menu with an image in a menu bar. …","","","","","","","","","","","","","","","","","","","","","","Android OS.","Apple iPhone OS.","MacOS.","Linux or Unix other than Android.","An <code>enum</code> of common operating systems.","Unknown OS - could be wasm","Windows.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Uses the compile-time <code>target_arch</code> to identify the OS.","Helper: try to guess from the user-agent of a browser.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Indicated an alias, e.g. a shortcut","Something can be scrolled in any direction (panned).","Hover a cell in a table","A widget was clicked.","A context menu is available","Indicate that a copy will be made","Request an elevated amount of animations and flair for the …","For precision work","A mouse cursor icon.","Normal cursor icon, whatever that is.","A widget was double-clicked.","A widget gained keyboard focus (by tab key).","What egui emits each frame from <code>crate::Context::run</code>.","The thing you are hovering can be grabbed","You are grabbing the thing you are hovering","Question mark","Request a standard amount of attention-grabbing actions.","Omnidirectional move icon (e.g. arrows in all cardinal …","Can’t drop here","Show no cursor","Forbidden","What URL to open, and how.","Things that happened during this frame that the …","The non-rendering part of what egui emits each frame.","Pointing hand, used for e.g. web links","Shows that processing is being done, but that the program …","Reset the attention request and interrupt related …","Resize a column","Resize something rightwards (e.g. when dragging the …","Horizontal resize <code>-</code> to make something wider or more narrow …","Diagonal resize <code>/</code> (right-up to/from left-down)","Resize something up (e.g. when dragging the top edge of …","Resize something up and right (e.g. when dragging the …","Resize something up and left (e.g. when dragging the …","Diagonal resize <code>\\\\</code> (left-up to/from right-down)","Resize a row","Resize something downwards (e.g. when dragging the bottom …","Resize something down and right (e.g. when dragging the …","Resize something down and left (e.g. when dragging the …","Vertical resize <code>|</code> (up-down or down-up)","Resize something leftwards (e.g. when dragging the left …","Text caret, e.g. “Click here to edit text”","Text selection was updated.","A widget was triple-clicked.","Types of attention to request from a user when a native …","A widget’s value changed.","Vertical text caret, e.g. “Click here to edit vertical …","Not yet ready, try later.","Describes a widget such as a <code>crate::Button</code> or a …","Enhance!","Let’s get a better overview","","","","","","","","","","If set, put this text in the system clipboard. Ignore if …","The contents of some editable text (for <code>TextEdit</code> fields).","Set the cursor to this icon.","","","","","","Whether the widget is enabled.","","","","Events that may be useful to e.g. a screen reader.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","The text on labels, buttons, checkboxes etc.","Is there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…","If <code>true</code>, open the url in a new tab. If <code>false</code> open it in …","If set, open this url.","Non-rendering related output.","The previous text value.","","","If <code>Duration::is_zero()</code>, egui is requesting immediate …","The current value of checkboxes and radio buttons.","","What to paint.","Screen-space position of text edit cursor (used for IME).","Selected range of characters in <code>Self::current_text_value</code>.","Texture changes since last frame (including the font …","","","","","","","The type of widget this is.","","","","The current value of sliders etc.","","","The word <code>git</code>.","The Github logo.","The Android logo.","The Apple logo.","Tux, the Linux penguin.","The Windows logo.","The Twitter bird.","Normal labels. Easily readable, doesn’t take up too much …","Buttons. Maybe slightly bigger than <code>Self::Body</code>.","Options for help debug egui by adding extra visualization","Default text style - will use <code>TextStyle::Body</code>, unless …","Directly select size and font family","A way to select <code>FontId</code>, either by picking one directly or …","Heading. Probably larger than <code>Self::Body</code>.","How and when interaction happens.","","Same size as <code>Self::Body</code>, but used when monospace is …","A user-chosen style, found in <code>Style::text_styles</code>.","Selected text, selected elements etc","Used when small text is needed.","Controls the sizes and distances between widgets.","Specifies the look and feel of egui.","Use a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…","Alias for a <code>FontId</code> (font of a certain size).","Controls the visual style (colors etc) of egui.","bg = background, fg = foreground.","The visuals of widgets for different states of interaction.","The style of an interactive widget as you are clicking or …","How many seconds a typical animation should last.","","","","","","","","","","","","","","","","","","","","","","","","","","","Background color of widgets that must have a background …","For surrounding rectangle of things that need it, like …","","","","","","","","","","","","","","Show a background behind buttons.","Button size is text size plus this on each side","Allow child widgets to be just on the border and still …","","","","","","","","","","","","","","","","","","","Background color behind code-styled monospaced labels.","Show a background behind collapsing headers.","Height of a combo-box before showing scroll bars.","Default (minimum) width of a <code>ComboBox</code>.","","If true, the visuals are overall dark with light text. If …","Options to help debug why egui behaves strangely.","Always show callstack to ui on hover.","Show callstack for the current widget on hover if all …","","","","","","The default text styles of the default egui theme.","","","","","","","","","","","","","","","","","","","","","","","","","The style to use for <code>DragValue</code> text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A good color for error text (e.g. red).","Make the frame this much larger.","Show tooltips explaining <code>DragValue</code>:s etc when hovered.","Very dark or light color (for corresponding theme). Used …","Something just barely different from the background color. …","Stroke and text color of the interactive part of a …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","If we show the hover ui, include where the next widget is …","The style of an interactive widget while you hover it, or …","The color used for <code>Hyperlink</code>,","Returns small icon rectangle and big icon rectangle","Checkboxes, radio button and collapsing headers have an …","Checkboxes, radio button and collapsing headers have an …","Checkboxes, radio button and collapsing headers have an …","Show a spinner when loading an image.","The style of an interactive widget, such as a button, at …","Indent collapsing regions etc by this much.","End indented regions with a horizontal line","Draw a vertical lien left of indented region, in e.g. …","","","","","","","Should the cursor change when the user hovers over an …","Minimum size of a <code>DragValue</code>, color picker button, and …","How and when interaction happens.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal and vertical spacing between widgets.","","","Horizontal and vertical margins within a menu frame.","","The style of a widget that you cannot interact with.","The style of a button that has an open menu beneath it …","If set this will change the font family and size for all …","Override default text color for all text.","If set this will change the default <code>TextStyle</code> for all …","Panel background color","","","","","","","","","","","","","","","","","","","","","Mouse must be this close to the corner of a window to …","Mouse must be this close to the side of a window to resize","","Button frames etc.","Margin between contents and scroll bar.","Margin between scroll bar and the outer container (e.g. …","","Make sure the scroll handle is at least this big","","","","","","","","Show what widget blocks the interaction of another widget.","Show which widgets make their parent higher","Show which widgets make their parent wider","Show an overlay on all interactive widgets.","","If <code>false</code>, tooltips will show up anytime you hover …","Show trailing color behind the circle of a <code>Slider</code>. Default …","Default width of a <code>Slider</code>.","Sizes and distances between widgets","Whether or not Grids and Tables should be striped by …","","","","The color and width of the text cursor","show where the text cursor would be if you clicked","Default width of a <code>TextEdit</code>.","The <code>FontFamily</code> and size you want to use for a specific …","","","","","","","","","","","","","","","","","","","","","","","","","Delay in seconds before showing tooltips after the mouse …","Width of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Colors etc.","","","","","","","A good color for warning text (e.g. orange).","Background color of widgets that can <em>optionally</em> have a …","Visual styles of widgets","","Horizontal and vertical margins within a window frame.","","","","If set, labels buttons wtc will use this to determine …","Character cursor","A selected text range (could be a range of length zero).","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","Describes the task of laying out text.","","A font where each character is the same width (<code>w</code> is the …","One of the names in <code>FontDefinitions::families</code>.","A font where some characters are wider than other (e.g. ‘…","One <code>\\\\t</code> character is this many spaces wide.","Formatting option for a section of text.","Controls the text wrapping and elision of a <code>LayoutJob</code>.","","","","","","","","If <code>true</code>: Allow breaking between any characters. If <code>false</code> …","If <code>true</code>, all <code>\\\\n</code> characters will result in a new <em>paragraph</em>, …","Range into the galley text","","","","Text color","","","","","","","Set to true the text was truncated due to …","","","","Extra spacing between letters, in points.","Which fonts (names) to use for each <code>FontFamily</code>.","The first row must be at least this high. This is in case …","","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","","","Returns the argument unchanged.","","","","","How to horizontally align the text (<code>Align::LEFT</code>, …","Character offset (NOT byte offset!).","Which font face in the file to use. When in doubt, use <code>0</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","The job that this galley is the result of. Contains the …","Justify text so that word-wrapped rows fill the whole …","Can be used for first row indentation.","Explicit line height of the text in points.","Maximum amount of rows the text galley should have.","Wrap text so that no row is wider than this.","Tight bounding box around all the meshes in all the rows. …","Total number of indices in all the row meshes.","Total number of vertices in all the row meshes.","The empty range.","Character to use to represent elided text.","The number of physical pixels for each logical point. …","If this cursors sits right at the border of a wrapped row …","When selecting with a mouse, this is where the mouse was …","","","","Bounding rect.","Rows of text, from top to bottom.","When selecting with a mouse, this is where the mouse was …","The different section, which can have different fonts, …","","returns the two ends ordered","","The complete text of this job, referenced by <code>LayoutSection</code>.","","","","","","","Extra scale and vertical tweak to apply to all text of …","","","","","If you use a small font and <code>Align::TOP</code> you can get the …","","Controls the text wrapping and elision.","This struct tracks recent values of some time series.","Stores values identified by an <code>Id</code> AND a the …","","","","","","Computing the same thing each frame can be expensive, so …","","","","","Count the number of values are stored with the given type.","Count how many values are stored but not yet deserialized.","","","","","","","Returns the argument unchanged.","","","","","Read a value, optionally deserializing it if available.","","","","Read a value without trying to deserialize a persisted …","","","","Hash the given value with a predictable hasher.","Hash the given value with the given hasher.","","","Insert a value that will be persisted next time you start …","Insert a value that will not be persisted.","Calls <code>U::from(self)</code>.","","","","","","","","","","The maximum number of bytes that will be used to store the …","","","","","","","Remove the state of this type an id.","Note all state of the given type.","See <code>Self::max_bytes_per_type</code>.","","","","","","","","","","","","","","","Something that does an expensive computation that we want …","Caches the results of a computation for one frame. If it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Must be called once per frame to clear the cache.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Get from cache (if the same key was used last frame) or …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Number of values currently in the cache.","","","","","","","","","","","","","","","","","","","","","","","Call once per frame to evict cache.","","Call once per frame to evict cache.","","","Stores values identified by an <code>Id</code> AND a the …","","Like <code>std::any::TypeId</code>, but can be serialized and …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Automatic undo system.","Add an undo point if, and only if, there has been a change …","","","","","","","","If the state is changing so often that we never get to …","","","","","","","","","","","","","","","","","","","","","","","","","","","Call this as often as you want (e.g. every frame) and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Do we have an undo point different from the given state?","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return true if the state is currently changing","","","Maximum number of undos. If your state is resource …","","","","","","","","","","When that state hasn’t changed for this many seconds, …","","","","","","","","","","","","","","","","","","","","","Use exactly this galley when painting the text.","Use this <code>LayoutJob</code> when laying out the text.","Text and optional style choices for it.","","This is how you specify text for a widget.","Text that has been laid out and ready to be painted.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Paint with this specific color.","Use the colors in the original <code>WidgetText</code> if any, else …","Use the colors in the original <code>WidgetText</code> if any, else …","","","","","","Size of the laid out text.","","","","The full, non-elided text of the input job.","","","","","","","","","","","","","","","","","","","","","","","","Clickable button with text.","Load the image from some raw bytes.","Boolean on/off control with text label.","A numeric value that you can change by dragging the …","Fit the image to an exact size.","Fit the image to a fraction of the available size.","","A clickable hyperlink, e.g. to …","A widget which displays an image.","A clickable image within a frame.","This type determines how the image should try to fit …","","This type determines the constraints on how the size of an …","This type tells the <code>Ui</code> how to load an image.","Static text.","Clickable text, that looks like a hyperlink.","Fit the image to its original size, scaled by some factor.","A simple progress bar.","One out of several alternatives, either selected or not.","One out of several alternatives, either selected or not. …","A visual separator. A horizontal or vertical line …","Control a number with a slider.","Specifies the orientation of a <code>Slider</code>.","A spinner widget used to indicate loading.","","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","Load the image from an existing texture.","Load the image from a URI, e.g. …","","Anything implementing Widget can be added to a <code>Ui</code> with …","Helper so that you can do <code>TextEdit::State::read…</code>","","","Returns this buffer as a <code>str</code>.","A solid color to put behind the image. Useful for …","","","Reads the given character range.","","","","","Clears all characters in this buffer","","","Color picker widgets.","","","","","","Deletes a range of text <code>char_range</code> from this buffer.","","","","","","","","","Determines how the image should shrink/expand/stretch/etc. …","","","","","","","Show larger buttons for switching between light and dark …","Show a small button to switch to/from dark/light mode …","","","","","","","","Inserts text <code>text</code> into this buffer at character index …","","","Can this text be edited?","","Whether or not the final size should maintain the original …","","","","Determines the maximum size of the image.","","","","","","","","","","","","","","Replaces all contents of this string with <code>text</code>","Show a button to reset a value to its default. The button …","Show a button to reset a value to its default. The button …","Rotate the image about an origin by some angle","","Round the corners of the image.","","","","","","","","","","","","","","","","","","","","","","","","Clears all characters in this buffer and returns a string …","","","","","","","","","","","","","","Multiply image color with this. Default is WHITE (no tint).","","","Allocate space, interact, paint, and return a <code>Response</code>.","","","Select UV range. Default is (0,0) in top-left, (1,1) …","","","","","The unique identifier for this image, e.g. …","What options to show for alpha","","","","","","","","","","","","","","","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a color picker where the user can change the given …","Returns <code>true</code> on change.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Show a color with background checkers to demonstrate …","Show a color with background checkers to demonstrate …","","","","","","","","","","A selected text range (could be a range of length zero).","A selected text range (could be a range of length zero).","","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","The output from a <code>TextEdit</code>.","The text edit state stored between frames.","","","","","","","","","","","","","","","","","The range of selected character indices.","Returns this buffer as a <code>str</code>.","","","","","","","","","","The the currently selected range of characters.","","","Reads the given character range.","Clears all characters in this buffer","","","","","","","","","","","","","Where the text cursor is.","","","","","Deletes a range of text <code>char_range</code> from this buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","How the text was displayed.","","","","","","","","","Inserts text <code>text</code> into this buffer at character index …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","True if the selected range contains no characters.","","","","","Can this text be edited?","","","","","","","The empty range.","","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","","","","","","","","","","","Replaces all contents of this string with <code>text</code>","The interaction response.","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","","","","Sets the currently selected range of characters.","","If there is a selection, None is returned. If the two ends …","","","returns the two ends ordered","The state we stored after the run.","","Clears all characters in this buffer and returns a string …","","The text was clipped to this rectangle when painted.","","Where the text in <code>Self::galley</code> ended up on the screen.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A map of arguments passed from the code to the …","<code>FluentAttribute</code> is a component of a compound <code>FluentMessage</code>.","Specialized <code>FluentBundle</code> over non-concurrent …","Core error type for Fluent runtime system.","<code>FluentMessage</code> is a basic translation unit of the Fluent …","A resource containing a list of localization messages.","The <code>FluentValue</code> enum represents values which can be …","","","An error which occurs when <code>FluentBundle::add_resource</code> adds …","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over <code>FluentAttribute</code> elements.","","","","","","","","","","","","","<code>FluentBundle</code> is a collection of localization messages in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over <code>entries</code> of the <code>FluentResource</code>.","","","","","","","","","A helper macro to simplify creation of FluentArgs.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a single <code>FluentAttribute</code> element.","Returns an <code>Entry</code> at the given index out of the …","Retrieves an id of an attribute.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the source string that was used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A fallible constructor of a new <code>FluentResource</code>.","","","","","","","","<code>types</code> module contains types necessary for Fluent runtime …","","","","","","","Retrieves an value of an attribute.","Retrieves an option of a <code>ast::Pattern</code>.","","","","","","","","","","","A collection of localization messages for a single locale, …","Makes the provided rust function available to messages …","Adds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…","Adds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…","","","","","","","","","","","","Formats a pattern which comes from a <code>FluentMessage</code>.","","Returns the argument unchanged.","","","","","Retrieves a <code>FluentMessage</code> from a bundle.","Returns true if this bundle contains a message with the …","","","Calls <code>U::from(self)</code>.","","","","","","","Constructs a FluentBundle. The first element in <code>locales</code> …","A constructor analogous to <code>FluentBundle::new</code> but operating …","","","","This method allows to specify a function that will be …","This method allows to specify a function that will be …","When formatting patterns, <code>FluentBundle</code> inserts Unicode …","","","","","","","","","","","Writes a formatted pattern which comes from a <code>FluentMessage</code>…","","","","","","","","","","","","The <code>FluentValue</code> enum represents values which can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function parses Accept-Language string into a list of …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Language Negotiation is a process in which locales from …","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","All samples are multiplied by the specified factor.","The action should occur when a clock reaches a specific …","Errors that can occur when sending a command to the audio …","Could not add a sound because the command queue is full.","The volume is adjusted by the given number of decibels.","An emitter in a spatial scene.","The action should occur immediately.","Route audio to the main mixer track.","The minimum decibel value at which a sound is considered …","Could not add a sound because a thread panicked while …","Where a source of audio should be routed to.","Describes when an action should occur.","A mixer track.","A change in volume of a sound.","Returns the volume as an amplitude.","","","","","","","","","","","","","","","","","","Returns the volume as a difference in the number of …","","","","","","","","","","","Precise timing for audio events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tools for manipulating audio signals.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The main entrypoint for controlling audio from gameplay …","Global values that parameters (like volume and playback …","","","","","","","","","","","","","","","Sources of audio.","Positions audio in 3D space.","","","","","","","","","","","","","","","","","Organizes and applies effects to audio.","","","","","","","","","Smooth interpolation between values.","","","","","","","","","","","","","Controls a clock.","A unique identifier for a clock.","The rate that a clock ticks at.","An instant in time associated with a clock.","The clock ticks every x seconds.","The clock ticks x times per minute.","The clock ticks x times per second.","","","","","","","","","","","","","","","","","","","","","","Returns the <code>ClockSpeed</code> as a number of seconds between each …","Returns the <code>ClockSpeed</code> as a number of ticks per minute.","Returns the <code>ClockSpeed</code> as a number of ticks per second.","","","","","","","","","The clock this time is associated with.","Contains types for reporting information about clocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the time between ticks (from <code>0.0</code> to <code>1.0</code>) of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns the unique identifier for the clock.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Pauses the clock.","","","","","","","","","","","","Sets the speed of the clock.","","Starts or resumes the clock.","Stops and resets the clock.","","","Returns <code>true</code> if the clock is currently ticking and <code>false</code> …","The elapsed time in ticks.","Returns the current time of the clock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about the current state of a clock.","Provides information about any clock that currently exists.","The thing should start later because the appropriate clock …","Builds a <code>ClockInfoProvider</code> that provides fake clock info.","The thing will never start because the clock it depends on …","The thing should start now.","When something should start given the current state of the …","Adds a new fake clock to the builder and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns a <code>ClockInfoProvider</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time between ticks (from <code>0.0</code>-<code>1.0</code>).","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Gets information about the clock with the given ID if it …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>MockClockInfoProviderBuilder</code> with room for …","","","","","","","","","Whether the clock is currently running.","The number of times the clock has ticked.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether something with the given start time should …","A stereo audio sample.","A <code>Frame</code> with both the left and right samples set to <code>0.0</code>.","","","","","","","Returns the frame mixed down to mono.","","","","","","","","","","","","","","","Returns the argument unchanged.","Creates a frame with both the left and right channels set …","","","","Given a previous frame, a current frame, the two next …","Calls <code>U::from(self)</code>.","","","","","","The sample for the left channel.","","","","Creates a frame with the given left and right values.","Pans a frame to the left or right.","","","The sample for the right channel.","","","","","","","","","","","","Controls audio from gameplay code.","Settings for an <code>AudioManager</code>.","Specifies how many of each resource type an audio context …","The playback state for all audio.","Audio processing is paused and no sound is being produced.","Audio is fading out and will be paused when the fade-out …","Audio is playing normally.","Creates a clock.","Creates a modulator.","Creates a spatial scene.","Creates a mixer sub-track.","","","","","","","","","","","","","","","","","","Communication between Kira and a low-level audio API.","","Returns a mutable reference to this manager’s backend.","Configures the backend.","","","","","","","","","Specifies how many of each resource type an audio context …","Returns the number of clocks that can exist at a time.","The maximum number of clocks that can exist at a time.","","","","","","","The number of commands that be sent to the renderer at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that can occur when using an <code>AudioManager</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns a handle to the main mixer track.","Configures the main mixer track.","Returns the number of modulators that can exist at a time.","The maximum number of modulators that can exist at a time.","Creates a new <code>AudioManager</code>.","Returns the number of clocks that currently exist.","Returns the number of modulators that currently exist.","Returns the number of sounds that are currently loaded.","Returns the number of spatial scenes that currently exist.","Returns the number of mixer sub-tracks that currently …","Fades out and pauses all audio.","Plays a sound.","","","","","","","","","","","","","","Resumes and fades in all audio.","Returns the number of sounds that can be loaded at a time.","The maximum number of sounds that can be playing at a time.","Returns the number of spatial scenes that can exist at a …","The maximum number of spatial scenes that can exist at a …","Returns the current playback state of the audio.","Returns the number of mixer sub-tracks that can exist at a …","The maximum number of mixer sub-tracks that can exist at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connects a <code>Renderer</code> to a lower level audio API.","The default backend used by <code>AudioManager</code>s.","Errors that can occur when using this backend.","Produces <code>Frame</code>s of audio data to be consumed by a …","Settings for this backend.","","","","","","","Plays audio using cpal.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Useful for testing and benchmarking.","Called by the backend when the sample rate of the audio …","Called by the backend when it’s time to process a new …","Produces the next <code>Frame</code> of audio.","","","Starts the backend and returns itself and the initial …","","Sends the renderer to the backend to start audio playback.","","","","","","","","","","An error occurred when building the audio stream.","A backend that uses cpal to connect a <code>Renderer</code> to the …","An error occurred when getting the default output …","Errors that can occur when using the cpal backend.","A default audio output device could not be determined.","An error occurred when starting the audio stream.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A backend that does not connect to any lower-level audio …","Settings for the mock backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Calls the <code>on_start_processing</code> callback of the <code>Renderer</code>.","Calls the <code>process</code> callback of the <code>Renderer</code>.","","","","","","","","The sample rate that the <code>Renderer</code> should run at.","Changes the sample rate of the <code>Renderer</code>.","","","","","","","","","","","","","","","","","","","","","Errors that can occur when creating a clock.","Errors that can occur when creating a modulator.","Errors that can occur when creating a spatial scene.","Errors that can occur when creating a mixer sub-track.","Could not add a clock because the maximum number of clocks …","An error occurred when sending a command to the audio …","An error occurred when sending a command to the audio …","An error occurred when sending a command to the audio …","An error occurred when sending a command to the audio …","An error occurred when sending a command to the audio …","An error occurred when initializing the sound.","Could not add a modulator because the maximum number of …","Errors that can occur when playing a sound.","Could not play a sound because the maximum number of …","Could not add a spatial scene because the maximum number …","Could not add a sub-track because the maximum number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows the user to control the modulator from gameplay …","Produces a stream of values that a parameter can be linked …","Configures a modulator.","A unique identifier for a modulator.","","","","","","","","","Creates the modulator and a handle to the modulator.","","","","","","","","","","","","","","","","Whether the modulator can be removed from the audio …","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","Oscillates back and forth.","Called whenever a new batch of audio samples is requested …","","","","","","","","","","","Smoothly transitions values to other values.","","","Updates the modulator.","Returns the current output of the modulator.","Contains types for reporting values of modulators.","","Configures an LFO modulator.","Controls an LFO modulator.","The value jumps back and forth between two values.","The value moves gradually in one direction, then abruptly …","The value moves back and forth smoothly.","The value moves back and forth at a constant speed.","Describes an oscillation pattern.","Sets how much the value oscillates.","How much the value oscillates.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets how quickly the value oscillates.","How quickly the value oscillates.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the unique identifier for the modulator.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>LfoBuilder</code> with the default settings.","Sets a constant value that the modulator is offset by.","The constant value the modulator is offset by.","","","","","","Sets how much the value oscillates.","Sets how quickly the value oscillates.","Sets a constant value that the modulator is offset by.","Sets the phase of the LFO (in radians).","Sets the oscillation pattern.","","Sets the phase the LFO should start at (in radians).","The phase the LFO should start at (in radians).","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the oscillation pattern.","The oscillation pattern.","The ratio between how much time the oscillator spends on …","Configures a tweener.","Controls a tweener.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the unique identifier for the modulator.","","","","The initial value of the tweener.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Starts a transition from the current value to a target …","","","","","","","","","","","","","","","","","","Builds a <code>ModulatorValueProvider</code> that provides fake …","Provides values of any modulator that currently exists.","Adds a new fake modulator to the builder and returns the …","","","","","","","","","","","Consumes the builder and returns a <code>ModulatorValueProvider</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets the value of the modulator with the given ID if it …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a new <code>MockModulatorValueProviderBuilder</code> with room …","","","","","","","","","","","","","","","","","","","A user-defined time in seconds.","The end of the audio data.","The ending time of a region of audio.","Errors that can occur when starting the sound.","The sound is played at a speed factor of the original …","Errors that can occur when loading or streaming an audio …","The type that can be used to control the sound once it has …","A trait for types that can be converted into an …","An error occurred while reading the file from the …","Could not determine the default audio track in the file.","Playback is paused.","The sound is fading out, and when the fade-out is …","A point in time in a piece of audio.","How quickly a sound is played.","The playback state of a sound.","The sound is playing normally.","A portion of audio.","The time in samples (individual audio data points).","The time in seconds.","The sound is played faster or slower so that the pitch of …","An actively playing sound.","A source of audio that is loaded, but not yet playing.","The sound has stopped and can no longer be resumed.","The sound is fading out, and when the fade-out is …","An error occurred when parsing the file.","Could not determine the duration of the audio.","Could not determine the sample rate of the audio.","The audio uses an unsupported channel configuration. Only …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the playback rate as a factor of the original …","Returns the number of semitones of pitch difference this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ending time of the region.","","","","","","","","","","","","","","","Returns <code>true</code> if the sound is finished and can be unloaded.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Converts the type into an <code>Option&lt;Region&gt;</code>.","","","","","","","","Converts the loaded sound into a live, playing sound and a …","","","","","","","Called whenever a new batch of audio samples is requested …","Returns the destination that this sound’s audio should …","Produces the next <code>Frame</code> of audio.","","","","","","","","","","","","","","","","","The starting time of the region (in seconds).","Playable chunks of audio that are loaded into memory all …","Decodes data gradually from an audio file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A piece of audio loaded into memory all at once.","Controls a static sound.","Settings for a static sound.","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the tween used to fade in the sound from silence.","An optional fade-in from silence.","","The raw samples that make up the audio.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Sets the portion of the sound that should be looped.","The portion of the sound that should be looped.","Creates a new <code>StaticSoundSettings</code> with the default …","Sets the destination that this sound should be routed to.","The destination that this sound should be routed to.","Sets the panning of the sound, where 0 is hard left and 1 …","The panning of the sound, where 0 is hard left and 1 is …","Fades out the sound to silence with the given tween and …","Sets the playback rate of the sound.","The playback rate of the sound.","Sets the portion of the sound that should be played.","The portion of the sound that should be played.","Returns the current playback position of the sound (in …","","","","","Resumes playback and fades in the sound from silence with …","Sets whether the sound should be played in reverse.","Whether the sound should be played in reverse.","The sample rate of the audio (in Hz).","Moves the playback position by the specified amount of …","Sets the playback position to the specified time in …","Sets the portion of the sound that will play in a loop.","Sets the panning of the sound, where <code>0.0</code> is hard left, <code>0.5</code> …","Sets the playback rate of the sound.","Sets the portion of the sound that should be played.","Sets the volume of the sound.","Settings for the sound.","","Sets when the sound should start playing.","When the sound should start playing.","Returns the current playback state of the sound.","Fades out the sound to silence with the given tween and …","","","","","","","","","","","","","","","","Sets the volume of the sound.","The volume of the sound.","","","Decodes chunks of audio.","Errors that can occur when decoding audio.","A streaming sound that is not playing yet.","Controls a streaming sound.","Settings for a streaming sound.","","","","","","","","","","","","","","","","","","","","Decodes the next chunk of audio.","","","","","","","","","","","","","","","","","","","Sets the tween used to fade in the instance from silence.","An optional fade-in from silence.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>StreamingSoundData</code> for a cursor wrapping audio …","Creates a <code>StreamingSoundData</code> for a <code>Decoder</code>.","Creates a <code>StreamingSoundData</code> for an audio file.","Creates a <code>StreamingSoundData</code> for a type that implements …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Sets the portion of the sound that should be looped.","The portion of the sound that should be looped.","Creates a new <code>StreamingSoundSettings</code> with the default …","Returns the total number of samples of audio.","Sets the destination that this sound should be routed to.","The destination that this sound should be routed to.","Sets the panning of the sound, where 0 is hard left and 1 …","The panning of the sound, where 0 is hard left and 1 is …","Fades out the sound to silence with the given tween and …","Sets the playback rate of the sound.","The playback rate of the sound.","Sets the portion of the sound that should be played.","The portion of the sound that should be played.","Returns an error that occurred while decoding audio, if …","Returns the current playback position of the sound (in …","","","","","","Resumes playback and fades in the sound from silence with …","Returns the sample rate of the audio (in Hz).","Seeks to an audio sample.","Moves the playback position by the specified amount of …","Sets the playback position to the specified time in …","Sets the portion of the sound that will play in a loop.","Sets the panning of the sound, where <code>0.0</code> is hard left, <code>0.5</code> …","Sets the playback rate of the sound.","Sets the portion of the sound that should be played.","Sets the volume of the sound.","Settings for the streaming sound.","","","Sets when the sound should start playing.","When the sound should start playing.","Returns the current playback state of the sound.","Fades out the sound to silence with the given tween and …","","","","","","","","","","","","","","","","","","","","","","","Sets the volume of the sound.","The volume of the sound.","","","","Produces audio in a 3D space.","Receives audio in a 3D space.","A 3D space that audio travels through.","The distances from a listener at which an emitter is …","Controls a emitter.","A unique identifier for an emitter.","Settings for an emitter.","","","","","","","","","","","","","","","","","","Sets how the emitter’s volume will change with distance.","How the emitter’s volume will change with distance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the distances from a listener at which the emitter is …","The distances from a listener at which the emitter is …","","","","","","","","","","","","Sets whether the emitter’s output should be panned left …","Whether the emitter’s output should be panned left or …","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the unique identifier for the emitter.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The distance from a listener at which an emitter becomes …","The distance from a listener at which an emitter outputs …","Creates a new <code>EmitterSettings</code> with the default settings.","Sets whether the emitter should be kept alive until all …","Whether the emitter should be kept alive until all sounds …","","","","","","","","","","","","Returns the ID of the spatial scene this emitter belongs …","","Sets the position that audio is produced from.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Controls a listener.","A unique identifier for an listener.","Settings for a listener.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the unique identifier for the listener.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a new <code>ListenerSettings</code> with the default settings.","","","","","","","","Returns the ID of the spatial scene this listener belongs …","","Sets the rotation of the listener.","Sets the location of the listener in the spatial scene.","","","","","","","","","","","","Sets the mixer track that the listener’s received audio …","The mixer track that the listener’s received audio …","","","","","","","","","","","","","","","","Errors that can occur when creating a emitter.","Errors that can occur when creating a listener.","An error occurred when sending a command to the audio …","An error occurred when sending a command to the audio …","Could not add a emitter because the maximum number of …","Could not add a listener because the maximum number of …","Controls a spatial scene.","A unique identifier for a spatial scene.","Settings for a spatial scene.","Adds an emitter to the scene.","Adds a listener to the scene.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the maximum number of emitters that can be in the …","The maximum number of emitters that can be in the scene at …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the unique identifier for the spatial scene.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the maximum number of listeners that can be in the …","The maximum number of listeners that can be in the scene …","","Creates a new <code>SpatialSceneSettings</code> with the default …","Returns the number of emitters in the scene.","Returns the number of listeners in the scene.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error occurred when sending a command to the audio …","The main mixer track.","Cannot change the volume of a track route that did not …","Errors that can occur when changing the volume of a track …","A sub-track.","A unique identifier for a mixer sub-track.","Configures a mixer track.","Controls a mixer track.","A unique identifier for a track.","Defines how the output of a mixer sub-track will be fed …","Adds an effect to the track.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modifies audio signals.","","Creates a new <code>TrackRoutes</code> with no routes pre-configured.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the unique identifier for the mixer track.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TrackBuilder</code> with the default settings.","Creates a new <code>TrackRoutes</code> with the default settings.","Creates a new <code>TrackRoutes</code> with a single route to the …","","","","","","","","","","","","","","","","Sets how the output of this track should be routed to …","","Sets the volume of this track’s route to another track.","Sets the (post-effects) volume of the mixer track.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the volume of the track.","","","","","","","","Adds an effect to the track and returns the <code>TrackBuilder</code>.","Sets how much of the current track’s signal will be sent …","Removes the route to the specified track.","Receives input audio from a mixer track and outputs …","Configures an effect.","Allows the user to control the effect from gameplay code.","Creates the effect and a handle to the effect.","Reduces (or increases) the dynamic range of audio.","Adds echoes to a sound.","Makes a sound harsher and noisier.","Adjusts the volume of a frequency range of a sound.","Removes frequencies from a sound.","Called when the effect is first sent to the renderer.","Called when the sample rate of the renderer is changed.","Called whenever a new batch of audio samples is requested …","Adjusts the panning of audio.","Transforms an input <code>Frame</code>.","Adds reverberations to a sound. Useful for simulating room …","Adjusts the volume of audio.","Configures a compressor.","Controls a compressor.","","","","","","","Sets how much time it takes for the volume attenuation to …","How much time it takes for the volume attenuation to ramp …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Sets the amount to change the volume after processing (in …","The amount to change the volume after processing (in dB).","Sets how much dry (unprocessed) signal should be blended …","How much dry (unprocessed) signal should be blended with …","Creates a new <code>CompressorBuilder</code> with the default settings.","Sets how much the signal will be compressed.","How much the signal will be compressed.","","","","Sets how much time it takes for the volume attenuation to …","How much time it takes for the volume attenuation to relax …","Sets how much time it takes for the volume attenuation to …","Sets the amount to change the volume after processing (in …","Sets how much dry (unprocessed) signal should be blended …","Sets how much the signal will be compressed.","Sets how much time it takes for the volume attenuation to …","Sets the volume above which volume will start to be …","Sets the volume above which volume will start to be …","The volume above which volume will start to be decreased …","","","","","","","","","","","","","","","","","Configures a delay effect.","Controls a delay effect.","Adds an effect to the feedback loop.","","","","","","","","","","","Sets the amount of audio the delay can store.","","","","","Sets the delay time (in seconds).","","","","","","","","","","Sets the amount of feedback.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Sets how much dry (unprocessed) signal should be blended …","","Creates a new <code>DelayBuilder</code> with the default settings.","","","","Sets the delay time (in seconds).","Sets the amount of feedback.","Sets how much dry (unprocessed) signal should be blended …","","","","","","","","","","","","","","","","","Configures a distortion effect.","Controls a distortion effect.","Different types of distortion.","The signal will be clamped to the -1.0 to 1.0 range.","The signal will be kept in the -1.0 to 1.0 range, and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the factor to multiply the signal by before applying …","The factor to multiply the signal by before applying the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Sets the kind of distortion to use.","The kind of distortion to use.","Sets how much dry (unprocessed) signal should be blended …","How much dry (unprocessed) signal should be blended with …","Creates a new <code>DistortionBuilder</code> with the default settings.","","","","","","","","Sets how much distortion should be applied.","Sets the kind of distortion to use.","Sets how much dry (unprocessed) signal should be blended …","","","","","","","","","","","","","","","","","","","","","","","","","","","Frequencies around the user-defined frequency are adjusted.","Configures an EQ filter.","Controls an EQ filter.","The shape of the frequency adjustment curve.","Frequencies around and higher than the user-defined …","Frequencies around and lower than the user-defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “center” or “corner” of the frequency range to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The volume adjustment for frequencies in the specified …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The shape of the frequency adjustment curve.","Creates a new <code>EqFilterBuilder</code>.","The width of the frequency range to adjust.","","","","","","","Sets the “center” or “corner” of the frequency …","Sets the volume adjustment for frequencies in the …","Sets the shape of the frequency adjustment curve.","Sets the width of the frequency range to adjust.","","","","","","","","","","","","","","","","","","","","","","","","","","Removes frequencies above and below the cutoff frequency.","Configures a filter effect.","Controls a filter effect.","The frequencies that the filter will remove.","Removes frequencies below the cutoff frequency.","Removes frequencies above the cutoff frequency.","Removes frequencies around the cutoff frequency.","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the cutoff frequency of the filter (in hertz).","The cutoff frequency of the filter (in hertz).","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Sets how much dry (unprocessed) signal should be blended …","How much dry (unprocessed) signal should be blended with …","Sets the frequencies that the filter will remove.","The frequencies that the filter will remove.","Creates a new <code>FilterBuilder</code> with the default settings.","","","","","","","Sets the resonance of the filter.","The resonance of the filter.","Sets the cutoff frequency of the filter (in hertz).","Sets how much dry (unprocessed) signal should be blended …","Sets the frequencies that the filter will remove.","Sets the resonance of the filter.","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures a panning control effect.","Controls a panning control effect.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Sets the panning adjustment to apply to input audio.","","","","","","","","","","","","","","","","","","Configures a reverb effect.","Controls a reverb effect.","","","","","","","","","","","","","","","","","Sets how quickly high frequencies disappear from the …","How quickly high frequencies disappear from the …","","","","","","","","","","","","Sets how much the room reverberates. A higher value will …","How much the room reverberates. A higher value will result …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Sets how much dry (unprocessed) signal should be blended …","How much dry (unprocessed) signal should be blended with …","Creates a new <code>ReverbBuilder</code> with the default settings.","","","","","Sets how quickly high frequencies disappear from the …","Sets how much the room reverberates. A higher value will …","Sets how much dry (unprocessed) signal should be blended …","Sets the stereo width of the reverb effect (0.0 being …","Sets the stereo width of the reverb effect (0.0 being …","The stereo width of the reverb effect (0.0 being fully …","","","","","","","","","","","","","","","","","","Configures a volume control effect.","Controls a volume control effect.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Creates a new <code>VolumeControlBuilder</code>.","","","","","Sets the volume adjustment to apply to input audio.","","","","","","","","","","","","","","","","","","Curves the motion of a <code>Tween</code>.","A fixed value.","The value of a <code>modulator</code>.","Causes the <code>Tween</code> to start slow, speed up, and then slow …","Causes the <code>Tween</code> to start slow, speed up, and then slow …","Causes the <code>Tween</code> to start slow and speed up. A higher …","Causes the <code>Tween</code> to start slow and speed up. A higher …","Maintains a constant speed for the duration of the <code>Tween</code>.","A transformation from a modulator’s value to a parameter …","Causes the <code>Tween</code> to start fast and slow down. A higher …","Causes the <code>Tween</code> to start fast and slow down. A higher …","Manages and updates a value that can be smoothly …","Describes a smooth transition between values.","A trait for types that can be smoothly interpolated.","A value that a parameter can be linked to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether values should be prevented from being less than …","Whether values should be prevented from being greater than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The duration of the motion.","The curve of the motion.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Value::FromModulator</code> from a modulator ID or …","","","","","","","","","","","","","","","","","","","","","","A range of values from a modulator.","Returns an linearly interpolated value between <code>a</code> and <code>b</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms an input value to an output value using this …","Creates a new <code>Parameter</code> with an initial <code>Value</code>.","The corresponding range of values of the parameter.","","","","","","","","","","","","","","","Starts a transition from the current value to the target …","When the motion starts.","","Converts a <code>Value&lt;T&gt;</code> to a <code>Value&lt;T2&gt;</code>.","Converts a <code>ModulatorMapping&lt;T&gt;</code> to a <code>ModulatorMapping&lt;T2&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates any in-progress transitions and keeps the value …","Returns the current actual value of the parameter.","","","","","","The modulator to link to.","How the modulator’s value should be converted to the …eturns the active locale for the system or application.","Returns the preferred locales for the system or …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","Enum representing available character direction …","Left To Right","<code>LanguageIdentifier</code> is a core struct representing a Unicode …","Enum with errors that can be returned by …","A parser error.","Right To Left","An unknown error - currently covers all-but parser errors.","","","","","","","","","","","","","","","","","","","","","","This is a best-effort operation that performs all …","Returns character direction of the <code>LanguageIdentifier</code>.","Clears variant subtags of the <code>LanguageIdentifier</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","A constructor which takes a utf8 slice, parses it and …","A constructor which takes optional subtags as <code>AsRef&lt;[u8]&gt;</code>, …","Unchecked","","","","","","","","","","Tests if a variant subtag is present in the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Consumes <code>LanguageIdentifier</code> and produces raw internal …","","","","","","","","Compares a <code>LanguageIdentifier</code> to another …","","","","","","","","","","","","Sets variant subtags of the <code>LanguageIdentifier</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector of variants subtags of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Safety","Safety","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata describing a border image.","A button rendered with a <code>BorderImageMeta</code>","A 9-patch style bordered frame.","The border images to use for a <code>ButtonThemeMeta</code> when the …","Metadata describing a themed button.","A margin specification.","","","","The size of the border on each side.","The border images to use for different button states.","The bottom margin.","When the button is clicked on.","The default button state.","","","When the button is hovered for focused on.","The font family, size, and color to use for the button.","The image for the border.","The size of the border image in pixels.","The left margin.","","","","","","","","The amount of space to pad around the internal edges of …","The right margin.","The scale to render the border image at.","","","","","The top margin.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Binds inputs to player actions","Global settings, stored and accessed through <code>Storage</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Settings plugin","Controls for game remotes","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Controls for keyboard player 1","Controls for keyboard player 2","","Startup system to load the game settings or use the …","The address of the matchmaking server to connect to for …","","","","","","The player controller bindingseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehich page of the menu we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","System to render the home menu.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the client is waiting for the map to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which settings tab we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of input binding to listen for.","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,5,4,5,4,5,4,5,4,5,5,4,5,4,5,4,5,0,4,5,4,5,4,4,5,4,5,4,5,4,5,5,4,5,4,5,4,5,4,5,4,4,5,5,0,4,5,0,4,5,4,5,4,5,4,5,4,5,4,5,0,4,0,4,0,4,0,4,5,4,5,4,5,5,4,5,0,0,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,0,4,5,4,5,0,0,0,0,0,24,26,1786,24,26,1786,24,26,1786,24,0,0,26,1786,24,26,1786,24,0,0,1786,0,0,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,0,0,26,1786,24,26,1786,24,26,1786,24,24,24,0,0,26,1786,24,0,24,26,26,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,0,24,0,0,26,0,0,0,0,26,0,0,24,26,1786,24,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,26,1786,24,0,26,1786,24,0,0,0,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,30,30,31,32,30,31,32,30,31,32,30,30,31,31,32,32,31,30,31,32,0,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,31,30,31,31,30,31,32,30,31,32,30,31,32,0,30,31,32,30,31,30,31,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,0,0,30,31,32,0,0,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,0,47,47,48,47,47,48,47,47,0,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,1787,1787,0,0,0,54,55,56,54,55,56,54,55,56,55,55,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,56,54,55,56,56,54,54,55,56,54,55,56,55,55,55,55,55,55,54,55,54,55,56,54,55,56,54,55,56,54,54,55,55,56,56,0,0,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,55,54,54,55,56,54,55,56,54,55,56,54,55,56,0,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,0,55,54,55,56,0,0,71,68,71,68,71,68,71,68,71,68,0,0,71,68,71,68,71,68,71,68,71,68,71,68,68,71,68,71,68,68,71,68,71,68,71,68,71,71,68,68,71,71,68,0,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,71,68,0,0,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,72,73,73,72,73,0,72,73,72,73,72,73,72,73,72,73,72,73,0,72,73,72,73,72,73,72,73,72,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,0,0,0,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,76,77,76,77,76,77,77,0,0,0,76,80,76,77,80,76,77,80,76,77,80,80,76,77,80,76,77,80,76,77,80,76,77,76,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,77,0,80,76,77,76,80,76,77,76,77,76,76,76,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,86,86,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,0,0,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,102,87,95,96,97,98,99,100,101,102,87,87,95,96,97,98,99,100,101,87,95,96,97,98,99,100,101,87,95,96,97,98,99,100,101,0,0,102,102,87,0,87,95,96,97,98,100,101,87,95,96,97,97,98,98,99,100,101,102,87,95,96,97,97,98,98,99,100,101,102,95,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,101,0,87,95,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,87,95,95,96,96,97,97,98,98,100,100,101,101,0,102,95,95,0,100,0,87,95,96,97,98,99,100,101,102,102,102,0,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,102,87,95,96,97,98,99,100,101,102,0,102,0,0,87,99,100,100,0,0,87,95,96,97,98,99,100,101,87,95,96,97,98,100,101,87,95,96,97,98,99,100,101,102,102,87,95,96,97,98,99,100,101,0,95,0,0,0,102,102,0,0,0,0,99,87,95,96,97,98,99,100,101,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,87,95,96,97,98,99,100,101,102,0,87,95,96,97,98,99,100,101,102,0,0,0,109,109,109,109,109,108,109,110,108,109,110,108,109,110,108,108,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,108,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,0,108,109,108,108,109,110,108,109,110,108,109,110,108,108,109,109,110,110,0,0,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,109,108,109,110,108,109,110,108,109,110,110,108,108,108,109,110,0,108,110,110,110,110,108,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,108,109,110,0,108,109,110,108,108,1788,1789,0,0,0,112,113,114,112,113,114,112,113,114,112,112,112,113,114,112,113,114,112,112,112,112,112,112,114,112,112,112,112,113,114,112,113,114,112,113,114,114,112,112,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,112,112,113,114,112,113,114,112,113,114,112,112,113,113,114,114,0,112,0,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,0,114,112,113,114,112,113,114,112,113,114,112,113,114,0,112,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,0,0,112,113,114,114,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,120,120,120,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,0,0,0,0,124,121,122,123,124,121,122,123,124,121,122,123,124,121,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,121,122,121,122,122,123,124,121,122,122,123,124,121,122,123,124,121,122,123,124,122,121,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,121,122,122,0,0,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,121,122,123,124,121,122,121,122,123,124,121,122,123,121,0,121,123,123,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,0,121,122,123,124,1790,1790,0,0,0,125,125,126,127,125,126,127,125,126,127,125,125,125,126,127,125,126,127,125,125,125,126,127,125,126,127,125,126,127,125,125,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,125,125,125,125,125,125,125,126,127,125,126,127,125,126,127,125,126,127,125,125,126,126,127,127,125,125,125,127,0,125,0,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,127,125,126,127,125,126,127,125,126,127,125,126,127,0,125,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,125,126,127,0,0,125,126,127,0,0,0,130,130,132,130,131,132,130,131,132,130,131,132,130,130,130,131,132,130,131,132,130,130,130,131,132,130,131,132,130,131,132,130,130,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,130,130,130,130,130,130,130,131,132,130,131,132,130,131,132,130,131,132,130,130,131,131,132,132,130,130,130,132,0,130,0,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,130,131,132,130,131,132,130,131,132,130,131,132,0,130,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,0,0,130,131,132,0,0,0,133,135,133,133,133,133,133,134,135,133,134,135,133,134,135,133,133,133,134,135,133,134,135,133,133,134,135,133,134,135,133,134,135,133,133,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,133,133,133,133,133,133,133,134,135,133,134,135,133,134,135,133,134,135,133,133,134,134,135,135,0,133,0,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,0,133,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,133,134,135,0,0,133,134,135,0,0,137,136,136,137,136,137,136,137,136,136,136,137,136,137,136,136,136,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,136,136,136,137,136,137,136,137,136,137,136,136,137,137,0,136,0,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,136,0,136,137,136,137,136,137,136,137,0,136,136,136,136,136,136,136,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,0,136,137,0,0,0,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,140,141,141,142,142,0,0,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,0,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,140,141,142,0,140,141,142,0,0,143,144,143,144,143,144,143,143,144,143,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,143,144,144,0,0,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,0,143,144,143,144,143,144,143,144,143,144,143,144,143,144,143,144,0,143,144,0,0,145,146,145,146,145,146,145,145,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,145,146,145,145,146,145,146,145,146,145,145,146,146,0,0,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,0,145,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,0,145,146,149,149,0,0,149,148,149,148,149,148,149,148,148,148,149,148,149,148,148,149,148,149,148,149,148,148,149,148,149,148,149,148,149,148,149,148,149,148,148,149,148,149,148,149,148,148,149,149,0,148,148,148,148,0,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,148,149,148,149,148,149,148,149,0,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,0,148,149,1791,1791,1791,0,0,150,151,150,151,150,151,150,150,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,150,151,150,150,151,150,151,150,151,150,150,151,151,0,0,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,0,150,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,0,150,151,0,0,152,153,152,153,152,153,152,152,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,153,152,153,152,153,152,153,152,152,153,153,0,0,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,0,152,152,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,152,153,0,152,153,0,0,0,155,156,157,155,156,157,155,156,157,155,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,155,156,156,157,157,0,155,0,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,155,155,156,157,155,156,157,155,156,157,155,156,157,0,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,155,156,157,0,0,155,156,157,161,161,0,161,0,0,0,159,159,160,161,162,159,160,161,162,159,160,161,162,159,159,159,160,161,162,159,160,161,162,159,159,159,160,161,162,159,160,161,162,159,160,161,162,159,159,160,161,162,159,160,161,162,162,159,160,161,162,162,159,160,161,162,159,160,161,162,160,159,159,160,161,159,160,161,162,159,160,161,162,159,160,161,162,159,159,160,160,161,161,162,162,0,159,0,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,159,160,161,162,159,160,161,162,159,160,161,162,159,160,162,0,159,159,160,0,159,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,0,159,160,161,162,1792,1793,0,0,163,164,163,164,163,164,163,163,164,163,164,163,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,163,164,164,0,163,163,0,163,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,0,163,163,164,163,164,163,164,163,164,163,164,163,164,163,164,163,164,0,163,164,0,168,168,168,0,0,0,0,168,168,0,168,168,168,168,168,168,165,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,165,165,45,165,167,45,165,166,167,168,45,165,166,167,168,166,45,165,166,167,168,45,165,166,167,168,165,166,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,45,165,165,167,167,45,165,166,167,168,0,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,166,167,167,166,45,45,165,166,167,168,45,165,167,45,165,166,167,168,45,165,167,165,165,166,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,45,165,166,167,168,1794,1795,1796,1797,1798,1799,1800,1801,1799,1802,1803,1795,1800,1794,1802,1804,1797,1794,1796,1796,1794,1799,0,0,0,0,0,0,0,0,0,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,116,115,158,173,119,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,139,174,118,117,116,115,158,173,139,174,118,117,116,115,158,173,139,174,118,117,116,115,158,139,174,118,117,116,115,158,158,173,119,119,139,174,118,117,116,115,158,158,173,119,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,116,116,117,173,119,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,115,158,158,139,139,174,174,118,118,117,117,116,116,119,0,117,115,158,173,119,139,174,118,117,116,119,0,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,173,115,158,173,119,139,174,118,117,116,116,116,118,173,139,174,115,158,173,139,174,118,117,116,115,158,139,174,118,117,116,115,158,173,119,139,174,118,117,116,116,115,158,139,174,118,117,116,116,116,117,116,0,115,158,173,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,115,158,173,119,139,174,118,117,116,116,115,158,173,119,139,174,118,117,116,116,115,158,173,119,139,174,118,117,116,116,116,0,0,59,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,40,59,40,59,40,59,40,59,59,40,40,59,40,0,59,40,59,40,59,40,59,40,59,40,0,59,40,59,0,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,59,40,0,0,0,0,0,0,0,0,0,0,178,65,180,181,175,154,178,178,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,178,181,181,178,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,178,178,0,65,180,181,175,154,65,65,180,180,181,175,154,154,178,178,182,65,65,180,180,181,175,154,154,178,178,182,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,178,178,178,178,178,178,178,178,154,178,182,65,180,181,175,154,178,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,65,180,180,181,181,175,175,154,154,181,0,178,65,180,181,175,154,178,182,182,0,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,175,181,178,181,178,65,180,181,175,154,178,182,65,180,181,175,154,65,180,181,175,154,178,182,178,178,178,65,180,181,175,154,0,181,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,65,180,181,175,154,178,182,0,0,1805,0,0,1806,0,0,0,0,0,1806,0,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,192,192,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,1808,192,1807,1808,1806,194,1809,195,194,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,195,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,1807,1808,194,192,192,1808,192,1807,1808,1806,194,1809,195,1807,192,1807,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,1809,1809,192,1807,1808,1806,194,1809,195,192,1807,1808,1806,194,1809,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,211,211,211,207,210,196,197,198,199,196,197,198,199,196,197,198,199,207,210,213,184,184,206,209,205,213,197,197,197,197,196,197,198,199,196,197,198,199,196,196,197,198,199,196,197,198,199,196,197,198,199,204,196,196,197,198,199,197,201,196,197,198,199,196,197,198,199,199,196,197,198,199,196,197,198,199,212,212,203,202,196,206,206,196,197,198,199,208,198,196,197,198,199,196,197,198,199,196,197,198,199,196,196,197,197,198,198,199,199,212,212,205,198,184,209,202,204,201,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,212,211,212,212,212,184,200,205,0,196,196,197,197,184,205,213,201,210,213,208,196,0,197,196,196,203,204,196,197,198,199,196,197,198,199,196,197,198,199,1810,199,201,196,197,198,199,201,205,211,211,205,200,196,205,198,198,184,202,202,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,196,197,198,199,211,197,197,0,0,0,0,0,0,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,184,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,204,184,200,201,202,203,204,201,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,203,202,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,184,200,200,201,201,202,202,203,203,204,204,184,202,204,201,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,184,200,184,201,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,201,184,200,201,202,203,204,201,200,184,202,202,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,184,200,201,202,203,204,0,0,0,0,0,0,0,0,0,211,211,211,207,210,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,207,210,213,206,209,205,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,0,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,208,211,0,0,0,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,212,212,206,206,205,206,207,208,209,210,211,212,213,208,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,212,212,205,209,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,212,211,212,212,212,205,205,213,210,213,208,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,211,211,205,205,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,205,206,207,208,209,210,211,212,213,211,0,0,0,0,0,0,0,0,0,216,69,0,216,69,216,69,216,69,216,69,216,69,69,69,69,216,69,216,69,216,69,0,69,216,69,216,69,216,69,216,69,69,216,69,69,216,69,216,69,216,69,69,69,69,69,69,0,216,216,69,0,216,69,216,69,216,69,216,69,216,69,69,69,216,69,69,69,69,69,69,216,216,69,69,216,69,69,69,216,69,216,69,216,69,216,69,216,69,216,69,216,69,216,69,0,69,216,69,69,0,215,0,0,0,0,0,94,0,0,94,0,0,215,0,94,0,0,61,61,61,219,1811,220,223,61,57,221,58,222,94,94,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,220,223,219,220,57,221,58,222,94,219,220,57,221,58,222,94,219,220,57,221,58,222,94,220,220,61,220,220,219,61,223,219,220,223,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,222,94,219,1811,220,223,61,57,221,58,222,222,94,61,58,94,58,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,94,61,1811,94,94,94,94,94,94,94,223,57,221,58,222,94,219,1811,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,219,220,220,223,223,57,57,221,221,58,58,222,222,94,94,219,61,61,219,219,61,219,1811,220,223,61,57,221,58,222,94,61,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,61,61,220,220,0,58,219,220,57,221,58,222,94,219,220,223,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,94,220,220,57,221,58,222,94,58,94,0,58,61,61,61,61,61,61,61,61,61,61,219,220,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,219,1811,220,223,61,57,221,58,222,94,61,61,61,61,219,1811,220,223,61,57,221,58,222,94,223,1812,1813,272,265,0,265,0,328,0,0,0,407,0,0,321,0,232,232,232,232,232,232,232,232,232,320,352,352,0,343,296,0,0,0,0,0,266,275,275,252,270,273,275,252,0,343,296,0,351,0,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,343,296,0,0,0,0,0,0,0,0,343,296,351,0,0,343,296,408,343,296,0,273,273,273,0,0,266,0,248,248,248,0,0,0,0,0,0,351,407,259,0,325,344,325,344,306,266,269,274,274,274,274,274,325,344,0,253,253,248,265,265,265,358,0,306,0,0,328,269,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,0,0,0,0,0,273,0,343,296,0,343,296,0,0,241,275,0,81,0,0,0,0,0,0,0,0,275,0,0,0,0,0,0,0,0,248,248,306,306,265,266,269,265,265,265,0,0,273,266,269,253,275,332,259,0,259,332,0,320,320,0,0,0,0,81,0,0,0,320,272,0,274,274,274,273,303,304,304,304,303,304,0,81,269,269,266,269,0,0,1814,1814,0,0,0,0,0,0,0,343,296,0,0,0,1814,232,0,0,0,0,268,275,267,267,267,267,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,343,296,0,343,296,0,0,343,296,268,269,0,0,266,275,0,0,0,343,296,0,340,0,0,0,0,0,0,340,0,0,0,228,241,228,0,408,408,0,267,267,267,267,0,266,269,0,0,0,0,0,0,0,0,343,296,0,0,0,0,0,343,296,0,0,0,0,359,0,358,0,358,321,265,321,265,233,238,239,240,242,243,242,243,243,244,279,279,279,245,245,245,246,247,249,345,249,250,250,247,249,345,249,247,249,345,249,333,250,250,250,333,333,250,333,254,244,254,244,245,245,245,245,281,264,264,264,265,266,267,268,269,248,270,271,272,273,252,253,274,275,317,245,264,277,264,246,245,264,254,264,233,254,278,279,280,254,245,254,245,254,245,407,370,386,381,393,371,408,372,318,320,320,320,233,317,250,288,288,308,308,265,265,265,321,321,323,323,324,324,325,325,325,287,287,309,309,326,326,327,327,327,302,328,328,328,279,329,329,329,330,330,330,300,331,278,291,291,310,310,292,292,311,311,293,293,312,312,251,251,251,306,306,306,266,266,266,299,299,267,267,267,332,332,281,281,254,254,277,277,280,280,298,298,333,333,333,297,297,297,334,334,334,246,246,244,244,245,264,264,335,335,335,226,268,268,268,336,228,337,337,338,339,339,339,255,255,255,269,269,269,340,340,340,341,341,341,259,259,256,256,257,257,342,342,248,248,248,243,238,238,239,289,303,303,343,343,343,344,344,344,345,345,345,270,270,270,296,346,347,229,348,304,349,350,271,271,271,351,351,351,272,272,272,240,242,352,352,352,353,354,355,356,357,273,273,273,358,358,358,359,359,359,363,258,360,247,249,227,252,252,252,253,253,253,315,274,274,274,316,81,275,275,275,361,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,282,282,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,282,282,282,233,243,239,282,282,282,282,282,282,265,325,327,329,330,251,266,267,333,334,268,339,255,269,341,248,343,344,345,270,271,272,273,358,359,252,253,274,275,287,287,282,282,282,282,257,254,282,289,289,289,240,282,282,287,287,257,258,287,287,287,287,282,282,282,282,282,282,282,282,282,282,254,282,289,289,289,240,282,282,282,282,282,233,243,238,239,289,289,289,240,242,254,254,331,297,300,302,302,300,279,258,249,303,304,247,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,381,393,226,300,326,335,326,335,279,278,245,245,264,289,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,233,238,239,240,242,370,371,370,371,308,309,310,311,312,264,249,264,250,264,246,258,258,249,258,249,233,243,239,233,243,238,239,289,240,242,315,315,315,245,298,282,233,243,238,239,289,289,289,240,242,264,298,264,298,282,233,243,238,239,289,289,289,240,242,298,242,242,245,317,245,247,318,250,229,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,258,360,247,249,227,252,253,315,274,316,81,275,361,282,233,243,238,239,289,289,289,240,242,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,258,360,247,249,227,252,253,315,274,316,81,275,361,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,258,360,247,249,227,252,253,315,274,81,275,361,265,266,267,334,268,269,248,270,272,273,252,253,274,275,247,228,381,393,337,339,229,228,381,393,337,339,229,361,361,361,361,361,245,381,393,245,227,338,315,386,247,249,345,249,328,265,266,267,334,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,258,249,282,233,243,238,239,289,289,289,240,242,247,282,280,282,233,243,238,239,289,289,289,240,242,282,233,243,238,239,289,289,289,240,242,282,247,233,233,300,361,386,247,249,247,249,360,360,349,361,361,360,360,371,360,360,363,288,308,287,309,291,310,292,311,293,312,287,360,360,265,302,266,267,226,268,269,248,270,272,273,227,252,253,274,275,233,243,238,239,242,258,249,258,249,258,249,258,249,278,336,279,279,371,309,287,258,249,279,324,279,245,279,317,291,292,293,288,326,278,291,292,293,336,243,370,371,372,318,320,317,250,288,308,265,323,324,287,302,328,279,329,329,300,251,251,266,299,332,281,254,277,280,298,333,297,334,246,244,245,226,337,338,339,255,255,269,341,259,257,342,248,345,270,346,348,350,271,357,273,358,363,360,227,252,253,315,274,316,275,361,246,278,249,244,249,246,244,246,249,247,249,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,258,360,247,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,297,265,266,267,268,269,248,270,272,273,252,253,274,275,315,336,349,238,245,245,264,264,407,370,386,381,393,371,408,372,282,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,282,282,282,282,401,401,401,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,317,320,265,325,327,328,329,330,251,306,266,267,333,297,334,335,268,339,255,269,340,341,248,343,344,345,270,271,351,272,352,273,358,359,252,253,274,275,265,325,327,329,330,251,266,267,333,334,268,339,255,269,341,248,343,344,345,270,271,272,273,358,359,252,253,274,275,264,281,245,334,281,281,281,265,266,267,268,269,248,270,272,273,252,253,274,275,245,264,249,287,245,264,345,249,264,320,288,308,265,321,323,324,325,287,309,326,327,328,329,330,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,264,335,268,337,339,255,269,340,341,259,256,257,342,248,238,303,343,344,345,270,271,351,272,352,273,358,359,252,253,274,275,361,320,288,308,265,321,323,324,325,287,309,326,327,328,329,330,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,264,335,268,337,339,255,269,340,341,259,256,257,342,248,238,303,343,344,345,270,271,351,272,352,273,358,359,252,253,274,275,361,320,320,320,320,265,265,265,265,325,325,325,325,327,327,327,327,328,328,328,328,329,329,329,329,330,330,330,330,251,251,251,251,306,306,306,306,266,266,266,266,267,267,267,267,333,333,333,333,297,297,297,297,334,334,334,334,335,335,335,335,268,268,268,268,339,339,339,339,255,255,255,255,269,269,269,269,340,340,340,340,341,341,341,341,248,248,248,248,343,343,343,343,344,344,344,344,345,345,345,345,270,270,270,270,271,271,271,271,351,351,351,351,272,272,272,272,352,352,352,352,273,273,273,273,358,358,358,358,359,359,359,359,252,252,252,252,253,253,253,253,274,274,274,274,275,275,275,275,317,317,316,316,316,316,316,316,316,316,316,265,266,267,268,269,248,270,272,273,252,253,274,275,239,359,356,353,363,363,357,240,282,240,363,336,336,271,403,403,229,318,264,233,233,281,247,316,233,239,336,320,317,288,308,265,265,265,265,265,321,323,324,325,287,309,326,327,328,329,330,278,291,310,292,311,293,312,251,306,266,266,266,266,266,299,267,267,267,267,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,268,268,268,268,268,336,228,337,339,255,269,269,269,269,269,340,341,256,257,342,248,248,248,248,248,238,289,303,343,344,345,270,270,270,270,270,346,347,348,304,349,271,351,272,272,272,272,272,240,242,352,352,353,354,355,356,273,273,273,273,273,358,359,363,252,252,252,252,252,253,253,253,253,253,274,274,274,274,274,275,275,275,275,275,361,280,245,279,247,249,342,349,249,247,249,342,249,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,299,267,332,281,281,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,259,256,257,257,342,248,243,238,239,289,303,343,344,345,345,345,270,296,346,347,229,348,304,349,350,271,351,272,272,240,242,352,353,354,355,356,357,273,358,359,359,363,363,258,360,247,249,227,252,253,315,274,316,316,316,81,275,361,244,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,265,266,267,268,269,248,270,272,273,252,253,274,275,244,244,337,240,244,240,244,343,265,266,267,268,269,248,270,272,273,252,253,274,275,233,327,329,251,255,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,254,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,244,244,343,370,370,371,371,372,372,318,318,320,320,317,317,250,250,288,288,308,308,265,265,323,323,324,324,287,287,302,302,328,328,279,279,329,329,300,300,251,251,266,266,299,299,332,332,281,281,254,254,277,277,280,280,298,298,333,333,297,297,334,334,246,246,244,244,245,245,226,226,337,337,338,338,339,339,255,255,269,269,341,341,259,259,257,257,342,342,248,248,345,345,270,270,346,346,348,348,350,350,271,271,357,357,273,273,358,358,363,363,360,360,227,227,252,252,253,253,315,315,274,274,316,316,275,275,361,361,279,279,279,302,300,226,227,300,300,302,300,226,227,300,302,300,226,227,302,226,227,350,360,245,245,264,280,264,353,316,316,354,355,357,258,249,326,256,387,386,387,386,360,229,265,325,327,329,330,251,266,267,333,334,268,228,339,255,269,341,248,343,344,345,270,271,272,273,358,359,252,253,274,275,242,258,249,242,242,279,257,245,323,324,346,361,361,326,246,329,300,251,226,226,255,227,227,350,226,227,233,239,233,239,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,289,265,302,300,266,267,226,268,269,248,270,272,273,227,252,253,274,275,227,372,278,254,280,299,245,350,350,350,350,350,350,317,331,299,347,265,266,267,268,269,248,270,272,273,252,253,274,275,360,360,360,360,360,315,360,315,315,315,360,265,266,267,268,269,248,270,272,273,252,253,274,275,407,370,386,381,393,371,408,372,318,320,233,317,250,288,288,308,308,265,321,323,324,325,287,309,309,326,327,302,328,279,329,330,300,331,278,291,291,310,310,292,292,311,311,293,293,312,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,327,329,251,255,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,279,279,317,244,244,327,329,251,255,227,282,246,265,266,267,268,269,248,270,272,273,252,253,274,275,233,349,245,245,282,238,289,289,289,240,1815,306,245,265,302,266,267,226,268,269,248,270,272,273,227,252,253,274,275,287,245,247,359,306,245,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,306,245,245,298,349,304,331,245,242,340,247,249,245,245,359,359,254,244,302,300,226,227,227,227,302,226,227,278,278,331,331,300,317,371,317,317,317,302,302,302,278,331,302,264,264,254,245,338,338,302,226,227,287,287,309,291,310,292,311,293,312,287,245,264,277,264,246,279,331,279,279,279,279,245,264,254,264,233,243,238,239,240,242,288,308,287,309,291,310,292,311,293,312,288,308,287,309,291,310,292,311,293,312,287,309,291,310,293,312,287,309,291,310,293,312,233,243,238,239,240,242,244,288,308,309,287,288,308,309,287,281,336,336,1815,240,295,289,240,295,289,331,331,331,331,287,245,264,245,264,309,245,264,287,258,393,371,229,302,242,285,233,243,239,1814,285,233,243,239,1814,285,233,243,239,281,244,245,247,249,282,233,245,259,243,238,239,289,289,289,240,242,247,249,249,247,247,323,317,324,337,337,229,317,298,317,317,317,271,323,317,317,372,324,226,227,403,287,291,292,311,293,287,309,310,311,312,287,309,310,311,312,309,310,311,312,309,310,311,312,287,245,247,264,254,300,300,361,361,279,278,279,269,269,370,386,371,372,318,233,250,288,308,287,309,302,279,300,331,278,291,310,292,311,293,312,254,244,264,335,226,336,338,339,342,243,238,239,350,271,242,258,360,249,227,315,316,264,264,264,356,245,299,271,315,393,238,348,240,240,265,266,267,268,269,248,270,272,273,252,253,274,275,348,242,353,279,239,233,278,363,240,316,316,316,247,247,331,331,265,266,267,334,268,269,248,270,272,273,252,253,274,275,349,0,240,240,258,249,245,247,256,245,264,247,249,299,264,249,247,249,316,316,318,245,317,244,233,243,238,239,289,240,242,233,243,238,239,289,240,242,233,239,242,233,239,233,242,315,315,226,338,341,254,285,233,233,243,243,239,233,243,239,315,360,315,360,315,318,353,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,258,360,247,249,227,252,253,315,274,316,81,275,361,370,371,372,318,320,317,250,288,308,265,323,324,287,302,328,279,329,300,251,266,299,332,281,254,277,280,298,333,297,334,246,244,245,226,337,338,339,255,269,341,259,257,342,248,345,270,346,348,350,271,357,273,358,363,360,227,252,253,315,274,316,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,320,265,325,327,328,329,330,251,306,266,267,333,297,334,335,268,339,255,269,340,341,248,343,344,345,270,271,351,272,352,273,358,359,252,253,274,275,350,265,325,327,329,330,251,266,267,333,334,268,228,339,255,269,341,248,343,344,345,270,271,272,273,358,359,252,253,274,275,300,302,281,245,338,348,244,265,302,300,266,267,226,268,269,248,270,272,273,227,252,253,274,275,302,300,300,228,227,372,372,372,372,372,372,338,245,245,247,249,342,349,249,247,249,342,249,245,245,264,233,239,331,381,393,348,381,393,348,361,331,300,279,242,279,279,245,264,247,249,258,249,258,249,258,249,258,249,258,249,258,249,242,242,233,238,239,240,242,239,258,249,242,239,239,242,228,249,265,266,267,268,269,248,270,272,273,252,253,274,275,247,247,247,245,245,245,245,245,247,247,288,287,291,292,293,247,245,317,287,245,247,245,245,233,247,247,245,317,287,291,292,293,245,245,288,287,291,292,293,288,287,291,292,293,287,291,293,287,291,293,288,287,288,287,245,244,247,247,287,309,291,310,292,293,312,287,291,292,293,287,291,292,293,287,291,292,293,287,291,292,293,245,245,245,227,245,247,247,247,247,245,247,247,242,242,247,247,247,245,247,247,247,247,249,247,282,233,243,238,239,289,289,289,240,242,243,243,247,331,331,246,245,361,264,246,264,338,393,348,348,247,249,345,249,279,371,250,347,229,242,228,242,370,371,324,228,372,265,266,267,244,268,269,248,270,272,273,252,253,274,275,265,266,267,244,268,269,248,270,272,273,252,253,274,275,361,244,240,295,295,339,265,266,267,268,269,248,270,272,273,252,253,274,275,346,349,324,324,248,271,274,316,246,246,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,258,360,247,249,227,252,253,315,274,316,81,275,361,289,289,242,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,352,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,302,300,265,266,267,268,269,248,270,272,273,252,253,274,275,233,233,280,337,337,229,229,244,363,233,254,245,264,247,249,233,258,249,233,258,249,258,249,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,356,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,1814,285,233,243,239,242,265,266,267,268,269,248,270,272,273,252,253,274,275,242,0,0,359,358,358,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,338,315,393,318,315,297,315,281,264,249,393,245,264,348,247,249,245,280,245,280,0,279,254,245,278,245,359,356,233,239,233,239,357,363,363,247,407,370,386,381,393,371,408,372,318,320,233,317,250,288,308,265,321,323,324,325,287,309,326,327,302,328,279,329,330,300,331,278,291,310,292,311,293,312,251,306,266,299,267,332,281,254,277,280,298,333,297,334,246,244,245,264,335,226,268,336,228,337,338,339,255,269,340,341,259,256,257,342,248,243,238,239,289,303,343,344,345,270,296,346,347,229,348,304,349,350,271,351,272,240,242,352,353,354,355,356,357,273,358,359,363,258,360,247,249,227,252,253,315,274,316,81,275,361,250,246,245,271,233,271,318,360,315,279,229,315,244,281,244,254,244,244,339,1816,1817,1817,1817,0,0,0,0,0,0,422,0,0,0,0,0,0,0,0,0,1818,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,485,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,547,0,0,0,0,0,548,482,512,542,1819,469,443,1820,1821,454,1822,1823,1824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,422,0,0,0,436,0,0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,485,0,0,0,432,0,0,0,0,0,0,480,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,413,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,420,262,385,374,262,262,0,436,234,262,420,262,235,235,235,235,263,425,423,424,426,427,236,429,236,236,436,234,423,436,234,423,262,262,262,262,262,262,262,262,262,262,482,512,234,234,234,234,234,234,234,234,368,368,260,260,260,262,262,262,262,263,263,263,263,423,423,423,423,424,424,424,424,234,234,234,234,262,262,263,263,423,423,424,424,262,262,262,262,262,262,1825,461,461,461,461,461,461,262,262,1825,262,235,235,425,425,235,235,425,425,1825,235,262,262,444,236,429,236,429,236,429,262,429,262,429,262,262,236,429,262,263,262,262,262,262,262,436,234,234,234,234,234,420,420,420,453,461,368,368,368,260,260,260,261,261,261,262,262,262,385,374,462,463,464,235,235,235,369,369,369,263,263,263,425,425,425,423,423,423,424,424,424,426,426,426,427,427,427,236,236,236,429,429,429,465,465,465,452,452,452,466,466,466,449,449,450,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,235,262,262,263,263,234,260,261,262,235,263,425,423,426,427,236,429,465,452,466,449,450,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,424,262,261,262,369,439,261,374,369,369,235,449,450,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,235,424,262,262,261,262,369,422,261,385,374,369,369,369,369,423,423,262,262,436,234,423,436,234,423,450,461,461,461,262,436,234,423,415,436,234,423,262,453,235,425,453,235,235,425,262,262,262,0,480,453,453,262,1825,234,420,453,461,368,260,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,449,262,262,262,262,235,235,235,235,263,425,423,424,426,427,236,236,236,236,429,429,429,429,436,234,262,436,234,0,419,465,452,466,460,262,0,415,234,420,461,368,260,261,262,385,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,461,368,260,261,262,385,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,418,420,261,262,385,374,369,369,423,262,234,461,368,260,261,262,385,462,463,464,235,369,425,423,424,426,427,236,429,465,452,466,449,450,473,476,262,262,467,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,235,262,472,262,262,262,262,262,262,262,262,262,234,436,234,262,235,235,235,423,424,262,235,235,235,423,424,262,262,262,0,0,0,0,262,262,262,263,423,262,262,262,262,262,262,415,436,234,423,235,436,436,234,423,436,262,262,455,476,476,262,369,234,420,261,262,235,235,235,263,425,423,424,426,236,429,420,262,235,235,235,235,263,425,423,424,426,427,236,429,420,262,235,235,235,235,263,425,423,424,426,427,236,429,420,262,235,235,235,235,263,425,423,424,426,427,236,429,234,420,453,461,368,260,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,235,369,263,263,263,263,263,263,263,425,423,423,424,426,426,426,426,426,426,426,427,427,427,427,427,427,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,369,263,263,263,263,263,263,263,425,423,423,424,426,426,426,426,426,426,426,427,427,427,427,427,427,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,460,467,468,391,444,467,471,262,455,475,455,235,235,412,260,0,0,1820,1821,234,234,234,234,234,234,234,234,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,368,260,260,260,262,262,262,262,262,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,263,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,423,423,424,424,424,424,424,424,426,426,426,426,426,426,426,426,426,426,426,426,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,234,234,234,234,420,420,420,420,420,420,420,420,420,420,262,262,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,425,425,425,425,423,424,424,424,426,426,236,236,236,236,236,236,236,236,429,429,429,429,429,429,429,429,429,429,0,262,423,262,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,424,235,0,234,420,368,260,261,262,235,369,263,425,423,424,426,427,236,429,465,452,466,234,260,261,262,235,263,425,423,426,427,236,429,465,452,466,415,262,472,474,474,235,235,480,234,420,368,260,261,262,262,235,235,235,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,234,420,368,260,261,262,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,234,234,234,234,420,420,420,420,368,368,368,368,260,260,260,260,261,261,261,261,262,262,262,262,235,235,235,235,369,369,369,369,263,263,263,263,425,425,425,425,423,423,423,423,424,424,424,424,426,426,426,426,427,427,427,427,236,236,236,236,429,429,429,429,465,465,465,465,452,452,452,452,466,466,466,466,235,425,425,436,234,262,235,423,436,234,423,436,234,262,262,262,369,369,369,369,485,234,420,262,235,235,263,425,423,426,427,236,429,485,234,420,262,235,235,263,425,423,426,427,236,429,262,235,425,236,236,429,429,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,436,234,234,234,234,234,234,234,234,234,420,461,368,260,261,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,235,235,235,369,263,263,425,425,423,423,424,426,426,427,427,236,236,429,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,262,450,415,415,415,415,415,415,415,415,436,234,234,234,234,234,420,453,461,368,260,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,385,374,462,463,464,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,369,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,425,425,425,425,425,425,425,425,425,425,425,423,423,423,423,423,423,423,423,423,424,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,427,427,427,427,427,427,427,427,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,429,429,429,429,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,235,262,262,235,425,235,235,425,425,262,262,262,262,262,262,235,235,263,235,262,262,262,262,262,262,262,262,262,262,262,262,262,262,235,425,234,234,262,262,262,262,262,449,262,263,234,234,234,234,234,423,234,235,429,262,262,262,262,262,235,235,425,425,235,235,425,425,420,425,449,450,262,262,262,262,262,235,423,236,429,423,235,385,374,436,234,423,424,424,235,235,235,235,262,262,262,262,262,262,262,262,262,262,262,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,235,235,425,425,235,429,432,234,234,234,234,234,234,234,234,234,234,234,262,262,262,262,262,262,262,262,263,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,234,234,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,420,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,263,425,425,425,425,425,425,425,425,423,424,426,426,426,426,426,426,427,427,427,236,236,236,236,236,429,429,429,234,234,234,234,234,417,234,368,260,262,262,262,262,262,262,262,262,423,426,234,234,420,420,261,261,262,262,235,235,263,263,425,425,423,423,424,424,426,426,236,236,429,429,262,262,263,262,262,262,262,262,262,262,262,262,262,262,262,262,262,0,262,262,262,262,262,422,422,439,439,262,422,262,263,422,439,439,262,263,262,263,470,423,419,466,234,420,260,261,262,235,263,425,423,426,427,236,429,465,452,466,262,262,262,470,262,436,234,234,262,262,262,262,262,428,420,262,262,262,262,235,235,235,235,235,425,425,423,424,426,427,236,429,444,444,262,444,1825,1825,1825,234,423,436,234,262,262,420,262,262,262,263,425,423,424,420,262,262,262,263,423,424,0,262,263,0,262,263,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,423,262,460,262,262,262,262,262,262,262,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,453,461,368,260,261,262,385,374,462,463,464,235,369,425,423,424,426,427,236,429,465,452,466,449,450,473,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,420,235,425,449,450,262,262,418,261,262,385,374,369,369,423,262,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,385,374,374,234,234,234,236,444,444,428,420,235,235,235,235,235,425,425,426,236,429,449,450,460,428,420,235,235,235,235,235,425,425,426,236,429,428,420,235,235,235,235,235,425,425,426,236,429,428,235,235,235,425,425,236,428,420,235,235,235,235,235,425,425,236,429,427,444,417,422,261,385,374,369,369,0,262,369,263,444,436,234,234,262,234,234,420,420,420,453,461,368,260,261,262,262,385,374,462,463,464,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,369,263,263,263,425,425,425,425,425,425,425,425,425,423,423,424,424,426,426,426,426,426,426,426,427,427,427,427,236,236,236,236,236,236,429,429,429,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,262,467,468,391,471,234,234,234,262,423,415,415,262,262,455,234,262,423,424,429,235,262,263,262,263,262,262,262,460,468,391,234,460,391,485,234,420,262,235,235,263,425,423,426,427,236,429,262,263,449,423,262,262,369,263,444,444,262,235,235,263,423,424,236,236,236,236,0,422,436,234,235,423,415,436,234,415,460,436,234,436,234,415,436,234,415,262,235,425,236,236,429,429,262,235,425,236,236,429,429,262,262,262,263,262,468,391,262,423,262,423,262,263,262,485,262,420,425,420,425,449,450,0,420,425,420,425,0,415,1823,1824,368,260,260,260,262,415,262,262,263,263,262,235,445,262,462,463,464,0,415,454,1822,368,260,260,260,262,415,262,262,263,263,436,234,436,234,542,1819,234,234,234,234,234,234,234,234,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,368,260,260,260,262,262,262,262,262,262,262,262,262,262,262,262,262,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,263,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,423,423,423,423,423,423,424,424,424,424,424,424,424,424,424,424,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,427,427,427,427,427,427,427,427,427,427,427,427,427,427,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,436,234,234,234,234,234,234,234,234,234,420,420,420,420,420,420,420,420,420,420,420,420,420,420,262,262,262,262,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,425,425,425,425,423,423,423,424,424,424,424,424,426,426,427,427,427,236,236,236,236,236,236,236,236,236,236,429,429,429,429,429,429,429,429,429,429,429,429,262,412,260,262,262,369,234,234,262,262,235,235,235,263,263,423,423,424,424,262,234,453,368,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,235,235,369,263,263,263,263,263,263,425,425,423,426,426,426,426,426,426,427,427,427,427,427,427,236,236,236,236,429,429,429,429,449,450,455,460,467,468,470,391,471,472,473,474,475,476,235,453,235,262,262,262,235,262,236,236,235,425,429,429,262,262,262,262,262,262,262,385,374,235,460,473,385,374,460,470,235,235,1825,445,547,234,262,262,462,463,464,423,423,424,436,234,234,547,234,262,262,423,423,424,262,423,424,262,423,424,262,262,369,455,475,455,475,0,234,234,420,420,262,262,235,235,235,235,425,425,423,423,424,424,426,426,427,427,236,236,429,429,1825,263,262,262,262,262,262,262,423,467,468,391,467,468,391,460,0,0,262,263,0,0,0,0,0,0,0,444,444,262,415,0,262,423,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,262,262,436,234,436,234,235,235,425,425,423,436,234,234,234,262,262,262,429,262,429,262,262,234,234,262,262,262,423,449,450,449,450,262,427,473,422,261,385,374,369,369,385,374,439,261,374,369,369,423,262,467,468,470,471,475,468,472,467,471,262,471,262,262,262,262,235,467,471,262,473,460,234,420,461,368,260,261,262,385,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,261,262,235,263,425,423,424,426,236,429,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,368,260,261,262,235,369,263,425,423,424,426,427,236,429,465,452,466,234,260,261,262,235,263,425,423,426,427,236,429,465,452,466,234,436,234,424,461,461,461,461,461,461,461,436,234,473,474,475,453,453,453,453,423,420,262,262,235,235,235,235,263,425,423,424,426,427,236,429,234,234,234,234,234,234,234,234,234,234,234,234,262,460,262,262,262,262,262,262,262,262,262,235,425,425,235,262,262,262,262,262,485,234,420,262,235,235,263,425,423,426,427,236,429,485,234,420,262,235,235,263,425,423,426,427,236,429,548,261,262,385,374,369,369,369,369,262,369,262,262,262,262,262,262,449,423,235,236,236,236,236,236,235,235,425,425,235,235,235,235,425,425,236,429,436,234,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,423,436,234,234,262,547,234,262,262,423,424,235,235,425,425,235,235,425,425,235,235,429,429,262,235,485,234,420,262,235,235,263,425,423,426,427,236,429,262,262,262,450,449,449,420,262,262,450,449,449,262,234,262,449,262,429,449,234,449,450,449,450,449,450,422,261,262,385,374,369,369,385,374,262,436,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,262,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,234,432,432,234,234,234,234,234,234,234,234,234,234,234,234,432,431,431,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,431,431,431,431,431,431,431,431,432,234,234,234,234,234,234,234,234,234,234,234,442,262,263,442,262,263,442,262,263,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,431,442,262,263,442,262,263,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,442,262,263,432,234,234,234,234,234,234,234,234,234,234,234,431,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,234,432,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,234,432,432,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,432,234,432,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,432,234,234,234,234,234,234,234,234,234,234,234,234,432,234,432,432,234,234,234,234,234,234,234,234,234,234,234,423,262,262,431,432,234,234,234,234,234,234,234,234,234,234,234,436,234,423,235,436,234,436,262,473,262,436,234,423,436,234,436,480,262,235,235,235,425,425,262,262,262,262,262,262,460,467,468,391,471,473,262,262,262,262,262,262,460,467,468,391,471,262,262,262,262,473,485,234,420,262,235,235,263,425,423,426,427,236,429,436,234,423,423,263,422,261,262,385,374,369,369,385,374,469,443,234,234,234,234,234,234,234,234,368,368,260,260,260,262,262,262,262,263,263,263,263,263,263,263,263,423,423,423,423,424,424,424,424,234,234,234,234,262,262,263,263,423,423,424,424,262,470,234,234,262,262,262,262,262,0,262,263,262,262,262,262,262,439,262,263,439,262,262,262,262,262,262,472,436,234,423,436,234,423,235,425,436,234,234,420,262,262,235,235,235,263,425,426,427,236,429,449,450,234,234,234,234,234,234,235,236,234,420,461,368,260,261,262,385,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,436,473,449,450,235,235,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,234,262,235,263,425,423,426,427,236,429,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,420,262,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,263,263,425,425,425,425,425,425,425,425,423,424,426,426,426,426,426,426,427,427,427,236,236,236,236,236,429,429,429,234,234,234,234,234,234,449,262,262,262,262,262,262,262,262,262,262,262,262,262,428,420,262,262,235,235,235,235,235,425,425,426,427,236,429,428,420,262,235,235,235,235,235,425,425,236,429,235,236,236,236,236,236,262,425,262,425,262,475,436,234,235,262,0,0,234,420,453,461,368,260,261,262,385,374,462,463,464,235,235,235,235,235,235,235,235,369,263,425,423,424,426,427,236,236,236,236,236,429,429,429,429,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,420,262,423,424,427,467,468,391,471,420,262,423,424,427,391,427,0,236,236,235,472,473,474,235,473,262,262,262,262,235,262,235,235,425,436,234,262,262,262,417,368,260,415,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,455,468,391,473,476,262,420,262,235,235,235,235,263,425,423,424,426,427,236,429,262,455,460,467,468,470,391,471,472,475,460,470,467,471,475,449,450,436,234,234,262,547,234,262,262,423,424,420,235,425,449,450,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,455,262,455,455,473,417,368,260,235,262,423,426,427,0,423,262,262,262,262,262,262,262,262,262,234,420,453,461,368,260,261,262,385,374,462,463,464,235,369,263,425,423,424,426,427,236,429,465,452,466,449,450,455,460,467,468,470,391,444,471,472,473,474,475,476,262,262,0,0,262,262,1825,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,262,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,262,0,234,234,262,262,423,423,424,424,262,262,262,262,262,449,450,262,262,262,485,262,262,449,450,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,0,0,422,0,1818,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,547,0,0,0,548,482,512,542,1819,469,443,1820,1821,454,1822,1823,1824,0,0,0,422,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,480,0,0,0,0,0,0,0,0,413,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,262,385,374,482,512,0,439,422,480,418,0,0,262,369,0,412,0,1820,1821,480,417,422,422,439,439,422,422,439,439,0,418,417,422,0,422,1823,1824,445,454,1822,542,1819,412,369,445,547,547,369,422,385,374,439,548,547,422,385,374,480,0,422,385,374,469,443,439,439,417,0,547,417,235,0,1826,1826,0,0,0,0,0,1826,1826,1826,1826,1827,0,0,1828,1829,1830,1831,0,0,0,0,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,560,561,556,556,556,557,557,557,558,558,558,559,559,559,560,560,560,561,561,561,562,562,562,563,563,563,564,564,564,565,565,565,566,566,566,567,567,567,568,568,568,569,569,569,570,570,570,571,571,571,572,572,572,573,573,573,574,574,574,575,575,575,576,576,576,577,577,577,578,578,578,579,579,579,580,580,580,581,581,581,582,582,582,583,583,583,584,584,584,585,585,585,586,586,586,587,587,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,561,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,556,556,556,557,557,557,557,558,558,558,558,559,559,559,559,560,560,560,560,561,561,561,561,562,562,562,562,563,563,563,563,564,564,564,564,565,565,565,565,566,566,566,566,567,567,567,567,568,568,568,568,569,569,569,569,570,570,570,570,571,571,571,571,572,572,572,572,573,573,573,573,574,574,574,574,575,575,575,575,576,576,576,576,577,577,577,577,578,578,578,578,579,579,579,579,580,580,580,580,581,581,581,581,582,582,582,582,583,583,583,583,584,584,584,584,585,585,585,585,586,586,586,586,587,587,587,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,562,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,562,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,564,565,566,567,569,570,571,572,574,575,576,577,579,580,581,582,584,585,586,587,565,566,567,570,571,572,575,576,577,580,581,582,585,586,587,566,567,571,572,576,577,581,582,586,587,567,572,577,582,587,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,564,565,566,567,569,570,571,572,574,575,576,577,579,580,581,582,584,585,586,587,565,566,567,570,571,572,575,576,577,580,581,582,585,586,587,566,567,571,572,576,577,581,582,586,587,567,572,577,582,587,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,569,570,571,572,574,575,576,577,579,580,581,582,584,585,586,587,570,571,572,575,576,577,580,581,582,585,586,587,571,572,576,577,581,582,586,587,572,577,582,587,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,574,575,576,577,579,580,581,582,584,585,586,587,575,576,577,580,581,582,585,586,587,576,577,581,582,586,587,577,582,587,578,579,580,581,582,583,584,585,586,587,578,579,580,581,582,583,584,585,586,587,579,580,581,582,584,585,586,587,580,581,582,585,586,587,581,582,586,587,582,587,583,584,585,586,587,583,584,585,586,587,584,585,586,587,585,586,587,586,587,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,559,560,561,562,556,557,558,559,560,561,557,558,559,560,561,558,559,560,561,0,0,1818,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,482,512,542,1819,469,443,1820,1821,454,1822,1823,1824,0,0,413,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,412,482,512,412,1820,1821,417,417,1823,1824,454,1822,542,1819,412,469,443,417,417,0,0,535,536,0,0,0,0,0,0,540,541,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,549,477,540,549,477,540,549,477,540,541,549,550,477,478,549,550,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,540,541,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,477,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,549,550,477,478,540,541,540,541,549,550,477,478,540,541,477,478,550,478,540,541,477,478,540,549,477,540,541,549,550,477,478,540,541,540,541,549,550,477,478,540,541,540,549,477,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,540,541,549,550,477,478,0,422,0,548,0,0,0,422,0,0,0,0,0,0,439,422,418,422,422,439,439,422,422,439,439,418,422,422,422,439,548,422,422,439,439,0,0,0,1832,588,588,588,589,589,589,588,589,588,589,1832,588,589,1832,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,588,588,588,589,589,589,589,588,589,588,589,588,589,588,589,1832,588,588,589,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,588,589,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,420,453,453,419,263,423,424,419,428,428,428,428,428,428,429,420,425,449,450,424,236,429,428,428,236,426,427,0,0,0,0,0,0,0,0,0,0,0,0,0,0,460,467,476,467,471,455,474,474,0,470,0,444,444,468,391,455,475,467,468,391,468,472,471,473,470,472,475,0,473,476,455,455,473,0,0,0,0,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,215,0,0,215,591,215,215,215,591,215,591,215,215,591,215,591,215,591,215,591,215,591,215,215,215,215,591,215,591,591,215,591,591,215,591,215,591,215,215,215,215,215,215,215,215,215,215,591,215,591,215,591,215,591,591,215,215,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,215,591,215,591,215,591,215,215,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,591,215,1812,1813,0,593,0,0,0,594,128,128,128,0,594,0,0,0,0,0,0,0,0,0,0,63,147,593,46,128,594,63,593,593,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,63,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,63,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,147,46,128,594,63,593,595,597,599,600,0,46,46,128,594,63,593,595,596,597,598,599,600,46,46,128,594,63,593,595,596,597,598,599,600,596,63,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,593,63,598,593,593,0,593,593,593,593,128,128,128,128,128,63,593,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,46,128,128,594,594,63,63,593,593,595,595,597,597,598,599,599,600,600,128,595,0,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,596,147,597,63,597,0,0,0,0,599,0,0,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,597,599,600,46,128,594,63,593,595,596,597,598,599,600,593,46,128,594,63,595,597,598,599,600,596,63,0,601,597,597,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,46,128,594,63,593,595,596,597,598,599,600,0,596,46,128,594,63,593,595,596,597,598,599,600,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,147,147,147,147,0,0,147,147,147,147,147,147,147,147,0,0,147,601,0,0,601,602,601,602,601,602,601,602,601,602,601,601,602,601,602,601,602,601,602,601,602,602,601,602,601,602,601,601,601,602,601,602,601,601,602,601,602,601,602,601,602,601,602,601,602,601,602,601,601,601,602,601,601,601,602,601,602,601,602,601,602,601,602,601,602,601,602,601,602,601,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1833,0,983,0,0,0,1833,0,1834,0,0,0,0,1835,1835,111,111,111,1835,111,111,1835,1835,111,111,111,111,111,111,111,111,1835,111,111,1835,1835,1835,1835,977,1836,111,111,111,111,111,983,983,983,983,983,983,983,983,983,983,983,983,983,1835,1835,1835,1835,1835,1835,111,111,111,111,111,111,111,1835,1835,1835,0,111,111,111,1834,1835,1835,1835,1835,1835,1835,111,1835,111,111,111,111,111,111,111,1835,1835,1835,1835,1835,111,1835,1835,111,1835,1835,1834,1837,0,0,1837,0,1837,604,604,0,604,0,0,0,75,75,604,0,0,1837,0,0,1837,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,604,1837,604,1837,604,1837,604,1837,604,604,604,1837,604,1837,604,1837,604,604,604,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,604,604,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,604,1837,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,607,0,607,607,0,0,605,606,607,607,607,176,608,605,606,607,176,608,605,606,607,176,608,607,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,0,608,605,606,607,176,608,605,606,606,607,176,608,605,606,606,607,176,608,605,605,176,605,606,607,176,608,605,606,607,176,608,607,607,607,607,607,607,607,607,605,607,176,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,605,606,606,607,607,176,176,608,608,0,606,608,176,176,0,607,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,176,176,176,608,176,0,176,176,176,176,176,176,176,176,176,176,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,607,607,176,606,607,176,608,176,176,176,176,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,605,606,607,176,608,176,605,606,607,176,608,608,605,606,607,176,608,615,615,615,0,0,615,0,615,0,615,614,615,614,615,614,615,614,615,614,614,614,614,615,615,614,615,614,614,615,614,614,615,614,615,614,615,614,615,614,615,614,615,615,614,614,0,615,614,615,614,615,614,615,614,615,614,615,614,615,614,0,614,615,614,615,614,615,614,614,615,614,615,614,615,614,615,614,615,614,615,614,615,614,615,614,1838,1838,716,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,716,716,0,0,0,0,776,716,716,0,0,716,716,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,716,716,0,0,0,0,0,0,0,0,0,716,699,716,619,619,0,0,0,0,0,716,716,0,0,0,879,0,0,0,632,633,877,716,716,699,0,0,0,706,716,0,619,716,0,0,0,0,776,716,716,0,0,0,0,716,0,716,0,0,0,0,0,0,0,0,716,703,699,0,716,716,716,716,0,0,775,668,716,716,0,0,0,0,0,706,706,706,706,0,0,0,0,730,0,0,716,0,0,0,0,703,716,0,0,0,716,706,0,0,0,0,0,0,716,0,0,0,0,877,0,0,716,716,0,730,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,879,716,716,716,879,716,716,716,509,516,513,641,642,1833,0,0,727,724,724,0,0,0,0,0,0,0,0,0,716,983,619,619,0,0,0,0,0,0,0,0,0,0,0,716,716,0,869,0,0,0,0,778,0,716,716,879,879,879,879,0,0,0,879,623,624,523,508,625,524,528,626,627,520,510,515,527,88,74,511,519,507,526,514,0,0,0,909,0,0,0,716,0,0,0,775,0,644,230,716,716,716,716,716,716,716,716,716,716,716,716,716,716,0,0,0,716,0,0,0,727,0,716,722,713,713,706,706,706,713,778,720,0,0,869,0,0,716,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,177,177,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,716,877,0,0,0,0,0,0,0,0,716,716,0,0,668,722,716,706,0,0,0,0,0,716,716,716,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,177,88,74,511,519,507,526,514,88,74,511,519,507,526,514,187,517,525,620,621,622,519,514,525,622,88,74,511,519,507,526,514,187,517,525,620,621,622,88,74,511,519,507,526,514,187,517,525,620,621,622,74,511,519,526,514,517,525,621,622,619,909,716,716,716,716,706,0,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,619,716,741,879,706,713,722,632,633,0,716,0,716,716,1839,716,0,716,716,720,716,716,727,716,727,774,774,723,716,0,877,0,0,0,0,716,0,0,716,619,0,0,723,0,0,741,0,0,0,0,0,716,619,716,722,713,713,706,706,706,713,0,0,716,0,0,177,1833,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,716,0,1834,0,706,716,0,0,0,0,0,0,0,717,0,716,716,0,716,716,0,716,706,716,0,0,706,1839,0,0,716,0,0,0,879,877,0,0,716,716,106,716,0,0,0,0,716,0,509,516,513,641,642,716,0,0,0,0,0,0,0,0,0,0,0,716,879,883,879,883,879,879,0,0,0,883,879,0,0,0,0,775,0,0,716,716,0,717,0,0,0,0,0,0,0,0,0,716,727,0,0,0,716,0,877,0,1840,1841,0,0,1842,1841,0,0,0,1842,1840,0,0,0,716,716,716,519,514,525,522,622,637,619,716,0,716,716,716,716,716,716,716,706,0,0,716,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,648,648,716,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,619,648,648,716,706,716,74,511,519,526,514,517,525,521,522,621,622,636,637,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,648,648,687,643,890,908,889,682,762,619,88,74,511,519,507,526,514,187,517,525,620,621,622,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,1843,1843,1843,27,691,66,632,633,634,619,523,88,88,74,74,508,625,524,528,511,511,519,519,520,510,515,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,632,633,619,523,88,88,74,74,508,625,524,511,511,519,519,520,510,515,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,508,520,523,625,510,524,515,29,818,639,29,67,38,34,509,516,513,641,642,14,1835,1835,88,74,528,511,527,507,526,0,0,44,509,516,513,641,642,74,511,526,74,511,526,74,511,526,645,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,230,650,225,225,657,656,832,1844,829,669,643,835,64,767,660,660,660,666,687,688,688,688,674,774,50,50,50,836,38,775,645,645,645,645,689,690,661,27,650,650,25,90,90,90,770,618,823,1833,827,691,771,772,756,225,225,831,757,869,833,659,677,632,632,632,633,633,633,679,692,692,692,763,29,764,776,639,837,138,35,78,53,62,693,694,694,694,695,696,697,819,820,698,43,44,662,662,662,613,663,663,663,699,700,701,702,702,702,703,704,704,704,705,706,706,706,707,707,707,649,708,777,33,33,33,709,34,710,711,712,713,713,713,714,612,715,716,716,716,717,717,717,17,668,838,718,719,720,721,722,70,723,723,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,741,741,683,742,743,762,744,13,745,745,648,648,648,648,509,509,509,509,516,516,516,516,513,513,513,513,641,641,641,641,642,642,642,642,623,623,623,624,624,624,523,523,523,88,88,88,74,74,74,508,508,508,625,625,625,524,524,524,528,528,528,511,511,511,519,519,519,626,626,626,627,627,627,520,520,520,510,510,510,515,515,515,527,527,527,507,507,507,526,526,526,514,514,514,187,187,187,187,517,517,517,517,525,525,525,525,91,91,91,91,521,521,521,521,522,522,522,522,620,620,620,621,621,621,622,622,622,635,635,635,636,636,636,637,637,637,177,177,177,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,648,509,509,516,516,513,513,641,641,642,642,623,623,624,624,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,626,626,627,627,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,621,622,635,636,637,177,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,645,632,633,90,90,650,225,508,523,625,524,88,187,91,620,635,74,511,517,521,621,636,519,525,522,622,637,688,50,645,90,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,527,528,88,507,187,91,635,74,511,526,517,521,636,519,514,525,522,637,88,507,91,620,635,74,511,526,521,621,636,519,514,522,622,637,520,510,515,177,177,656,645,225,225,632,633,523,88,74,508,524,511,519,520,510,515,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,645,633,523,88,74,508,524,519,187,517,525,91,521,522,645,645,659,177,657,656,660,645,661,657,656,645,650,650,90,225,632,633,662,523,88,74,508,524,528,511,519,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,523,88,74,508,524,519,187,517,525,91,521,522,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,619,619,104,104,177,177,177,645,659,90,88,507,187,91,620,74,511,526,517,521,621,519,514,525,522,622,88,507,187,620,635,74,511,526,517,621,636,519,514,525,622,637,507,187,91,620,635,526,517,521,621,636,526,517,521,621,636,514,525,522,622,637,661,762,757,757,698,698,0,835,771,698,697,697,697,697,42,191,712,619,908,758,679,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,632,633,509,516,513,641,642,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,632,633,509,516,513,641,642,509,516,513,641,642,632,633,509,516,513,641,642,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,0,632,633,509,516,513,641,642,643,674,34,832,829,674,831,833,0,632,633,509,516,513,641,642,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,632,633,509,516,513,641,642,0,1835,677,679,679,679,679,678,731,0,1839,657,656,832,1844,829,669,643,835,64,64,767,660,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,27,650,650,650,25,90,770,618,823,1833,827,691,771,772,756,225,225,225,831,757,869,833,659,677,632,632,633,633,679,692,763,29,764,776,639,837,138,35,35,78,78,53,53,62,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,680,681,49,66,685,724,725,726,682,682,727,728,634,189,60,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,683,742,743,762,762,744,13,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,177,177,650,225,681,685,657,656,832,1844,829,669,643,835,64,767,660,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,225,831,757,869,833,659,677,632,633,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,680,681,49,66,685,724,725,726,682,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,733,888,692,743,705,721,718,715,657,656,661,657,656,661,758,645,645,104,104,88,74,511,519,507,526,514,756,680,67,1835,1835,90,177,177,177,177,700,767,659,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,88,74,511,519,507,526,514,88,74,511,519,507,526,514,645,1846,34,732,660,687,688,674,50,38,645,689,690,661,650,90,618,691,659,632,692,693,694,695,696,697,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,33,709,34,710,711,712,713,714,612,715,716,717,17,718,719,720,721,722,70,723,680,49,66,724,725,726,682,727,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,680,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,881,660,645,650,660,687,688,674,50,38,645,689,690,661,650,90,618,691,659,632,692,693,694,695,696,697,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,33,709,34,710,711,712,713,714,612,715,716,717,17,718,719,720,721,722,70,723,680,49,66,724,725,726,682,727,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,660,688,674,50,38,645,689,690,650,90,618,691,659,632,692,693,694,695,696,697,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,33,709,34,710,711,712,713,714,612,715,716,717,17,718,719,720,721,722,70,723,680,49,66,724,725,726,682,727,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,660,688,645,90,632,633,692,704,707,33,717,177,692,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,523,508,625,524,520,510,515,523,508,625,524,520,510,515,79,39,42,737,93,660,688,645,90,632,633,692,704,707,33,717,177,832,829,708,13,528,527,643,649,725,726,1847,88,74,511,519,507,526,514,17,772,770,698,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,1848,618,34,0,523,88,74,508,524,519,187,517,525,91,521,522,74,511,526,517,521,621,636,764,659,44,743,832,829,831,833,0,645,659,700,736,759,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,0,67,645,645,645,0,643,50,38,645,27,25,90,618,691,756,757,632,633,29,697,698,43,44,613,699,701,702,703,704,705,706,707,649,708,33,34,612,715,716,717,17,718,722,70,723,52,66,724,725,726,682,728,634,189,729,67,129,619,79,93,39,42,191,190,41,678,731,732,733,617,735,737,738,758,759,739,740,741,744,13,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,1844,732,677,881,618,691,1849,38,38,38,38,38,38,835,763,700,728,728,1850,657,656,832,1844,829,669,643,835,64,64,767,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,661,27,27,650,650,25,90,90,770,618,823,1833,827,691,771,772,756,756,225,225,831,757,869,833,659,677,632,632,633,633,679,692,763,29,764,776,639,837,138,35,35,78,78,53,53,62,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,700,701,702,703,704,705,706,707,649,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,17,668,838,718,719,720,721,722,70,723,52,52,680,681,681,681,49,49,66,685,685,724,725,726,682,727,728,634,189,189,60,60,729,761,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,617,734,734,735,735,736,737,738,1845,758,759,739,740,741,683,683,742,742,743,743,762,762,744,13,745,648,509,516,513,641,642,623,623,624,624,523,88,74,508,508,625,524,528,528,511,511,519,519,626,626,627,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,1850,657,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,27,27,650,25,90,770,618,823,1833,827,691,771,772,756,756,225,225,831,757,869,833,659,677,632,633,633,679,692,763,29,764,776,639,837,138,35,78,53,53,62,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,700,701,702,703,704,705,706,707,649,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,17,668,838,718,719,720,721,722,70,723,52,52,680,681,49,49,66,685,685,685,724,725,726,682,727,728,634,189,189,60,60,729,761,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,617,734,734,735,735,736,737,738,1845,758,759,739,740,741,683,683,742,742,743,743,762,762,744,13,745,648,509,516,513,641,642,623,623,624,624,523,88,74,508,508,625,524,528,528,511,511,519,519,626,626,627,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,214,688,645,692,763,764,696,710,711,619,733,737,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,913,523,508,625,524,520,510,515,1835,88,74,511,519,507,526,514,88,74,511,519,507,526,514,187,517,525,620,621,622,632,633,88,88,74,74,528,511,511,519,519,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,632,633,88,88,74,74,511,511,519,519,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,177,177,88,74,511,519,507,526,514,187,517,525,620,621,622,177,177,0,0,0,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,697,0,645,645,657,656,832,1844,829,669,643,835,64,767,767,660,666,687,688,674,674,774,50,836,38,775,645,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,656,881,740,745,740,0,0,0,660,688,50,645,90,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,688,50,645,90,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,38,739,740,38,739,38,38,38,38,739,740,739,645,632,633,645,632,633,659,618,618,833,843,770,771,772,660,688,50,645,650,90,90,90,225,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,881,660,688,50,645,650,90,225,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,660,660,660,660,688,688,688,688,50,50,50,50,645,645,645,645,90,90,90,90,632,632,632,632,633,633,633,633,692,692,692,692,694,694,694,694,662,662,662,662,663,663,663,663,702,702,702,702,704,704,704,704,706,706,706,706,707,707,707,707,33,33,33,33,713,713,713,713,716,716,716,716,717,717,717,717,723,723,723,723,741,741,741,741,648,648,648,648,509,509,509,509,516,516,516,516,513,513,513,513,641,641,641,641,642,642,642,642,187,187,187,187,517,517,517,517,525,525,525,525,91,91,91,91,521,521,521,521,522,522,522,522,620,620,620,620,621,621,621,621,622,622,622,622,635,635,635,635,636,636,636,636,637,637,637,637,177,177,177,177,688,645,692,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,0,697,697,701,88,74,511,519,507,526,514,645,88,74,511,507,526,187,517,91,521,620,621,635,636,645,0,1835,1835,0,1835,1835,737,736,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,882,880,977,650,225,740,740,38,39,42,190,39,42,190,88,74,511,519,507,526,514,0,657,656,669,669,669,669,767,660,660,688,688,774,774,50,38,775,775,645,661,27,650,650,90,90,618,691,756,225,225,659,632,632,633,633,692,692,29,776,776,693,694,694,695,696,697,698,43,44,662,613,663,699,700,701,702,703,704,704,705,706,706,707,649,777,777,33,709,34,710,711,712,713,713,714,714,612,715,716,717,718,719,720,721,722,70,723,680,49,66,724,682,727,728,67,619,778,778,79,730,93,39,42,191,190,41,678,731,732,733,617,735,737,738,739,740,741,13,745,648,509,509,516,516,513,513,641,641,642,642,623,623,624,624,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,626,626,627,627,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,1851,677,677,732,731,767,659,674,756,756,1836,43,88,74,511,519,507,526,514,43,745,657,657,656,832,1844,829,669,643,835,64,767,660,660,660,666,666,666,687,687,688,674,774,50,836,38,775,645,645,645,645,645,689,690,661,661,27,650,25,90,90,90,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,632,632,632,632,633,633,633,633,679,692,763,29,764,776,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,662,613,663,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,619,619,619,778,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,509,509,516,516,516,513,513,513,641,642,623,624,523,523,523,523,523,523,523,523,88,88,88,88,88,88,88,88,88,74,74,74,74,74,74,74,74,74,74,74,508,508,508,508,508,508,625,625,625,625,625,524,524,524,524,524,524,524,528,528,528,528,528,511,511,511,511,511,511,511,511,511,511,511,511,511,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,626,627,520,520,520,520,520,520,510,510,510,510,510,510,510,515,515,515,515,515,515,515,527,527,527,527,527,507,507,507,507,507,507,507,507,507,507,507,507,526,526,526,526,526,526,526,526,526,526,526,526,526,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,187,187,187,187,187,187,187,187,517,517,517,517,517,517,517,517,525,525,525,525,525,525,525,525,525,525,91,91,91,91,91,91,91,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,620,620,620,620,620,620,621,621,621,621,621,621,621,622,622,622,622,622,622,622,622,622,635,635,635,635,635,635,636,636,636,636,636,636,636,637,637,637,637,637,637,637,637,637,177,177,177,177,528,527,623,523,88,508,625,626,520,510,507,623,626,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,624,523,625,524,528,627,510,515,527,645,645,645,623,624,523,508,625,524,626,627,520,510,515,623,624,523,508,625,524,626,627,520,510,515,623,624,523,508,625,524,626,627,520,510,515,623,624,523,508,625,524,626,627,520,510,515,745,523,508,625,524,520,510,515,645,523,625,524,528,510,515,527,90,745,645,623,523,625,626,510,623,626,623,624,508,524,528,626,627,520,515,527,624,627,623,508,524,528,624,523,625,528,627,510,527,745,177,177,177,523,88,74,508,524,519,187,517,525,91,521,522,624,523,625,524,627,510,515,645,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,41,528,527,528,527,528,527,624,524,627,515,624,523,625,524,528,627,510,515,527,624,523,625,524,528,627,510,515,527,624,523,625,524,528,627,510,515,527,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,41,623,624,523,625,524,626,627,510,515,508,520,623,523,625,626,510,624,524,627,515,528,527,680,740,177,177,177,645,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,688,90,632,633,692,695,696,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,41,623,624,523,625,524,626,627,510,515,1852,643,682,645,528,527,760,643,643,50,50,38,38,645,645,27,27,25,25,90,90,618,618,691,691,756,756,757,757,632,632,633,633,29,29,697,697,698,698,43,43,44,44,613,613,699,699,701,701,702,702,703,703,704,704,705,705,706,706,707,707,649,649,708,708,33,33,34,34,612,612,715,715,716,716,717,717,17,17,718,718,722,722,70,70,723,723,52,52,66,66,724,724,725,725,726,726,682,682,728,728,634,634,189,189,729,729,67,67,129,129,619,619,79,79,93,93,39,39,42,42,191,191,190,190,41,41,678,678,731,731,732,732,733,733,617,617,735,735,737,737,738,738,758,758,759,759,739,739,740,740,741,741,744,744,13,13,648,648,509,509,516,516,513,513,641,641,642,642,623,623,624,624,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,626,626,627,627,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,177,528,527,881,619,757,693,711,714,701,705,712,613,983,983,983,983,983,983,983,983,983,983,983,983,983,33,34,831,833,643,687,674,645,618,756,708,17,725,726,191,735,758,743,708,725,726,708,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,643,674,674,643,660,674,645,618,756,708,17,725,726,758,758,758,674,674,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,13,13,0,1846,1839,64,650,225,35,78,53,62,60,762,13,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,17,17,743,191,645,17,34,27,29,688,50,645,650,90,225,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,881,619,1835,1835,0,1835,0,1835,0,0,0,1835,818,640,639,727,737,50,639,693,694,695,711,747,191,823,827,910,190,93,39,678,678,0,0,693,697,697,697,697,698,645,1835,33,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,43,42,645,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,0,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,756,13,13,25,818,1853,1839,64,650,225,639,138,35,78,53,62,60,762,13,138,29,645,17,643,674,645,645,725,726,758,674,725,726,645,645,674,13,25,29,29,821,819,820,27,25,74,528,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,648,509,509,516,516,513,513,641,641,642,642,623,623,624,624,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,626,626,627,627,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,621,622,635,636,637,177,177,1844,669,643,835,767,660,666,688,674,774,50,836,38,775,645,689,690,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,757,869,833,659,677,632,633,679,692,763,29,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,49,66,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,645,660,645,832,829,767,645,645,645,823,827,831,833,659,632,633,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,49,745,650,225,674,643,726,756,645,623,624,523,508,625,524,528,626,627,520,510,515,527,17,34,645,90,697,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,88,74,511,519,507,526,514,528,527,88,74,511,519,507,526,514,187,517,525,620,621,622,88,74,528,511,519,527,507,526,514,632,633,38,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,1835,643,674,645,618,767,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,643,674,618,643,674,34,230,643,674,650,225,225,34,0,0,0,740,715,612,891,34,34,34,881,44,38,882,650,225,733,767,645,645,90,687,888,88,74,528,511,519,527,507,526,514,88,74,528,511,519,527,507,526,514,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,528,511,519,527,507,526,514,0,79,697,667,871,836,837,838,758,759,835,17,17,17,17,17,843,770,771,772,17,757,697,835,763,700,660,624,524,627,515,624,524,627,515,624,524,627,515,624,524,627,515,1835,13,692,656,632,633,650,225,618,890,891,650,225,677,679,677,679,0,0,0,0,623,626,624,627,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,67,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,674,67,0,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,677,677,692,740,740,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,736,718,719,632,633,619,619,619,619,619,623,623,623,624,624,523,523,523,523,523,88,88,74,74,508,508,508,625,625,625,625,625,524,524,524,524,528,528,528,528,511,511,519,519,626,626,627,627,520,520,520,510,510,510,510,515,515,515,515,527,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,88,74,511,519,507,526,514,632,633,619,619,619,619,619,623,624,523,523,88,88,74,74,508,508,625,625,524,524,528,511,511,519,519,626,627,520,520,510,510,515,515,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,177,177,508,520,523,625,510,524,515,528,527,523,508,625,524,520,510,515,508,520,523,625,528,510,527,523,625,528,524,515,767,767,767,767,767,767,767,767,767,767,767,767,767,831,659,659,659,659,659,659,659,659,659,659,659,659,659,818,640,1853,639,138,727,639,138,693,696,881,884,885,509,516,513,623,624,523,88,74,508,625,524,511,519,626,627,520,510,515,507,526,514,187,517,525,91,521,522,177,632,633,523,88,74,508,625,524,528,511,519,520,510,515,527,507,526,514,187,517,525,620,621,622,657,656,660,688,674,38,645,661,27,650,25,770,771,772,756,225,677,679,692,639,33,17,680,725,726,682,67,42,191,734,739,740,13,509,516,513,641,642,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,688,832,829,767,823,827,831,833,659,767,659,831,833,34,911,767,659,767,659,767,659,767,659,88,74,528,511,519,527,507,526,514,88,74,511,519,507,526,514,632,633,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,93,677,677,677,677,717,524,515,524,515,524,515,696,662,663,702,714,698,714,700,17,1844,772,698,770,677,679,677,679,93,731,679,664,692,660,688,645,650,90,225,632,633,692,704,707,33,717,177,1835,692,662,663,702,698,38,739,740,739,740,38,739,17,740,740,88,507,187,620,88,507,187,620,524,515,524,515,524,515,524,515,524,515,524,515,524,515,50,14,79,645,645,191,728,88,74,511,519,507,526,514,692,90,688,688,723,27,66,623,624,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,626,627,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,88,74,511,519,507,526,514,88,74,511,519,507,526,514,524,515,657,687,764,664,817,665,14,645,645,0,831,634,129,619,660,687,688,674,50,38,645,689,690,661,650,90,618,691,659,632,692,693,694,695,696,697,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,33,709,34,710,711,712,713,714,612,715,716,717,17,718,719,720,721,722,70,723,680,49,66,724,725,726,682,727,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,643,50,38,645,27,25,90,618,691,756,757,632,633,29,697,698,43,44,613,699,701,702,703,704,705,706,707,649,708,33,34,612,715,716,717,17,718,722,70,723,52,66,724,725,726,682,728,634,189,729,67,129,619,79,93,39,42,191,190,41,678,731,732,733,617,735,737,738,758,759,739,740,741,744,13,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,660,688,50,645,90,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,688,50,645,650,90,225,632,633,692,694,662,663,702,704,706,707,33,713,716,717,723,741,648,509,516,513,641,642,187,517,525,91,521,522,620,621,622,635,636,637,177,1850,656,523,88,74,508,524,519,187,517,525,91,521,522,656,657,88,74,511,519,507,526,514,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,509,516,513,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,1854,17,17,88,74,511,519,507,526,514,88,74,511,519,507,526,514,88,88,74,74,511,511,519,519,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,88,88,74,74,511,511,519,519,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,88,74,511,519,507,526,514,187,517,525,620,621,622,740,740,643,674,645,645,725,758,674,674,25,43,660,660,1834,645,645,739,740,645,645,13,13,725,13,618,27,645,645,698,619,619,619,619,737,707,733,17,693,710,711,88,507,187,620,41,88,74,511,519,507,526,514,523,508,625,524,520,510,515,93,818,1853,29,639,138,138,13,13,27,1835,1835,1835,1835,1835,1835,745,187,517,525,91,521,522,620,621,622,635,636,637,177,187,517,525,91,521,522,620,621,622,635,636,637,187,517,525,91,521,522,620,621,622,635,636,637,177,187,517,525,91,521,522,620,621,622,635,636,637,177,871,758,759,41,678,738,715,104,674,50,38,90,618,691,43,44,613,699,701,703,705,706,707,709,34,712,713,612,715,716,717,17,668,838,718,70,723,52,680,49,66,724,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,740,683,742,743,744,509,516,513,88,74,528,519,507,526,514,187,517,525,91,521,522,177,674,888,763,664,817,709,884,885,665,680,681,685,693,911,177,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,129,677,677,932,688,645,692,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,763,25,645,191,648,509,509,516,516,513,513,641,641,642,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,619,619,740,739,740,619,17,645,740,619,1846,745,25,25,25,25,632,633,187,187,187,187,187,187,187,187,187,187,517,517,517,517,517,517,517,517,517,517,525,525,525,525,525,525,525,525,525,525,91,91,91,91,91,91,91,91,91,91,521,521,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,620,620,620,620,620,620,620,620,620,620,621,621,621,621,621,621,621,621,621,621,622,622,622,622,622,622,622,622,622,622,635,635,635,635,635,635,635,635,635,635,636,636,636,636,636,636,636,636,636,636,637,637,637,637,637,637,637,637,637,637,632,633,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,677,679,632,633,187,187,187,187,187,187,187,187,187,187,517,517,517,517,517,517,517,517,517,517,525,525,525,525,525,525,525,525,525,525,91,91,91,91,91,91,91,91,91,91,521,521,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,620,620,620,620,620,620,620,620,620,620,621,621,621,621,621,621,621,621,621,621,622,622,622,622,622,622,622,622,622,622,635,635,635,635,635,635,635,635,635,635,636,636,636,636,636,636,636,636,636,636,637,637,637,637,637,637,637,637,637,637,632,633,645,1835,88,74,511,519,507,526,514,187,517,525,620,621,622,644,93,70,66,728,737,767,767,659,659,528,527,650,225,0,27,25,778,0,67,645,509,516,513,641,642,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,27,29,618,618,38,29,721,1855,25,740,674,823,827,757,767,659,632,633,523,88,88,74,74,508,625,524,528,511,511,519,519,520,510,515,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,632,633,523,88,88,74,74,508,625,524,511,511,519,519,520,510,515,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,508,520,523,625,510,524,515,177,177,177,523,523,88,88,74,74,508,508,625,625,524,524,528,528,511,511,519,519,520,520,510,510,515,515,527,527,507,507,526,526,514,514,187,187,517,517,525,525,91,91,521,521,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,177,660,645,0,106,138,25,639,878,767,767,660,509,516,513,641,642,677,679,679,677,79,739,740,93,93,191,191,43,740,740,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,528,527,623,624,523,508,625,524,626,627,520,510,515,623,624,523,508,625,524,626,627,520,510,515,528,527,697,632,660,687,688,674,50,38,645,689,690,661,650,90,90,618,691,659,632,692,693,694,695,696,697,698,43,44,662,613,663,663,699,700,701,702,703,704,705,706,707,649,708,33,709,34,710,711,712,713,714,612,715,716,717,17,718,719,720,721,722,70,723,680,49,66,724,725,726,682,727,728,634,189,729,67,129,619,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,739,740,741,683,742,743,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,623,626,624,524,627,515,528,527,1856,669,660,688,774,775,650,90,225,632,633,692,776,694,704,706,777,713,714,778,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,657,656,661,733,0,624,524,623,523,625,626,510,624,524,627,515,624,524,623,523,625,626,510,624,524,627,515,624,524,41,623,624,626,627,1857,1858,657,661,650,225,523,508,625,524,520,510,515,67,88,74,511,519,507,526,514,645,74,511,519,526,514,517,525,521,522,621,622,636,637,645,632,633,645,633,660,660,660,660,104,104,657,656,832,1844,829,669,643,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,187,187,187,517,517,517,517,525,525,525,525,91,91,91,91,521,521,521,521,522,522,522,522,620,620,621,621,622,622,635,635,636,636,637,637,177,177,177,674,17,674,674,645,674,674,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,680,88,74,511,519,507,526,514,674,645,645,881,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,881,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,177,645,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,177,645,177,707,681,685,1835,1835,0,1835,0,1835,0,0,0,1835,677,0,688,688,660,719,0,38,739,740,50,726,643,726,682,726,1859,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,38,704,0,38,1835,1835,0,0,0,0,660,650,225,705,712,891,878,767,889,0,0,0,0,693,694,695,711,66,27,691,657,656,832,1844,829,669,643,835,64,767,660,666,687,688,674,774,50,836,38,775,645,689,690,661,27,650,25,90,770,618,823,1833,827,691,771,772,756,225,831,757,869,833,659,677,632,633,679,692,763,29,764,776,639,837,138,35,78,53,62,693,694,695,696,697,819,820,698,43,44,662,613,663,699,700,701,702,703,704,705,706,707,649,708,777,33,709,34,710,711,712,713,714,612,715,716,717,17,668,838,718,719,720,721,722,70,723,52,680,681,49,66,685,724,725,726,682,727,728,634,189,60,729,761,67,129,619,778,79,730,93,39,42,191,190,41,678,731,732,733,617,734,735,736,737,738,1845,758,759,739,740,741,683,742,743,762,744,13,745,648,509,516,513,641,642,623,624,523,88,74,508,625,524,528,511,519,626,627,520,510,515,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,177,513,527,514,525,522,622,637,524,515,0,843,770,17,770,1835,1835,718,0,758,650,225,645,737,1847,29,745,1834,745,67,27,677,677,187,517,525,91,521,522,620,621,622,635,636,637,187,517,525,91,521,522,620,621,622,635,636,637,187,517,525,91,521,522,620,621,622,635,636,637,187,517,525,91,521,522,620,621,622,635,636,637,623,624,523,508,625,524,626,627,520,510,515,523,88,74,508,524,519,187,517,525,91,521,522,88,74,528,511,519,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,509,516,513,88,74,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,523,625,524,520,510,515,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,1842,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,1840,74,528,511,519,527,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,509,516,513,88,74,527,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,523,625,524,520,510,515,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1841,519,514,525,522,622,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1842,1840,1841,88,74,511,519,507,526,514,187,517,525,91,521,522,620,621,622,635,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,516,513,74,527,526,514,517,525,521,522,621,622,636,637,523,625,524,510,515,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1841,519,514,525,522,622,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1840,1841,74,511,519,526,514,517,525,521,522,621,622,636,637,1860,1861,1861,1862,1863,1863,1863,1863,1864,1864,1865,1865,0,0,0,0,0,0,748,876,748,876,748,876,748,748,0,748,876,748,876,748,876,876,1847,748,876,748,748,876,748,748,876,748,748,876,748,748,748,748,876,0,748,748,0,748,748,748,876,748,876,748,876,876,876,748,876,748,748,876,748,876,748,748,876,876,748,876,748,748,876,876,748,748,876,876,876,876,876,748,876,748,876,876,876,748,876,748,748,876,748,876,748,876,748,876,748,876,748,876,748,876,1847,879,877,877,0,0,879,879,0,0,0,879,879,879,879,879,877,879,0,877,0,0,0,879,877,0,0,879,883,879,883,879,879,883,879,0,877,0,881,877,882,880,878,878,878,883,883,883,884,884,884,885,879,879,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,879,877,877,104,104,877,877,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,104,104,881,877,882,880,878,883,884,885,879,881,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,881,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,880,878,883,884,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,878,883,884,879,879,878,883,884,879,881,878,883,884,879,878,878,878,878,883,883,883,883,884,884,884,884,879,879,879,879,882,880,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,1852,881,881,879,881,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,883,882,881,884,885,0,0,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,878,883,884,879,0,879,0,104,884,885,0,878,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,104,104,881,877,882,880,878,883,884,885,879,881,877,882,880,878,883,884,885,879,881,881,877,882,880,878,883,884,885,879,881,881,877,882,880,878,883,884,885,879,878,881,877,882,880,878,883,884,885,879,1864,1864,1865,1865,0,0,0,0,0,0,0,0,0,0,0,0,0,890,889,893,897,887,893,897,888,888,888,894,898,896,900,890,889,889,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,888,887,887,888,889,887,888,890,889,891,892,887,888,890,889,891,892,888,890,889,891,892,890,889,892,887,893,897,888,894,898,896,900,890,889,889,891,892,887,893,897,888,894,898,896,900,890,889,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,887,893,897,888,888,894,898,896,900,890,889,891,892,888,889,896,900,888,889,888,889,888,888,888,888,889,889,889,889,888,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,890,889,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,890,890,889,889,892,892,888,890,889,891,892,888,890,889,891,888,891,888,891,891,891,888,889,893,897,894,898,896,900,890,889,890,889,887,893,897,888,894,898,896,900,890,889,891,892,890,891,892,891,891,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,893,897,888,888,894,898,896,900,890,890,889,889,891,891,887,893,897,888,894,898,896,900,890,889,891,892,890,889,891,888,888,889,891,887,893,897,888,894,898,896,900,890,889,891,892,887,888,890,889,891,887,888,890,889,891,891,891,890,891,887,887,888,889,891,888,890,891,887,888,890,889,891,893,897,894,898,896,900,896,900,887,1866,888,889,888,887,887,887,888,889,888,887,888,890,889,891,892,890,889,892,887,893,897,888,894,898,896,900,890,889,891,892,888,888,889,888,890,891,892,891,891,1866,887,888,890,889,888,887,888,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,887,893,897,888,894,898,896,900,890,889,891,892,888,891,888,891,891,891,891,891,887,893,897,888,894,898,896,900,890,889,891,892,891,888,888,888,888,891,891,887,893,897,888,894,898,896,900,890,889,891,892,887,887,887,893,897,888,894,898,896,900,890,889,891,892,891,891,890,891,890,891,894,898,896,900,889,887,893,897,888,894,898,896,900,890,889,891,892,887,879,877,877,0,0,879,879,0,0,0,0,879,879,879,879,879,909,877,909,879,0,877,217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,879,877,0,0,217,879,883,879,883,879,879,883,879,0,0,877,890,908,889,217,217,217,217,217,217,104,104,908,217,217,888,104,104,217,881,217,217,217,217,217,217,217,881,217,217,217,913,217,217,881,217,217,217,881,217,217,217,217,217,217,882,880,217,217,217,217,217,217,217,217,217,217,217,217,217,217,1852,217,217,881,217,881,747,910,217,217,217,217,217,217,217,217,217,891,881,882,888,890,891,881,884,885,217,911,217,664,217,664,817,665,217,217,217,217,217,217,104,888,664,817,884,885,665,911,217,878,217,217,217,217,217,217,217,217,217,104,104,217,217,881,217,881,217,891,878,889,217,217,1864,1864,1865,1865,0,909,866,909,0,0,0,0,0,0,908,664,817,817,817,908,665,909,866,910,664,817,908,665,909,866,910,664,817,908,665,909,866,910,817,817,664,665,817,908,664,817,908,665,909,866,910,664,817,908,665,909,866,910,665,664,664,817,817,817,908,665,909,817,908,665,909,817,908,909,817,908,664,817,908,908,665,665,909,866,910,664,664,817,908,908,665,909,866,910,664,664,817,908,665,909,866,910,664,817,817,908,665,909,866,910,817,817,817,817,817,817,817,817,664,817,665,817,664,817,908,909,909,866,866,910,910,817,664,817,817,908,665,909,909,909,909,866,910,664,665,817,664,817,908,665,909,866,910,664,817,908,665,909,866,910,908,908,664,817,665,817,664,817,817,665,910,664,817,908,665,909,866,910,664,817,908,665,909,866,910,664,817,908,665,909,866,910,817,908,909,866,910,664,817,908,665,909,866,910,664,817,817,664,817,908,665,909,866,910,817,908,664,817,908,665,909,866,910,664,817,908,665,664,664,817,665,817,908,665,909,908,664,817,908,665,909,866,910,817,817,664,817,817,908,665,664,817,665,817,908,665,909,664,817,908,665,909,866,910,909,866,910,664,817,908,665,909,866,910,664,817,908,665,909,866,910,665,664,664,817,817,664,817,908,908,665,909,866,910,817,664,817,908,665,909,866,910,664,817,817,664,817,908,665,909,866,910,817,664,817,908,665,909,866,910,664,817,908,665,909,866,910,0,0,0,0,0,1867,1868,1869,1870,1871,0,0,0,911,747,747,747,911,747,911,747,747,911,747,911,747,747,747,747,911,747,911,747,911,747,911,747,747,747,747,747,747,747,747,747,747,911,747,911,747,911,747,747,747,911,747,911,747,911,747,911,747,911,747,911,747,911,747,911,747,911,747,747,747,911,911,747,911,747,911,747,911,747,911,747,911,747,911,747,911,747,911,747,0,0,0,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,912,913,913,914,912,913,914,912,913,914,914,912,913,914,912,913,914,912,913,913,914,912,913,914,912,913,914,912,913,912,913,914,912,913,914,912,913,914,912,913,914,912,913,913,914,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,914,912,913,0,776,0,632,633,776,0,775,0,0,0,1833,0,983,0,0,0,0,775,0,644,0,0,0,0,0,632,633,0,774,774,0,0,0,0,1833,0,1834,0,0,0,0,0,0,0,0,0,775,0,0,0,0,0,0,687,1835,1835,1835,645,1835,1835,90,1848,659,0,645,659,0,1850,1850,1835,659,1835,1835,1835,1835,977,1836,983,983,983,983,983,983,983,983,983,983,983,983,983,0,1835,1835,1835,1835,1835,1835,1835,767,687,0,1835,1835,688,0,687,1850,1834,1835,1835,1835,1835,1835,1835,1835,644,0,767,767,1856,1857,1858,1835,1835,1835,1835,1835,688,0,1835,1835,0,767,1835,1835,1834,1862,0,776,0,632,633,776,0,775,0,0,0,1833,0,983,0,0,0,0,775,0,644,0,0,0,0,0,632,633,0,774,774,0,0,0,0,1833,0,1834,0,0,0,0,0,0,0,0,0,775,0,0,0,0,0,0,687,1835,1835,1835,645,1835,1835,90,1848,659,0,645,659,0,1850,1850,1835,659,1835,1835,1835,1835,977,1836,983,983,983,983,983,983,983,983,983,983,983,983,983,0,1835,1835,1835,1835,1835,1835,1835,767,687,0,1835,1835,688,0,687,1850,1834,0,1835,1835,1835,1835,1835,1835,1835,644,0,767,767,1856,1857,1858,1835,1835,1835,1835,1835,688,0,1835,1835,0,767,1835,1835,1834,1862,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,886,886,886,0,1872,0,1872,922,7,7,922,886,7,886,886,886,783,783,783,915,915,915,7,886,783,915,7,886,783,915,886,7,886,783,915,7,886,783,915,922,7,886,783,915,7,886,783,915,7,886,783,915,886,0,1872,922,7,7,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,886,783,915,886,886,783,915,886,783,915,886,886,886,886,783,783,783,783,915,915,915,915,886,886,7,886,783,783,915,915,886,886,7,886,783,915,7,886,783,915,886,886,7,886,783,915,7,7,7,922,7,922,0,886,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,886,886,886,886,7,886,783,915,7,7,886,783,915,886,783,915,886,0,1872,886,886,886,7,922,886,886,7,886,783,915,7,886,783,915,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,7,886,783,915,0,0,629,0,629,782,0,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,1046,629,629,1873,629,629,629,629,629,782,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,782,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,0,0,956,8,8,8,956,8,8,8,956,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,956,8,8,956,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,8,956,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,956,8,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,956,8,956,8,956,8,956,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,956,8,956,8,956,8,956,8,8,8,8,8,8,8,956,8,8,8,956,8,8,8,8,8,8,8,8,8,8,8,956,8,8,956,8,8,956,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1045,0,0,0,1045,0,0,0,0,1041,1041,1043,1039,1040,1039,1041,1042,1043,1040,1040,1039,1041,1041,1041,1042,1042,1042,1043,1043,1043,1040,1040,1040,1040,1044,1044,1044,1045,1045,1045,1039,1041,1042,1043,1040,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1041,1042,1043,1040,1040,1040,1040,1039,1040,1043,1040,1043,1040,0,1040,1040,1040,1042,1042,1042,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,0,0,1040,1043,1040,1039,1040,1039,1041,1042,1043,1040,1039,1041,1042,1043,1040,1044,1045,1039,1042,1043,1040,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1040,1041,1042,1043,1040,1041,1042,1043,1040,1042,1043,1040,1041,1040,1043,1040,1043,1043,1043,1043,1039,1039,1041,1042,1043,1040,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1042,1039,1041,1042,1043,1040,1044,1045,1039,1040,1040,1039,1039,1041,1041,1042,1043,1043,1040,1040,1044,1045,1041,1042,1043,1040,1044,1045,1041,1042,1043,1040,1041,1041,1042,1043,1040,1040,1040,1040,1040,1040,1040,1044,1045,1041,1042,1043,1040,1044,1045,1041,1041,1041,1041,1042,1042,1042,1042,1043,1043,1043,1043,1040,1040,1040,1040,1044,1044,1044,1044,1045,1045,1045,1045,1039,1041,1042,1043,1040,1039,1039,1041,1041,1042,1042,1043,1043,1040,1040,1039,1039,1041,1041,1042,1042,1043,1043,1040,1040,1039,1039,1040,1040,1041,1042,1043,1042,1041,1041,1040,1039,1041,1042,1043,1040,1044,1044,1045,1039,1039,1039,1041,1041,1042,1042,1043,1043,1040,1040,1040,1044,1044,1045,1045,1039,1041,1042,1043,1040,1040,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1039,1039,1041,1041,1042,1042,1043,1043,1040,1040,1043,1040,1043,1040,1041,1042,1040,1040,1041,1041,1040,1040,1040,1040,1041,1042,1043,1040,1043,1040,1041,1040,1040,1039,1041,1042,1043,1040,1044,1045,1041,1042,1040,1040,1042,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1041,1042,1039,1039,1041,1041,1041,1042,1042,1043,1043,1043,1040,1040,1040,1039,1041,1040,1039,1041,1042,1043,1040,1044,1045,1039,1041,1039,1042,1039,1041,1042,1043,1040,1039,1041,1042,1043,1040,1044,1045,1042,1042,1040,1039,1041,1042,1043,1040,1040,1041,1043,1040,1041,1044,1044,1042,1041,1041,1039,1041,1042,1043,1040,1040,1043,1040,1043,1040,1041,0,1041,1041,1040,1042,1043,1040,1043,1039,1041,1042,1043,1040,1039,1041,1042,1043,1040,1041,1042,1043,1040,1040,1039,1039,1039,1040,1043,1040,1041,1042,1043,1040,1041,1042,1039,1040,1043,1040,1043,1040,1041,1042,1040,1041,1040,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1039,1041,1042,1043,1040,1044,1045,1041,1042,1043,1040,1044,1045,1041,1042,1043,1040,1040,1040,1043,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1040,1041,1042,1043,1040,1040,1041,1042,1039,1040,1039,1040,1040,1040,1039,1041,1042,1040,1040,1041,1040,1040,1039,1041,1042,1043,1040,1040,1040,1039,1040,1039,1040,1043,1040,1041,1042,1043,1040,1042,1040,1040,1040,1042,1043,1042,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1044,1039,1041,1042,1043,1040,1044,1045,1039,1041,1042,1043,1040,1044,1045,1043,1040,1040,1039,1041,1042,1043,1040,1044,1045,1041,1039,1041,1042,1043,1040,1044,1045,1039,1040,1039,1040,1039,1041,1042,1043,1040,1044,1045,1040,1040,1040,1040,1042,1039,1041,1042,1043,1040,1044,1045,1041,1041,1041,1041,0,1039,1041,1042,1043,1040,1044,1045,1039,1040,1039,1040,1040,1040,1043,1040,1040,1874,0,0,0,0,0,0,0,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1061,1074,1051,1053,1062,1061,1074,1062,1061,1074,1062,1061,1074,1039,1061,1081,1081,1062,1061,1074,1051,1053,1081,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1081,1062,1061,1074,1051,1053,1053,1081,1062,1061,1074,1051,1053,1061,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1061,1061,1081,1081,1062,1061,1074,1051,1053,1074,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1062,1061,1051,1081,1062,1061,1074,1051,1053,1062,1061,1051,1062,1061,1061,1061,1061,1061,1061,1061,1061,1061,1061,1061,1061,1061,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1051,1053,1053,1053,1053,1053,1053,1053,1053,1053,1053,1053,1053,1053,1062,1061,1074,1051,1053,1062,1061,1051,1061,1074,1051,1053,1061,1074,1051,1053,1061,1074,1051,1053,1061,1074,1051,1053,1081,1081,1062,1061,1074,1061,1081,1062,1061,1074,1051,1053,1062,1061,1061,1074,1051,1051,1053,1053,1061,1074,1051,1053,1062,1061,1074,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,1081,1062,1061,1074,1051,1053,0,0,0,0,0,0,0,0,0,0,0,1054,0,0,0,0,1054,0,0,0,1091,1058,1041,1065,1084,1091,1058,1041,1063,1055,1080,1054,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1075,1076,1064,1077,1089,1082,1079,1064,1077,1089,1082,1079,1064,1077,1089,1082,1079,1079,1080,1064,1065,1063,1077,1089,1075,1076,1082,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1087,1091,1058,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1087,1054,1091,1058,1087,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1063,1075,1076,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1064,1064,1065,1065,1063,1063,1077,1077,1089,1089,1075,1075,1076,1076,1082,1082,1058,1058,1091,1058,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1077,1089,1090,1075,1076,1082,1084,1055,1091,1058,1080,1080,1080,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1091,1058,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1079,1080,1091,1080,1079,1080,1080,1064,1065,1077,1089,1090,1075,1076,1082,1084,1064,1065,1063,1077,1089,1090,1075,1076,1041,1064,1065,1063,1080,1064,1065,1077,1075,1082,1084,1064,1065,1077,1075,1082,1084,1079,1080,1079,1080,1064,1065,1063,1075,1075,1075,1075,1075,1075,1075,1075,1075,1075,1075,1075,1075,1076,1076,1076,1076,1076,1076,1076,1076,1076,1076,1076,1076,1076,1082,1084,1055,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1075,1076,1075,1076,1075,1076,1075,1076,1054,1054,1054,1054,1079,1080,1079,1080,1055,1064,1065,1063,1064,1077,1089,1082,1079,1064,1065,1063,1077,1089,1075,1076,1082,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1058,1080,1080,1058,1041,1079,1080,1064,1065,1063,1063,1077,1089,1090,1075,1075,1076,1076,1055,1075,1076,1064,1077,1089,1082,1079,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1087,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,1079,1080,1087,1080,1054,1091,1058,1087,1064,1065,1063,1077,1089,1090,1075,1076,1082,1084,1055,1079,1080,0,0,0,0,0,0,0,0,0,1056,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1056,1067,1066,1050,1086,1059,1088,1083,1066,1050,1086,1059,1088,1083,1066,1050,1086,1059,1088,1083,1066,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1067,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1066,1067,1067,1083,1083,1066,1050,1086,1059,1088,1056,1067,1083,1050,1059,1056,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1067,1083,1066,1083,1066,1067,1042,1066,1083,1066,1050,1086,1059,1088,1083,1056,1056,1056,1056,1056,1056,1056,1056,1056,1056,1056,1056,1056,1067,1067,1067,1067,1067,1067,1067,1067,1067,1067,1067,1067,1067,1066,1050,1086,1059,1088,1056,1067,1083,1066,1067,1083,1056,1067,1056,1067,1056,1067,1056,1067,1056,1066,1050,1086,1059,1088,1083,1066,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1067,1056,1067,1066,1050,1086,1059,1088,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,1066,1050,1086,1059,1088,1056,1067,1083,0,0,0,0,0,0,0,1043,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1048,1047,1048,1048,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1057,1069,1070,1047,1069,1070,1047,1069,1070,1047,1069,1047,1048,1047,1048,1070,1068,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1070,1068,1068,1069,1069,1047,1048,1048,1043,1070,1068,1057,1047,1048,1047,1048,1070,1068,1047,1048,1057,1069,1048,1048,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1069,1070,1068,1047,1048,1057,1069,1070,1068,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1057,1070,1068,1043,1070,1068,1047,1048,1057,1069,1043,1070,1068,1047,1048,1047,1048,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1070,1068,1057,1069,1070,1068,1069,1057,1069,1057,1069,1057,1069,1057,1069,1057,1047,1048,1047,1048,1070,1048,1048,1057,1048,1048,1070,1047,1069,1070,1068,1069,1070,1068,1047,1048,1057,1069,1048,1048,1070,1068,1057,1069,1069,1048,1048,1048,1048,1057,1069,1043,1070,1068,1070,1047,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,1070,1068,1047,1048,1057,1069,0,0,0,0,0,1052,1073,1072,1071,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1040,1052,1071,1072,1071,1072,1071,1072,1071,1071,1052,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1052,1052,1073,1072,1071,1052,1073,1072,1071,1073,1072,1071,1052,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1040,1073,1072,1073,1072,1052,1052,1073,1072,1071,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1073,1072,1071,1052,1073,1072,1071,1073,1072,1071,1073,1072,1040,1052,1052,1052,1052,1052,1052,1052,1052,1052,1052,1052,1052,1052,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1071,1052,1073,1072,1071,1052,1073,1072,1071,1071,1052,1071,1052,1071,1052,1071,1052,1071,1072,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1052,1073,1072,1071,1071,1052,1071,1052,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,1052,1073,1072,1071,0,0,0,0,927,927,927,1095,1095,1095,1094,1094,1094,1096,1096,1096,927,1095,1094,1096,927,1095,1094,1096,927,1094,927,927,927,927,927,927,1095,1094,1096,927,1095,1094,1096,1094,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,927,927,927,927,1095,1094,1096,927,1095,1094,1096,1095,1096,927,927,1095,1094,1096,927,927,1095,1094,1096,927,1095,1094,1096,927,927,1095,1094,1096,927,1095,1094,1096,927,927,927,927,1095,1095,1095,1095,1094,1094,1094,1094,1096,1096,1096,1096,927,1096,1094,927,1095,1095,1094,1094,1096,1096,927,927,927,927,927,1095,1094,1096,927,927,1095,1094,1096,927,1095,1094,1096,927,927,927,927,927,927,927,927,1095,1094,1096,927,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,927,1094,927,1096,927,927,1095,1094,1096,927,1095,927,1095,1094,1096,927,1095,927,927,1095,1094,1096,927,927,1095,1094,1096,927,1095,1094,1096,927,927,1096,927,1095,1094,1096,927,1095,1094,1096,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,927,1095,1094,1096,1096,927,1095,1094,1096,0,0,0,1100,0,0,0,0,0,0,0,0,0,0,1100,0,0,0,0,0,1100,0,0,0,10,10,10,1038,1104,1105,1103,1101,1102,10,1100,1100,1100,382,382,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,10,1100,382,1038,1100,382,1038,1100,382,382,10,382,382,10,10,10,10,10,382,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,382,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1100,382,382,1105,1103,1101,1102,1103,1101,1102,1100,382,1100,382,1100,1100,1100,1100,382,382,382,382,1038,1104,1105,1105,10,10,1104,1105,1103,1101,1102,1104,10,10,383,495,493,497,496,494,500,499,498,1100,382,382,1038,1038,1104,1105,1102,1038,0,1104,1105,1103,1101,1102,10,1100,382,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,382,382,1104,1102,1102,382,1104,1105,1103,1101,1102,10,1100,382,1038,1103,1101,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1100,382,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1102,10,10,382,1038,10,10,1100,382,1038,382,1104,1105,1103,1101,1102,10,1100,382,1038,1100,382,382,1038,1104,1102,1104,1105,1102,1038,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1102,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1104,1105,1103,1101,1102,10,1100,382,1038,1102,1104,1105,1103,1101,1102,10,1100,382,1038,10,10,0,1107,10,1107,10,10,1107,10,10,0,0,0,15,1108,15,15,15,15,1108,1109,15,1108,1109,15,1108,1109,15,15,15,15,1108,15,15,15,15,15,15,1108,1109,15,1108,1109,15,15,1108,15,1108,15,15,15,15,15,15,1108,15,15,1108,1109,1109,15,1108,1109,1109,15,1108,15,15,1108,1109,15,15,1109,15,15,1108,1108,1109,1109,15,15,15,15,15,15,15,15,15,15,15,1108,15,15,15,1108,1109,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,1108,1109,15,15,1108,15,1108,15,1108,1109,15,1108,1109,15,15,1108,1108,15,15,15,15,15,15,15,15,1108,1109,15,1108,1109,15,1108,1109,15,1108,1109,15,15,1108,1108,1109,15,1108,1109,15,1108,1109,15,15,15,15,15,15,1108,1109,15,15,1108,15,15,15,15,15,15,15,15,15,15,1109,15,15,15,1108,1109,15,1108,15,1108,15,1108,15,1108,1109,15,15,15,15,1108,15,15,1108,15,1108,15,1108,1109,15,15,1108,1109,15,1108,1109,15,15,15,1108,1109,15,1108,1109,15,15,15,15,15,15,15,15,1108,1109,15,15,1108,1109,1108,15,1108,1109,15,1108,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1875,1876,816,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1110,1111,1123,1124,1126,1110,1111,1110,1111,1110,1111,1110,1111,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1111,1110,1111,1110,1111,1112,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1117,1123,1118,1124,1121,1126,1122,1127,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1110,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1875,1110,1111,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1110,1111,1110,1111,1110,1111,1110,1111,1112,1113,1128,1129,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1115,1110,1111,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,0,0,0,0,0,0,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1110,1111,1111,816,816,816,816,816,816,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1114,1130,1131,1132,1133,1134,1115,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1124,1125,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1111,1110,1111,1118,1124,1119,1120,1125,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1120,1125,1876,1110,1111,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1119,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1119,1110,1110,1111,1112,1113,1128,1129,1135,1136,1110,1111,0,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1110,1111,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1118,1124,1120,1125,1122,1127,1118,1120,1122,1110,1111,1116,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1135,1136,1119,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1115,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1115,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,1112,1113,1128,1129,1116,1117,1123,1118,1124,1121,1126,1122,1127,1110,1111,1112,1113,1128,1129,1114,1130,1131,1132,1133,1134,1135,1136,1115,1116,1117,1123,1118,1124,1119,1120,1125,1121,1126,1122,1127,0,0,0,0,534,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1138,1138,1142,1099,1099,1099,1143,1143,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1162,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1139,1140,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1158,1139,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1139,1140,1138,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1099,1143,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1099,1143,1162,1099,1143,1162,1099,1143,1162,1099,1099,1099,1099,1143,1143,1143,1143,1162,1162,1162,1162,1099,1099,1158,1138,1142,1099,1099,1143,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1159,1160,1160,1161,1161,1162,1163,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,534,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,0,0,0,1140,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1156,1157,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1162,1162,1138,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1139,1140,1139,1140,1138,1154,1156,1157,1138,1140,1150,1151,1163,1142,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1142,1139,1140,1138,1144,1145,1146,1147,1150,1151,1152,1153,1154,1155,1156,1157,1139,1159,1160,1161,1139,1159,1160,1161,1139,1159,1160,1161,1139,1159,1160,1161,1138,1138,1140,0,1139,1140,1138,1138,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1099,1143,1162,1142,1144,1145,1146,1147,1148,1149,1156,1157,1154,1138,1138,1139,1140,1138,1154,1155,1156,1157,1158,1159,1160,1161,1163,1139,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1099,1143,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1159,1160,1161,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1162,1162,1099,1099,1142,1099,1143,1139,1140,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,0,0,0,0,1165,0,1165,0,1165,0,0,0,1141,0,1165,1165,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1165,1165,1165,1165,1165,1165,1166,1166,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1877,1166,1167,1168,1169,992,1170,1166,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1141,1141,1165,1166,1167,1168,1169,992,1170,1141,1141,1166,1170,1877,1166,1167,1168,1169,992,1170,1878,1166,1167,1168,1169,992,1170,1877,1166,1167,1168,1169,992,1170,1878,1166,1167,1168,1169,992,1170,1877,1167,1168,1169,992,1878,1167,1168,1169,992,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1170,1141,1141,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1165,1166,1167,1168,1169,992,1170,1166,1166,1165,1166,1167,1168,1169,992,1170,0,0,0,0,0,0,107,107,107,1172,107,107,107,107,1171,1171,1171,1173,1172,107,107,1171,1173,1172,107,1171,1173,1172,107,107,1171,107,107,107,107,107,107,1172,1172,107,107,107,107,107,107,1172,107,107,1172,107,107,107,1171,1173,1172,107,107,1171,1173,1171,107,1172,107,107,107,107,1171,107,107,1171,107,1171,107,107,107,107,107,107,107,107,1172,107,107,1171,1173,1172,107,107,1171,1173,1171,1173,107,1172,107,1171,1173,107,1172,1172,107,1171,1173,107,1171,107,1172,107,1172,107,107,1172,107,107,107,107,107,107,107,107,1171,107,1171,107,107,107,107,1171,1171,1171,1171,107,1171,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,1172,107,107,1171,1171,1173,1173,107,1172,107,107,107,107,107,107,107,107,107,107,107,107,1171,1173,107,107,107,107,107,107,107,107,1172,107,1171,1173,107,1172,107,1171,1173,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,1172,107,1171,1173,107,107,107,1172,107,1171,1173,1172,107,107,1171,1173,1172,107,1171,1173,1172,107,1171,1173,107,107,1171,107,1172,107,107,1172,107,1171,1173,107,107,107,1172,107,1171,1173,107,107,107,1172,1172,107,107,107,107,107,107,107,1172,1172,1172,1172,1172,1172,107,107,107,107,107,107,107,107,1171,107,1172,107,1171,1173,107,1171,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,1172,107,107,1172,1172,1172,107,107,107,107,1171,1172,107,1171,1173,107,1517,107,1171,1173,1172,107,1171,1173,1172,107,1171,1173,107,107,1172,107,1172,107,1171,1173,1172,107,1171,1173,107,107,1172,107,1171,1173,107,107,107,107,107,107,1172,107,1171,1173,1171,107,1172,107,1171,1173,107,107,107,0,0,14,1185,14,14,14,14,1185,14,1185,14,1185,14,14,14,14,1185,14,14,14,14,14,14,1185,14,1185,14,14,14,14,1185,14,1185,14,14,1185,14,14,14,14,14,14,14,14,1185,14,14,1185,14,1185,14,14,1185,14,14,1185,14,14,14,14,14,1185,1185,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1185,14,14,14,14,14,14,14,14,1185,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1185,14,14,1185,14,1185,14,1185,14,1185,14,14,1185,1185,14,14,14,14,14,14,14,14,1185,14,1185,14,1185,14,1185,14,1185,14,14,1185,14,1185,14,1185,14,14,14,14,14,14,14,14,14,14,14,14,1185,14,14,1185,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1185,14,1185,14,1185,14,1185,14,1185,14,14,14,14,14,14,14,14,14,14,14,14,14,1185,14,14,14,1185,14,1185,14,1185,14,14,1185,14,1185,14,14,14,14,1185,14,1185,14,14,14,14,14,14,14,14,14,14,1185,14,14,1185,1185,14,1185,14,1185,14,14,14,0,1879,1879,0,0,0,0,0,1184,1184,1184,1189,1184,103,1190,103,103,1189,1184,103,103,103,103,1190,1193,1189,1184,103,103,1190,1193,1189,1184,103,1190,1193,1189,1184,103,103,103,103,103,103,103,1184,103,103,1189,1184,103,103,103,103,103,1189,1184,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1189,1184,103,103,103,1190,1193,1189,1184,103,103,1190,1193,1184,103,103,1184,103,103,1189,1184,1190,1193,103,103,1184,103,103,1184,103,1184,103,103,103,103,1184,103,103,103,103,103,103,1184,103,1190,1189,1184,103,103,1190,1193,1189,1184,103,103,1190,1193,103,1189,1184,103,1190,1193,103,103,1193,1189,1189,1184,1184,103,103,1190,1190,1193,1193,103,103,103,103,1189,1184,103,1189,1184,103,103,1184,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1189,1184,103,1190,1193,1189,1184,1193,1189,1184,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1190,1193,103,103,103,103,103,103,1189,1184,103,1190,1193,103,1189,1184,103,1190,1193,1184,1184,103,103,103,103,103,103,103,103,1190,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1189,1184,103,1190,1193,103,103,1189,1184,103,1190,1193,1189,1184,103,103,1190,1193,1189,1184,103,1190,1193,1189,1184,103,1190,1193,103,103,103,103,1189,1184,103,103,103,1190,1193,103,103,103,1189,1184,103,1190,1193,1189,1184,103,1189,1184,103,1190,1193,103,103,1189,1189,103,103,103,103,103,103,103,103,103,1189,1189,1189,1189,1189,1189,1189,1189,1189,1189,1189,1189,1189,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,103,103,103,103,103,103,103,103,1189,1184,1190,1193,1189,1184,1193,1184,1189,1184,1190,1193,1189,1184,1190,1193,1189,1184,1190,1193,1189,1184,1190,1193,103,103,1190,103,103,103,103,103,103,103,103,103,1184,103,103,103,103,103,103,103,1190,1184,103,103,103,1184,103,1184,103,1189,1184,103,1190,1193,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1193,103,103,103,103,103,103,103,103,103,103,103,103,103,1189,1189,1184,1184,1190,1193,1193,103,103,103,103,1189,1184,1190,1193,103,1189,1189,1184,103,1189,1184,103,1190,1193,103,1189,1184,103,1190,1193,1189,1184,103,1190,1193,103,103,1189,1184,103,103,103,1189,1184,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1190,1193,1189,1184,103,1190,1193,103,103,1189,1184,103,1190,1193,103,103,103,103,103,103,1189,1184,103,1190,1193,1189,1190,1189,1184,103,1190,1193,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,1010,768,0,0,1880,1880,1881,1880,1881,1880,1882,1883,1882,1881,1880,1882,1880,1883,1880,952,1884,1880,1880,1880,1880,1884,1880,1880,1880,1880,1880,1880,1883,1880,1880,1880,0,1880,0,1880,1884,1880,1880,1880,1881,1880,1880,0,768,1881,1009,952,1009,1010,1880,1012,1012,1014,1009,1009,1880,0,1881,1880,1882,1882,1884,1882,1882,1884,1882,0,1880,1885,1010,1880,1880,1884,1880,0,1880,1882,1880,1880,1880,1880,1880,1880,1880,1883,1883,1883,1880,0,0,0,0,0,0,768,0,0,0,0,0,0,0,0,1272,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,0,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1881,1881,1881,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1273,1274,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1277,1278,1240,1244,1277,1278,1240,1244,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,0,1881,1277,1278,1277,1278,0,768,1272,1881,1273,1274,1275,1276,1277,1278,1240,1244,1213,0,0,0,1881,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,0,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1274,1275,1278,1240,1244,1213,0,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,1272,1273,1274,1275,1276,1277,1278,1240,1244,1213,0,0,1284,1284,1284,1284,0,0,0,0,0,0,0,0,0,0,0,0,0,1284,0,0,0,0,0,1284,1284,1284,1284,1015,0,1284,1284,0,1015,0,0,1284,1284,1284,1284,0,0,1284,1284,1284,1284,1284,1284,0,1284,1284,1284,1284,1284,1284,1284,1284,1284,0,0,0,0,1284,0,0,0,0,0,1284,0,0,0,0,0,1284,1015,1284,0,1284,1284,1284,1284,1284,0,0,0,0,1284,1285,1288,1285,630,1282,1282,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1284,1284,1015,1015,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1279,1282,1284,1279,1279,1279,1285,630,1282,1279,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1882,1883,1280,1281,1251,1248,1236,1257,1246,1249,1250,1247,1268,1269,1280,1281,1252,1270,1287,1251,1882,1248,1236,1250,1280,630,1882,1282,1283,1284,1015,1282,1283,1284,1015,1282,1283,1284,1015,1883,1279,1282,1284,1282,1284,952,1285,1884,1286,1280,1283,1260,1215,1279,0,1283,1257,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,630,1215,1285,630,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1282,1284,1015,1282,1284,0,1279,1279,1282,1284,1015,1282,1284,1015,1282,1282,1282,1282,1284,1284,1284,1284,1015,1015,1015,1015,1884,1286,1215,1883,1279,1286,1285,630,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1284,1015,1285,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,630,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1283,1283,630,1282,1286,1280,1281,1283,1260,1215,630,1282,1286,1280,1281,1283,1260,1215,1282,1284,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1279,1280,1281,1283,1260,1211,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1223,1251,1248,1246,1252,1249,1250,1247,1254,1268,1270,1269,1230,1217,630,1282,1286,1280,1281,1283,1260,1215,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,630,630,1260,1260,1884,630,1282,1279,1286,1280,1281,1283,630,1282,1284,1223,1251,1248,1246,1252,1249,1250,1247,1254,1268,1270,1269,1230,1217,1009,1282,1280,1281,1283,1283,1283,1288,1290,952,1285,1280,1283,1260,1215,1009,1282,1280,1281,1283,1283,1283,1288,1290,1236,1257,1211,1012,1285,1282,1280,1283,1287,1260,1211,1215,1289,1012,1282,1280,1283,1211,1215,1289,1014,1282,1280,1281,1283,1279,1009,1282,1280,1281,1283,1283,1283,1288,1290,1009,1282,1283,1280,1254,1283,1282,1283,1284,1015,1283,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1282,1284,1015,1282,1284,630,1882,1279,1286,1251,1248,1236,1257,1882,1884,1882,1882,1884,1882,1279,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,0,630,1215,1885,1279,1286,1254,1260,1283,0,630,0,1884,1249,1250,1882,1282,1283,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,630,1284,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1279,1279,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1223,1251,1248,1246,1252,1249,1250,1247,1254,1268,1270,1269,1230,1217,1236,1257,1211,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1285,630,1282,1279,1286,1280,1281,1283,1287,1288,1223,1251,1248,1236,1257,1246,1252,1249,1250,1247,1260,1211,1215,1254,1268,1270,1269,1230,1217,1289,1290,1284,1015,1280,1281,1883,1279,1286,1883,1883,1279,1268,1270,1269,1230,1217,1281,0,0,0,0,0,1010,768,0,0,0,0,0,0,0,1880,1880,1881,1880,1881,1880,1882,1883,1882,1881,1880,1882,1880,1883,1880,952,1884,1880,1880,1880,1880,1884,1880,1880,1880,1880,1880,1880,1883,1880,1880,1880,1880,1880,1884,1880,1880,1880,1881,1880,1880,768,1881,1009,952,1009,1010,1880,1012,1012,1014,1009,1009,1880,1881,1880,1882,1882,1884,1882,1882,1884,1882,1880,1885,1010,1880,1880,1884,1880,1880,1882,1880,1880,1880,1880,1880,1880,1880,1883,1883,1883,1880,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1010,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1304,1307,1231,1264,1880,1303,1880,1303,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,0,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,1880,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1304,1305,1306,1307,1308,1309,1310,1311,1312,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1304,1305,1306,1307,1308,1309,1310,1311,1312,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1880,1880,1218,1880,1880,1303,1220,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1233,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,0,1880,1308,1310,1311,1312,1231,1264,1237,1262,1225,1234,1227,1232,1265,1880,1880,1880,1303,1880,1303,1214,1271,1880,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,1303,1880,1303,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,1311,1312,1313,1262,1258,1222,1243,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1228,1229,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1238,1266,1220,1218,1263,1242,1231,1264,1239,1235,1226,1227,1243,1209,1210,1232,1265,1267,1303,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1309,1271,1263,0,1305,1880,1303,1235,1880,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1303,1259,1255,1239,1880,1303,1303,1303,1303,1303,1880,1303,0,0,0,1880,1221,1880,0,1238,1266,1220,1218,1263,1242,1231,1264,1239,1235,1226,1227,1243,1209,1210,1232,1265,1267,0,1010,1880,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1880,1303,1242,1224,1261,1256,1226,1243,1209,1210,0,1880,1304,1305,1306,1307,1308,1309,1310,1311,1312,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,0,0,1242,1267,1880,1214,1271,1010,1303,1304,1305,1306,1307,1309,1310,1237,1262,1880,1880,1311,1312,1253,1258,1880,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1225,1259,1261,1255,1256,1258,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1267,1241,1245,1241,1245,1303,1880,1880,1880,1304,1305,1306,1307,1308,1309,1310,1311,1312,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1271,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,1880,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,1266,1263,1231,1264,1265,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1234,0,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,0,1880,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1306,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1238,1266,1220,1218,1263,1242,1231,1264,1253,1233,1237,1228,1229,1262,1224,1241,1245,1225,1259,1261,1255,1256,1258,1214,1216,1219,1221,1222,1234,1239,1235,1226,1227,1243,1209,1210,1232,1265,1271,1267,1880,0,0,0,0,0,0,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1314,1315,1315,1316,1316,0,1314,1315,1316,0,0,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1314,1315,1316,1323,1323,0,0,0,0,1317,1318,1317,1318,1317,1317,1317,1317,1318,1318,1318,1318,1323,1323,1323,1317,1317,1318,1318,1323,1317,1318,1323,1317,1318,1317,1318,1318,1318,1318,1317,1318,1323,1317,1318,1323,1317,1318,1317,1318,1317,1318,1323,1317,1317,1318,1317,1318,1323,1317,1318,1323,1317,1318,1318,1317,1317,1318,1317,1318,1317,1318,1323,1317,1318,1323,1317,1318,1318,1317,1318,1323,1317,1317,1318,1317,1318,1323,1317,1318,1323,1317,1318,1317,1317,1318,1323,1317,1318,1323,1325,1317,1317,1317,1317,1318,1318,1318,1318,1323,1323,1323,1323,1317,1318,1317,1317,1317,1318,1318,1317,1318,1317,1318,1323,1317,1317,1318,1318,1318,1323,1317,1318,1317,1318,1317,1318,1323,1317,1318,1323,1317,1317,1318,1318,1317,1317,1318,1317,1317,1317,1317,1317,1317,1317,1317,1317,1317,1318,1318,1317,1318,1317,1318,1317,1318,1317,0,0,1317,1318,1317,1317,1318,1323,1317,1318,1317,1317,1318,1318,1317,1318,1323,1317,1317,1318,1318,1323,1317,1318,1323,1317,1318,1323,1317,1317,1317,1318,1318,1317,1317,1318,1317,1318,1323,1317,1318,1317,1318,1317,1318,1323,1318,1318,1317,1317,1318,1317,1317,1317,1317,1318,1318,1317,1318,1317,1318,1317,1318,0,1317,1318,1323,1317,1318,1317,1318,1323,1317,1317,1317,1318,1323,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1318,1318,1317,1318,1317,1318,1323,1317,1318,1323,1317,1318,1323,1317,1318,1323,1317,1318,1323,1317,1317,1318,1323,1317,1318,1317,1318,1323,1317,1318,1317,1318,1317,1317,1318,1318,1317,1318,1317,1318,1318,1317,1318,1323,1317,1317,1317,1318,1323,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1317,1318,1886,0,0,0,0,0,0,0,0,0,0,0,0,1350,1329,1331,0,0,0,0,0,0,0,0,1350,1329,1331,0,0,0,0,1350,1329,1331,1350,1329,1331,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1341,1342,895,901,902,895,901,902,895,901,902,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1351,1353,1355,1348,1332,895,899,1338,1341,1342,901,902,1327,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1348,1338,1341,1342,1327,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1345,1344,1345,1344,1345,1344,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1351,1353,1355,1351,1351,1351,1353,1355,1353,1354,1355,1356,1317,1351,1352,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1350,1351,1352,1329,1353,1354,1331,1355,1356,1352,1351,1352,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1351,1354,1356,1351,1351,1353,1355,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1351,1329,1353,1354,1331,1355,1356,1353,1354,1355,1356,1351,895,899,1338,1341,1342,901,902,1327,903,1345,1344,895,899,895,899,1338,1341,1341,1341,1341,1341,1341,1341,1341,1341,1341,1341,1341,1341,1342,1342,1342,1342,1342,1342,1342,1342,1342,1342,1342,1342,1342,1327,1332,895,899,1338,1341,1342,901,902,1327,1332,903,1341,1342,1341,1342,1341,1342,1341,1342,1329,1331,1350,1329,1331,1350,1329,1331,1329,1331,895,901,902,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1351,1353,1355,1351,1353,1355,1353,1355,1351,1353,1355,1353,1355,895,899,1338,1338,1341,1341,1342,1342,901,902,1327,1327,1332,903,1341,1342,1317,1351,1352,1353,1354,1355,1356,895,901,902,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,1348,895,899,1338,1341,1342,901,902,1327,1332,903,1345,1350,1351,1352,1344,1329,1353,1354,1331,1355,1356,1348,0,0,0,0,0,0,0,0,1330,0,0,0,1330,0,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1339,1328,1333,1340,1337,1326,1347,1349,1340,1337,1326,1347,1349,1340,1337,1326,1347,1349,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1333,1340,1339,1328,1337,1326,1347,1349,1330,1357,1358,1339,1328,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1333,1357,1358,1330,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1337,1326,1347,1349,1340,1339,1328,1318,1339,1339,1339,1339,1339,1339,1339,1339,1339,1339,1339,1339,1339,1328,1328,1328,1328,1328,1328,1328,1328,1328,1328,1328,1328,1328,1333,1333,1333,1333,1333,1333,1333,1333,1333,1333,1333,1333,1333,1340,1339,1328,1333,1337,1326,1347,1349,1339,1328,1333,1339,1328,1333,1339,1328,1333,1339,1328,1333,1330,1337,1326,1340,1337,1326,1347,1349,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1357,1357,1340,1339,1339,1328,1328,1333,1337,1326,1347,1349,1339,1328,1333,1340,1337,1326,1347,1349,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,1340,1339,1328,1333,1337,1326,1347,1349,1330,1357,1358,0,0,0,0,0,0,0,1364,1346,1362,1346,1346,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1359,1359,1359,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1346,1346,1346,1346,1362,1361,1346,1346,1359,1346,1360,1346,1346,1359,1346,1360,1346,1360,1359,1346,1346,1346,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1346,1346,1363,1359,1346,1346,1360,1362,1362,1361,1361,1364,1346,1346,1346,1346,1362,1361,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1346,1346,1346,1346,1346,1346,1363,1363,1359,1346,1360,1362,1361,1364,1364,1346,1346,1346,1346,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1346,1360,1362,1361,1363,1359,1346,1360,1362,1361,1364,1346,1360,1362,1361,1364,1346,1363,1359,1346,1360,1362,1361,1364,1346,1346,1363,1359,1346,1360,1362,1361,1364,1360,1346,1362,1361,1360,1362,1361,1346,1346,1346,1362,1361,1362,1362,1362,1362,1362,1362,1362,1362,1362,1362,1362,1362,1362,1361,1361,1361,1361,1361,1361,1361,1361,1361,1361,1361,1361,1361,1346,1346,1360,1362,1361,1364,1362,1361,1362,1361,1362,1361,1362,1361,1361,1359,1359,1346,1360,1346,1363,1359,1346,1360,1362,1361,1364,1360,1360,1346,1346,1346,1346,1346,1360,1362,1362,1361,1361,1362,1361,1346,1361,1359,1346,1360,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1346,1363,1359,1346,1360,1362,1361,1364,1346,1346,1346,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1363,1359,1346,1360,1362,1361,1364,1346,1346,0,1369,0,0,1369,0,0,0,0,0,0,0,1369,0,0,1369,0,0,0,0,0,0,0,0,0,0,0,1374,1367,1365,749,1366,1371,1368,1368,1368,1369,1369,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1365,749,1366,1366,1366,1367,1367,1368,1369,1368,1369,1368,1369,0,0,0,0,1374,1367,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1369,1374,1367,1365,749,1366,1371,1368,1369,1366,1366,1366,1374,1367,1365,749,1366,1371,1368,1369,1368,1369,1368,1369,1368,1369,1368,1368,1368,1368,1369,1369,1369,1369,1374,1367,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1374,1367,1367,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1365,749,1366,1366,1365,749,1366,1366,1366,1366,1374,1367,1371,1374,1374,1369,1368,1369,1374,1367,1374,1367,1365,749,1366,1371,1368,1369,1368,1369,1367,1374,749,1366,1368,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1374,1367,1365,749,1366,1371,1368,1369,1365,749,1366,1366,1366,1365,749,1366,1366,1366,1366,1366,1366,1365,749,1366,1366,1366,1366,1366,1366,1374,1367,1365,749,1366,1371,1368,1369,1365,749,1366,1366,1365,749,1366,1366,1366,1366,1374,1367,1365,749,1366,1371,1368,1369,1366,1374,1367,1365,749,1366,1371,1368,1369,1374,1374,1374,1374,1374,1374,1397,1398,0,1385,1386,0,0,1385,1377,1378,1386,1397,1398,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1376,1378,1375,1379,1381,1382,1384,1380,1380,1383,1370,1372,1373,1370,1372,1373,750,1387,1389,1390,1370,1372,1373,1370,1372,1373,1887,1888,1370,1378,1372,1373,1375,1375,750,750,1379,1379,1387,1387,1381,1381,1382,1382,1384,1384,1389,1389,1390,1390,1887,1888,1370,1378,1372,1373,1375,1375,750,750,1379,1387,1381,1382,1382,1384,1389,1390,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1391,1382,1384,1392,1382,1392,1887,1888,1370,1378,1372,1373,1375,1375,750,750,1379,1379,1387,1387,1381,1381,1382,1382,1384,1384,1389,1389,1390,1390,1370,1372,1373,1375,1375,750,750,1379,1379,1387,1387,1381,1381,1382,1382,1384,1384,1389,1389,1390,1390,1370,1372,1370,1372,1373,1373,1373,1373,1370,1887,1888,1370,1370,1370,1378,1372,1372,1372,1373,1373,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1370,1370,1372,1372,1373,1373,1370,1372,1373,1378,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1370,1378,1372,1373,1375,750,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1370,1372,1373,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1385,1370,1378,1372,1386,1373,1386,1373,1378,1372,1375,1385,1370,1378,1372,1378,1386,1386,1396,1388,1375,750,1379,1387,1381,1382,1389,1390,1375,750,1379,1387,1381,1382,1384,1389,1390,1375,1378,1375,1370,1372,1373,1377,1378,1370,1370,1372,1373,1370,1372,1373,750,1387,1389,1390,1370,1372,1373,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1373,1373,1379,1379,1381,1382,1384,1381,1382,1384,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1385,1370,1378,1372,1386,1398,1398,1397,1370,1378,1372,1386,1398,1396,1399,1399,1398,1397,1370,1378,1372,1388,1400,1400,1375,750,1379,1387,1381,1382,1389,1390,1373,1373,1373,1373,1373,1373,1373,1373,1373,1388,1384,1400,1384,1400,1384,1384,1384,1384,1373,1373,1373,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1385,1378,1386,1380,1376,1378,1375,750,1379,1387,1381,1382,1384,1389,1390,1386,1380,1388,1383,1375,1379,1381,1382,1384,1375,1379,1381,1382,1384,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1373,1388,1384,1887,1888,1370,1378,1372,1373,1375,750,1379,1387,1381,1382,1384,1389,1390,1384,1373,0,1833,0,983,0,0,1833,0,1834,0,0,0,0,1835,1835,1401,1401,1401,1402,1402,1402,1401,1402,1401,1402,1835,1401,1402,1401,1402,1835,1835,1401,1402,1401,1402,1402,1401,1402,1401,1402,1401,1402,1835,1401,1402,1401,1402,1401,1402,1401,1402,1401,1402,1401,1401,1401,1401,1402,1402,1402,1402,1835,1835,1835,1835,977,1401,1402,1401,1402,1836,1401,1402,1401,1402,1401,1402,1401,1402,1401,1401,1402,1402,983,1401,1402,983,983,983,983,983,983,983,983,983,983,983,983,1835,1835,1835,1835,1835,1835,1401,1402,1401,1402,1401,1402,1402,1401,1402,1401,1402,1401,1402,1835,1835,1401,1402,1835,1401,1402,1401,1402,1401,1402,1401,1402,1834,1401,1402,1401,1835,1835,1835,1835,1835,1835,1835,1401,1402,1401,1402,1401,1402,1401,1402,1401,1402,1401,1402,1401,1402,1835,1835,1835,1835,1835,1401,1402,1835,1835,1401,1402,1835,1835,1834,1401,1402,0,0,0,0,0,0,0,513,509,516,513,509,516,513,516,513,0,0,0,872,873,872,873,872,873,872,873,872,873,0,0,872,873,0,0,872,873,872,873,872,873,872,872,873,873,872,873,872,873,872,873,872,873,872,873,872,873,872,873,872,873,872,873,872,873,0,872,873,0,0,872,873,0,872,873,0,0,872,873,872,873,872,873,872,873,0,0,872,873,872,873,872,873,872,873,872,873,872,873,0,0,0,0,0,1416,847,1416,847,1416,847,1416,1416,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,1416,847,847,847,1410,1411,847,1412,1412,1412,1410,1411,847,1412,1410,1411,847,1412,847,847,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1411,847,1410,1411,847,1412,1411,1410,1411,847,1412,1410,1411,847,1412,1411,1410,847,1411,847,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,1412,847,1412,1412,1412,1412,1412,1412,1411,847,1410,1411,847,1412,1410,1411,847,1412,1411,847,1410,1411,847,1412,1410,1411,847,1412,1411,1411,847,847,1410,1411,847,1410,847,1411,847,847,847,1410,1411,847,1412,1411,1411,847,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,847,847,1410,1411,847,1412,1410,1411,847,1410,1411,847,1412,0,1410,1411,847,847,0,1410,1410,1411,847,1410,0,1411,847,1410,1411,847,1412,1411,847,1410,1411,847,1412,1412,1411,847,1411,847,847,1411,847,0,847,847,847,847,1411,847,847,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,1410,1411,847,1412,847,1410,1411,847,1412,847,847,1410,1411,847,1412,847,0,1410,1411,847,1412,1410,1411,847,1412,1410,847,1410,1411,847,1412,1411,847,1411,847,847,847,1411,847,847,847,0,0,0,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1406,1406,1406,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1415,1406,1407,1406,1415,1406,1407,1415,1406,1407,1406,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,1415,1406,1407,0,0,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1417,1417,1417,1417,1417,1417,1417,1417,1417,1417,1417,1417,1417,1414,1417,1417,1417,1417,1417,1414,1417,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,1417,1414,0,0,0,0,1404,0,1404,0,1404,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1418,1418,1404,1419,1418,1404,1419,1418,1404,1419,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1419,1418,1404,1404,1404,1404,1404,1419,1418,1418,1418,1418,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,1404,1419,1418,0,0,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1420,1421,1421,1420,1421,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1420,1421,1421,1420,1421,0,0,0,0,812,807,809,812,813,807,809,812,813,807,809,812,813,807,809,807,807,812,813,807,809,812,813,807,809,812,812,813,813,807,807,809,809,812,813,813,807,809,809,812,813,807,809,813,812,813,807,809,807,807,812,813,807,807,809,812,813,807,809,812,813,807,809,812,813,807,809,813,812,813,807,809,812,813,807,809,812,813,807,809,812,813,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,813,809,812,813,807,809,812,813,807,809,807,812,813,807,809,812,813,807,809,807,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,812,813,807,809,813,809,812,813,807,809,0,0,0,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,1422,0,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1413,1408,1408,1408,0,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1408,1491,1500,1440,1440,1485,0,1500,0,0,1500,0,1491,1491,1491,1491,1491,1423,1424,1423,1424,1436,1423,1441,1491,1485,1505,1469,0,1505,1511,1509,1491,1438,1438,1438,1440,1440,849,1495,1500,1436,0,0,1511,849,0,0,1511,0,1467,0,1511,0,0,1511,1489,1489,1489,0,1500,1489,1500,1499,1500,849,0,1489,1491,1423,1423,1423,1423,1423,1425,1441,1453,1500,1491,0,0,1511,0,1491,1437,848,1491,1495,1491,1491,0,0,1508,1466,1466,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,1467,0,0,0,0,1453,0,0,0,1441,1508,0,0,1491,1423,1423,1423,1424,0,842,1500,1500,0,1491,1505,1503,1500,1491,1556,0,0,1491,1425,0,0,0,0,0,1511,0,0,0,0,0,1499,0,0,1491,1491,1491,1423,0,1489,0,1491,1436,1425,1438,1438,1438,1423,1423,1423,1423,1423,1482,0,1511,0,0,842,1469,1496,849,1483,0,1511,1491,1440,808,0,1436,0,0,849,1466,1441,1436,1491,0,0,1476,1505,1489,0,1495,1500,0,1491,1490,1437,848,1482,1454,1440,1437,848,0,1476,1505,1483,1500,1500,849,1500,1491,1491,1491,1491,1491,1491,1491,1491,1491,1491,0,1491,0,0,0,1508,1511,1491,1496,1491,1491,0,0,0,1441,1489,849,0,1491,1496,0,1489,1489,1489,0,1500,0,1466,1500,0,1476,1491,849,1491,1423,1424,1436,1425,1438,1438,1438,0,1511,0,0,0,849,0,1499,0,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,0,0,0,842,1469,0,1491,1440,1490,1503,1489,0,1466,0,1511,0,0,0,0,1503,0,0,1511,0,1505,1491,0,1495,1889,0,0,1453,1491,1423,1436,1441,1423,1424,1491,849,1489,1500,0,0,1511,0,0,1509,0,0,0,0,0,1441,0,1469,1489,0,0,0,1491,1425,0,1509,808,0,1491,849,0,1556,1500,0,1491,1423,1424,1500,0,0,0,0,0,1503,0,1489,1491,1425,1491,1425,1423,1491,1426,848,1425,1457,839,1489,1500,1500,0,0,1423,1424,1425,1424,1426,1425,779,1428,839,1426,1425,18,1431,779,779,18,1431,779,779,18,1431,779,779,1423,1424,779,1486,1435,1470,1436,1438,1439,1440,779,779,779,779,779,779,779,779,779,1441,1442,1440,1490,1443,1444,1444,1438,1425,1425,1445,1445,18,18,18,1452,1440,1446,1446,1426,848,1425,1447,1446,1446,1435,1431,1448,610,1449,1450,1431,855,848,1443,1447,1447,1428,1497,1520,1513,1535,1423,1423,1423,1521,1472,1465,1424,1424,1436,1436,1436,1438,1438,1438,1443,1426,1426,1426,1437,1437,1456,1456,1456,848,848,848,1547,1425,1425,1425,1467,1467,1455,1455,1455,1474,1474,1431,1431,1431,849,849,1457,1457,1475,1475,1454,1454,1453,779,815,815,1476,1476,1476,1477,1477,1478,1478,1523,1552,1553,1479,1479,1463,1554,1536,1480,1480,1541,1445,1555,1518,1481,1481,1556,1464,1470,1482,1482,1482,1483,1483,1483,1448,1448,808,808,808,1484,1444,1485,1485,1485,1460,1460,1519,1459,1458,1486,18,18,610,610,1487,1487,1487,1488,1488,1488,1489,1489,1466,1466,1466,1440,1440,1440,1490,1490,1490,1491,1491,1491,1492,1492,1492,1493,1493,1493,1494,1494,1494,1495,1495,1495,1496,1496,1496,1497,1449,1449,1450,1450,1498,1498,1498,1499,1499,1499,1500,1500,1500,1501,1501,1434,1434,1434,1502,1502,1435,1446,1441,1441,1441,1442,1442,1442,1469,1469,1469,1439,1439,1439,1503,1503,1503,1447,1504,1428,780,859,856,856,856,1505,1505,1505,1452,1452,839,839,1506,1506,855,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1511,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1423,1436,1438,1456,1476,1482,1483,808,1485,1440,1491,1492,1434,1441,1442,1503,1505,1437,1455,1455,1512,1456,848,1890,1426,1425,1457,1890,1426,1425,1457,779,1458,1458,1443,1459,779,18,779,779,779,779,1423,1424,1442,1480,855,842,855,1478,1460,18,1435,1462,1510,1463,1464,1440,780,780,1513,1513,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1458,1465,848,839,848,1439,848,779,1446,1446,1446,1506,1446,1446,1446,1512,1456,1488,1467,1431,1447,1431,1462,1468,1475,1460,1426,1425,1437,848,848,848,779,1439,1460,780,1470,1470,1512,18,779,1552,1553,779,779,1428,849,1428,849,1428,1426,1437,848,1425,1463,1463,1464,1464,1431,1512,1448,18,18,856,856,856,780,780,780,779,1428,1472,1484,1428,1472,1506,1470,1470,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1511,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1511,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1511,779,1447,849,1476,808,1491,1493,1494,1441,1503,1505,779,855,842,855,1506,779,1470,1443,1443,779,1506,855,842,1514,1454,1480,1514,779,779,779,779,779,779,779,779,1547,779,1431,779,1440,1440,1476,808,1491,1493,1494,1441,1503,1505,1490,1443,1444,1444,1444,1444,1443,1435,1435,0,1437,848,1440,848,780,849,1450,18,1446,1435,1439,1439,1439,1439,1440,1490,779,1428,1428,780,1486,1443,1444,1501,779,1470,1470,1481,1481,1481,1481,1450,1481,1481,1481,1463,1464,1463,1464,1463,1464,1463,1464,1506,1460,1506,849,849,779,18,1447,779,18,1442,1452,18,779,18,1428,1428,1423,1424,1436,1426,1425,1455,1474,1431,1457,1454,1453,815,1476,1478,1479,1480,1518,1482,1448,808,1460,1519,1459,18,610,1487,1488,1440,1497,1449,1450,1500,1435,1446,1439,1503,1447,1504,1452,839,1506,855,842,1468,1510,1514,1465,1443,1459,1465,1520,1443,1520,1443,1443,1444,1444,1443,1443,1459,1459,1521,1443,1459,1521,1512,1446,1446,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1501,1423,1424,1436,1438,1426,1437,848,1425,1467,1455,1474,1431,1457,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,610,1487,1488,1489,1466,1440,1491,1493,1494,1495,1496,1450,1498,1500,1501,1434,1441,1442,1469,1504,1505,1452,839,1506,1508,1510,1511,1445,1445,1470,1470,1445,1470,1445,1470,1426,1426,848,848,1425,1425,1425,849,780,780,1446,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,856,856,779,779,1443,1444,780,780,780,780,780,1443,1458,1458,1501,1447,1464,1464,1452,780,780,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,610,1423,1436,1438,1426,1456,848,1425,1455,1431,1476,1482,1483,808,1485,1487,1488,1466,1440,1490,1491,1492,1493,1494,1495,1496,1498,1499,1500,1434,1441,1442,1469,1439,1503,856,1505,1511,1423,1436,1438,1456,1476,1482,1483,808,1485,1440,1491,1492,1434,1441,1442,1503,1505,0,1481,1479,1458,1520,1443,1444,780,1520,779,1444,1501,1481,18,1481,779,1423,1424,1436,1438,1426,1437,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1485,1460,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1449,1450,1498,1499,1500,1501,1434,1502,1441,1442,1469,1439,1503,856,1505,1452,839,1506,855,1511,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1485,1460,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1449,1450,1498,1499,1500,1501,1434,1502,1441,1442,1469,1439,1503,856,1505,1452,839,1506,855,1511,1423,1423,1423,1423,1436,1436,1436,1436,1438,1438,1438,1438,1426,1426,1426,1426,1456,1456,1456,1456,848,848,848,848,1425,1425,1425,1425,1455,1455,1455,1455,1431,1431,1431,1431,1476,1476,1476,1476,1482,1482,1482,1482,1483,1483,1483,1483,808,808,808,808,1485,1485,1485,1485,1487,1487,1487,1487,1488,1488,1488,1488,1466,1466,1466,1466,1440,1440,1440,1440,1490,1490,1490,1490,1491,1491,1491,1491,1492,1492,1492,1492,1493,1493,1493,1493,1494,1494,1494,1494,1495,1495,1495,1495,1496,1496,1496,1496,1498,1498,1498,1498,1499,1499,1499,1499,1500,1500,1500,1500,1434,1434,1434,1434,1441,1441,1441,1441,1442,1442,1442,1442,1469,1469,1469,1469,1439,1439,1439,1439,1503,1503,1503,1503,856,856,856,856,1505,1505,1505,1505,1511,1511,1511,1511,1423,1424,1436,1438,1426,1437,848,1425,1467,1455,1474,1431,1457,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,610,1487,1488,1489,1466,1440,1491,1493,1494,1495,1496,1450,1498,1500,1501,1434,1441,1442,1469,1504,1505,1452,839,1506,1508,1510,1511,1428,1506,1497,1470,610,1450,1435,1450,848,848,1447,1447,848,848,1465,1521,1455,1437,848,848,839,779,779,779,1452,1428,848,848,848,855,1480,855,1506,1506,1428,1506,855,842,1479,855,815,855,1523,1445,1460,1523,1445,1460,1435,1468,1462,1462,1462,1463,1464,1443,1444,1443,1443,1459,1426,1425,1423,1424,1436,1438,1426,1437,848,1425,1431,849,1457,1475,1454,815,1476,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1447,1504,780,859,856,1505,1505,1452,839,1506,1507,1462,1468,1508,1509,1510,1511,1447,780,856,856,610,1435,1470,855,1477,1479,855,1480,1470,779,18,1428,18,1502,18,18,1490,1492,18,1521,1465,1443,1523,1470,1519,1507,1521,1465,1443,1523,1470,1519,1507,18,1448,1520,1513,1535,1423,1423,1423,1423,1423,1521,1472,1465,1424,1424,1424,1424,1436,1438,1443,1426,1426,1426,1426,1426,1437,1437,1437,1437,1437,1437,1437,1437,1456,848,848,1547,1425,1425,1425,1425,1425,1467,1467,1467,1467,1455,1474,1431,849,849,849,849,849,849,849,849,849,849,1457,1457,1475,1454,1454,1453,1453,1453,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,808,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1494,1494,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1434,1434,1502,1435,1446,1441,1442,1469,1439,1503,1503,1447,1504,1428,780,859,856,1505,1452,839,839,839,839,1506,855,855,855,855,855,855,842,842,842,842,842,842,842,842,1507,1462,1462,1468,1508,1509,1509,1509,1509,1509,1509,1509,1509,1509,1509,1510,1514,1511,1423,1423,1424,1462,1481,848,1463,1464,1423,1424,1455,1535,1535,1536,1424,1439,848,848,1477,1481,848,1481,1423,1424,1455,1423,1423,1424,1455,1423,1424,1455,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1424,1424,1477,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1462,848,1462,1423,1424,1423,1423,1424,1424,1436,1436,1426,1426,1425,1425,1455,1455,1474,1474,1431,1431,1457,1457,1454,1454,1453,1453,815,815,1476,1476,1478,1478,1479,1479,1480,1480,1518,1518,1482,1482,1448,1448,808,808,1460,1460,1519,1519,1459,1459,18,18,610,610,1487,1487,1488,1488,1440,1440,1497,1497,1449,1449,1450,1450,1500,1500,1435,1435,1446,1446,1439,1439,1503,1503,1447,1447,1504,1504,1452,1452,839,839,1506,1506,855,855,842,842,1468,1468,1510,1510,1514,1514,848,1513,1513,1423,1424,780,849,1428,849,1428,1423,0,1463,1464,18,0,0,0,0,1506,779,1460,1518,1518,0,1458,1447,780,1446,1446,1423,1424,1436,1438,1456,1454,815,1476,1480,1482,1483,808,1485,1440,1491,1492,1434,1441,1442,1503,1505,1513,779,855,842,848,1467,1455,1474,1465,1465,1463,1464,780,18,1468,1470,1470,849,1428,779,1518,1458,1470,1439,779,1439,1439,1458,779,779,856,1446,780,780,610,1443,1458,779,1506,779,1520,1535,1520,1535,1443,1456,779,1470,1444,1459,1521,1465,1456,779,1470,1444,1459,1442,780,1520,1470,1459,1458,1520,1535,1547,1470,1459,1458,849,779,1523,1428,1523,1507,1523,1506,1462,1462,18,0,779,1506,1423,1424,1438,1426,1425,1455,1474,1477,1423,1424,1438,1426,1425,1455,1474,1431,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,859,1460,1460,779,18,779,18,1512,18,1464,1424,779,780,1452,1506,780,1446,1446,1452,779,1443,1444,1444,1447,1452,1470,856,1470,1447,848,1437,848,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1513,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1554,1536,1480,1541,1445,1555,1518,1481,1556,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,842,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,842,0,1423,1424,1447,1447,18,1446,1431,1454,1481,1448,855,842,779,1444,1426,848,1425,1469,1439,1518,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,18,1444,1446,1512,848,1440,1423,780,18,1447,848,779,1459,1457,839,1490,1446,780,18,1431,1423,1424,1426,1437,848,1425,1469,1439,779,855,842,1480,855,1481,1492,1435,1435,1435,1435,779,1535,1501,1501,780,1464,1446,1446,1488,1446,1446,1446,1444,779,1428,1428,780,18,1447,1447,18,0,779,1428,1541,1428,1470,1470,1521,848,839,848,848,848,1439,848,839,1425,1425,0,1426,848,848,848,1506,1506,1506,849,855,1480,855,849,1428,1423,779,0,1509,1462,1462,1470,18,18,1470,1447,1464,780,1490,1440,1490,1482,1439,1439,1439,1439,1439,1439,1462,1468,779,1470,1460,1470,780,1440,1497,1426,1425,1437,848,1547,1547,1463,1464,1463,1464,1463,1425,1465,1458,1462,779,1459,1462,1459,1458,1468,610,1435,1521,1458,1462,779,18,779,18,18,0,1460,779,779,1506,779,849,1481,780,1446,1487,1488,1426,1425,1437,848,1547,1547,1463,1464,1463,1464,1425,1465,1443,1459,779,1547,1547,1458,1458,1458,779,1523,1470,1459,1523,1470,1459,1521,1443,1459,1482,610,1492,1435,779,815,855,842,1443,1444,1444,18,1424,1424,1425,1425,1425,18,1435,1470,1470,1424,1460,1450,1443,1456,1491,1488,1457,1425,1458,1520,1535,1521,1465,1443,1426,1437,1456,1547,1425,1455,1474,1454,779,815,1523,1552,1553,1463,1554,1536,1541,1445,1555,1464,1444,1458,1492,1501,1434,1442,1428,859,855,1507,1462,1514,1447,1447,1444,1498,1536,1498,779,779,779,1457,1454,1460,1452,1506,1425,1434,1547,1547,1481,1435,1502,1481,1457,1463,1464,1458,1458,780,780,780,780,780,780,780,780,1520,1443,1520,1443,1536,1447,18,1450,1450,1513,1523,18,1447,18,1444,1444,1442,1464,1464,0,18,1460,1460,0,779,18,780,779,18,1452,1506,1452,1460,1462,1514,0,779,779,779,1506,1476,808,1491,1493,1494,1441,1503,1505,1470,1470,1487,1488,1435,1443,1444,1444,1455,1474,18,1435,1472,1481,610,1435,779,1449,1440,1437,1435,1446,18,18,18,1460,1447,0,0,1506,0,1481,1481,1446,1438,610,1435,1439,1463,1464,1463,1464,1504,1446,1446,1446,1446,1501,1446,1446,1446,1446,1484,1445,815,779,779,1423,1424,779,779,855,842,855,1464,1435,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1511,1423,1424,1436,1426,1425,1455,1474,1431,1457,1454,1453,815,1476,1478,1479,1480,1518,1482,1448,808,1460,1519,1459,18,610,1487,1488,1440,1497,1449,1450,1500,1435,1446,1439,1503,1447,1504,1452,839,1506,855,842,1468,1510,1514,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1423,1436,1438,1426,1456,848,1425,1455,1431,1476,1482,1483,808,1485,1487,1488,1466,1440,1490,1491,1492,1493,1494,1495,1496,1498,1499,1500,1434,1441,1442,1469,1439,1503,856,1505,1511,1423,1424,1436,1438,1456,1454,815,1476,1480,1482,1483,808,1485,1440,1491,1492,1434,1441,1442,1503,1505,1428,1475,1481,780,779,849,1428,849,1428,1455,1474,0,0,1449,1512,1447,780,18,18,1431,1431,1447,0,0,779,1521,1465,1443,1459,1521,1465,1459,1443,1443,1506,1453,1505,1508,859,1521,848,839,848,839,848,848,1439,848,1425,1431,1462,848,1510,1502,1426,1425,1428,1428,1428,1523,1460,1462,1523,1460,1510,1481,18,1457,839,1498,1478,779,1504,18,1435,610,1435,1472,1443,1443,1458,1458,1458,1435,1458,779,780,779,779,1458,1457,1446,780,1446,1446,1446,1520,1520,779,779,1520,1523,1501,1507,1520,1523,1555,1501,1507,1535,1535,1506,1523,1541,1507,1462,1523,1541,780,1507,1462,779,1423,1424,1436,1438,1426,1437,848,1425,1467,1455,1474,1431,1457,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,610,1487,1488,1489,1466,1440,1491,1493,1494,1495,1496,1450,1498,1500,1501,1434,1441,1442,1469,1504,1505,1452,839,1506,1508,1510,1511,1456,1428,1448,848,848,779,1428,18,18,1447,779,1447,1447,18,848,779,779,1428,848,779,779,779,779,779,779,18,1456,18,18,848,779,18,779,18,848,779,18,848,779,779,18,1460,1460,1449,1440,1490,1440,1434,1441,1442,1523,1523,1520,1521,1465,1443,1547,1470,1444,1460,1519,1459,1458,1521,1465,1521,1465,1521,1465,1521,1465,1520,1520,1535,1521,1465,1519,1462,1462,1444,1445,1458,1521,1465,1521,1465,0,0,0,0,0,1535,1520,1464,1464,1458,1437,848,1518,848,779,839,1462,779,1521,1465,1460,848,1480,1470,1456,848,1467,1481,855,1462,1514,1455,1474,815,855,1462,1514,1456,779,1501,1506,779,1523,855,842,1523,779,855,842,1464,1464,1464,1462,1462,1547,779,1518,1547,1518,1452,779,1437,1464,0,1463,1463,779,1425,848,848,1431,848,848,848,1474,1435,1502,1547,1547,1502,1464,1464,1458,1458,1458,1447,1447,1470,855,842,1480,855,1547,1506,1523,1460,1523,1460,0,779,855,842,855,1506,0,779,18,779,1504,779,18,18,1426,1426,1425,1426,1425,1428,1463,1464,1463,1464,839,1447,780,1457,1491,839,1497,1512,610,1450,18,18,1504,18,18,1456,0,849,1541,1445,1481,1464,1428,855,842,1520,1523,1552,1553,1554,1536,1541,1445,1555,1464,1470,855,1464,1470,1506,1470,855,1470,1506,1450,1506,1501,779,779,1501,1501,1470,855,842,855,779,1452,1452,849,1431,1462,1462,1509,18,1449,610,1435,1446,1446,1507,1462,1510,1443,1443,1423,1424,1436,1423,1423,1424,1423,1424,1436,1438,1426,1437,1456,848,1425,1467,1455,1474,1431,849,1457,1475,1454,815,1476,1477,1478,1479,1480,1481,1482,1483,1448,808,1484,1444,1485,1460,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1511,1425,1424,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1436,1438,1423,1424,1476,1505,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1423,1424,1426,1447,779,1465,848,839,1439,1439,848,1460,1435,1464,1464,848,1431,849,18,1502,780,780,1541,1541,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,18,18,18,1477,1477,1501,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1427,1523,1552,1553,1463,1554,1536,1541,1445,1555,1518,1464,1470,610,1435,1446,1452,1506,1507,1462,1514,779,855,842,1480,855,848,780,856,1435,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,1463,1463,1509,1536,1498,18,18,0,1507,1462,1510,1480,1501,0,1446,1446,779,1518,1464,1458,1470,1439,779,779,1439,1458,1431,1472,1472,849,779,1452,779,849,1428,1443,1458,1520,1513,1535,1423,1521,1472,1465,1424,1436,1438,1443,1426,1437,1456,848,1547,1425,1467,1455,1474,1431,849,1457,1475,1454,1453,779,815,1476,1477,1478,1523,1552,1553,1479,1463,1554,1536,1480,1541,1445,1555,1518,1481,1556,1464,1470,1482,1483,1448,808,1484,1444,1485,1460,1519,1459,1458,1486,18,610,1487,1488,1489,1466,1440,1490,1491,1492,1493,1494,1495,1496,1497,1449,1450,1498,1499,1500,1501,1434,1502,1435,1446,1441,1442,1469,1439,1503,1447,1504,1428,780,859,856,1505,1452,839,1506,855,842,1507,1462,1468,1508,1509,1510,1514,1511,18,18,1435,1506,0,1504,0,779,855,842,855,1506,780,0,0,1506,1535,848,1467,1455,1474,1535,1454,1521,1521,1460,1506,1506,1447,1506,1506,1506,1506,1434,18,1428,1439,1439,779,1428,779,1439,1439,1439,780,1547,1459,1459,1431,1443,1552,1535,1523,1541,1523,1541,1452,1535,779,1438,1426,1425,848,1438,1426,1425,1478,1478,848,1435,1502,1435,1502,1435,1891,1892,1893,1893,1893,1894,1894,1891,1892,1893,1891,1893,1894,1891,1894,1892,1895,1896,1896,1897,1897,0,0,0,0,0,0,0,0,1321,1571,1571,1571,1569,1569,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1569,1569,1569,1321,1571,1569,1570,1321,1571,1569,1570,1321,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1571,1569,1569,1570,1321,1571,1571,1569,1569,1570,1571,1569,1321,1571,1569,1570,1321,1571,1569,1570,1571,1569,1571,1569,1571,1569,1571,1571,1571,1571,1569,1569,1569,1569,1571,1569,1571,1571,1569,1569,1321,1321,1321,1571,1569,1570,1321,1571,1571,1571,1569,1569,1569,1570,1571,1569,1321,1571,1569,1570,1321,1571,1569,1570,1321,1321,1571,1571,1569,1569,1570,1570,1570,1571,1571,1571,1570,1571,1321,1571,1569,1570,1571,1321,1571,1571,1569,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1571,1571,1571,1569,1569,1571,1321,1571,1569,1570,1571,1321,1571,1569,1570,1570,1570,1570,1570,1898,1899,1571,1569,1570,1321,0,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1571,1569,1571,1571,1569,1569,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1321,1571,1569,1570,1898,1899,1571,1569,1571,1569,1571,1569,1570,1570,1321,1321,1321,1321,1321,1321,1321,0,0,1576,1570,1570,1570,1570,0,1485,0,0,1485,0,0,0,0,0,0,0,0,0,0,0,1444,1443,1458,1513,1513,1443,0,1444,1444,1465,1520,1443,1444,1459,1521,1458,1520,1444,1460,1521,1465,1443,1519,1458,1513,1465,1520,1535,1521,1465,1444,1459,1520,1535,1459,1458,1460,1444,1535,1459,1458,1458,1459,1444,1444,1458,1458,1520,1443,1513,1444,1460,0,1444,0,0,0,1521,1465,1459,1443,1460,1443,0,1458,1458,1520,1520,1535,1460,1520,1521,1465,0,0,0,0,0,1521,1465,1458,1460,1520,1443,0,1535,1521,1459,1443,1535,0,0,0,0,0,1577,1578,1577,1578,1577,1578,1577,1513,1513,1577,1577,1578,1577,1578,1578,1578,1578,1520,1577,1578,1577,1578,1577,1578,1577,1578,1520,1578,1577,1578,1577,1578,1577,1578,1577,1513,1520,1578,1578,1520,1577,1578,1577,1578,1577,1578,1577,1578,1577,1578,1577,1578,1577,1578,1578,1578,1578,1520,1578,1513,0,1578,1577,1578,1578,1520,1520,1578,1520,1578,1578,1578,1578,1577,1578,1578,1520,1578,1577,1578,1577,1578,1577,1578,1578,1577,1577,1578,1577,1578,1577,1578,1577,1577,1578,1577,1578,1549,0,1548,0,1548,0,0,1549,0,0,1579,1548,1548,1548,1549,1549,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1465,1521,1579,1548,1549,1579,1548,1549,1579,1579,1548,1549,1579,1548,1549,1548,1549,1548,1549,1548,1549,1548,1548,1548,1548,1549,1549,1549,1549,1579,1579,1548,1549,1521,1465,1519,1579,1548,1549,1579,1548,1549,1579,1548,1549,1465,1521,1465,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1579,1548,1549,1579,1548,1549,1548,1549,1579,1521,1465,1579,1521,1465,1521,1465,1579,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1579,1548,1549,1521,0,0,0,0,0,0,0,0,1560,1560,0,0,0,0,1560,1563,1580,1560,1560,1560,1563,1580,1560,1563,1580,1560,1458,1563,1580,1560,1563,1580,1560,1580,1560,1580,1560,1580,1560,1580,1563,1580,1563,1580,1560,1563,1580,1560,1580,1563,1580,1560,1458,1563,1580,1560,1560,1560,1560,1560,1560,1560,1560,1580,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1580,1580,1458,1563,1458,1563,1580,1560,1563,1563,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1580,1458,1458,1580,1458,1458,1580,1560,1580,1563,1580,1560,1560,1458,1580,1580,1458,1580,1580,1563,1458,1580,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1563,1580,1560,1580,1580,1563,1580,1560,849,1586,849,0,0,0,1467,0,0,849,0,1467,0,0,0,0,0,0,0,0,0,849,808,0,849,1586,0,1476,1561,1476,849,0,0,0,849,0,0,0,1476,849,0,0,849,0,0,0,0,0,0,0,0,849,0,0,0,0,0,808,849,0,0,0,1525,1515,1550,1581,1550,1529,1565,1589,1524,1531,1531,1527,1527,1582,1582,1583,1583,1583,1561,1561,1526,1526,1528,1528,1530,1530,1529,1529,1584,1585,1585,1581,1550,1566,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1524,1585,1561,1561,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1475,1526,1472,1589,1566,1484,1584,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1566,1586,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1566,1586,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1566,1586,1531,1527,1528,1528,1585,1583,1561,1454,1528,1581,1585,1585,1585,1583,1561,1584,1585,1550,1550,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1531,1527,1582,1583,1561,1526,1528,1530,1529,1585,1581,1581,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1583,1481,0,1585,1531,1527,1582,1583,1561,1526,1528,1530,1529,1585,1566,1531,1527,1582,1583,1561,1526,1528,1530,1529,1585,1566,1583,1583,1583,1583,1531,1527,1582,1583,1561,1526,1528,1530,1529,1585,1561,1524,815,1589,1585,1585,1531,1527,1526,1528,1530,1581,1530,1526,1530,1531,1531,1527,1531,1531,1527,1583,1561,1526,1528,1530,1529,1585,1566,1586,1524,1524,1524,1589,1531,1527,1550,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1531,1527,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1584,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1583,1583,1561,1561,1584,1584,1585,1585,1550,1550,1582,1529,1524,1525,1515,1524,1524,1456,0,1582,1581,1565,1431,1584,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1583,1582,1481,1524,1524,1524,1524,1528,1531,1527,848,1524,1481,1550,1550,848,0,1457,1589,1524,1530,1529,1581,1550,1550,1584,1524,1481,1531,1481,1457,1589,1582,1581,1529,1582,1455,1474,1524,1472,1589,1481,1531,1527,1528,1582,1583,1529,0,1581,1589,1585,1484,1526,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1566,1586,1583,1561,1584,1585,1550,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1583,1530,1475,1481,1550,1585,1589,1530,1524,1581,1481,1525,1515,1531,1527,1589,1589,1472,1457,1531,1527,1582,1583,1561,1526,1528,1530,1529,1585,1550,1589,1566,1584,1584,1584,0,1584,1584,1581,1455,1474,815,1561,1561,1531,0,1526,1530,1531,1527,1526,1528,1530,1457,1581,1550,1561,1589,1589,1589,1589,1589,1589,1589,1589,1589,0,1589,0,1456,0,1584,1584,1524,1565,1431,0,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1566,1586,1527,1531,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1531,1527,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1584,1585,1529,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,0,1583,1530,1525,1515,0,1565,1431,1584,1472,1531,1527,1526,1528,1530,1529,1565,1589,1524,1531,1527,1582,1583,1561,1526,1528,1530,1529,1584,1585,1581,1550,1566,1586,1454,1584,1426,1425,1426,1425,1897,1897,0,0,0,0,1525,1515,1525,1525,1515,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,0,1525,1515,1525,1515,1525,1515,1525,1525,1525,1525,1515,1515,1515,1515,1515,1515,1515,1515,1525,1515,1515,1515,1515,1525,1515,1525,1525,1515,1515,0,0,1525,1515,0,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,0,0,0,0,1515,1525,1515,1525,1515,1525,1515,0,1525,1515,0,1515,1525,1515,1515,1515,1515,1525,1515,1515,1515,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,1525,1515,0,0,1436,0,1559,1471,1471,1471,1436,1436,0,0,0,0,0,0,0,0,0,0,1592,0,0,1559,1592,1591,1591,1591,1559,1559,1592,1591,1559,1592,1591,1559,1890,1890,1592,1592,1592,1591,1559,1592,1591,1559,1559,1592,1592,1591,1559,1592,1591,1559,1592,1591,1559,1559,1592,1591,1559,1592,1591,1559,1591,1559,1559,1592,1591,1559,1592,1591,1559,1592,1591,0,1591,1559,1591,1559,1591,1591,1591,1591,1591,1559,0,1592,1592,1591,1559,0,0,1592,1591,1591,1559,1591,1559,1471,1592,1591,1559,1592,1591,1559,1591,1559,1559,1591,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1591,1559,1591,1559,0,1592,1559,1592,1591,1559,1591,1559,1592,1592,1592,1592,1559,1559,0,1437,848,1592,1592,1592,1592,1592,1437,848,1592,1591,1591,1559,1559,1559,1592,1559,0,1900,0,1592,1592,1591,1559,1559,1592,1591,1559,1591,0,0,0,1559,1591,1591,1559,0,1592,1591,1591,1471,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1592,1591,1591,1591,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1591,1559,1592,1592,0,1592,1592,1591,1559,1426,1425,1426,1425,0,0,1436,1436,1436,0,0,1467,0,1467,0,0,0,1582,1582,1455,1474,1582,1455,1474,0,0,0,0,0,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1590,1590,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1590,1551,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1590,1551,1590,1590,1551,1590,1551,1551,1590,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1590,1551,1551,0,0,0,1594,1594,1594,1594,1594,1594,1594,1594,1584,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1584,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1594,1584,1594,1594,1594,1594,1594,1584,1584,1584,1584,1584,1594,1584,1584,1594,1594,1594,1594,1594,1594,1594,1594,1584,1594,1596,1596,0,0,0,0,1595,1595,1595,1595,1595,1595,1596,1596,1596,1595,1596,1595,1596,1585,1595,1596,1595,1596,1595,1589,1595,1596,1595,1596,1595,1596,1585,1585,1585,1585,1595,1595,1596,1595,1596,1595,1596,1595,1596,1596,1585,1596,1596,1596,1596,1596,1596,1589,1585,1585,1595,1595,1595,1589,1595,1596,1595,1596,1595,1596,1595,1595,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1589,0,1589,1589,1585,1595,1596,1595,1595,1596,1596,1595,1585,1589,1589,1595,1595,1595,0,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,1595,1596,0,0,0,0,0,0,0,0,0,0,0,0,0,1476,1476,0,1476,0,0,0,0,0,1451,1602,1451,1451,1598,1598,1599,1599,1597,1597,1600,1600,1600,1601,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1601,1602,1480,1478,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1599,1451,1598,1597,1597,1597,1601,1451,1598,1599,1597,1600,1601,1451,1598,1599,1597,1600,1601,1451,1598,1599,1597,1600,1601,1480,0,1451,1599,1600,1602,1602,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1600,1481,1597,1451,1598,1599,1597,1600,1601,1451,1598,1599,1597,1600,1601,1600,1600,1600,1600,1451,1598,1599,1597,1600,1601,1480,1479,815,1451,1451,1598,1599,1597,1600,1601,1602,1477,1479,1451,1480,1602,1598,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1451,1451,1599,1599,1600,1600,1600,1597,1451,1602,1602,1451,1598,1599,1597,1477,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1451,1602,1451,1598,1599,1597,1600,1601,1480,1481,1451,0,1598,1480,1601,1599,1602,1599,1601,1597,1600,1481,1600,1597,1602,1599,1481,1481,1599,1602,1602,1481,1601,1451,1598,1599,1597,1600,1601,1451,1599,1600,1602,1451,1598,1599,1597,1600,1601,1600,1451,1598,1599,1481,1597,1481,1478,1601,1597,1451,1451,1598,1599,1597,1600,1601,1451,1451,1451,815,1601,1602,1480,1597,1451,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1599,1602,1451,1598,1599,1597,1600,1601,1602,1451,1598,1599,1597,1600,1601,1477,1602,1451,1598,1599,1597,1600,1601,1480,1602,1451,1598,1599,1597,1600,1601,1601,1480,1597,1602,1451,1598,1599,1597,1600,1601,1451,1597,1478,1478,0,0,0,0,1534,1534,1534,1534,1522,1522,1522,1537,1537,1516,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1522,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1522,1534,1522,1537,1516,1534,1522,1537,1516,1522,1522,1522,1522,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1534,1522,1522,1537,1537,1516,1516,1534,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1537,1537,1516,1534,1537,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1522,1516,1522,1534,1522,1537,1516,1534,1534,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1534,1522,1537,1516,1483,1483,0,0,0,0,0,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1550,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1448,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,1482,1550,1482,1587,1550,1587,1587,1587,1587,1587,1448,1587,1587,1587,1587,1587,1587,1587,1587,1587,1587,0,0,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,0,1604,0,1604,1604,1604,1604,1604,1604,1604,1604,1901,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,1604,0,0,0,0,0,0,0,0,0,0,1441,1441,1441,0,1441,0,0,1441,0,1441,1606,1429,1429,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1429,1429,1429,1429,1429,1429,1606,1429,1606,1429,1606,1429,1606,1606,1606,1442,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1606,1429,1606,1442,1429,1606,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,1606,1429,1606,1429,1606,1429,1606,1429,1606,1429,1606,0,0,0,0,0,0,1503,0,0,0,0,0,1544,1544,1544,1544,1544,1544,1567,1568,1543,1567,1568,1543,0,1503,1533,1503,0,0,1533,0,0,0,1503,1607,1608,1544,1533,1567,1568,1532,1532,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1533,1533,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1430,1432,1433,1607,1608,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1544,1533,1567,1568,1532,1543,1546,1544,1533,1567,1568,1532,1543,1546,1607,1608,1546,1607,1608,1544,1533,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1532,1533,1533,1430,1432,1433,1608,1532,1532,1532,1532,1532,1532,1544,1544,1533,1532,1430,1432,1433,1607,1608,1430,1432,1433,1607,1608,1607,1608,1544,1533,1533,1533,1533,1533,1567,1568,1532,1532,1532,1543,1546,1532,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1607,1608,1608,1546,1546,0,1430,1432,1433,1607,1608,1532,1546,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1430,1432,1433,1607,1608,1532,1544,1533,1567,1568,1532,1543,1546,1607,1608,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1532,1543,1532,1546,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1544,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1533,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1607,1608,1544,1533,1567,1568,1532,1543,1546,1902,1902,1903,1902,1904,1905,1906,1907,0,0,1609,1610,1609,1610,1609,1610,0,1609,1610,1609,1610,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1609,1609,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,0,0,1610,1609,1610,1610,1609,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1609,1610,1557,1557,1557,1557,0,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1557,1500,1500,1500,1558,1500,1500,1499,1500,0,1500,1558,1558,0,1500,1500,1500,1499,1500,1500,1500,1500,0,0,0,1500,1500,1499,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1558,1558,0,1558,1500,1500,0,1500,1500,1558,1558,1558,1558,1558,1558,1558,1558,1558,1450,1501,1450,1558,1558,1558,1558,1558,1501,1558,1558,1558,1450,1558,1558,1558,1558,1558,1558,1558,1558,1558,1558,1558,1501,1450,1498,1450,1449,1501,1558,1558,1449,1501,1558,1449,1450,1501,1449,1558,1558,1558,1558,1558,1558,1501,1558,1558,1498,1501,1558,1558,0,0,0,0,0,0,0,1505,1505,0,1453,1453,0,1505,0,0,1505,1505,0,1505,0,0,1453,0,0,0,0,1613,1452,1564,1564,1611,1611,1612,1612,1613,1613,1538,1538,1614,1614,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1612,1538,1538,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,839,1506,1564,1506,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1506,1506,1564,1564,1613,1506,1452,1614,1614,1564,1611,1612,1613,1614,0,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1452,1564,1611,1612,1613,1538,1614,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1614,1614,1614,1614,1564,1611,1612,1613,1538,1614,1506,1538,1452,1506,1506,1538,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1564,1611,1611,1612,1612,1613,1613,1614,1614,1614,1613,1506,1564,1564,1564,1564,1506,1613,1564,1564,1506,1564,1611,1612,1613,1538,1614,1506,1564,1452,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,839,1613,1564,1506,1613,1613,1452,1506,1452,1506,1506,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1614,1564,1611,1612,1613,1538,1614,1614,1506,1611,1611,839,1538,1564,1564,1564,1564,1506,1564,1611,1612,1613,1538,1614,1614,1614,1614,1614,1614,1611,1506,1564,1452,1506,1612,1613,1538,1506,1506,1564,1452,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1611,1564,839,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1564,1611,1612,1613,1538,1614,1452,1564,1611,1612,1613,1538,1614,1506,1538,1506,1506,1564,1506,1506,1506,1452,0,0,0,0,0,0,0,0,0,1476,1476,1476,0,0,0,1615,1615,1615,1615,1480,1615,1615,1599,1451,1598,1615,1615,1615,1480,1615,1615,1615,1615,1615,1615,1481,1615,1615,1615,1480,1479,1451,1615,1477,1479,1480,1598,1615,1615,1615,1615,1615,1451,1534,1477,1615,1615,1615,1615,1615,1615,1615,1615,1480,1481,1451,1598,1480,1599,1599,1481,1481,1481,1615,1599,1481,1534,1615,1615,1615,1615,1481,1481,1615,1451,1615,1615,1480,1451,1615,1615,1615,1615,1615,1615,1477,1615,1615,1480,1615,1480,1615,1451,0,0,1616,1616,1616,1616,1616,0,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,0,0,0,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1592,1616,1616,1592,1592,1616,1616,1616,1616,1616,1616,1616,1616,1616,1616,1592,1616,1616,1616,0,1616,1592,1616,0,0,0,0,1618,1619,1620,1618,1618,1619,1618,1619,1618,1619,1618,1619,1619,1618,1619,1619,1619,1619,1621,1618,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1618,1619,1619,1618,1618,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1620,1618,1618,1619,1618,1619,1618,1619,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1618,1619,1620,1618,1619,1618,1619,0,0,0,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1616,1616,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,1622,0,0,1623,1624,1624,1623,1624,1623,1624,1623,1624,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1624,1624,1623,1623,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1624,1623,1623,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1623,1624,1623,1624,1624,1623,1624,1623,1624,1623,1624,1623,1623,1624,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1624,1623,1623,1623,1624,1623,1624,1623,842,842,0,842,0,0,0,1540,1540,1539,1539,1540,1539,1540,1539,855,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,855,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,855,855,1540,1539,1540,1539,1540,1539,1539,1539,1539,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,1540,1540,1539,1540,1539,855,1540,1540,855,1539,1539,1539,855,1540,1539,1540,1539,1539,855,855,855,1539,855,855,855,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,1540,1539,855,1540,1539,1540,1539,855,0,1509,0,0,1508,1508,1556,0,0,0,0,0,0,0,0,0,1508,0,0,0,0,0,0,0,1889,0,0,1509,1509,1556,0,0,1470,1445,1512,1510,1512,1470,1512,1552,1553,1463,1464,1512,1470,1514,0,1470,1463,1464,1463,1464,1512,1445,1470,1445,1470,1464,1470,1523,1445,1468,1470,1523,1470,1507,1463,1464,0,0,1518,1470,1470,1470,1523,1507,1462,1512,1470,1518,1512,1470,1468,1470,1463,1464,1468,1463,1464,1523,1470,1470,1536,1464,0,1470,1463,1464,1445,1464,1512,0,0,1510,1523,1510,1523,1555,1507,1523,1541,1507,1462,1523,1462,1464,1462,1514,1523,1464,1462,1518,1464,1463,1464,1523,0,1463,1464,1512,1523,1552,1553,1554,1536,1541,1445,1555,1464,1470,1470,0,1462,1510,1464,1541,1427,1463,1536,1510,1523,1541,1895,1896,1896,0,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,0,0,0,0,0,0,0,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,1625,0,0,1625,1625,1625,1625,1625,1625,1625,1625,1625,0,0,0,0,0,0,0,1470,1562,1626,1626,1627,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1626,1626,1512,1562,1626,1627,1545,1562,1626,1627,1545,1512,1545,1545,1470,1512,1512,1470,1626,1627,1545,1626,1627,1545,1626,1627,1545,1470,1545,1562,1545,1626,1627,1545,1512,1562,1626,1627,1545,1562,1626,1627,1545,1626,1627,1545,1470,1470,1562,1626,1627,1545,1562,1626,1627,1545,1626,1627,1626,1627,1626,1627,1545,1470,1626,1627,1470,1470,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1626,1626,1627,1627,1545,1545,1562,1545,1470,1470,1470,1562,1626,1627,1545,1512,1470,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1626,1562,1626,1627,1545,1512,1626,1470,1545,1470,1470,1470,1626,1470,1626,1615,1627,1626,1627,1545,1626,1627,1545,1562,1626,1627,1545,1512,1562,1626,1615,1627,1626,1627,1545,1545,1545,1626,1545,1626,1626,1562,1545,1512,1470,1562,1470,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1562,1626,1627,1545,1626,1562,1626,1627,1545,1545,1562,1626,1627,1545,1562,1626,1627,1545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,623,624,0,623,624,0,0,0,0,524,88,74,523,625,524,88,74,523,625,524,74,523,625,524,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,626,627,626,627,527,514,515,527,507,526,514,520,510,515,527,507,526,514,520,510,515,527,526,514,510,515,1628,1628,0,0,0,0,0,0,0,1628,1628,1632,1632,1632,1628,814,1632,1632,1633,1633,1631,1631,684,1628,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,1628,1631,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,0,1632,1628,1632,1628,1632,814,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,684,1632,1633,1631,1628,1632,1633,1631,1628,0,814,1632,1632,1633,1631,684,1628,814,1632,1632,1632,1633,1633,1631,1631,684,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,1628,814,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,814,814,1631,684,1633,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,1632,1633,1631,684,814,1632,1633,1631,684,1628,814,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1628,814,1633,1631,1632,1628,814,814,1632,1633,1631,684,1628,814,684,1632,1628,814,1632,1633,1631,684,1628,1632,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,814,1632,1633,1631,684,1628,684,1628,814,1632,1633,1631,684,1628,0,814,1632,1633,1631,684,1628,1633,1631,814,1632,1633,1631,684,1628,814,1628,1908,1908,0,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,1641,0,1646,1645,1628,1645,1628,0,0,0,0,0,0,1646,1628,1628,1645,1628,1646,1909,1645,1645,1645,1646,1646,1646,1647,1647,1647,1638,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1648,1638,1648,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1647,1647,1645,1646,1647,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1648,1645,1646,1647,1645,1646,1647,1648,1645,1646,1647,1638,1909,1645,1646,1647,1638,1645,1645,1645,1645,1646,1646,1646,1646,1647,1647,1647,1647,1645,1646,1647,1638,1645,1645,1646,1646,1647,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1638,1645,1646,1647,1638,1638,1645,1646,1647,1638,1645,1645,1646,1646,1647,1647,1645,1646,1647,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1647,1647,1647,1647,1647,1647,1638,1638,1645,1646,1647,1638,1645,1646,1647,1645,1646,1647,1638,1645,1646,1647,1645,1646,1647,1647,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1645,1646,1647,1638,1647,1638,1645,1646,1647,1638,1649,1649,1649,0,0,1649,1649,1649,1649,1649,1649,1649,1649,1649,0,0,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,0,0,0,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,1649,0,1649,1649,1649,0,0,0,0,0,0,0,0,0,525,187,517,525,187,517,525,517,525,0,0,0,0,0,0,622,620,621,622,620,621,622,621,622,1910,1910,0,0,0,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,0,1910,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1642,1651,1642,1651,1642,1651,1651,1651,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,1651,1642,0,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1644,1652,1654,0,1655,1652,1653,1654,1653,1652,1655,0,0,1653,0,1652,1655,1653,1653,1653,1654,1654,1654,1652,1652,1655,1653,1654,1652,1655,1653,1654,1652,1652,1653,1654,1655,1653,1654,1652,1655,1653,1654,1652,0,1653,1654,1652,1653,1654,1652,1653,1654,1652,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,0,1653,1654,1653,1654,1653,1654,1652,1653,1654,1652,1653,1653,1653,1653,1654,1654,1654,1654,1655,1655,1653,1654,1652,1655,1653,1653,1653,1653,1653,1653,1654,1654,1652,1652,1655,1653,1654,1652,1655,1653,1654,1652,1653,1653,1654,1654,1652,1652,1653,1654,1655,1653,1654,1652,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,0,0,1653,1654,1652,1653,1654,1652,1655,1653,1654,1652,1653,1654,1653,1654,0,0,1653,1654,1652,1655,1653,1654,1652,1655,1655,1653,1654,1652,1655,1653,1654,1652,0,1655,1653,1654,1652,1655,1653,1654,1652,0,1655,1653,1654,1652,1655,1653,1654,1652,1655,1653,1654,1652,0,0,0,0,1662,1662,1662,1661,1661,1664,1662,1662,1661,1661,1661,1663,1663,1663,1664,1662,1661,1663,1664,1662,1661,1663,1661,1663,1662,1662,1662,1664,1662,1661,1663,1664,1662,1661,1663,1661,0,1662,1661,1663,1662,1661,1663,1662,1661,1663,1664,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1664,1662,1661,1663,1661,1663,1661,1663,1662,1661,1663,1662,1661,1663,1661,1661,1661,1661,1663,1663,1663,1663,1662,1661,1663,1664,1664,1662,1661,1663,1663,1664,1662,1661,1663,1664,1662,1661,1663,1661,1663,1664,1664,1664,1662,1661,1663,1662,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1661,1664,1662,1661,1663,1664,1662,1661,1663,1661,1663,1661,1663,1664,1664,1664,1664,1661,1661,1664,1661,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,1664,1662,1661,1663,0,0,1671,0,1671,1671,0,1667,1670,1667,1668,1668,1671,1671,1671,1670,1667,1668,1671,1670,1667,1668,1671,1671,1670,1667,1668,1671,1670,1667,1668,1671,1667,1667,1668,1671,1668,1671,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1671,1671,1668,1671,1668,1671,1671,1671,1671,1671,1668,1671,1668,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1671,1671,1668,1668,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,1667,1668,1671,1670,0,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,0,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,1672,0,0,0,0,1684,1684,1684,1674,1674,1674,1674,1685,1674,1683,1683,1683,1684,1684,1684,1685,1674,1683,1684,1685,1674,1683,1684,1683,0,1674,1674,1685,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1683,1684,1683,1684,1683,1684,1683,1674,1685,1683,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1683,1684,1683,1683,1684,1683,1684,1683,1683,1683,1683,1684,1684,1684,1684,0,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1685,1683,1683,1683,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1674,1685,1674,1683,1674,1674,1674,1674,1674,1674,1674,1674,1683,1684,1685,1683,1685,1674,1683,1684,1683,1684,1683,1674,1674,1674,1674,1683,1674,1683,1674,1674,1683,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1685,1674,1683,1684,1674,1685,1674,1683,1684,1685,1674,1683,1684,0,0,1673,0,1673,1688,1688,1688,1688,1688,1688,0,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,1688,0,1688,1688,1688,1688,1688,1673,1688,1673,1688,1688,1688,1688,1688,1688,1688,1688,1688,1690,0,1690,0,1690,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1689,1690,1690,1690,1689,1690,1690,1690,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1689,1689,1690,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,1689,1690,0,0,1695,1694,1694,1694,1695,1694,1695,1694,1694,1695,1694,1695,1694,1694,1694,1694,1694,1695,1694,1695,1694,1695,1694,1695,1694,1694,1694,1694,1694,1694,1694,1694,1694,1694,1695,1694,1695,1694,1695,1694,1694,1694,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1695,1694,1694,1695,1694,1694,1694,1695,1694,1695,1695,1695,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,1695,1694,0,0,0,0,1675,1687,1682,1675,1680,1677,1687,1677,0,1687,1680,1682,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1687,1682,1682,1675,1675,1680,1680,1677,1677,1687,1687,1682,1682,1675,1675,1680,1680,1677,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1687,1682,1675,1680,1677,1676,0,0,0,1696,1696,1696,1696,1696,1696,1696,1696,1676,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1911,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,0,1911,1696,1696,1696,1696,1696,1696,1696,1696,1696,1696,0,1696,1696,1911,1911,0,1696,0,0,1701,1701,1701,1701,0,1700,1700,1700,1697,1701,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1701,1701,1701,1697,1700,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1697,1701,1701,1701,1701,1700,1700,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1700,1697,1697,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1700,1700,1701,1700,1700,1697,1701,1697,1697,1697,1697,1697,1697,1700,1700,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1697,1701,1700,1700,1912,0,0,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1698,1702,1698,1702,1698,1702,1698,1698,1698,1702,1698,1702,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1698,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,1702,1698,0,0,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1699,1703,1708,1708,0,1686,1704,0,1686,0,804,804,1706,1706,0,0,0,1706,0,1705,1705,1704,0,0,1706,1706,804,804,804,804,804,1705,1705,1704,1704,1706,1706,1706,1707,1707,1708,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,1706,1704,1704,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,1705,1704,1706,1707,1708,1705,1704,1706,1707,1708,1705,1704,1706,1707,1708,1704,1707,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,1706,1706,1707,1705,1704,1706,1707,1708,1705,1704,1706,1707,1708,1706,1706,1706,1706,1913,804,804,1705,1704,1706,1707,1708,804,804,804,1705,1705,1704,1704,1706,1707,1707,1707,1707,1707,1707,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,1704,1704,1707,1707,1706,804,1705,1704,1706,1707,1708,1704,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,1710,1707,804,1705,1704,1706,1707,1708,1686,804,1705,1704,1706,1707,1708,1913,1913,1913,1705,1704,1706,1707,1708,1704,1707,804,1705,1704,1706,1707,1708,1706,1706,804,1707,0,0,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,804,1705,1704,1706,1707,1708,0,0,0,616,803,803,616,803,616,803,616,803,616,803,803,803,803,616,803,616,803,616,803,616,803,616,803,803,803,803,803,803,745,616,803,616,803,616,803,803,803,616,803,616,803,616,803,616,803,616,803,616,803,616,803,803,803,803,803,803,803,803,616,803,803,803,803,616,803,803,616,803,616,803,803,745,616,616,616,616,616,616,616,745,616,803,803,616,616,803,616,803,616,803,616,803,616,803,616,803,616,803,616,803,803,803,616,803,0,1713,0,0,0,1712,1714,1711,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1711,1711,1711,1713,1714,1712,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1711,1711,1714,1711,1711,1711,1712,1714,1711,1712,1712,1712,1712,1712,1714,1711,1712,1714,1711,1711,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1714,1711,1712,1714,1711,1712,1714,1711,1712,1712,1714,1711,1711,1711,1711,1713,1711,1711,1711,1711,1714,1711,1711,1711,1711,1714,1714,1711,1711,1712,1714,1711,1714,1713,1713,1714,1714,1714,1714,1714,1714,1714,1712,1714,1714,1711,1711,1714,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1712,1714,1711,1711,1711,1712,1714,1711,0,0,0,0,0,0,0,1660,1717,1717,1715,1715,1656,1656,1656,1660,1717,1715,1656,1660,1717,1715,1656,1656,1715,1715,1660,1717,1715,1656,1660,1717,1715,1656,1717,1715,1656,1717,1715,1656,1717,1715,1656,1660,1717,1715,1660,1717,1715,1656,1660,1717,1715,1656,1715,1715,1660,1717,1715,1656,1660,1660,1717,1715,1656,1656,1656,1715,1715,1717,1715,1656,1717,1715,1656,1656,1656,1656,1656,1717,1715,1656,1660,1717,1717,1717,1717,1715,1656,1656,1660,1717,1715,1656,1660,1717,1715,1656,1717,1717,1715,1715,1656,1660,1660,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1656,1717,1717,1715,1715,1715,1717,1715,1656,1717,1715,1660,1717,1715,1656,1656,1656,1656,1656,1660,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,1660,1717,1715,1656,0,0,0,1721,1720,1719,1719,1719,1721,1720,1719,1721,1720,1719,1719,1721,1720,1719,1721,1720,1719,1719,1719,1719,1721,1720,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1721,1720,1719,1719,1719,1719,1719,1719,1719,1719,1719,1719,1721,1720,1719,1719,1721,1720,1719,1721,1720,1719,1720,1720,1719,1721,1721,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1719,1720,1719,1720,1721,1720,1719,1719,1719,1719,1719,1721,1721,1721,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1720,1720,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,1721,1720,1719,0,0,1722,1723,1722,1723,0,0,0,1679,1679,1679,1678,1722,1723,1718,1718,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1718,1718,1718,1679,1678,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1679,1678,1722,1723,1718,1718,1718,1678,1678,1679,1718,1718,1718,1718,1718,1718,1722,1722,1723,1723,1718,1679,1678,1722,1722,1723,1723,1718,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1678,1678,1718,1679,1679,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1678,1678,1679,1678,1679,1679,1718,1678,1679,1678,1722,1723,1718,1718,1718,1679,1722,1723,1718,1679,1678,1722,1723,1718,1722,1723,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1679,1679,1679,1678,1722,1723,1718,1679,1678,1722,1723,1718,1726,1659,1726,0,1659,0,0,0,0,0,1681,1681,1658,1726,1725,1725,1657,1657,1657,1659,1659,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1725,1657,1659,1725,1657,1659,1725,1657,1659,1658,1681,1725,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1658,1726,1725,1657,1659,1657,1659,1657,1659,0,1681,1725,1725,1657,1659,1725,1657,1659,1657,1657,1657,1657,1659,1659,1659,1659,1658,1726,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1659,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1681,1725,1725,1657,1659,1658,1658,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1725,1725,1725,1657,1659,1681,1725,1681,1658,1726,1725,1657,1659,1657,1659,1657,1659,1681,1681,1658,1658,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1726,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1658,1726,1725,1657,1659,1681,1681,1681,1658,1726,1725,1657,1659,1681,1725,1725,0,0,1724,1724,0,0,0,0,0,1914,1914,1914,0,1914,0,0,0,0,1727,1728,1727,1728,1727,1728,1727,1727,1727,1728,1727,1728,1727,1728,1727,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1727,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1727,1727,1727,1727,1727,1727,1727,1727,1728,1727,1727,1728,1728,1728,1728,1728,1728,1727,1727,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,1727,1728,0,0,1729,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1729,1729,1730,1729,1729,1729,1729,1730,1729,1730,1729,1730,1729,1730,1729,1729,1729,1729,1730,1729,1730,1729,1730,1729,1729,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1729,1729,1729,1729,1730,1730,1730,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,1729,1730,0,0,0,1732,1732,1733,1731,1731,1732,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1731,1731,1732,1731,1732,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1731,1731,1733,1731,1732,1731,1732,1731,1732,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1731,1731,1732,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1731,1731,1731,1731,1731,1731,1732,1731,1732,1733,1731,1732,1733,1733,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1733,1731,1732,1735,0,0,0,1735,1735,1734,1736,1735,1735,1735,1734,1736,1735,1734,1736,1735,1735,1734,1736,1735,1734,1736,1735,1734,1735,1735,1735,1736,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1735,1735,1735,1735,1735,1735,1735,1735,1735,1734,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1734,1734,1735,1734,1736,1735,1735,1735,1736,1736,1736,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1734,1736,1735,1738,0,0,0,1738,1738,1738,1739,1737,1737,1738,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1737,1737,1738,1737,1738,1737,1738,1739,1737,1737,1737,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1737,1738,1737,1738,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1737,1737,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1737,1737,1737,1737,1737,1737,1738,1737,1739,1737,1738,1737,1737,1739,1739,1739,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,1739,1737,1738,0,0,1741,1740,1740,1741,1740,1741,1740,1741,1740,1741,1740,1740,1740,1740,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1740,1740,1740,1741,1740,1741,1740,1741,1740,1740,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1740,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,1741,1740,0,0,1743,1742,1742,1743,1742,1743,1742,1743,1742,1743,1742,1742,1742,1742,1742,1743,1742,1742,1742,1743,1742,1743,1742,1743,1742,1743,1742,1742,1742,1742,1742,1742,1743,1742,1743,1742,1743,1742,1742,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1742,1742,1742,1742,1742,1743,1742,1743,1743,1743,1743,1742,1742,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,1743,1742,0,0,1745,1744,1744,1745,1744,1745,1744,1745,1744,1745,1744,1744,1744,1744,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1744,1744,1744,1745,1744,1745,1744,1745,1744,1744,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1744,1744,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,1745,1744,0,1665,1665,1716,1716,1716,1716,1716,0,1716,1716,0,0,0,0,1665,1665,1746,1746,1748,1716,1716,1666,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1746,1746,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1746,1746,1746,1746,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1666,1666,1665,1746,1716,1666,1665,1746,1716,1666,1665,1746,1716,1666,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1746,1748,1716,1666,1665,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1746,1746,1716,1716,1666,1666,1665,1746,1748,1716,1666,1746,1747,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1746,1748,1746,1665,1746,1748,1716,1666,1746,1716,1666,1665,1746,1748,1716,1666,1748,1748,1666,1748,1665,1746,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1665,1746,1748,1716,1666,1748,1748,1665,1746,1748,1716,1666,1915,1915,1840,1841,0,1842,1841,0,1842,1840,0,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1842,1840,1841,1841,1841,1841,1841,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1842,1841,1841,1841,1841,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1842,1840,1841,1841,1841,1841,1841,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1842,1840,1841,1841,1841,1841,1841,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1842,1840,1841,1841,1842,1840,1841,1842,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1841,1840,1841,1841,1841,1841,1841,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1841,1841,1841,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,1840,1841,1841,1840,1841,1840,1841,1840,1841,0,0,0,0,0,0,0,0,522,91,521,522,91,521,522,521,522,0,0,0,0,0,0,637,635,636,637,635,636,637,636,637,0,1749,0,0,1650,1749,1650,1650,1650,1749,1749,1643,1643,1643,1650,1749,1643,1650,1749,1643,1643,1643,1650,1749,1643,1650,1749,1643,0,1643,1643,1643,1643,1643,1643,1643,1643,1650,1749,1643,1650,1749,1643,1643,1650,1749,1643,1650,1749,1643,1643,1643,1650,1749,1643,1643,1650,1749,1643,1643,1643,1643,1643,1643,1650,1650,1749,1643,1643,1650,1650,1749,1643,1643,1643,1643,1650,1749,1643,1643,1650,1749,1643,1643,1643,1643,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1643,1650,1749,1643,1650,1749,1643,1643,1643,1643,1643,1643,1650,1749,1643,1643,1643,1643,1643,1643,1643,0,1643,1650,1749,1643,1650,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1650,1749,1643,1643,1643,1650,1749,1643,0,0,0,0,1751,1751,1751,1753,1753,1753,1752,1752,1752,1754,1754,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1753,1752,1752,1754,1754,1754,1751,1753,1752,1754,1751,1751,1751,1751,1753,1753,1753,1753,1752,1752,1752,1752,1754,1754,1754,1754,1751,1751,1753,1753,1752,1752,1754,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,1751,1753,1752,1754,0,0,0,0,0,0,679,679,679,678,731,733,732,732,677,677,732,731,678,678,733,677,679,677,677,677,677,679,731,733,678,677,677,679,679,733,677,1916,1916,1916,1916,0,0,1916,1916,1916,1916,1916,1916,1916,1916,1916,1917,1916,1916,1916,1916,1916,1916,1916,1916,1916,1916,1916,1917,1917,1917,1916,1916,1916,1916,1916,1916,1916,1916,1758,1758,1758,0,1758,1758,0,0,0,0,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1757,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,1755,611,611,1756,1756,1757,1757,1758,1758,0,611,1756,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1756,611,611,1757,0,1755,1756,1756,1756,1756,1756,1755,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1757,1755,611,1756,1757,1758,1756,1756,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1755,611,1756,1757,1758,1757,1755,611,1756,1757,1758,1755,611,1756,1757,1758,0,0,0,0,0,0,0,0,0,0,1762,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1763,1763,1764,1766,1762,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1768,1759,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1762,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1766,1759,1759,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1759,1760,1760,1761,1761,1762,1762,1763,1763,1764,1764,1765,1765,1766,1766,1767,1767,1768,1768,1764,1762,1767,1760,1760,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,0,0,1762,1762,1764,1765,1766,1759,1762,0,1761,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1768,1765,1764,1763,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1759,1762,1770,1770,0,1770,0,1770,1770,1770,1769,1770,1769,1770,1769,1770,1769,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,0,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1769,1770,1769,1770,1769,1770,1769,1769,1770,1770,0,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,0,0,1769,0,1769,1770,1769,1770,1769,1770,1769,1770,0,0,0,1769,1769,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1769,1770,1918,0,0,0,0,0,0,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1775,0,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1777,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1775,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1776,1775,1776,1774,1777,1775,1776,1774,1777,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,1774,1777,1775,1776,0,0,0,0,0,0,0,0,0,0,0,0,1771,1771,1771,1771,1771,1771,0,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,1771,0,0,0,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1780,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1779,1780,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1780,1779,1780,0,0,1779,1780,1779,1780,1779,1780,1780,1780,1779,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,1779,1780,0,1782,1782,0,0,1782,1781,1782,1782,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,0,1781,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1782,1782,1782,1782,1782,1782,1782,1781,1782,1781,1782,1781,1782,1781,1781,1782,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,0,1781,1782,1781,1782,1781,1782,1782,1781,1781,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,1781,1782,0,0,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,0,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,1783,0,0,1784,0,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,0,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1784,1785,1785,0,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,1785,0,0,1785,1785,1785,0,1785,1785,1785,1785,1785,1785,1785,1785,1785],"f":[0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,[[],4],[[],5],0,[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[4,10],11],[[5,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],0,[[],9],[[],9],0,[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[17,18]],0,[[]],0,0,0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],0,[[],20],[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],24],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[25],0,[[],9],[[],9],[[],9],0,0,[[26,27]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,[19],[19],[19],[19],0,[[24,28,13,29]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],30],[[],31],[[],32],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,[[30,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[13],[12],0,[[],9],[[],9],[[],9],[27],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[33,31],0,0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[[35,[34]],[36,[31]],[37,[32]],[37,[30]]]],[[],20],[[],20],[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[38]],[35,[34]],[37,[39]],[36,[30]],[36,[40]],[37,[41]],[37,[42]]]],[[[35,[34]],[37,[30]],[37,[32]],[36,[43]],[36,[44]],[36,[31]],[35,[45]],[36,[46]],[35,[17]]]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[47,47],[48,48],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],47],[9],[9],[9],[9],[[]],[[]],[9],[9],[[47,10],11],[[48,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[47,[50,[49]],51]],[[[53,[52]],[53,[47]],[35,[17]]]],0,[[19,19]],[[19,19]],[19],[19],[19],[[],20],[[47,48]],[27],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[55,55],[56,56],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],54],[[],55],[[],56],[9],[9],[56],[9],[9],[9],[56],[9],0,[[]],[[]],[[]],[9],[9],[9],0,0,0,0,0,0,[[54,10],11],[[55,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[12],[13],[25],[[[35,[34]],[37,[57]],[37,[58]],[37,[59]],[37,[42]],[36,[56]],[35,[17]]]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[34]],60,[36,[56]],[36,[46]],61,[37,[41]],[37,[54]],[62,[47]],[37,[40]],[37,[63]],[35,[17]]]],0,[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[64,[4]],[35,[34]],[35,[65]],[37,[66]],[37,[67]],[37,[68]],[36,[41]],[36,[46]],[36,[69]],[35,[70]]]],[[[35,[34]],[37,[41]],[36,[71]],[36,[66]],[35,[65]]]],[71,71],[68,68],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],71],[[],68],[9],[9],[9],[9],0,[[]],[[]],[9],[9],[[68,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],0,[[],9],[[],9],[27],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[72,72],[73,73],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[72,74],75],[[],72],[[],73],[9],[9],[9],[9],[[]],[[]],[9],[9],[[72,10],11],[[73,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[[],9],[[],9],[27],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[[35,[34]],60,[36,[46]],[36,[41]],[36,[72]],[36,[73]],[36,[69]],[37,[40]]]],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[77,77],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[[78,[76]],61,[36,[41]],[37,[79]],[62,[77]]]],[[[78,[76]],[35,[34]],[36,[72]],[36,[41]],[37,[79]]]],[[[78,[76]],[35,[34]],[36,[63]],[36,[41]],[37,[79]]]],[[],76],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[80,81,[83,[82]],[83,[82]],[85,[84]]]],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13,77],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,0,[27],0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,[[],1],[[],1],[[[3,[2]]]],[13],[[]],[[]],[86],[86],0,[[86,[50,[87]],88,89]],[[86,90]],[[86,33]],[[86,89]],[9],[9],[[]],[9],0,0,0,[[]],[[]],[[]],[86,9],[86,91],[13],[[[35,[45]],86]],[[],9],[13],[27],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[86,33,88]],[19],[[86,89,92]],[[86,92]],[[86,89,[21,[[50,[93]]]]]],[[86,89,91,[21,[89]],94]],0,0,0,[[86,89,16]],0,0,0,[[]],[[],21],[[]],0,[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[87,87],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[102,33,[103,[33]],[37,[104]],[35,[34]]]],[[102,33,[103,[33]]]],0,0,[[],87],[[],95],[[],96],[[],97],[[],98],[[],100],[[],101],[9],[9],[9],[97],[9],[9],[98],[9],[9],[9],[9],[9],[9],[9],[97],[9],[98],[9],[9],[9],[9],[9],[105,[[22,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,0,[[87,10],11],[[95,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[25],[13],0,0,0,0,[[60,[37,[96]],[62,[34]],[37,[41]],[36,[97]],[35,[65]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[13],[[102,33,[36,[104]],[62,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[102,33],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[102,33,[62,[34]],[36,[99]],60]],0,0,0,[106,99],[[],100],[107,100],0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[102,33,[36,[104]],[62,[34]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[27],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[109,109],[110,110],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],108],[[],109],[[],110],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[43,[[21,[16]]]],[[108,10],11],[[109,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[13],[12],[25],[[[64,[4]],[62,[34]],[37,[96]],[37,[97]],[37,[98]],[37,[110]],[37,[42]],[37,[69]],[37,[41]],[37,[43]],102,[35,[17]]]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[109,16],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],0,0,0,[[],20],[[],20],[[],20],[27],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[[35,[111]],[35,[38]],[35,[34]],[36,[46]],[37,[110]],[37,[42]],[37,[43]],[37,[69]],[37,[41]],[37,[96]],60,[36,[97]],[36,[98]],[35,[17]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[112,112],[113,113],[114,114],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,0,[[],112],[[],113],[[],114],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,[[112,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[113]],[37,[42]],[37,[43]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[114,61,[36,[46]],[37,[40]],60,41],16],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[34]],[37,[118]],[35,[17]],[36,[98]],[37,[113]],119,60]],[[[35,[34]],[37,[96]],[35,[17]],[36,[98]],[37,[114]],60,[37,[42]],[36,[46]],61,[37,[69]],[62,[47]],[36,[41]],[36,[97]],[37,[40]],[35,[38]]]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[[3,[2]]]],0,[[]],[[]],[120,120],[[]],[[],[[8,[6,7]]]],[[],120],[9],[9],[[]],[9],0,[[120,10],11],0,[[]],[[]],[[]],[13],[12],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[42]],[37,[43]]]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[19,19]],[19],[19],[[],20],[27],0,[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,121],[122,122],[123,123],[124,124],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],121],[[],122],[9],[9],[122],[9],[9],[9],[122],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,0,[[121,10],11],[[122,10],11],[[123,10],11],[[124,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[25],[[[35,[111]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[122]],[37,[123]],[37,[41]],[37,[57]],[37,[58]],[37,[42]],[37,[43]],102]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],0,[27],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[[35,[111]],[35,[38]],[35,[34]],[36,[122]],[37,[123]],[37,[98]],[35,[17]],[37,[42]],[37,[41]],61,[36,[69]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[125,125],[126,126],[127,127],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],125],[[],126],[[],127],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,0,0,0,0,0,0,[[125,10],11],[[126,10],11],[[127,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],0,0,0,0,[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[126]],[37,[42]],[37,[43]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[60,[35,[34]],[36,[118]],[36,[98]],[35,[17]],[62,[47]],[37,[126]],[37,[43]]]],[[[35,[38]],60,[35,[34]],[37,[41]],[36,[98]],[36,[97]],[62,[47]],[37,[127]],119,[35,[17]],[37,[63]],[37,[128]],[37,[96]],[62,[129]]]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[130,130],[131,131],[132,132],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],130],[[],131],[[],132],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,0,0,0,0,0,0,[[130,10],11],[[131,10],11],[[132,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[12],[13],0,0,0,0,[25],0,[[[64,[4]],[37,[115]],[37,[116]],[37,[117]],[62,[34]],[37,[69]],[37,[41]],[37,[131]],[37,[42]],[35,[17]],[37,[96]],[37,[98]],[37,[43]],[37,[97]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[34]],60,[37,[118]],[62,[47]],[36,[98]],[37,[131]],[35,[17]],[37,[43]]]],[[[35,[34]],[36,[98]],[35,[17]],61,[36,[46]],[62,[47]],[62,[129]],[37,[132]],[37,[42]],[37,[69]],[37,[96]],[37,[31]],[37,[128]],119,[37,[41]],60,[35,[38]],[36,[97]],[37,[40]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[133,133],[134,134],[135,135],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],133],[[],134],[[],135],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,0,0,0,0,0,0,[[133,10],11],[[134,10],11],[[135,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[134]],[37,[42]],[37,[43]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[34]],[36,[98]],[35,[17]],[37,[134]],[37,[118]],119,60]],[[[35,[34]],[36,[98]],[35,[17]],[62,[47]],[62,[129]],[37,[135]],[37,[43]],[37,[96]],[36,[46]],60,61,[36,[41]],[35,[38]],[36,[97]],[37,[40]]]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,[136,136],[137,137],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],136],[[],137],[9],[9],[9],[9],[[]],[[]],[9],[9],0,0,0,[[136,10],11],[[137,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[137]],[37,[42]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[[33,89],138],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],60,[36,[98]],[35,[17]],[37,[137]],[37,[41]],[37,[42]],[62,[47]],119,[37,[118]],[37,[139]],[35,[38]],[37,[69]]]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[140,140],[141,141],[142,142],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],140],[[],141],[[],142],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[[140,10],11],[[141,10],11],[[142,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[141]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[62,[34]],[62,[142]],[36,[141]],[37,[46]],[37,[41]],[35,[45]],102]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,[[]],[[]],[[]],[[]],[143,143],[144,144],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],143],[[],144],[9],[9],[9],[9],[[]],[[]],[9],[9],[[143,10],11],[[144,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[144]],[37,[42]],[37,[69]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[37,[144]],61,[37,[69]]]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[145,145],[146,146],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],145],[[],146],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[145,10],11],[[146,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[146]],[37,[42]],[37,[43]],[37,[69]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[37,[146]],61,[37,[147]]]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],0,[148,148],[149,149],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],148],[[],149],[9],[9],[9],[9],[[]],[[]],[9],[9],[[148,10],11],[[149,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[25],0,0,0,0,[[[62,[34]],[37,[96]],[37,[97]],[37,[98]],[35,[17]],[37,[149]],[37,[42]],[37,[43]],[37,[44]],[37,[69]],[37,[41]],102]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[37,[149]],[37,[42]],[37,[43]],[37,[44]],[35,[38]],[37,[69]],[37,[41]],[36,[98]],[35,[17]],[37,[72]]]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[150,150],[151,151],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],150],[[],151],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[150,10],11],[[151,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[151]],[37,[42]],[37,[69]],[37,[43]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[37,[151]],61,[36,[46]],[37,[40]],60,[36,[41]]]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[152,152],[153,153],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],152],[[],153],[9],[9],[9],[9],[[]],[[]],[9],[9],[[152,10],11],[[153,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[25],[[[35,[34]],[37,[96]],[36,[98]],[35,[17]],[37,[153]],[37,[42]],[37,[69]],[62,[154]],[36,[41]],[35,[65]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[36,[98]],[35,[17]],[37,[153]],[37,[42]],[37,[69]],61,[62,[47]]]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[155,155],[156,156],[157,157],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],155],[[],156],[[],157],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[[155,10],11],[[156,10],11],[[157,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[157]],[37,[42]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[35,[34]],[36,[98]],[35,[17]],[37,[157]],[36,[118]],119,[37,[158]],[37,[96]],60,[36,[97]]]],[[[35,[34]],60,[36,[156]],[36,[46]],61,[36,[69]],[36,[41]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[159,159],[160,160],[161,161],[162,162],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],159],[[],160],[[],161],[[],162],[9],[9],[9],[9],[162],[9],[9],[9],[9],[162],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,0,[[159,10],11],[[160,10],11],[[161,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[13],[12],[13],[12],[25],0,[[[64,[4]],[62,[34]],[37,[96]],[37,[98]],[35,[17]],[37,[160]],[37,[42]],[37,[69]],[37,[41]],[37,[115]],[37,[116]],[37,[117]],[37,[97]],102]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[27],0,0,0,[33,138],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[[35,[34]],[36,[98]],[35,[17]],61,[62,[47]],[37,[160]],[37,[42]],[37,[69]],[37,[118]],[36,[46]],119,60,[37,[128]],[37,[41]],[37,[40]]]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],0,[163,163],[164,164],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],163],[[],164],[9],[9],[9],[9],[[]],[[]],[9],[9],[[163,10],11],[[164,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[25],0,0,[[[62,[34]],[37,[96]],[37,[97]],[37,[98]],[35,[17]],[37,[164]],[37,[39]],[37,[69]],[37,[41]],102]],0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[35,[34]],[37,[164]],[37,[69]],[36,[41]],[36,[72]],[36,[98]],[35,[17]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[165,165],[166,166],[167,167],[168,168],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],45],[[],165],[[],167],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[166]]]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],0,[169,[[22,[170,171]]]],[[45,10],11],[[165,10],11],[[166,10],11],[[167,10],11],[[168,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[13],[12],[[],9],[[],9],[[],9],[[],9],[[],9],[27],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],0,0,[[166,172],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],116],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[158,158],[173,173],[139,139],[174,174],[118,118],[117,117],[116,116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],115],[[],158],[[],139],[[],174],[[],118],[[],117],[[],116],[9],[9],[158],[9],[119],[9],[9],[9],[9],[9],[9],[9],[9],[158],[9],[119],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,0,[[173,10],11],[[119,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[13],[[[35,[34]],[36,[117]],[36,[115]],[37,[174]],[37,[69]],[37,[31]],[37,[128]]]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[13],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[84,116],0,0,[[[35,[34]],[36,[116]],[36,[115]],[35,[45]],[36,[46]],[37,[139]],[37,[69]],[37,[31]],[37,[42]],[37,[41]],[36,[97]],[36,[175]],[36,[141]],60]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[116,176],88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[116,84],116],[[116,106],116],0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[59,59],[40,40],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],59],[[],40],[9],[9],[9],[9],[[]],[[]],[9],[9],[[40,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[],9],[[],9],[27],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[[35,[38]],60,[62,[34]],[37,[40]]]],[[],16],[[],16],0,[[[62,[34]],[37,[59]]]],[84,59],[177,40],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[178,178],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],0,0,[178,178],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[180,180],[181,181],[175,175],[154,154],[178,178],[182,182],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[178,178],183],[[],183],[184,[[14,[185]]]],[[],65],[[],180],[[],181],[[],175],[[],154],[65],[9],[180],[9],[9],[9],[9],[154],[9],[178],[9],[9],[65],[180],[9],[9],[9],[154],[9],[9],[178],[9],[[178,178],84],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[179,16],[186],[[178,178],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[154,10],11],[[178,10],11],[[182,10],11],[[]],[[]],[[]],[[]],[[]],[187,178],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],0,[[[35,[34]],60,[37,[41]],[36,[46]],[35,[65]]]],[[178,186]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[178,178],0,[[178,178],[[21,[183]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[178,178],[[],20],[[],20],[[],20],[[],20],[[],20],[[60,[62,[34]],[62,[189]],[35,[65]],[62,[180]],[37,[190]],[37,[191]],[37,[41]],[37,[98]],[37,[94]],[37,[71]],[37,[39]],[62,[154]],[37,[66]],[37,[67]],[37,[68]],[37,[175]],[62,[181]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,84],0,[86],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[192,86]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[193,[166]],[193,[167]],89,89],[[21,[194]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[195,195],103],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[91,88,[193,[166]],[193,[167]]],192],0,0,[19],[19],[19],[19],[19],[19],[19],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[196,196],[197,197],[198,198],[199,199],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],196],[[],197],[[],198],[[],199],0,0,[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[199]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,0,0,0,0,0,0,[[196,10],11],[[197,10],11],[[198,10],11],[[199,10],11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[13],[12],[13],[12],0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[]],0,0,[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[184,184],[200,200],[201,201],[202,202],[203,203],[204,204],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],184],[[],200],[[],201],[[],202],[[],203],[[],204],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],0,0,[[184,10],11],[[200,10],11],[[201,10],11],[[202,10],11],[[203,10],11],[[204,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[184,74],16],0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],16],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[208]]]],[105,[[22,[211]]]],[105,[[22,[[14,[214]]]]]],[105,[[22,[[14,[[193,[214]]]]]]]],[105,[[22,[208]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,0,0,[[205,10],11],[[206,10],11],[[207,10],11],[[208,10],11],[[209,10],11],[[210,10],11],[[211,10],11],[[212,10],11],[[213,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[41,88,84,16,215]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],0,[[69,41],75],0,[216,216],[69,69],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],69],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[216,10],11],[[69,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],0,0,0,[[[35,[34]],[36,[69]],61]],[216,217],[[],9],[[],9],[27],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],0,0,[[],16],[[],16],0,0,0,0,0,[216,107],[[19,19]],[[19,19]],[19],[19],[19],[[],20],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[[64,[4]],[35,[34]],[37,[69]],61,[37,[41]],[35,[38]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[61,33],[[103,[33]]]],[[61,33,218],[[103,[33]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[219,219],[220,220],[57,57],[221,221],[58,58],[222,222],[94,94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,0,0,0,0,0,[[],219],[[],220],[[],223],[[],57],[[],221],[[],58],[[],222],[[],94],[9],[9],[9],[9],[9],[9],[9],[9],[222],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[222],[9],[[61,33]],0,[105,[[22,[94]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],0,[224,33],[[94,94],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[223,188],[[57,10],11],[[221,10],11],[[58,10],11],[[222,10],11],[[94,10],11],[[]],[[]],[33,224],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[[219,33],[[225,[[103,[33]]]]]],[[61,33],58],[13],[[219,226,227,228,[21,[229]]]],[[219,82,226,227,229,82]],[[61,33]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[61,[37,[41]],33,84],16],[[61,[37,[41]],33,84],16],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[94,172],22],0,0,[[61,88],16],0,0,[[61,230]],[[61,41,215],94],[[61,41,215,218],94],0,[[61,88],94],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[61,230]],[[61,89,91]],[61],[[61,231]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[223,[193,[19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[233,[232]],[236,[84,[235,[[234,[84]]]]]]],237],[[238,[236,[84,[235,[[234,[84]]]]]]],237],[[239,[236,[84,[235,[[234,[84]]]]]]],237],[[240,[236,[84,[235,[[234,[84]]]]]]],237],[[[242,[241]],[236,[84,[235,[[234,[84]]]]]]],237],0,0,[243,[[193,[237]]]],0,[[244,244],16],0,0,0,[245,246],0,[245,246],[[],246],[247,248],[[249,248],249],0,0,[250,[[193,[251]]]],0,[247,252],[[249,252],249],0,0,[247,253],[[249,253],249],0,0,0,0,[250,[[193,[251]]]],0,0,0,0,0,[[254,254],254],[[244,244],244],[[254,254]],[[244,244]],[[245,255,256,257,258,259]],[[245,[262,[84,260,260,[261,[84]]]],16]],[[245,[262,[84,260,260,[261,[84]]]],[263,[84,260]],16]],[[245,84,16]],0,[[264,84],264],[[264,244],264],0,[[],265],[[],266],[[],267],[[],268],[[],269],[[],248],[[],270],[[],271],[[],272],[[],273],[[],252],[[],253],[[],274],[[],275],0,[245,84],[[264,84],264],0,0,0,[245,84],[[264,84],264],0,0,[[[233,[276]],[233,[276]]]],[[254,84,277],254],[[278,[193,[84]]]],[[279,[193,[84]]]],[[280,281,[262,[84,260,260,[261,[84]]]],[263,[84,260]]]],[[254,281,[262,[84,260,260,[261,[84]]]]]],[[245,[262,[84,260,260,[261,[84]]]],16]],[[254,281,[262,[84,260,260,[261,[84]]]],[263,[84,260]]]],[[245,[262,[84,260,260,[261,[84]]]],[263,[84,260]],16]],[[254,281,84]],[[245,84,16]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[282,[[21,[283]]]],[282,[[21,[283]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[282,[[21,[284]]]],[282,[[21,[284]]]],[[],[[21,[285]]]],[[[233,[276]]],[[21,[285]]]],[243,[[21,[285]]]],[239,[[21,[285]]]],[282,[[21,[243]]]],[282,[[21,[243]]]],[282,[[21,[240]]]],[282,[[21,[240]]]],[282,[[21,[286]]]],[282,[[21,[286]]]],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[287,[[21,[288]]]],[287,[[21,[288]]]],[282,[[21,[238]]]],[282,[[21,[238]]]],[282,[[21,[[242,[276]]]]]],[282,[[21,[[242,[276]]]]]],[257,[[236,[84,[235,[[234,[84]]]]]]]],[254,[[193,[84]]]],[[],21],[[[289,[240]]],21],[[[289,[286]]],21],[[[289,[290]]],21],[240,21],[282,[[21,[239]]]],[282,[[21,[239]]]],[287,[[21,[291]]]],[287,[[21,[291]]]],[257,[[236,[84,[235,[[234,[84]]]]]]]],[258,282],[287,[[21,[292]]]],[287,[[21,[292]]]],[287,[[21,[293]]]],[287,[[21,[293]]]],[282,[[21,[[289,[240]]]]]],[282,[[21,[[289,[240]]]]]],[282,[[21,[[289,[286]]]]]],[282,[[21,[[289,[286]]]]]],[282,[[21,[[289,[290]]]]]],[282,[[21,[[289,[290]]]]]],[282,[[21,[294]]]],[282,[[21,[294]]]],[282,[[21,[282]]]],[282,[[21,[282]]]],[254,[[193,[84]]]],[[],[[21,[295]]]],[[[289,[290]]],[[21,[295]]]],[[[289,[286]]],[[21,[295]]]],[[[289,[240]]],[[21,[295]]]],[240,[[21,[295]]]],[282,[[21,[290]]]],[282,[[21,[290]]]],[282,[[21,[[233,[276]]]]]],[282,[[21,[[233,[276]]]]]],[[],296],[[[233,[276]]],296],[243,296],[238,296],[239,296],[[[289,[240]]],296],[[[289,[286]]],296],[[[289,[290]]],296],[240,296],[[[242,[276]]],296],[254,[[262,[84,260,260,[261,[84]]]]]],[254,[[262,[84,260,260,[261,[84]]]]]],0,[[297,266,298,281,299,255,257,256,258,259]],[[300,251],301],[[302,251],301],[[302,251],301],[[300,251],301],0,[84,258],[84,249],[303,[[85,[84]]]],[304,[[21,[[85,[84]]]]]],0,[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[[265,265]],[[266,266]],[[267,267]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[[265,265]],[[266,266]],[[267,267]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],[265,19],[266,89],[267,19],[268,89],[269,89],[248,305],[270,89],[272,89],[273,19],[252,89],[253,89],[274,89],[275,89],0,0,0,0,0,0,0,0,0,0,0,0,0,[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[[265,265]],[[266,266]],[[267,267]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],0,0,0,[[300,251],301],0,0,0,0,0,[278,[[236,[84,[235,[[234,[84]]]]]]]],[245,306],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[233,[276]],[236,[84,[235,[[234,[84]]]]]]],307],[[238,[236,[84,[235,[[234,[84]]]]]]],307],[[239,[236,[84,[235,[[234,[84]]]]]]],307],[[240,[236,[84,[235,[[234,[84]]]]]]],307],[[[242,[241]],[236,[84,[235,[[234,[84]]]]]]],307],0,0,0,0,[308,288],[309,287],[310,291],[311,292],[312,293],[264,245],[249,247],[[264,16],264],0,0,[[],246],[[[263,[84,260]],[263,[84,260]],84],258],[[84,84],258],[[84,84],249],[[84,84],258],[[84,84],249],[[[233,[276]],313,84,16],[[21,[84]]]],[[243,313,84,16],[[21,[84]]]],[[239,313,84,16],[[21,[84]]]],[[[233,[276]],313,84,16],[[21,[314]]]],[[243,313,84,16],[[21,[314]]]],[[238,313,84,16],[[21,[314]]]],[[239,313,84,16],[[21,[314]]]],[[[289,[295]],313,84,16],[[21,[314]]]],[[240,313,84,16],[[21,[314]]]],[[[242,[241]],313,84,16],[[21,[314]]]],[[315,226,227,313,84,16,316],21],[[315,226,227,313,84,16,316],21],[[315,226,227,[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]],282,84,16,316],21],0,0,[[],84],[[[233,[276]]],84],[243,84],[238,84],[239,84],[[[289,[286]]],84],[[[289,[290]]],84],[[[289,[240]]],84],[240,84],[[[242,[276]]],84],[[264,16],264],0,0,0,[[],84],[[[233,[276]]],84],[243,84],[238,84],[239,84],[[[289,[290]]],84],[[[289,[286]]],84],[[[289,[240]]],84],[240,84],[[[242,[276]]],84],0,[[[242,[241]],[263,[84,260]]],[[21,[9]]]],[[[242,[241]]],84],[245,[[263,[84,260]]]],[317,84],0,0,[[318,84,226,319]],[[250,226]],[229],[318,318],[320,320],[[[233,[232]]],[[233,[232]]]],[317,317],[250,250],[288,288],[308,308],[265,265],[321,321],[[[323,[322]]],[[323,[322]]]],[324,324],[325,325],[287,287],[309,309],[326,326],[327,327],[302,302],[328,328],[279,279],[329,329],[330,330],[300,300],[331,331],[278,278],[291,291],[310,310],[292,292],[311,311],[293,293],[312,312],[251,251],[306,306],[266,266],[299,299],[267,267],[332,332],[281,281],[254,254],[277,277],[280,280],[298,298],[333,333],[297,297],[334,334],[246,246],[244,244],[245,245],[264,264],[335,335],[226,226],[268,268],[[[336,[322]]],[[336,[322]]]],[228,228],[337,337],[338,338],[339,339],[255,255],[269,269],[340,340],[341,341],[259,259],[256,256],[257,257],[342,342],[248,248],[243,243],[238,238],[239,239],[[[289,[322]]],[[289,[322]]]],[303,303],[343,343],[344,344],[345,345],[270,270],[296,296],[346,346],[347,347],[229,229],[348,348],[304,304],[349,349],[[[350,[322,322]]],[[350,[322,322]]]],[271,271],[351,351],[272,272],[240,240],[[[242,[241]]],[[242,[241]]]],[352,352],[[[353,[232]]],[[353,[232]]]],[354,354],[355,355],[356,356],[[[357,[232]]],[[357,[232]]]],[273,273],[358,358],[359,359],[258,258],[360,360],[247,247],[249,249],[227,227],[252,252],[253,253],[315,315],[274,274],[316,316],[81,81],[275,275],[361,361],[[],[[8,[282,7]]]],[[[233,[276]]],[[8,[282,7]]]],[243,[[8,[282,7]]]],[238,[[8,[282,7]]]],[239,[[8,[282,7]]]],[[[289,[240]]],[[8,[282,7]]]],[[[289,[290]]],[[8,[282,7]]]],[[[289,[286]]],[[8,[282,7]]]],[240,[[8,[282,7]]]],[[[242,[276]]],[[8,[282,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[265,265],183],[[266,266],183],[[267,267],183],[[334,334],183],[[268,268],183],[[269,269],183],[[248,248],183],[[270,270],183],[[272,272],183],[[273,273],183],[[252,252],183],[[253,253],183],[[274,274],183],[[275,275],183],0,[228,255],0,0,0,0,0,[228,255],0,0,0,0,0,0,0,0,0,0,[245,[[193,[255]]]],0,0,0,0,0,[[315,237,231]],0,[247,271],[[249,271],249],0,0,[[328,84,84,84]],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[265,265],[266,266],[267,267],[268,268],[269,269],[248,248],[270,270],[272,272],[273,273],[252,252],[253,253],[274,274],[275,275],[[[103,[7]]],258],[[[103,[7]]],249],[[[236,[84,[235,[[234,[84]]]]]]],237],[[[233,[276]],[236,[84,[235,[[234,[84]]]]]]],237],[[243,[236,[84,[235,[[234,[84]]]]]]],237],[[238,[236,[84,[235,[[234,[84]]]]]]],237],[[239,[236,[84,[235,[[234,[84]]]]]]],237],[[[289,[240]],[236,[84,[235,[[234,[84]]]]]]],237],[[[289,[286]],[236,[84,[235,[[234,[84]]]]]]],237],[[[289,[290]],[236,[84,[235,[[234,[84]]]]]]],237],[[240,[236,[84,[235,[[234,[84]]]]]]],237],[[[242,[276]],[236,[84,[235,[[234,[84]]]]]]],237],[247,237],[[[236,[84,[235,[[234,[84]]]]]]],307],[[280,[262,[84,260,260,[261,[84]]]],[262,[84,260,260,[261,[84]]]]]],[[],237],[[[233,[276]]],237],[243,237],[238,237],[239,237],[[[289,[286]]],237],[[[289,[290]]],237],[[[289,[240]]],237],[240,237],[[[242,[276]]],237],[[],307],[[[233,[276]]],307],[243,307],[238,307],[239,307],[[[289,[286]]],307],[[[289,[240]]],307],[[[289,[290]]],307],[240,307],[[[242,[276]]],307],[[[236,[84,[235,[[234,[84]]]]]],[236,[84,[235,[[234,[84]]]]]]],237],[[247,[236,[84,[235,[[234,[84]]]]]]],237],[[[233,[232]]],[[21,[[353,[232]]]]]],0,0,0,0,[247,84],[[249,84],249],0,0,[360,[[350,[255,229]]]],0,0,0,0,[[360,255,255],[[21,[229]]]],[[360,362],229],0,[[360,89,89],[[21,[229]]]],[360,301],[[[236,[84,[235,[[234,[84]]]]]],[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]],[262,[84,260,260,[261,[84]]]],363,363,84,[366,[[0,[364,365]]]],16]],[288,16],[[308,16],308],[287,16],[[309,16],309],[291,16],[[310,16],310],[292,16],[[311,16],311],[293,16],[[312,16],312],0,[[360,255],301],[[360,89],301],[[265,265],16],[[302,327],16],[[266,266],16],[[267,267],16],[[226,251],16],[[268,268],16],[[269,269],16],[[248,248],16],[[270,270],16],[[272,272],16],[[273,273],16],[[227,255],16],[[252,252],16],[[253,253],16],[[274,274],16],[[275,275],16],[[[233,[232]],[263,[84,260]]],16],[[243,[263,[84,260]]],16],[[238,[263,[84,260]]],16],[[239,[263,[84,260]]],16],[[[242,[241]],[263,[84,260]]],16],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]]],258],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]]],249],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],367],258],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],367],249],[[[193,[[263,[84,260]]]]],[[21,[258]]]],[[[193,[[263,[84,260]]]]],[[21,[249]]]],[[[103,[[263,[84,260]],7]]],[[21,[258]]]],[[[103,[[263,[84,260]],7]]],[[21,[249]]]],0,[[[336,[[0,[364,365]]]],[336,[[0,[364,365]]]]]],0,0,0,[[309,265],309],0,[[84,84],258],[[84,84],249],[279,[[262,[84,368,260,[369,[84,368,260]]]]]],0,0,0,[279,[[262,[84,368,260,[369,[84,368,260]]]]]],0,[291,287],[292,287],[293,287],0,0,0,0,0,0,0,[[[233,[276]]],[[21,[243]]]],[[],370],[[],371],[[],372],[[],318],[[],320],[[],317],[[],250],[[],288],[[],308],[[],265],[[],[[323,[373]]]],[[],324],[[],287],[[],302],[[],328],[[],279],[[],329],[[],329],[[],300],[[],251],[[],251],[[],266],[[],299],[[],332],[[],281],[[],254],[[],277],[[],280],[[],298],[[],333],[[],297],[[],334],[[],246],[[],244],[[],245],[[],226],[[],337],[[],338],[[],339],[[],255],[[],255],[[],269],[[],341],[[],259],[[],257],[[],342],[[],248],[[],345],[[],270],[[],346],[[],348],[[],[[350,[365]]]],[[],271],[[],[[357,[[0,[364,232]]]]]],[[],273],[[],358],[[],363],[[],360],[[],227],[[],252],[[],253],[[],315],[[],274],[[],316],[[],275],[[],361],[[],84],[[278,[262,[84,368,260,[374,[84,368,260,260,368]]]]]],[[],84],[[]],[[],84],[[],84],[[]],[[],84],[[249,[236,[84,[235,[[234,[84]]]]]]],249],[247,84],[[249,84],249],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[257,[[236,[84,[235,[[234,[84]]]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[258,282],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[257],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[297,266,255]],[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],0,0,0,[[238,[263,[84,260]],16],84],0,[245,375],[[264,375],264],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[282,7]]],[[22,[[8,[282,7]],[8,[282,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[282,7]]],[[22,[[14,[[0,[282,1,376,377]],7]],[14,[282,7]]]]]],[282,[[21,[282]]]],[[[15,[282,7]]],[[22,[[15,[282,7]],[15,[282,7]]]]]],[282,[[21,[282]]]],[[81,[263,[84,260]],[263,[84,260]],[85,[84]]]],[[81,[193,[[263,[84,260]]]],[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]],[85,[84]],16]],[[81,[193,[[263,[84,260]]]],[193,[[85,[89]]]],[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]],[85,[84]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[[],264],[281,84],[245,378],[[334,306],378],0,[281,[[262,[84,260,260,[261,[84]]]]]],0,[[],265],[[],266],[[],267],[[],268],[[],269],[[],248],[[],270],[[],272],[[],273],[[],252],[[],253],[[],274],[[],275],[[245,16]],[[264,16],264],[[249,16],249],0,0,0,0,0,[[264,16,16],264],[[320,320],16],[[288,288],16],[[308,308],16],[[265,265],16],[[321,321],16],[[[323,[[379,[[379,[[379,[379]]]]]]]],[323,[[379,[[379,[[379,[379]]]]]]]]],16],[[324,324],16],[[325,325],16],[[287,287],16],[[309,309],16],[[326,326],16],[[327,327],16],[[328,328],16],[[329,329],16],[[330,330],16],[[291,291],16],[[310,310],16],[[292,292],16],[[311,311],16],[[293,293],16],[[312,312],16],[[251,251],16],[[306,306],16],[[266,266],16],[[299,299],16],[[267,267],16],[[332,332],16],[[281,281],16],[[254,254],16],[[277,277],16],[[280,280],16],[[298,298],16],[[333,333],16],[[297,297],16],[[334,334],16],[[246,246],16],[[244,244],16],[[264,264],16],[[335,335],16],[[268,268],16],[[337,337],16],[[339,339],16],[[255,255],16],[[269,269],16],[[340,340],16],[[341,341],16],[[259,259],16],[[256,256],16],[[257,257],16],[[342,342],16],[[248,248],16],[[238,238],16],[[303,303],16],[[343,343],16],[[344,344],16],[[345,345],16],[[270,270],16],[[271,271],16],[[351,351],16],[[272,272],16],[[352,352],16],[[273,273],16],[[358,358],16],[[359,359],16],[[252,252],16],[[253,253],16],[[274,274],16],[[275,275],16],[[361,361],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[317,84],[[316,255],316],0,[[],316],[[],316],[[],316],[[316,251],316],0,[316,316],[316,316],[[265,380]],[[266,380]],[[267,380]],[[268,380]],[[269,380]],[[248,380]],[[270,380]],[[272,380]],[[273,380]],[[252,380]],[[253,380]],[[274,380]],[[275,380]],[239,[[103,[239,7]]]],[89,359],0,0,[[[236,[84,[235,[[234,[84]]]]]],363,[262,[84,260,260,[261,[84]]]],363,84,[366,[[0,[364,365]]]],16]],[[[236,[84,[235,[[234,[84]]]]]],363,[262,[84,260,260,[261,[84]]]],363,84,[366,[[0,[364,365]]]],16]],0,[[240,358],[[21,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[[358,[263,[84,260]]],[[21,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[[240,358,[263,[84,260]]],[[21,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],0,0,0,0,[381,[[21,[270]]]],[381,16],[229,21],[[318,84,250,226,227,360],[[21,[84]]]],[[],264],[[[233,[232]]],273],0,0,0,0,[[[233,[276]]],[[193,[89]]]],[239,[[193,[89]]]],[[[263,[84,260]],[263,[84,260]],359,359,84,16],[[336,[[0,[364,365]]]]]],[[320,10],[[22,[382]]]],[[317,10],[[22,[382]]]],[[288,10],[[22,[382]]]],[[308,10],[[22,[382]]]],[[265,10],[[22,[382]]]],[[265,10],[[22,[382]]]],[[265,10],[[22,[382]]]],[[265,10],[[22,[382]]]],[[265,10],[[22,[382]]]],[[321,10],[[22,[382]]]],[[[323,[383]],10],[[22,[382]]]],[[324,10],[[22,[382]]]],[[325,10],[[22,[382]]]],[[287,10],[[22,[382]]]],[[309,10],[[22,[382]]]],[[326,10],[[22,[382]]]],[[327,10],[[22,[382]]]],[[328,10],[[22,[382]]]],[[329,10],[[22,[382]]]],[[330,10],[[22,[382]]]],[[278,10],[[22,[382]]]],[[291,10],[[22,[382]]]],[[310,10],[[22,[382]]]],[[292,10],[[22,[382]]]],[[311,10],[[22,[382]]]],[[293,10],[[22,[382]]]],[[312,10],[[22,[382]]]],[[251,10],[[22,[382]]]],[[306,10],[[22,[382]]]],[[266,10],[[22,[382]]]],[[266,10],[[22,[382]]]],[[266,10],[[22,[382]]]],[[266,10],[[22,[382]]]],[[266,10],[[22,[382]]]],[[299,10],[[22,[382]]]],[[267,10],[[22,[382]]]],[[267,10],[[22,[382]]]],[[267,10],[[22,[382]]]],[[267,10],[[22,[382]]]],[[267,10],[[22,[382]]]],[[332,10],[[22,[382]]]],[[281,10],[[22,[382]]]],[[254,10],[[22,[382]]]],[[277,10],[[22,[382]]]],[[280,10],[[22,[382]]]],[[298,10],[[22,[382]]]],[[333,10],[[22,[382]]]],[[297,10],[[22,[382]]]],[[334,10],[[22,[382]]]],[[246,10],[[22,[382]]]],[[244,10],[[22,[382]]]],[[245,10],[[22,[382]]]],[[264,10],[[22,[382]]]],[[335,10],[[22,[382]]]],[[268,10],[[22,[382]]]],[[268,10],[[22,[382]]]],[[268,10],[[22,[382]]]],[[268,10],[[22,[382]]]],[[268,10],[[22,[382]]]],[[[336,[383]],10],[[22,[382]]]],[[228,10],[[22,[382]]]],[[337,10],[[22,[382]]]],[[339,10],[[22,[382]]]],[[255,10],[[22,[382]]]],[[269,10],[[22,[382]]]],[[269,10],[[22,[382]]]],[[269,10],[[22,[382]]]],[[269,10],[[22,[382]]]],[[269,10],[[22,[382]]]],[[340,10],[[22,[382]]]],[[341,10],[[22,[382]]]],[[256,10],[[22,[382]]]],[[257,10],[[22,[382]]]],[[342,10],[[22,[382]]]],[[248,10],[[22,[382]]]],[[248,10],[[22,[382]]]],[[248,10],[[22,[382]]]],[[248,10],[[22,[382]]]],[[248,10],[[22,[382]]]],[[238,10],[[22,[382]]]],[[[289,[383]],10],[[22,[382]]]],[[303,10],[[22,[382]]]],[[343,10],[[22,[382]]]],[[344,10],[[22,[382]]]],[[345,10],[[22,[382]]]],[[270,10],[[22,[382]]]],[[270,10],[[22,[382]]]],[[270,10],[[22,[382]]]],[[270,10],[[22,[382]]]],[[270,10],[[22,[382]]]],[[346,10],[[22,[382]]]],[[347,10],[[22,[382]]]],[[348,10],[[22,[382]]]],[[304,10],[[22,[382]]]],[[349,10],[[22,[382]]]],[[271,10],[[22,[382]]]],[[351,10],[[22,[382]]]],[[272,10],[[22,[382]]]],[[272,10],[[22,[382]]]],[[272,10],[[22,[382]]]],[[272,10],[[22,[382]]]],[[272,10],[[22,[382]]]],[[240,10],[[22,[382]]]],[[[242,[[0,[383,241]]]],10],[[22,[382]]]],[[352,10],[[22,[382]]]],[[352,10],[[22,[382]]]],[[[353,[[0,[383,232]]]],10],[[22,[382]]]],[[354,10],[[22,[382]]]],[[355,10],[[22,[382]]]],[[356,10],[[22,[382]]]],[[273,10],[[22,[382]]]],[[273,10],[[22,[382]]]],[[273,10],[[22,[382]]]],[[273,10],[[22,[382]]]],[[273,10],[[22,[382]]]],[[358,10],[[22,[382]]]],[[359,10],[[22,[382]]]],[[363,10],[[22,[382]]]],[[252,10],[[22,[382]]]],[[252,10],[[22,[382]]]],[[252,10],[[22,[382]]]],[[252,10],[[22,[382]]]],[[252,10],[[22,[382]]]],[[253,10],[[22,[382]]]],[[253,10],[[22,[382]]]],[[253,10],[[22,[382]]]],[[253,10],[[22,[382]]]],[[253,10],[[22,[382]]]],[[274,10],[[22,[382]]]],[[274,10],[[22,[382]]]],[[274,10],[[22,[382]]]],[[274,10],[[22,[382]]]],[[274,10],[[22,[382]]]],[[275,10],[[22,[382]]]],[[275,10],[[22,[382]]]],[[275,10],[[22,[382]]]],[[275,10],[[22,[382]]]],[[275,10],[[22,[382]]]],[[361,10],[[22,[382]]]],0,0,[[279,226,16]],[247,84],[[249,84],249],0,0,0,[247,320],[[249,320],249],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[321,265],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],299],[[]],[[]],[244,281],[267,281],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[244,259],[[]],[[]],[[],257],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[252,345],[[]],[253,345],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,272],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[358,359],[294,363],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[274,316],[271,316],[[]],[[]],[[]],[[84,84],244],[19,[[21,[265]]]],[89,[[21,[266]]]],[19,[[21,[267]]]],[89,[[21,[268]]]],[89,[[21,[269]]]],[305,[[21,[248]]]],[89,[[21,[270]]]],[89,[[21,[272]]]],[19,[[21,[273]]]],[89,[[21,[252]]]],[89,[[21,[253]]]],[89,[[21,[274]]]],[89,[[21,[275]]]],[19,265],[89,266],[19,267],[89,268],[89,269],[305,248],[89,270],[89,272],[19,273],[89,252],[89,253],[89,274],[89,275],[19,265],[89,266],[19,267],[89,268],[89,269],[305,248],[89,270],[89,272],[19,273],[89,252],[89,253],[89,274],[89,275],[[84,[263,[84,260]],[263,[84,260]],84],244],[[84,193],244],[[84,229,84],337],[[[193,[[263,[84,260]]]]],[[21,[240]]]],[[84,[193,[[263,[84,260]]]]],244],[[[103,[[263,[84,260]],7]]],[[21,[240]]]],[[84,[262,[84,260,260,[261,[84]]]]],244],[384,[[21,[343]]]],[380,265],[380,266],[380,267],[380,268],[380,269],[380,248],[380,270],[380,272],[380,273],[380,252],[380,253],[380,274],[380,275],[[[103,[[263,[84,260]],7]]],[[21,[[233,[276]]]]]],[[89,89],327],[[89,89],329],[[89,89],251],[[89,89],255],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[193,[84]]],254],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[84,[263,[84,260]],[263,[84,260]],[263,[84,260]]],244],[[84,[193,[[263,[84,260]]]],[193,[[85,[89]]]]],244],[188,[[21,[343]]]],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[13],[12],[279,[[262,[84,368,260,[385,[84,368,260,260,368]]]]]],[279,[[262,[84,368,260,[385,[84,368,260,260,368]]]]]],[279,[[262,[84,368,260,[374,[84,368,260,260,368]]]]]],[[302,327],[[21,[326]]]],[[300,329],21],[[226,251],[[21,[245]]]],[[227,255],[[21,[247]]]],[[300,330],[[21,[279]]]],[[300,330],[[21,[279]]]],[[302,327],[[21,[326]]]],[[300,329],21],[[226,251],[[21,[245]]]],[[227,255],[[21,[247]]]],[[300,329],21],[[302,89],21],[[300,89],21],[[226,89],21],[[227,89],21],[[302,89],21],[[226,89],21],[[227,89],21],0,0,[[245,84,[262,[84,260,260,[261,[84]]]]],84],[245,84],[[264,84],264],0,0,0,[[316,271],316],0,0,0,0,[[[235,[[262,[84,260,260,[261,[84]]]]]]],258],[[[235,[[262,[84,260,260,[261,[84]]]]]]],249],0,0,[[226,227,228,[21,[229]]]],[[386,226,227,228,[21,[229]]]],[[84,226,227,229,84]],[[386,84,226,227,229,84]],[[360,[21,[250]],[193,[255]],[193,[255]],227,226,387]],0,[[265,186]],[[325,186]],[[327,186]],[[329,186]],[[330,186]],[[251,186]],[[266,186]],[[267,186]],[[333,186]],[[334,186]],[[268,186]],[[228,186]],[[339,186]],[[255,186]],[[269,186]],[[341,186]],[[248,186]],[[343,186]],[[344,186]],[[345,186]],[[270,186]],[[271,186]],[[272,186]],[[273,186]],[[358,186]],[[359,186]],[[252,186]],[[253,186]],[[274,186]],[[275,186]],[[[242,[241]],[263,[84,260]]],[[21,[84]]]],[[[262,[84,368,260,[369,[84,368,260]]]],[262,[84,260,260,[261,[84]]]]],258],[[[262,[84,368,260,[369,[84,368,260]]]],[262,[84,260,260,[261,[84]]]]],249],[[[242,[241]]]],0,0,[[],257],0,0,0,0,0,0,0,[[],246],[329,9],[[300,330],279],[251,9],[[226,388],245],[[226,251],245],[255,9],[[227,388],247],[[227,255],247],[[[350,[365]],362],21],[[226,251],245],[[227,255],247],[[[233,[232]]]],[239,[[193,[[85,[89]]]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[265,265]],[[302,251,251,[389,[287]],16],327],[[300,251,251,[389,[287]],16],[[21,[329]]]],[[266,266]],[[267,267]],[[226,[389,[245]]],251],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[227,[389,[247]]],255],[[252,252]],[[253,253]],[[274,274]],[[275,275]],[[227,[389,[247]],251,226],255],0,[[278,84,[193,[84]]]],[[254,84,[236,[84,[235,[[234,[84]]]]]],[263,[84,260]]],[[236,[84,[235,[[234,[84]]]]]]]],[[280,84,254,281],254],[[299,84,280,254,281],[[236,[84,[235,[[234,[84]]]]]]]],0,[[[350,[365]],390,390],21],[[[350,[365]],390,390],21],[[[350,[365]]],301],[[[350,[365]],390],301],[[[350,[365]]],301],[[[350,[365]],390],301],0,0,[[299,84,[263,[84,260]]],254],0,[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[360,[[350,[255,347]]]],0,[[360,255,255],[[21,[16]]]],[[360,89,89],[[21,[16]]]],[360,301],[[315,226,227,[236,[84,[235,[[234,[84]]]]]],282,316],[[21,[255]]]],[[360,255],301],[[315,226,227,[263,[84,260]],316,231]],[[315,226,227,313,84,16,316,231]],[[315,226,227,[236,[84,[235,[[234,[84]]]]]],282,316,231]],[[360,89],301],[[265,265],16],[[266,266],16],[[267,267],16],[[268,268],16],[[269,269],16],[[248,248],16],[[270,270],16],[[272,272],16],[[273,273],16],[[252,252],16],[[253,253],16],[[274,274],16],[[275,275],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[288,287],[[]],[308,287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[309,287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[291,287],[[]],[310,287],[[]],[292,287],[311,287],[[]],[[]],[293,287],[[]],[312,287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[264,245],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,247],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[327],[329],[251],[255],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[279,[[391,[84,368,368]]]],0,[317,84],0,0,[[],327],[[],329],[[],251],[[],255],[[],255],[282,16],[246,16],[265,16],[266,16],[267,16],[268,16],[269,16],[248,16],[270,16],[272,16],[273,16],[252,16],[253,16],[274,16],[275,16],[[[233,[232]],358],16],[349,16],[245,16],[245,16],[[],16],[238,16],[[[289,[290]]],16],[[[289,[240]]],16],[[[289,[286]]],16],[240,16],[[],16],[306,16],[245,16],[265,16],[302,16],[266,16],[267,16],[226,16],[268,16],[269,16],[248,16],[270,16],[272,16],[273,16],[227,16],[252,16],[253,16],[274,16],[275,16],[287,16],[245,16],[247,16],[359,16],[306,16],[245,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[306,16],[245,16],[245,16],[[298,84,254,[21,[280]]],16],0,[304,16],[331,16],[245,16],[[[242,[241]],9],16],[340,16],[247,16],0,[245,16],[245,16],[359,16],[359,16],[254,16],[244,16],[302,301],[300,301],[226,301],[227,392],[227,301],[227,301],[302,301],[226,301],[227,301],[[278,[235,[[234,[84]]]],[262,[84,260,368,[374,[84,260,368,260,260]]]]]],[[278,[193,[84]]],254],[331,278],0,[[300,251,251],21],[317,84],0,0,0,[317,84],[302,[[350,[251,326]]]],0,0,0,0,[[302,251,251],301],[[],264],[[],264],[[254,281],84],[245,84],0,0,[302,9],[226,9],[227,9],0,[[287,321],[[21,[[323,[84]]]]]],[[309,321,[85,[84]]],309],[291,[[21,[[323,[84]]]]]],[[310,[85,[84]]],310],[292,[[21,[[323,[84]]]]]],[[311,[85,[84]]],311],[[293,321],[[21,[[323,[84]]]]]],[[312,[85,[84]]],312],0,[245,84],[[264,84],264],0,0,0,[[279,9],[[21,[331]]]],[331,9],[[279,9],[[21,[331]]]],[279,301],0,[279,301],[245,[[262,[84,260,260,[261,[84]]]]]],[[264,[262,[84,260,260,[261,[84]]]]],264],0,0,[[[233,[232]]],237],[243,237],[238,237],[239,237],[240,237],[[[242,[241]]],237],[288,[[263,[84,260]]]],[[308,[263,[84,260]]],308],[287,[[263,[84,260]]]],[[309,[263,[84,260]]],309],[291,[[263,[84,260]]]],[[310,[263,[84,260]]],310],[292,[[263,[84,260]]]],[[311,[263,[84,260]]],311],[293,[[263,[84,260]]]],[[312,[263,[84,260]]],312],[288,[[263,[84,260]]]],[[308,[263,[84,260]]],308],[287,[[263,[84,260]]]],[[309,[263,[84,260]]],309],[291,[[263,[84,260]]]],[[310,[263,[84,260]]],310],[292,[[263,[84,260]]]],[[311,[263,[84,260]]],311],[293,[[263,[84,260]]]],[[312,[263,[84,260]]],312],[287,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[309,[235,[[262,[84,260,260,[261,[84]]]]]]],309],[291,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[310,[235,[[262,[84,260,260,[261,[84]]]]]]],310],[293,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[312,[235,[[262,[84,260,260,[261,[84]]]]]]],312],[287,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[309,[235,[[262,[84,260,260,[261,[84]]]]]]],309],[291,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[310,[235,[[262,[84,260,260,[261,[84]]]]]]],310],[293,[[235,[[262,[84,260,260,[261,[84]]]]]]]],[[312,[235,[[262,[84,260,260,[261,[84]]]]]]],312],[[[233,[276]]],307],[243,307],[238,307],[239,307],[240,307],[[[242,[241]]],307],0,[288,[[236,[84,[235,[[234,[84]]]]]]]],[[308,[236,[84,[235,[[234,[84]]]]]]],308],[[309,[236,[84,[235,[[234,[84]]]]]]],309],0,[288,[[236,[84,[235,[[234,[84]]]]]]]],[[308,[236,[84,[235,[[234,[84]]]]]]],308],[[309,[236,[84,[235,[[234,[84]]]]]]],309],0,0,0,0,[[[235,[[262,[84,260,260,[261,[84]]]]]],363]],[[240,[235,[[262,[84,260,260,[261,[84]]]]]],363]],[[[262,[84,260,260,[261,[84]]]]],[[263,[84,260]]]],[[[289,[295]],[262,[84,260,260,[261,[84]]]]],[[263,[84,260]]]],[[240,[262,[84,260,260,[261,[84]]]]],[[263,[84,260]]]],[[[235,[[262,[84,260,260,[261,[84]]]]]]],[[263,[84,260]]]],[[[289,[295]],[235,[[262,[84,260,260,[261,[84]]]]]]],[[263,[84,260]]]],[331,[[236,[84,[235,[[234,[84]]]]]]]],0,[331,[[236,[84,[235,[[234,[84]]]]]]]],0,[[287,265],287],[[245,16,16]],[264,264],[[245,16,16]],[264,264],[[309,265],309],[245,267],[[264,267],264],0,[258,282],0,0,0,[[302,251,231]],[[[242,[241]],237,231]],[[89,231]],[[[233,[276]],89,231]],[[243,89,231]],[[239,89,231]],[231],[[285,89,231]],[[[233,[232]],89,231]],[[243,89,231]],[[239,89,231]],[231],[[285,89,231]],[[[233,[232]],89,231]],[[243,89,231]],[[239,89,231]],[281,84],[244,84],[245,84],[247,84],[[249,84],249],[84,244],[[[233,[276]],84],244],[245,281],[[259,282],244],[[243,84],244],[[238,84],244],[[239,84],244],[[[289,[286]],84],244],[[[289,[290]],84],244],[[[289,[240]],84],244],[[240,84],244],[[[242,[276]],84],244],[247,244],[[249,244],249],0,[247,342],0,0,0,0,0,0,[229],0,[[298,254],84],0,0,0,0,0,0,0,0,0,0,0,[393],[[287,321],[[21,[324]]]],[291,[[21,[324]]]],[292,[[21,[324]]]],[[311,84,84,84,84],311],[[293,321],[[21,[324]]]],0,[[309,321,84],309],[[310,84],310],[[311,84],311],[[312,84],312],[[287,321],[[21,[328]]]],[[309,321,328],309],[[310,328],310],[[311,328],311],[[312,328],312],[[309,321,84,84,84],309],[[310,84,84,84],310],[[311,84,84,84],311],[[312,84,84,84],312],[[309,321,84,84],309],[[310,84,84],310],[[311,84,84],311],[[312,84,84],312],0,0,0,0,[[254,84],254],[300,301],0,0,0,[279,9],[278,9],0,[269,16],[269,16],[[],370],[[[394,[228]],[394,[337]]],386],[[],371],[[361,275],372],[[],318],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]]],[[233,[276]]]],[[],250],[[],288],[[],308],[265,287],[265,309],[[],302],[[],279],[[],300],[[251,9,9,9,278,[236,[84,[235,[[234,[84]]]]]],[236,[84,[235,[[234,[84]]]]]]],331],[287,278],[[[235,[[262,[84,260,260,[261,[84]]]]]]],291],[[[235,[[262,[84,260,260,[261,[84]]]]]]],310],[[],292],[[],311],[[],293],[[],312],[[[262,[84,260,260,[261,[84]]]],84],254],[[[263,[84,260]],84,84],244],[306,264],[[251,251],335],[[],226],[[[263,[84,260]],[263,[84,260]],359,359,84],[[336,[[0,[364,365]]]]]],[[],338],[[255,255],339],[[84,84],342],[[[103,[7]]],243],[[[235,[[262,[84,260,260,[261,[84]]]]]]],238],[[[103,[[263,[84,260]],7]],[21,[[103,[[85,[89]],7]]]]],239],[[],[[350,[365]]]],[[272,272],271],[[[262,[84,368,260,[369,[84,368,260]]]],[262,[84,260,260,[261,[84]]]]],[[242,[276]]]],[282,258],[[],360],[258,249],[[],227],[[],315],[[],316],[[],264],[[],264],[[],264],0,[245,[[236,[84,[235,[[234,[84]]]]]]]],0,[[],271],[[315,226,227,395,282,84,84,16,316],21],0,0,0,[240,[[193,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],0,[265,265],[266,266],[267,267],[268,268],[269,269],[248,248],[270,270],[272,272],[273,273],[252,252],[253,253],[274,274],[275,275],[348,9],[[[242,[241]]],9],[[[353,[232]]],9],[279,9],[239,9],[[[233,[232]]],9],[278,9],0,[[240,84],240],[[],316],[[],316],[[],316],[247,[[21,[251]]]],0,[331,[[21,[9]]]],0,[[265,265],[[21,[183]]]],[[266,266],[[21,[183]]]],[[267,267],[[21,[183]]]],[[334,334],[[21,[183]]]],[[268,268],[[21,[183]]]],[[269,269],[[21,[183]]]],[[248,248],[[21,[183]]]],[[270,270],[[21,[183]]]],[[272,272],[[21,[183]]]],[[273,273],[[21,[183]]]],[[252,252],[[21,[183]]]],[[253,253],[[21,[183]]]],[[274,274],[[21,[183]]]],[[275,275],[[21,[183]]]],0,0,[240,[[193,[[263,[84,260]]]]]],0,[[[103,[[263,[84,260]],7]],[21,[[103,[[85,[89]],7]]]]],258],[[[103,[[263,[84,260]],7]],[21,[[103,[[85,[89]],7]]]]],249],0,0,0,[245,[[236,[84,[235,[[234,[84]]]]]]]],[[264,[236,[84,[235,[[234,[84]]]]]]],264],[247,[[236,[84,[235,[[234,[84]]]]]]]],[[249,[236,[84,[235,[[234,[84]]]]]]],249],0,0,0,[247,[[21,[[236,[84,[235,[[234,[84]]]]]]]]]],[[249,[236,[84,[235,[[234,[84]]]]]]],249],[[316,218],316],0,[[318,84,250,226,227,360,387],319],[[245,84],[[236,[84,[235,[[234,[84]]]]]]]],0,[244,84],[[[233,[232]],[263,[84,260]],16],396],[[243,[263,[84,260]],16],396],[[238,[263,[84,260]],16],396],[[239,[263,[84,260]],16],396],[[[289,[295]],[263,[84,260]],16],396],[[240,[263,[84,260]],16],396],[[[242,[241]],[263,[84,260]],16],396],[[[233,[232]],[263,[84,260]]]],[[243,[263,[84,260]]]],[[238,[263,[84,260]]]],[[239,[263,[84,260]]]],[[[289,[295]],[263,[84,260]]]],[[240,[263,[84,260]]]],[[[242,[241]],[263,[84,260]]]],[[[233,[232]],[263,[84,260]],16]],[[239,[263,[84,260]],16]],[[[242,[241]],[263,[84,260]],16]],[[[233,[232]],[263,[84,260]],16,84],21],[[239,[263,[84,260]]]],[[[233,[232]],[263,[84,260]],16,84],[[21,[396]]]],[[[242,[241]],[263,[84,260]],16,84],[[21,[396]]]],[[315,226,227,[263,[84,260]],16,316],21],[[315,226,227,[263,[84,260]],316],21],[[226,227]],0,0,[254,84],[[],[[397,[89,276]]]],[[[233,[276]]],[[397,[89,276]]]],[[[233,[232]]],[[397,[89]]]],[243,[[397,[89,276]]]],[243,[[397,[89,276]]]],[239,[[397,[89,276]]]],0,0,0,0,[360,398],[315,399],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[[350,[365]]],[[400,[365]]]],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],0,0,[[281,227,297,[236,[84,[235,[[234,[84]]]]]]]],[[245,227]],0,0,[[244,244],16],[[265,265]],[[302,327,16],[[21,[326]]]],[[300,329,16]],[[266,266]],[[267,267]],[[226,251,250,227,302,300,16],[[21,[245]]]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[227,255,250,226,16],[[21,[247]]]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],[[302,251],[[103,[327,7]]]],[[300,251]],[[300,251,16]],[228,16],0,[[372,401,226,227,302,300,360]],[361,372],[[372,401,226,227]],[[372,401,227,360]],[[372,401,226,302,300]],[[372,401,226]],0,[[245,16]],[[245,16]],[247,84],[[249,84],249],0,0,0,[247,320],[[249,320],249],0,0,[[245,16,16,16,16]],[[245,16,16,16]],[[264,16,16],264],[[[233,[276]]]],[239],0,0,0,0,0,0,0,0,[331,251],[[300,251],[[21,[402]]]],[279,331],[[[242,[241]]],237],0,[279,331],[245,[[235,[[234,[84]]]]]],[[264,84],264],[247,[[235,[[234,[84]]]]]],[[249,84],249],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],84],258],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],84],249],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],367,84],258],[[[193,[[263,[84,260]]]],[193,[[85,[89]]]],367,84],249],[[[193,[[263,[84,260]]]],84],[[21,[258]]]],[[[193,[[263,[84,260]]]],84],[[21,[249]]]],[[[103,[[263,[84,260]],7]],84],[[21,[258]]]],[[[103,[[263,[84,260]],7]],84],[[21,[249]]]],[[84,84,84],258],[[84,84,84],249],[[[263,[84,260]],[263,[84,260]],[263,[84,260]],84],258],[[[263,[84,260]],[263,[84,260]],[263,[84,260]],84],249],[[[242,[241]]],[[262,[84,260,260,[261,[84]]]]]],0,[[[233,[276]],[262,[84,260,260,[261,[84]]]]],[[233,[276]]]],[[238,[262,[84,260,260,[261,[84]]]]],[[21,[238]]]],[[239,[262,[84,260,260,[261,[84]]]]],239],[[240,[262,[84,260,260,[261,[84]]]]],[[21,[240]]]],[[[242,[241]],[262,[84,260,260,[261,[84]]]]],[[242,[241]]]],[[239,89],294],[[[263,[84,260]],[263,[84,260]]],258],[[[263,[84,260]],[263,[84,260]]],249],[[[242,[241]],9],[[21,[294]]]],[[239,89,358],358],[239,392],[[[242,[241]]],301],[228,16],[[249,16],249],[[265,265,16]],[[266,266,16]],[[267,267,16]],[[268,268,16]],[[269,269,16]],[[248,248,16]],[[270,270,16]],[[272,272,16]],[[273,273,16]],[[252,252,16]],[[253,253,16]],[[274,274,16]],[[275,275,16]],[[247,248]],[[247,252]],[[247,253]],[[245,84,16]],[[245,244,16]],[[245,84]],[[245,84,16]],[[245,306,16]],[[247,271]],[[247,84]],[[288,16],288],[[287,16],287],[[291,16],291],[[292,16],292],[[293,16],293],[[247,84]],[[245,375]],[[317,84]],[[287,16]],[[245,16]],[[247,16]],[[245,16,16,16,16]],[[245,16,16,16]],[[[233,[276]],273],[[22,[352]]]],[[247,84]],[[247,320]],[[245,84,16]],[[317,84]],[[287,321,[85,[84]]],287],[[291,[85,[84]]],291],[[292,[85,[84]]],292],[[293,[85,[84]]],293],[[245,84]],[[245,[262,[84,260,260,[261,[84]]]],16]],[[288,[263,[84,260]]],288],[[287,[263,[84,260]]],287],[[291,[263,[84,260]]],291],[[292,[263,[84,260]]],292],[[293,[263,[84,260]]],293],[[288,[263,[84,260]]],288],[[287,[263,[84,260]]],287],[[291,[263,[84,260]]],291],[[292,[263,[84,260]]],292],[[293,[263,[84,260]]],293],[[287,[235,[[262,[84,260,260,[261,[84]]]]]]],287],[[291,[235,[[262,[84,260,260,[261,[84]]]]]]],291],[[293,[235,[[262,[84,260,260,[261,[84]]]]]]],293],[[287,[235,[[262,[84,260,260,[261,[84]]]]]]],287],[[291,[235,[[262,[84,260,260,[261,[84]]]]]]],291],[[293,[235,[[262,[84,260,260,[261,[84]]]]]]],293],[[288,[236,[84,[235,[[234,[84]]]]]]],288],[[287,[236,[84,[235,[[234,[84]]]]]]],287],[[288,[236,[84,[235,[[234,[84]]]]]]],288],[[287,[236,[84,[235,[[234,[84]]]]]]],287],[[245,267,16]],[[244,84,16]],[[247,84]],[[247,244]],[[287,321,84,84,84,84],287],[[309,321,84,84,84,84],309],[[291,84,84,84,84],291],[[310,84,84,84,84],310],[[292,84,84,84,84],292],[[293,84,84,84,84],293],[[312,84,84,84,84],312],[[287,321,84],287],[[291,84],291],[[292,84],292],[[293,84],293],[[287,321,328],287],[[291,328],291],[[292,328],292],[[293,328],293],[[287,321,84,84,84],287],[[291,84,84,84],291],[[292,84,84,84],292],[[293,84,84,84],293],[[287,321,84,84],287],[[291,84,84],291],[[292,84,84],292],[[293,84,84],293],[[245,[236,[84,[235,[[234,[84]]]]]]]],[[245,[235,[[234,[84]]]]]],[[245,[262,[84,260,260,[261,[84]]]]]],[[227,255,[21,[251]],226]],[[245,[236,[84,[235,[[234,[84]]]]]],16]],[[247,[236,[84,[235,[[234,[84]]]]]]]],[[247,[236,[84,[235,[[234,[84]]]]]]]],[[247,84]],[[247,320]],[[245,[235,[[234,[84]]]],16]],[[247,[235,[[234,[84]]]]]],[[247,84]],[[[242,[241]],[262,[84,260,260,[261,[84]]]]]],[[[242,[241]],9,16]],[[247,16]],[[247,258]],[[247,271]],[[245,[262,[84,260,260,[261,[84]]]],16]],[[247,[262,[84,260,260,[261,[84]]]]]],[[247,[262,[84,260,260,[261,[84]]]]]],[247,282],0,0,[247,282],[[],343],[[[233,[276]]],343],[243,343],[238,343],[239,343],[[[289,[286]]],343],[[[289,[240]]],343],[[[289,[290]]],343],[240,343],[[[242,[276]]],343],[243,193],0,[247,258],0,0,[246],[245],0,[[264,16],264],0,0,0,0,0,0,[247,271],[[249,271],249],0,0,0,0,0,0,0,[[[242,[241]]],84],[228,16],0,[[370,84,338,360,226,227,[21,[315]],403,387]],[[371,[262,[84,260,260,[261,[84]]]],317,250,338,360,226,227,302,300,318,[21,[315]],403,387]],0,[228,16],0,[[265,265],265],[[266,266],266],[[267,267],267],[[244,244],244],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[[265,265]],[[266,266]],[[267,267]],[[244,244]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],0,[301,244],[[240,[235,[[262,[84,260,260,[261,[84]]]]]]],358],[[[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]]],[[263,[84,260]]]],[[[236,[84,[235,[[234,[84]]]]]],[235,[[262,[84,260,260,[261,[84]]]]]]],[[263,[84,260]]]],[339,339],[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],0,0,0,0,[[248,306,306],16],[[271,271],16],[[274,226,247],16],[[316,226,255,247],16],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[289,[286]],89],[[103,[[263,[84,260]],7]]]],[[[289,[240]],89],[[103,[[263,[84,260]],7]]]],[[[242,[276]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[265,265]],[[266,266]],[[267,267]],[[268,268]],[[269,269]],[[248,248]],[[270,270]],[[272,272]],[[273,273]],[[252,252]],[[253,253]],[[274,274]],[[275,275]],[[[233,[232]]],[[21,[[357,[232]]]]]],0,0,0,0,[229,[[262,[84,260,260,[261,[84]]]]]],[229,84],[[244,[236,[84,[235,[[234,[84]]]]]]],244],[[363,[236,[84,[235,[[234,[84]]]]]]]],[[[233,[276]],[236,[84,[235,[[234,[84]]]]]]]],[[254,[235,[[234,[84]]]]],254],[245,[[262,[84,260,260,[261,[84]]]]]],[[264,[262,[84,260,260,[261,[84]]]]],264],[247,[[262,[84,260,260,[261,[84]]]]]],[[249,[262,[84,260,260,[261,[84]]]]],249],[[[233,[232]],89],290],[[[263,[84,260]],[263,[84,260]],[263,[84,260]]],258],[[[263,[84,260]],[263,[84,260]],[263,[84,260]]],249],[[[233,[276]]],392],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]]],258],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]]],249],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]],273],258],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]],273],249],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],397],[285,397],[[[233,[232]]],[[397,[89]]]],[243,[[397,[89,276]]]],[239,[[397,[89,276]]]],[[[242,[241]],237],[[405,[404]]]],[[265,265],265],[[266,266],266],[[267,267],267],[[268,268],268],[[269,269],269],[[248,248],248],[[270,270],270],[[272,272],272],[[273,273],273],[[252,252],252],[[253,253],253],[[274,274],274],[[275,275],275],[[[242,[241]]],84],[[317,279,331,[85,[84]],84,9,9,[262,[84,368,260,[369,[84,368,260]]]],[103,[406,7]],[21,[9]]]],[[317,279,331,324,84,[21,[[85,[84]]]],9,9,[262,[84,368,260,[369,[84,368,260]]]],[103,[406,7]],[21,[9]]]],[359,358],[358,89],[358,89],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[338,84,227,[193,[255]],[193,[255]],[103,[407,7]]]],[[315,226,227]],[[393,[262,[84,260,260,[261,[84]]]],84]],[[318,250,226,84,16],16],[[315,227,[193,[255]],[193,[255]],16]],[[297,227,[103,[255,7]],[236,[84,[235,[[234,[84]]]]]]]],[[315,226,227,408]],[[281,[236,[84,[235,[[234,[84]]]]]]]],[[264,224],264],[[249,224],249],0,0,0,0,0,0,[245,[[262,[84,260,260,[261,[84]]]]]],0,[245,84],0,0,0,[[254,[263,[84,260]],[263,[84,260]]],[[262,[84,260,260,[261,[84]]]]]],[[245,[263,[84,260]]],[[262,[84,260,260,[261,[84]]]]]],[[278,317,279,331,9,9,[262,[84,368,260,[369,[84,368,260]]]],[103,[406,7]],[21,[9]]]],0,[89,359],0,[[[233,[232]]]],[239,[[193,[[263,[84,260]]]]]],0,0,0,0,0,[247,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[250,226,251,16]],[[246,16]],[[245,16]],[[271,272],271],[[[103,[[263,[84,260]],7]],[103,[[85,[89]],7]],273],[[233,[276]]]],[[271,272],271],[399,318],[[[398,[348,346]]],360],[399,315],0,0,0,[[244,[236,[84,[235,[[234,[84]]]]]]],[[263,[84,260]]]],0,[[244,[235,[[234,[84]]]]],84],[[],254],[[]],[[],244],[[],339],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[414,414],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[414,409,417,417,[418,[414,409,417,417]]]]],[[262,[414,409,417,417]]]],[[[420,[415,419]],[420,[415,419]]],16],[[[262,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],417,417,[422,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]],417,417]]]],[262,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],417,417,[422,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]],417,417]]]]],16],[[[235,[[423,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]]],[235,[[423,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]]]],16],[[[235,[[424,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]]],[235,[[424,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]]]],16],[[[235,[[234,[415]]]],[235,[[234,[415]]]]],16],[[[235,[[262,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],417,417,[422,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]],417,417]]]]]],[235,[[262,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],417,417,[422,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]],417,417]]]]]]],16],[[[263,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],412]],[263,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]],412]]],16],[[[425,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]],[425,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]]],16],[[[423,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]],[423,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]],16],[[[424,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]],[424,[[0,[415,[421,[[0,[415,[421,[[0,[415,[421,[[0,[415,421]]]]]]]]]]]]]]]]],16],[[[426,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]],[426,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]]],16],[[[427,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]],[427,[[0,[409,[421,[[0,[409,[421,[[0,[409,[421,[[0,[409,421]]]]]]]]]]]]]]]]],16],[[[236,[415,[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[428,421]]]]]]]]]]]]]]]],[236,[415,[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[428,421]]]]]]]]]]]]]]]]],16],[[[429,[415,[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[428,421]]]]]]]]]]]]]]]],[429,[415,[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[[428,[415]],[421,[[0,[428,421]]]]]]]]]]]]]]]]],16],[[[236,[[430,[[85,[84]]]],[235,[[234,[[430,[[85,[84]]]]]]]]]],[262,[[430,[[85,[84]]]],260,260,[261,[[430,[[85,[84]]]]]]]]],[[262,[[430,[[85,[84]]]],260,260,[261,[[430,[[85,[84]]]]]]]]]],[[[236,[84,[235,[[234,[84]]]]]],[262,[84,260,260,[261,[84]]]]],[[262,[84,260,260,[261,[84]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]],[[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417]]]],[[[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]],[434,[432,[0,[409,410,411,[433,[432,[0,[409,410,411,433,434]]]],[434,[432,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[]],[[]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[368,9],368],[[368,417],368],[[260,260]],[[260,260]],[368,368],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[435,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[435,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],412]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,260,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,260]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[262,[[433,[[433,[[433,[433,409]],409]],409]],409,417,417,[418,[[433,[[433,[433,409]],409]],409,417,417]]]],[433,[[433,[[433,[[433,[433,409]],409]],409]],409]],409],[[262,[[433,[[433,[[433,[433,409]],409]],409]],409,417,417]]]],[[[262,[[433,[[433,[[433,[433,409]],409]],409]],409,417,417,[435,[[433,[[433,[433,409]],409]],409,417,417]],[418,[[433,[[433,[433,409]],409]],409,417,417]]]],[433,[[433,[[433,[[433,[433,409]],409]],409]],409]],409]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[418,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],417,417,[435,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]],417,417]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[439,[432,417,417]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]],[262,[432,417,417,[439,[432,417,417]]]]]],[[],16],[[412,368,380]],[[368,417,380]],[[260,260,380]],[[412,368],[[369,[[440,[409]],412,368]]]],[[260,260],[[261,[[440,[409]]]]]],[[368,417],[[369,[[440,[409]],368,417]]]],[[[262,[[0,[410,441,442]],409,417,417,[422,[[0,[410,441,442]],409,417,417]]]]],[[0,[410,441,442]],409]],[[[262,[[0,[410,442,441]],409,417,417,[422,[[0,[410,442,441]],409,417,417]]]]],[[0,[410,442,441]],409]],[[],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]]],[[[235,[[423,[431]]]]],431],[[[235,[[234,[431]]]]],431],[[[425,[431]]],431],[[[425,[431]]],431],[[[235,[[423,[431]]]],[235,[[423,[431]]]]],431],[[[235,[[234,[431]]]],[235,[[234,[431]]]]],431],[[[425,[431]],[425,[431]]],431],[[[425,[431]],[425,[431]]],431],[[],16],[[[235,[[423,[431]]]],[262,[431,260,260,[261,[431]]]]],[[235,[[423,[431]]]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]]],[[[444,[417]],9,9]],[[[236,[431,[428,[431]]]],[428,[431]]]],[[[429,[431,[428,[431]]]],[428,[431]]]],[[[236,[431,[428,[431]]]],[428,[431]]]],[[[429,[431,[428,[431]]]],[428,[431]]]],[[[236,[431,[428,[431]]]],[428,[431]],[263,[431,260]]]],[[[429,[431,[428,[431]]]],[428,[431]],[263,[431,260]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[429,[431,[428,[431]]]],431],[[429,[431,[428,[431]]]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]]]]]],[[[429,[431,[428,[431]]]],431]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],231]],[[[263,[409,412]],231]],[[[262,[417,417,[439,[417,417]]]],231],[[262,[417,417,[439,[417,417]]]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]],[262,[432,409,417,417,[418,[432,409,417,417]]]],[445,[432,409]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]],[445,[432,409]]]],[[[262,[[416,[[416,[[416,[416,409]],409]],409]],409,417,260,[422,[[416,[[416,[416,409]],409]],409,417,260]]]]]],[[[262,[[416,[[416,[[416,[416,409]],409]],409]],409,417,260,[422,[[416,[[416,[416,409]],409]],409,417,260]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[446,[365]]]]],365],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[[262,[415,260,260,[261,[415]]]]],[[193,[19]]]],[[[262,[415,260,260,[261,[415]]]]],[[193,[19]]]],[[[263,[415,260]]],[[193,[19]]]],[[[263,[415,260]]],[[193,[19]]]],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[409]]]],[[[424,[431]]],[[85,[431]]]],[[[262,[417,417,[439,[417,417]]]]]],[261,193],[[[262,[417,417,[0,[[439,[417,417]],451]]]]],193],[[[369,[417,417]]],193],[[],193],[261,193],[[[374,[417,417,417,417]]],193],[[[369,[412,368]]],193],[[[369,[368,417]]],193],[235],[[[449,[415]]],[[420,[415,452]]]],[[[450,[415]]],[[420,[415,452]]]],[[[262,[417,417,[422,[417,417]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[409]]]],[235],[[[424,[431]]],[[85,[431]]]],[[[262,[260,260,[422,[260,260]]]]]],[[[262,[260,260,[439,[260,260]],[422,[260,260]]]]]],[261,193],[[[262,[417,417,[0,[[422,[417,417]],451]]]]],193],[[[369,[417,417]]],193],[[],193],[261,193],[[[385,[417,417,417,417]]],193],[[[374,[417,417,417,417]]],193],[[[369,[368,417]]],193],[[[369,[412,368]]],193],[[[369,[417,417]]],[[103,[7]]]],[[[369,[417,417]]],[[103,[7]]]],[[[423,[431]]],[[262,[431,260,260,[261,[431]]]]]],[[[423,[431]]],[[262,[431,260,260,[261,[431]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417,417,417]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417,417,417]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[450,[415]]],415],[[[369,[[440,[409]],412,368]]],[[369,[409,412,368]]]],[[[261,[[440,[409]]]]],[[261,[409]]]],[[[369,[[440,[409]],368,417]]],[[369,[409,368,417]]]],[[[262,[440,417,417]]],[[262,[417,417]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[415,431]]],[[423,[415,431]]]],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,260]]]],[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,260]]]],[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[453,[436,417,[418,[436,417,260]]]]],[[262,[436,417,260,[418,[436,417,260]]]]]],[[[235,[[423,[415,431]]]]],[[21,[[235,[[262,[415,431,260,260,[261,[415,431]]]]]]]]]],[[[425,[415,431]]],[[21,[[235,[[262,[415,431,260,260,[261,[415,431]]]]]]]]]],0,[[[235,[[423,[415,431]]]]],21],[[[235,[[234,[415,431]]]]],21],[[[425,[415,431]]],21],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],0,[[],9],[[[453,[436,417,[418,[436,417,260]]]]],436],0,[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]],[[455,[436,[454,[417]],417,417]]]],[[],188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]],[[85,[[85,[409]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[449,[415]]],415],[[[262,[432,409,417,417,[422,[432,409,417,417]]]]]],[[[262,[432,409,417,417,[422,[432,409,417,417]]]]]],[[[262,[436,409,417,417,[418,[436,409,417,417]]]]],[[262,[436,409,417,417]]]],[[[262,[409,417,417,[422,[409,417,417]]]]],[[262,[409,417,417]]]],[[[235,[[234,[431]]]]],[[235,[[234,[409]]]]]],[[[235,[[423,[431]]]]],[[235,[[423,[[0,[409,[456,[431]]]]]]]]]],[[[235,[[424,[431]]]]],[[235,[[424,[409]]]]]],[[[235,[[262,[409,409,417,260,[422,[409,409,417,260]]]]]]],[[235,[[262,[409,417,260]]]]]],[[[263,[409,412]]],[[263,[409,412]]]],[[[425,[409]]],[[425,[409]]]],[[[423,[409]]],[[423,[[0,[409,[456,[409]]]]]]]],[[[424,[409]]],[[424,[409]]]],[[[426,[409]]],[[426,[409]]]],[[[427,[409]]],[[427,[409]]]],[[[236,[431,[235,[[234,[431]]]]]]],[[236,[409,[235,[[234,[409]]]]]]]],[[[236,[431,[235,[[423,[431]]]]]]],[[236,[409,[235,[[423,[409]]]]]]]],[[[236,[431,[425,[431]]]]],[[236,[409,[425,[409]]]]]],[[[236,[431,[425,[431]]]]],[[236,[409,[425,[409]]]]]],[[[429,[431,[235,[[423,[431]]]]]]],[[429,[409,[235,[[423,[409]]]]]]]],[[[429,[431,[425,[431]]]]],[[429,[409,[425,[409]]]]]],[[[429,[431,[235,[[234,[431]]]]]]],[[429,[409,[235,[[234,[409]]]]]]]],[[[429,[431,[425,[431]]]]],[[429,[409,[425,[409]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[435,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409,417,417]],[418,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409,417,417]]]],[0,[[457,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]]]],409,[262,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[418,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409,417,417]]]],[262,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[418,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409,417,417]]]],[0,[[457,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[457,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],410,[458,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]],[459,[[0,[[457,[[0,[457,410,458,459]],409]],410,[458,[[0,[457,410,458,459]],409]],[459,[[0,[457,410,458,459]],409]]]],409]]]],409]]]],409]]]],409]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[263,[432,260]],[263,[432,260]]],[[263,[432,260]]]],[[[262,[415,412,412]]],16],[[[262,[415,412,412]]],16],[[[262,[415,412,412]]],16],[[[262,[415,412,412]]],16],0,[[[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[460,[436,417]]]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],[[416,[[416,[[416,[[416,[416]]]]]]]]]],[[]],[[[234,[322]]],[[234,[322]]]],[[[420,[415,419]]],[[420,[415,419]]]],[461,461],[368,368],[260,260],[[[261,[322]]],[[261,[322]]]],[[[262,[322,322,322,322]]],[[262,[322,322,322,322]]]],[[[385,[409,417,417,417,417]]],[[385,[409,417,417,417,417]]]],[462,462],[463,463],[464,464],[[[235,[322]]],[[235,[322]]]],[[[369,[322,[0,[322,417]],[0,[322,417]]]]],[[369,[322,[0,[322,417]],[0,[322,417]]]]]],[[[263,[[0,[322,409]],[0,[322,412]]]]],[[263,[[0,[322,409]],[0,[322,412]]]]]],[[[425,[322]]],[[425,[322]]]],[[[423,[322]]],[[423,[322]]]],[[[424,[322]]],[[424,[322]]]],[[[426,[322]]],[[426,[322]]]],[[[427,[322]]],[[427,[322]]]],[[[236,[322,322]]],[[236,[322,322]]]],[[[429,[322,322]]],[[429,[322,322]]]],[465,465],[452,452],[466,466],[[[449,[322]]],[[449,[322]]]],[[[450,[322]]],[[450,[322]]]],[[[455,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[455,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[460,[[0,[322,432]],[0,[322,417]]]]],[[460,[[0,[322,432]],[0,[322,417]]]]]],[[[467,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[467,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[468,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[468,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[470,[[0,[322,436]],[0,[322,[469,[260]]]]]]],[[470,[[0,[322,436]],[0,[322,[469,[260]]]]]]]],[[[391,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[391,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[444,[[0,[322,417]]]]],[[444,[[0,[322,417]]]]]],[[[471,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[471,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[472,[[0,[322,436]],[0,[322,417]]]]],[[472,[[0,[322,436]],[0,[322,417]]]]]],[[[473,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]],[[473,[[0,[322,436]],[0,[322,[454,[[0,[322,417]]]]]],[0,[322,417]]]]]],[[[474,[[0,[322,436]],[0,[322,417]]]]],[[474,[[0,[322,436]],[0,[322,417]]]]]],[[[475,[[0,[322,436]],[0,[322,[469,[260]]]]]]],[[475,[[0,[322,436]],[0,[322,[469,[260]]]]]]]],[[[476,[[0,[322,415]],[0,[322,417]]]]],[[476,[[0,[322,415]],[0,[322,417]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[420,[415,419]]],[[420,[415,419]]]],[[[261,[409]]]],[[[262,[409,417,417,[418,[409,417,417]],[422,[409,417,417]]]]],[[262,[409,417,417]]]],[[[385,[409,417,417,417,417]]]],[[[374,[409,417,417,417,417]]]],[[[369,[409,412,368]]]],[[[369,[409,368,417]]]],[[[423,[431]]],[[423,[431]]]],[[[262,[409,417,417,[418,[409,417,417]],[422,[409,417,417]]]]],[[262,[409]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[435,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409,417,417]],[418,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409,417,417]]]],[0,[[434,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]]]],409,[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[418,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409,417,417]]]],[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409,417,417,[418,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409,417,417]]]],[0,[[434,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],410,[458,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]],[459,[[0,[[434,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],410,[458,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]],[459,[[0,[[434,[[0,[434,410,458,459]],409]],410,[458,[[0,[434,410,458,459]],409]],[459,[[0,[434,410,458,459]],409]]]],409]]]],409]]]],409]]]],409]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]],[[467,[436,[454,[417]],417,417]]]],0,[[[262,[417,417,[422,[417,417]]]],9],[[262,[417,260,[385,[417,260]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[477,[417,417,[422,[417,417]]]]]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]]],[[478,[417,417,[439,[417,417]],[422,[417,417]]]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,417,260]]]],[[[262,[417,417,[439,[417,417]]]],9],[[262,[417,260,[374,[417,260]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[368,260,[385,[368,260]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[368,260,[374,[368,260]]]]]],[[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,417,[422,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409,417,417]]]]],[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,260]]]],[[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,417,[422,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409,417,417]]]]],[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,260]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,417,260]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[417,368,[385,[417,368]]]]]],[[[262,[417,417,[422,[417,417]]]],9,417],[[262,[417,417,[385,[417,417]]]]]],[[[262,[417,417,[439,[417,417]]]],9,417],[[262,[417,417,[374,[417,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9,417,9],[[262,[417,417,[385,[417,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,417,9],[[262,[417,417,[374,[417,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[417,368,[374,[417,368]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]]],[[262,[417,[385,[417]]]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]]],[[262,[417,[374,[417]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]],[480,[417]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]],[480,[417]]]],[[[262,[417,417,[422,[417,417]]]],9,9,9],[[262,[417,368,[385,[417,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9,9],[[262,[417,368,[374,[417,368,368]]]]]],[[[235,[[234,[431]]]]],[[234,[431]]]],[[[262,[415,436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]],[418,[415,436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]]]]]]],[[262,[[234,[415,436]],[0,[417,[469,[260]]]],260]]]],[[[472,[415,436,[0,[417,[469,[260]]]]]]],[[262,[[234,[415,436]],[0,[417,[469,[260]]]],260]]]],[[[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[418,[[457,[[457,[457,409]],409]],409,417,417]]]],[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[418,[[457,[[457,[457,409]],409]],409,417,417]]]]],[[262,[[457,[[457,[[457,[457,409]],409]],409]],409]]]],[[[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[435,[[457,[[457,[457,409]],409]],409,417,417]],[418,[[457,[[457,[457,409]],409]],409,417,417]]]],[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[418,[[457,[[457,[457,409]],409]],409,417,417]]]]]],[[[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[435,[[457,[[457,[457,409]],409]],409,417,417]],[418,[[457,[[457,[457,409]],409]],409,417,417]]]],[262,[[457,[[457,[[457,[457,409]],409]],409]],409,417,417,[418,[[457,[[457,[457,409]],409]],409,417,417]]]]]],[[[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[418,[[434,[[434,[434,409]],409]],409,417,417]]]],[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[418,[[434,[[434,[434,409]],409]],409,417,417]]]]],[[262,[[434,[[434,[[434,[434,409]],409]],409]],409]]]],[[[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[435,[[434,[[434,[434,409]],409]],409,417,417]],[418,[[434,[[434,[434,409]],409]],409,417,417]]]],[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[418,[[434,[[434,[434,409]],409]],409,417,417]]]]]],[[[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[435,[[434,[[434,[434,409]],409]],409,417,417]],[418,[[434,[[434,[434,409]],409]],409,417,417]]]],[262,[[434,[[434,[[434,[434,409]],409]],409]],409,417,417,[418,[[434,[[434,[434,409]],409]],409,417,417]]]]]],[[[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,260]],218],[[262,[409,417,260]]]],[[[262,[409,417,417,[422,[409,417,417]]]],218],[[262,[409,260,417]]]],[[[262,[409,417,417,[422,[409,417,417]]]],218],[[262,[409,417,260]]]],[[[234,[[0,[322,437,481]]]]],[[234,[[0,[322,437,481]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]]],[[262,[432,417,417]]]],[[[235,[[423,[431]]]]],[[235,[[423,[431]]]]]],[[[235,[[424,[431]]]]],[[235,[[424,[431]]]]]],[[[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[423,[431]]],[[423,[431]]]],[[[424,[431]]],[[424,[431]]]],[[[262,[432,417,417,[439,[432,417,417]]]]]],[[[235,[[423,[431]]]]]],[[[235,[[234,[431]]]]]],[[[235,[[424,[431]]]]]],[[[423,[431]]]],[[[424,[431]]]],[[[262,[432,417,417,[439,[432,417,417]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[422,[432,417,417]]]],[262,[432,417,417,[439,[432,417,417]]]]]],[[],456],[[],456],[456],[456],[[[262,[415,[482,[[482,[[482,[482]],417]]]],417,260,[418,[415,[482,[[482,[482,417]]]],417,260]]]],[262,[415,[482,[[482,[[482,[482,417]]]],417]],260,[418,[415,[482,[[482,[482]],417]],260]]]]],[[262,[415,260]]]],[[[262,[415,417,260,[418,[415,417,260]]]],[262,[415,417,260,[418,[415,417,260]]]]],[[262,[415,417,260]]]],[[[262,[415,[482,[260]],417,260,[418,[415,[482,[260]],417,260]]]],[262,[415,417,260,[418,[415,417,260]]]]],[[262,[415,260]]]],0,0,[[[262,[409,417,417,[439,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],[193,[409]]]],[[[262,[260,260,261]]],[[262,[260,260,261]]]],[[[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]],[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]]],[[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]],[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]]],[[262,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]],260,260,[261,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,[483,[[0,[409,365,483]]]]]]]]]]]]]]]]]]]],[[[262,[260,260,261]]],[[262,[260,260,261]]]],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[235,[[234,[431]]]]],431],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]],417,417]]]]],[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,479]],260,260,[422,[[0,[409,479]],260,260]]]]],[[262,[[0,[409,479]],260,260]]]],[[[455,[436,[454,[417]],417]]],[[262,[436]]]],0,[[[476,[415,417]]],[[262,[415,417,417]]]],0,0,[[],[[234,[364]]]],[[],[[420,[415,419]]]],[[],[[261,[364]]]],[[],[[262,[409,417,417,364]]]],[[],[[235,[[234,[431]]]]]],[[],[[235,[[423,[415]]]]]],[[],[[235,[[424,[415]]]]]],[[],[[263,[[0,[409,410]],412]]]],[[],[[425,[[0,[409,410,411]]]]]],[[],[[423,[[0,[409,410]]]]]],[[],[[424,[[0,[409,410]]]]]],[[],[[426,[[0,[409,410]]]]]],[[],[[236,[431,[428,[431]]]]]],[[],[[429,[431,[428,[431]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[[],89],[9],[9],[9],[9],[9],[9],[9],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[9],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[422,[409,260,260]],451]]]]]],[9],[9],[9],[9],[9],[9],[235],[9],[9],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[9],[[[423,[[0,[409,485]]]]]],[9],[9],[[[426,[409]]]],[[[426,[409]]]],[[[426,[409]]]],[9],[[[426,[409]]]],[[[426,[409]]]],[[[426,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[9],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[[[262,[409,260,260,[0,[[439,[409,260,260]],451]]]]]],[9],[9],[9],[9],[9],[9],[9],[[[263,[409,260]]]],[[[263,[409,260]]]],[9],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[[[263,[409,260]]]],[9],[[[423,[[0,[409,485]]]]]],[9],[9],[[[426,[409]]]],[[[426,[409]]]],[9],[[[426,[409]]]],[[[426,[409]]]],[[[426,[409]]]],[[[426,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[9],[[[427,[409]]]],[[[427,[409]]]],[[[427,[409]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]],[418,[436,[454,[[454,[454]]]],[454,[[454,[454]]]]]]]]],436],[[[460,[432,417]]]],[[[467,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],436],[[[468,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],436],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],436],[[[444,[417]]],[[0,[411,486]]]],0,0,[[[262,[409,417,417,[422,[409,417,417]]]]],[[262,[409,417,260]]]],[[[455,[436,[454,[417]],417]]],[[262,[260]]]],[[[475,[436,[469,[260]]]]],[[262,[[469,[260]],260]]]],0,[[[235,[[234,[373]]]],[235,[[234,[373]]]]]],[[[235,[[423,[373]]]],[235,[[423,[373]]]]]],[[],9],[[],9],[[[263,[432,260]],[263,[432,260]]]],[[[263,[432,260]],[263,[432,260]]]],[[]],[[]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[368,417],368],[368,368],[[260,260]],[[260,260]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],417,417,[418,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]],417,417]]]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],417,417,[418,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]],417,417]]]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[263,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],412]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[263,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],412]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[423,[431]],431]],[[[423,[431]],431]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],431]],[[[424,[431]],431]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[489,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[489,[[488,[452]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[452]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],417,417,[435,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]],417,417]]]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[263,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]],412]],[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457]]]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[423,[431]],431]],[[[424,[431]],431]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],0,[[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,417]]]]],[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[423,[431]],[423,[431]]],431],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]]],[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[[235,[[424,[431]]]]],[[424,[431]]]],0,[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[[]],[[[262,[436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]],[418,[436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]]]]]]],[[21,[[262,[436,[0,[417,[469,[260]]]],260]]]]]],[[[472,[436,[0,[417,[469,[260]]]]]]],[[21,[[262,[436,[0,[417,[469,[260]]]],260]]]]]],0,0,[[],[[491,[490]]]],[[],[[491,[490]]]],[[],9],[[[234,[[379,[[379,[[379,[379]]]]]]]],[234,[[379,[[379,[[379,[379]]]]]]]]],16],[[[420,[415,419]],[420,[415,419]]],16],[[368,368],16],[[260,260],16],[[[261,[[379,[[379,[[379,[379]]]]]]]],[261,[[379,[[379,[[379,[379]]]]]]]]],16],[[[262,[[379,[[379,[[379,[379]]]]]],417,417,[422,[[379,[[379,[379]]]],417,417]]]],[262,[[379,[[379,[[379,[379]]]]]],417,417,[422,[[379,[[379,[379]]]],417,417]]]]],16],[[[262,[[379,[[379,[[379,[379]]]]]],417,417,[422,[[379,[[379,[379]]]],417,417]]]],[262,[[379,[[379,[[379,[379]]]]]],417,417,[422,[[379,[[379,[379]]]],417,417]]]]],16],[[[235,[[423,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,379]]]]]]]]]]]]]]]]]],[235,[[423,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,379]]]]]]]]]]]]]]]]]]],16],[[[235,[[262,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]],417,417,[422,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]],417,417]]]]]],[235,[[262,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]],417,417,[422,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]],417,417]]]]]]],16],[[[235,[[234,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]]]],[235,[[234,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]]]]],16],[[[235,[[424,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,379,431]]]],431]]]],431]]]],431]]]]]],[235,[[424,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,[379,[[0,[409,486,379,431]]]],431]]]],431]]]],431]]]]]]],16],[[[369,[[379,[[379,[[379,[379]]]]]],[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,417]]]],417]]]],417]]]],417]],[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,417]]]],417]]]],417]]]],417]]]],[369,[[379,[[379,[[379,[379]]]]]],[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,417]]]],417]]]],417]]]],417]],[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,417]]]],417]]]],417]]]],417]]]]],16],[[[263,[409,412]],[263,[409,412]]],16],[[[425,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]],[425,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]]],16],[[[423,[409]],[423,[409]]],16],[[[424,[409]],[424,[409]]],16],[[[426,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]],[426,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]]],16],[[[427,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]],[427,[[0,[409,[379,[[0,[409,[379,[[0,[409,[379,[[0,[409,379]]]]]]]]]]]]]]]]],16],[[[236,[431,[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[428,379]]]]]]]]]]]]]]]],[236,[431,[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[428,379]]]]]]]]]]]]]]]]],16],[[[429,[431,[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[428,379]]]]]]]]]]]]]]]],[429,[431,[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[[428,[431]],[379,[[0,[428,379]]]]]]]]]]]]]]]]],16],[[465,465],16],[[452,452],16],[[466,466],16],[[[449,[415]],[449,[415]]],16],[[[450,[415]],[450,[415]]],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[235,[[423,[415,431]]]]]],[[[425,[415,431]]]],[[[425,[[0,[415,365]],431]],[85,[[235,[[262,[[0,[415,365]],431,260,260,[261,[[0,[415,365]],431]]]]]]]],16]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]],[[[235,[[423,[431]]]]],[[423,[431]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]],431],[[423,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[409,417,368,[492,[[262,[409,417,260,[422,[409,417,260]]]]]]]],380]],[[[262,[409,368,260,[492,[409]]]],380]],[[[262,[409,417,368,[492,[409]]]],380]],[[[369,[417,368]],380]],[[[369,[368,260]],380]],[[[369,[365,417,368]],380]],[[[369,[409,417,368]],380]],[9],[[[234,[485]],9]],[[[420,[415,419]],9]],[[[262,[[0,[409,485]],417,417]],9]],[[[235,[[234,[431]]]],9]],[[[235,[[423,[[0,[409,485]]]]]],9]],[[[263,[[0,[409,485]],260]],9]],[[[425,[[0,[409,485]]]],9]],[[[423,[[0,[409,485]]]],9]],[[[426,[[0,[409,485]]]],9]],[[[427,[[0,[409,485]]]],9]],[[[236,[431,[0,[485,[428,[431]]]]]],9]],[[[429,[431,[0,[485,[428,[431]]]]]],9]],[9],[[[234,[485]],9]],[[[420,[415,419]],9]],[[[262,[[0,[409,485]],417,417]],9]],[[[235,[[423,[[0,[409,485]]]]]],9]],[[[235,[[234,[431]]]],9]],[[[263,[[0,[409,485]],260]],9]],[[[425,[[0,[409,485]]]],9]],[[[423,[[0,[409,485]]]],9]],[[[426,[[0,[409,485]]]],9]],[[[427,[[0,[409,485]]]],9]],[[[236,[431,[0,[485,[428,[431]]]]]],9]],[[[429,[431,[0,[485,[428,[431]]]]]],9]],[[[263,[415,260]],[263,[415,260]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[235,[[423,[431]]]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],409]],[[[262,[409,417,417,[439,[409,417,417]]]],9,409]],[[[262,[409,417,417,[439,[409,417,417]]]],409]],[[[262,[409,417,417,[439,[409,417,417]]]],409,9]],[[[262,[409,417,417,[439,[409,417,417]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],9,409]],[[[262,[409,417,417,[439,[409,417,417]]]],409,9]],[[[262,[409,417,417,[439,[409,417,417]]]]]],[[[262,[417,417,[439,[417,417]]]],218]],[[[262,[[0,[409,410,411]],417,417,[439,[[0,[409,410,411]],417,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9],[[262,[417,260,[385,[417,260]]]]]],[[[262,[417,417,[439,[417,417]]]],9],[[262,[417,260,[374,[417,260]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[417,260,[385,[417,260,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[417,260,[374,[417,260,368]]]]]],[[[262,[409,417,417,[418,[409,417,417]]]],409],[[262,[409,260,260]]]],[[[262,[417,417,[422,[417,417]]]],9],[[262,[260,417,[385,[260,417]]]]]],[[[262,[417,417,[439,[417,417]]]],9],[[262,[260,417,[374,[260,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[260,417,[385,[260,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[260,417,[374,[260,417,368]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[260,260,[385,[260,260]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[260,260,[374,[260,260]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[260,260,[385,[260,260,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[260,260,[374,[260,260,368,368]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[260,260,[385,[260,260]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[260,260,[374,[260,260]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[260,260,[385,[260,260,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[260,260,[374,[260,260,368,368]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[0,[493,437,[416,[[0,[493,437,[416,[[0,[493,437,[416,[[0,[493,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[[0,[494,437,[416,[[0,[494,437,[416,[[0,[494,437,[416,[[0,[494,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[[0,[495,437,[416,[[0,[495,437,[416,[[0,[495,437,[416,[[0,[495,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[[0,[496,437,[416,[[0,[496,437,[416,[[0,[496,437,[416,[[0,[496,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[[0,[497,437,[416,[[0,[497,437,[416,[[0,[497,437,[416,[[0,[497,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[383]],10],[[22,[382]]]],[[[234,[[0,[498,437,[416,[[0,[498,437,[416,[[0,[498,437,[416,[[0,[498,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[234,[[0,[499,437,[416,[[0,[499,437,[416,[[0,[499,437,[416,[[0,[499,437,416,322]]]],322]]]],322]]]],322]]]],10],[[22,[382]]]],[[[420,[[0,[415,383]],419]],10],[[22,[382]]]],[[461,10],[[22,[382]]]],[[368,10],[[22,[382]]]],[[260,10],[[22,[382]]]],[[[261,[383]],10],[[22,[382]]]],[[[262,[[0,[409,497]],417,417,[422,[[0,[409,497]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,493]],417,417,[422,[[0,[409,493]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,495]],417,417,[422,[[0,[409,495]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,496]],417,417,[422,[[0,[409,496]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,494]],417,417,[422,[[0,[409,494]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,498]],417,417,[422,[[0,[409,498]],417,417]]]],10],[[22,[382]]]],[[[262,[417,417,383]],10],[[22,[382]]]],[[[262,[[0,[409,499]],417,417,[422,[[0,[409,499]],417,417]]]],10],[[22,[382]]]],[[[262,[[0,[409,500]],417,417,[422,[[0,[409,500]],417,417]]]],10],[[22,[382]]]],[[[385,[383,[0,[383,417]],[0,[383,417]],[0,[383,417]],[0,[383,417]]]],10],[[22,[382]]]],[[[374,[383,[0,[383,417]],[0,[383,417]],[0,[383,417]],[0,[383,417]]]],10],[[22,[382]]]],[[462,10],[[22,[382]]]],[[463,10],[[22,[382]]]],[[464,10],[[22,[382]]]],[[[235,[[424,[[0,[415,495]]]]]],10],[[22,[382]]]],[[[235,[[423,[[0,[415,495]]]]]],10],[[22,[382]]]],[[[235,[[234,[[0,[415,495]]]]]],10],[[22,[382]]]],[[[235,[383]],10],[[22,[382]]]],[[[369,[383,[0,[383,417]],[0,[383,417]]]],10],[[22,[382]]]],[[[263,[[0,[409,495]],412]],10],[[22,[382]]]],[[[263,[[0,[409,383]],412]],10],[[22,[382]]]],[[[425,[383]],10],[[22,[382]]]],[[[425,[[0,[415,495]]]],10],[[22,[382]]]],[[[423,[383]],10],[[22,[382]]]],[[[423,[[0,[415,495]]]],10],[[22,[382]]]],[[[424,[383]],10],[[22,[382]]]],[[[426,[[0,[409,495]]]],10],[[22,[382]]]],[[[426,[383]],10],[[22,[382]]]],[[[427,[383]],10],[[22,[382]]]],[[[427,[[0,[409,495]]]],10],[[22,[382]]]],[[[236,[383,383]],10],[[22,[382]]]],[[[236,[[0,[415,495]],495]],10],[[22,[382]]]],[[[429,[383,383]],10],[[22,[382]]]],[[[429,[[0,[415,495]],[0,[[428,[[0,[415,495]]]],495]]]],10],[[22,[382]]]],[[465,10],[[22,[382]]]],[[452,10],[[22,[382]]]],[[466,10],[[22,[382]]]],[[[449,[415]],10],[[22,[382]]]],[[[450,[415]],10],[[22,[382]]]],[[[455,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[460,[[0,[383,432]],[0,[383,417]]]],10],[[22,[382]]]],[[[467,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[468,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[470,[[0,[383,436]],[0,[383,[469,[260]]]]]],10],[[22,[382]]]],[[[391,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[444,[[0,[383,417]]]],10],[[22,[382]]]],[[[471,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[472,[[0,[383,436]],[0,[383,417]]]],10],[[22,[382]]]],[[[473,[[0,[383,436]],[0,[383,[454,[[0,[383,417]]]]]],[0,[383,417]]]],10],[[22,[382]]]],[[[474,[[0,[383,436]],[0,[383,417]]]],10],[[22,[382]]]],[[[475,[[0,[383,436]],[0,[383,[469,[260]]]]]],10],[[22,[382]]]],[[[476,[[0,[383,415]],[0,[383,417]]]],10],[[22,[382]]]],[[[262,[409,417,417,[422,[409,417,417]]]],231]],[[[262,[409,417,417,[422,[409,417,417]]]],501,231]],[[[450,[415]]],415],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[0,[322,437]]],[[234,[[0,[322,437]]]]]],[[[0,[322,437]]],[[234,[[0,[322,437]]]]]],[[]],[502,[[21,[[234,[[0,[503,437]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[[262,[417,417]]]]],[[262,[[0,[409,504,[505,[85]]]],417,417]]]],[91,[[262,[89,260,260,[261,[89]]]]]],[[[425,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[236,[431,[506,[[262,[431]]]]]]],[[262,[431]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417,417,417]]]]]],[[[193,[[0,[409,365]]]]],[[262,[[0,[409,365]],368,260,[385,[[0,[409,365]],368,260,260,368]]]]]],[[[85,[409]]],[[262,[409,260,260,[261,[409]]]]]],[[[427,[[0,[409,410,411]]]]],[[262,[[0,[409,410,411]]]]]],[[[262,[409,412,368,[374,[409,412,368,417,417]]]]],[[262,[409,412,368,[369,[409,412,368]]]]]],[507,[[262,[51,260,260,[261,[51]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[508,[[262,[84,260,260,[261,[84]]]]]],[[[429,[431,[506,[[262,[431]]]]]]],[[262,[431]]]],[509,[[262,[16,260,260,[261,[16]]]]]],[510,[[262,[51,260,260,[261,[51]]]]]],[[[425,[415]]],[[262,[415,260,260,[261,[415]]]]]],[511,[[262,[84,260,260,[261,[84]]]]]],[[[426,[[0,[409,410,411]]]]],[[262,[[0,[409,410,411]]]]]],[[[235,[[423,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[85,[[262,[417,417]]]]],[[262,[[0,[409,504,[505,[85]]]],417,417]]]],[[[263,[[0,[409,410,411]],[0,[412,[512,[260]]]]]]],[[262,[[0,[409,410,411]],260]]]],[[[425,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417,417,417]]]]]],[[[235,[[234,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[513,[[262,[16,260,260,[261,[16]]]]]],[[[85,[[262,[417,417]]]]],[[262,[[0,[409,504,[505,[85]]]],417,417]]]],[88,[[262,[84,260,260,[261,[84]]]]]],[[[235,[[423,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[85,[[85,[409]]]]],[[262,[409,260,260,[261,[409]]]]]],[514,[[262,[51,260,260,[261,[51]]]]]],[[[85,[409]]],[[262,[409,260,260,[261,[409]]]]]],[515,[[262,[51,260,260,[261,[51]]]]]],[516,[[262,[16,260,260,[261,[16]]]]]],[[[235,[[424,[[0,[431,415]]]]]]],[[262,[[0,[431,415]],260,260,[261,[[0,[431,415]]]]]]]],[517,[[262,[518,260,260,[261,[518]]]]]],[519,[[262,[84,260,260,[261,[84]]]]]],[[[262,[409,368,417,[374,[409,368,417,417,417]]]]],[[262,[409,368,417,[369,[409,368,417]]]]]],[520,[[262,[51,260,260,[261,[51]]]]]],[[]],[187,[[262,[518,260,260,[261,[518]]]]]],[[[103,[409,7]]],[[262,[409,260,368,[369,[409,260,368]]]]]],[[[262,[409,368,417,[385,[409,368,417,417,417]]]]],[[262,[409,368,417,[369,[409,368,417]]]]]],[521,[[262,[89,260,260,[261,[89]]]]]],[[[420,[415,419]]],[[262,[415]]]],[74,[[262,[84,260,260,[261,[84]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417,417,417]]]]]],[522,[[262,[89,260,260,[261,[89]]]]]],[523,[[262,[84,260,260,[261,[84]]]]]],[[[235,[[234,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[262,[409,260,260,[374,[409,260,260,417,417]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[262,[417,417,[374,[417,417,417,417]]]]],[[262,[417,417,[385,[417,417,417,417]]]]]],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[193,[[0,[409,365]]]]],[[262,[[0,[409,365]],368,260,[374,[[0,[409,365]],368,260,260,368]]]]]],[[[85,[[262,[417,417]]]]],[[262,[[0,[409,504,[505,[85]]]],417,417]]]],[524,[[262,[84,260,260,[261,[84]]]]]],[[[262,[409,412,368,[385,[409,412,368,417,417]]]]],[[262,[409,412,368,[369,[409,412,368]]]]]],[[[425,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[103,[409,7]]],[[262,[409,368,260,[369,[409,368,260]]]]]],[[[262,[409,260,260,[385,[409,260,260,417,417]]]]],[[262,[409,260,260,[261,[409]]]]]],[525,[[262,[518,260,260,[261,[518]]]]]],[526,[[262,[51,260,260,[261,[51]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[[235,[423]]]]],[[235,[[423,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[[262,[417,417]]]]]]],[[235,[[262,[[0,[409,504,[505,[85]]]],417,417]]]]]],[[[425,[431]]],[[235,[[423,[431]]]]]],[[[425,[431]]],[[235,[[234,[431]]]]]],[527,[[235,[[423,[51]]]]]],[[[85,[[235,[234]]]]],[[235,[[234,[[0,[409,365,504,[505,[85]]]]]]]]]],[528,[[235,[[423,[84]]]]]],[520,[[235,[[234,[51]]]]]],[[[85,[[235,[423]]]]],[[235,[[423,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[[262,[417,417]]]]]]],[[235,[[262,[[0,[409,504,[505,[85]]]],417,417]]]]]],[[[85,[[235,[234]]]]],[[235,[[234,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[234]]]]],[[235,[[234,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[[262,[417,417]]]]]]],[[235,[[262,[[0,[409,504,[505,[85]]]],417,417]]]]]],[[[236,[431,[235,[[423,[431]]]]]]],[[235,[[424,[431]]]]]],[[[85,[[235,[234]]]]],[[235,[[234,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[423]]]]],[[235,[[423,[[0,[409,365,504,[505,[85]]]]]]]]]],[[[85,[[235,[[262,[417,417]]]]]]],[[235,[[262,[[0,[409,504,[505,[85]]]],417,417]]]]]],[508,[[235,[[234,[84]]]]]],[[[85,[[235,[423]]]]],[[235,[[423,[[0,[409,365,504,[505,[85]]]]]]]]]],[[]],[509,[[263,[16,260]]]],[519,[[263,[84,260]]]],[88,[[263,[84,260]]]],[514,[[263,[51,260]]]],[516,[[263,[16,260]]]],[517,[[263,[518,260]]]],[[[262,[409,412,260]]],[[263,[409,412]]]],[[[85,[409]]],[[263,[409,260]]]],[522,[[263,[89,260]]]],[[[85,[[263,[260]]]]],[[263,[[0,[409,365,504,[505,[85]]]],260]]]],[[[85,[[263,[260]]]]],[[263,[[0,[409,365,504,[505,[85]]]],260]]]],[187,[[263,[518,260]]]],[[[85,[[263,[260]]]]],[[263,[[0,[409,365,504,[505,[85]]]],260]]]],[511,[[263,[84,260]]]],[507,[[263,[51,260]]]],[525,[[263,[518,260]]]],[74,[[263,[84,260]]]],[[]],[91,[[263,[89,260]]]],[513,[[263,[16,260]]]],[526,[[263,[51,260]]]],[[[85,[[263,[260]]]]],[[263,[[0,[409,365,504,[505,[85]]]],260]]]],[521,[[263,[89,260]]]],[[]],[527,[[425,[51]]]],[[[235,[[423,[431]]]]],[[425,[431]]]],[[[85,[425]]],[[425,[[0,[409,504,[505,[85]]]]]]]],[[[85,[425]]],[[425,[[0,[409,504,[505,[85]]]]]]]],[[[85,[425]]],[[425,[[0,[409,504,[505,[85]]]]]]]],[508,[[425,[84]]]],[[[235,[[234,[431]]]]],[[425,[431]]]],[520,[[425,[51]]]],[528,[[425,[84]]]],[[[85,[425]]],[[425,[[0,[409,504,[505,[85]]]]]]]],[[[85,[423]]],[[423,[[0,[409,504,[505,[85]]]]]]]],[[[85,[423]]],[[423,[[0,[409,504,[505,[85]]]]]]]],[[[85,[423]]],[[423,[[0,[409,504,[505,[85]]]]]]]],[527,[[423,[51]]]],[[[262,[409,260,260,[261,[409]]]]],[[423,[409]]]],[[[85,[423]]],[[423,[[0,[409,504,[505,[85]]]]]]]],[528,[[423,[84]]]],[[[85,[409]]],[[423,[409]]]],[[]],[[]],[511,[[426,[84]]]],[514,[[426,[51]]]],[507,[[426,[51]]]],[74,[[426,[84]]]],[[[262,[409,260,260]]],[[426,[409]]]],[[[85,[409]]],[[426,[409]]]],[519,[[426,[84]]]],[526,[[426,[51]]]],[[[85,[426]]],[[426,[[0,[409,504,[505,[85]]]]]]]],[[]],[[[85,[426]]],[[426,[[0,[409,504,[505,[85]]]]]]]],[[[263,[409,260]]],[[426,[409]]]],[88,[[426,[84]]]],[[[85,[426]]],[[426,[[0,[409,504,[505,[85]]]]]]]],[[[85,[426]]],[[426,[[0,[409,504,[505,[85]]]]]]]],[[[85,[427]]],[[427,[[0,[409,504,[505,[85]]]]]]]],[[[85,[409]]],[[427,[409]]]],[[]],[[[85,[427]]],[[427,[[0,[409,504,[505,[85]]]]]]]],[[[262,[409,260,260]]],[[427,[409]]]],[[[85,[427]]],[[427,[[0,[409,504,[505,[85]]]]]]]],[[[85,[427]]],[[427,[[0,[409,504,[505,[85]]]]]]]],[[[263,[409,260]]],[[427,[409]]]],[[[263,[431,260]]],[[236,[431,[428,[431]]]]]],[[[85,[236]]],[[236,[[0,[409,504,[505,[85]]]],[0,[485,[428,[[0,[409,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[85,[236]]],[[236,[[0,[409,504,[505,[85]]]],[0,[485,[428,[[0,[409,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[262,[431,260,260,[261,[431]]]]],[[236,[431,[428,[431]]]]]],[[],[[236,[51,[235,[[234,[51]]]]]]]],[[],[[236,[51,[235,[[423,[51]]]]]]]],[[],[[236,[84,[235,[[234,[84]]]]]]]],[[[235,[[424,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[426,[431]]],[[236,[431,[428,[431]]]]]],[507,[[236,[51,[235,[[234,[51]]]]]]]],[527,[[236,[51,[235,[[423,[51]]]]]]]],[526,[[236,[51,[235,[[423,[51]]]]]]]],[88,[[236,[84,[235,[[234,[84]]]]]]]],[[],[[236,[84,[235,[[423,[84]]]]]]]],[528,[[236,[84,[235,[[423,[84]]]]]]]],[[[85,[236]]],[[236,[[0,[409,504,[505,[85]]]],[0,[485,[428,[[0,[409,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[85,[431]]],[[236,[431,[428,[431]]]]]],[[]],[74,[[236,[84,[235,[[423,[84]]]]]]]],[[[85,[236]]],[[236,[[0,[409,504,[505,[85]]]],[0,[485,[428,[[0,[409,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[85,[429]]],[[429,[[0,[409,410,504,[505,[85]]]],[0,[485,[428,[[0,[409,410,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[85,[429]]],[[429,[[0,[409,410,504,[505,[85]]]],[0,[485,[428,[[0,[409,410,504,[505,[85]]]]]],[505,[85]]]]]]]],[[]],[[[85,[429]]],[[429,[[0,[409,410,504,[505,[85]]]],[0,[485,[428,[[0,[409,410,504,[505,[85]]]]]],[505,[85]]]]]]]],[[[85,[429]]],[[429,[[0,[409,410,504,[505,[85]]]],[0,[485,[428,[[0,[409,410,504,[505,[85]]]]]],[505,[85]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[431,[[235,[[234,[431]]]]]],[261,[[262,[260,260,261]]]],[[[235,[[262,[415,260,260,[261,[415]]]]]],415],[[262,[415,260,260,[261,[415]]]]]],[[[235,[[262,[431,260,260,[418,[431,260,260]]]]]],431],[[235,[[423,[431]]]]]],[[[235,[[262,[431,260,260,[418,[431,260,260]]]]]],431],[[425,[431]]]],[[[85,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[234,[431]]]]]],[[[85,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[423,[431]]]]]],[[[85,[[262,[431,260,260,[261,[431]]]]]]],[[425,[431]]]],[[[85,[[262,[431,260,260,[261,[431]]]]]]],[[425,[431]]]],[[[193,[409]]],[[262,[409,412,412]]]],[[[193,[409]]],[[262,[409,412,368]]]],[[[193,[409]]],[[262,[409,368,412]]]],[[9,9,[193,[409]]],[[262,[409,368,368]]]],[[417,417,[193,[409]]],[[262,[409,417,417]]]],[[[193,[[262,[409,417,260,[422,[409,417,260]]]]]]],[[262,[409,417,417]]]],[[[234,[431]]],[[235,[[234,[431]]]]]],[[[234,[431]]]],[[[262,[409,412,260]]],[[263,[409,412]]]],[[431,431],[[235,[[234,[431]]]]]],[[[422,[417,417]]],[[262,[417,417,[422,[417,417]]]]]],[[],262],[[[262,[410,409,417,260,[422,[410,409,417,260]]]]],[[262,[410,409,417,417]]]],[[[0,[410,411]],409],[[262,[[0,[410,411]],409,412,412]]]],[[9,9,[0,[410,411]],409],[[262,[[0,[410,411]],409,368,368]]]],[[9,[0,[410,411]],409],[[262,[[0,[410,411]],409,368,412]]]],[[9,[0,[410,411]],409],[[262,[[0,[410,411]],409,412,368]]]],[[417,417,[0,[410,411]],409],[[262,[[0,[410,411]],409,417,417]]]],[[9,409],[[262,[409,412,368]]]],[409,[[262,[409,412,412]]]],[[9,9,409],[[262,[409,368,368]]]],[[9,409],[[262,[409,368,412]]]],[[417,417,409],[[262,[409,417,417]]]],[[415,415,415],[[262,[415,260,260,[261,[415]]]]]],[[431,431,431],[[235,[[423,[431]]]]]],[[431,431,431],[[425,[431]]]],[84,[[21,[[234,[[0,[529,437]]]]]]]],[51,[[21,[[234,[[0,[529,437]]]]]]]],[[9,231],[[262,[409,368,412]]]],[231,[[262,[409,412,412]]]],[[9,9,231],[[262,[409,368,368]]]],[[9,231],[[262,[409,412,368]]]],[[417,417,231],[[262,[409,417,417]]]],[[415,415,415,415],[[449,[415]]]],[[[262,[[0,[409,410]],260,[422,[[0,[409,410]],260]]]]],[[21,[[262,[[0,[409,410]],[482,[260]],260]]]]]],[[[262,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,457]],409]]]],409]]]],409]]]],409,260]]],[[21,[[263,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,457]],409]]]],409]]]],409]]]],409,[512,[260]],412]]]]]],[530,[[21,[[234,[[0,[529,437]]]]]]]],[378,[[21,[[234,[[0,[529,437]]]]]]]],[518,[[21,[[234,[[0,[529,437]]]]]]]],[384,[[21,[[234,[[0,[529,437]]]]]]]],[375,[[21,[[234,[[0,[529,437]]]]]]]],[[[262,[431,260,260,[261,[431]]]]],[[423,[431]]]],[404,[[21,[[234,[[0,[529,437]]]]]]]],[[[236,[431,[235,[[423,[431]]]]]]],[[235,[[424,[431]]]]]],[[[236,[[0,[409,410]],[428,[[0,[409,410]]]]]],[0,[409,410]]],[[429,[[0,[409,410]],[428,[[0,[409,410]]]]]]]],[[9,380],[[262,[409,368,412]]]],[[9,380],[[262,[409,412,368]]]],[[9,9,380],[[262,[409,368,368]]]],[380,[[262,[409,412,412]]]],[[417,417,380],[[262,[409,417,417]]]],[[[262,[415,431,260,260,[261,[415,431]]]]],[[235,[[423,[415,431]]]]]],[[[262,[415,431,260,260,[261,[415,431]]]]],[[235,[[234,[415,431]]]]]],[[[262,[415,431,260,260,[261,[415,431]]]]],[[425,[415,431]]]],[[[262,[415,431,260,260,[261,[415,431]]]]],[[425,[415,431]]]],[[[262,[415,431,260,260,[261,[415,431]]]],415,431,9,[235,[[234,[415,431]]]]],[[235,[[234,[415,431]]]]]],[[[262,[415,431,260,260,[261,[415,431]]]],415,431,9,[235,[[423,[415,431]]]]],[[235,[[423,[415,431]]]]]],[[[262,[415,431,260,260,[261,[415,431]]]],415,431,9,[425,[415,431]]],[[425,[415,431]]]],[[[262,[415,431,260,260,[261,[415,431]]]],415,431,9,[425,[415,431]]],[[425,[415,431]]]],[[[262,[415]]],[[420,[415,419]]]],[[[262,[260,260,261]]],425],[[[262,[260,260,261]]],449],[[[262,[260,260,261]]],450],[[9,[193,[410,409]]],[[262,[410,409,368,412]]]],[[[193,[410,409]]],[[262,[410,409,412,412]]]],[[9,9,[193,[410,409]]],[[262,[410,409,368,368]]]],[[9,[193,[410,409]]],[[262,[410,409,412,368]]]],[[417,417,[193,[410,409]]],[[262,[410,409,417,417]]]],[[[426,[431]],[235,[[423,[431]]]]],[[235,[[424,[431]]]]]],[[431,[262,[431,260,260,[418,[431,260,260]]]]],[[423,[431]]]],[[[426,[409]],[428,[409]]],[[236,[409,[428,[409]]]]]],[[[426,[[0,[409,410]]]],[428,[[0,[409,410]]]],[0,[409,410]]],[[429,[[0,[409,410]],[428,[[0,[409,410]]]]]]]],[[431,431,[235,[[262,[431,260,260,[418,[431,260,260]]]]]]],[[423,[431]]]],[[[423,[431]]],[[235,[[423,[431]]]]]],[[],[[385,[417,417,417,417,417,417]]]],[[],[[374,[417,417,417,417,417,417]]]],[[]],[[],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[431,[[423,[431]]]],[[[423,[431]]],[[424,[431]]]],[[[423,[409]],[423,[409]]],[[424,[409]]]],[[],235],[[[235,[[423,[431]]]]],[[235,[[424,[431]]]]]],[[[425,[431]]],[[235,[[234,[431]]]]]],[[[425,[431]]],[[235,[[423,[431]]]]]],[[9,380],[[262,[409,368,412]]]],[380,[[262,[409,412,412]]]],[[9,380],[[262,[409,412,368]]]],[[9,9,380],[[262,[409,368,368]]]],[[417,417,380],[[262,[409,417,417]]]],[[9,9,[193,[409]]],[[262,[409,368,368]]]],[[[193,[409]]],[[262,[409,412,412]]]],[[[193,[409]]],[[262,[409,412,368]]]],[[[193,[409]]],[[262,[409,368,412]]]],[[417,417,[193,[409]]],[[262,[409,417,417]]]],[[[193,[[262,[409,260,417,[422,[409,260,417]]]]]]],[[262,[409,417,417]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[234,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[262,[431,260,260,[418,[431,260,260]]]],431],[[235,[[423,[431]]]]]],[431,[[429,[431,[428,[431]]]]]],[[]],[[],[[234,[531]]]],[[],[[234,[[430,[[85,[84]]]]]]]],[[],[[234,[[430,[[85,[84]]]]]]]],[[],[[234,[[430,[[85,[51]]]]]]]],[[],[[234,[[430,[[85,[51]]]]]]]],[[],[[234,[532]]]],[[],[[234,[533]]]],[[]],[[],[[234,[[430,[[85,[84]]]]]]]],[[],[[234,[[430,[[85,[84]]]]]]]],[[],[[234,[[430,[[85,[51]]]]]]]],[[[193,[409]],9],[[262,[409,412,368,[374,[409,412,368,260,412]]]]]],[[[193,[409]]],[[262,[409,412,412,[385,[409,412,412,260,412]]]]]],[[[193,[409]],9],[[262,[409,368,412,[374,[409,368,412,260,368]]]]]],[[[193,[409]],9,9],[[262,[409,368,368,[385,[409,368,368,260,368]]]]]],[[[193,[409]],9,9],[[262,[409,368,368,[374,[409,368,368,260,368]]]]]],[[[193,[409]],9],[[262,[409,412,368,[385,[409,412,368,260,412]]]]]],[[[193,[409]],9],[[262,[409,368,412,[385,[409,368,412,260,368]]]]]],[[[193,[409]]],[[262,[409,412,412,[374,[409,412,412,260,412]]]]]],[[[193,[409]]],[[263,[409,412]]]],[[[193,[409]],417,417],[[262,[409,417,417,[385,[409,417,417,260,417]]]]]],[[[193,[409]],417,417],[[262,[409,417,417,[374,[409,417,417,260,417]]]]]],[[[193,[409]],9,417,417],[[262,[409,417,417,[374,[409,417,417,260,417]]]]]],[[[193,[409]],9,417,417],[[262,[409,417,417,[385,[409,417,417,260,417]]]]]],[[[193,[409]],9,9],[[262,[409,368,412,[374,[409,368,412,260,368]]]]]],[[[193,[409]],9,9],[[262,[409,368,412,[385,[409,368,412,260,368]]]]]],[[[193,[409]],9,9],[[262,[409,412,368,[385,[409,412,368,260,412]]]]]],[[[193,[409]],9,9,9],[[262,[409,368,368,[374,[409,368,368,260,368]]]]]],[[[193,[409]],9],[[262,[409,412,412,[385,[409,412,412,260,412]]]]]],[[[193,[409]],9,9,9],[[262,[409,368,368,[385,[409,368,368,260,368]]]]]],[[[193,[409]],9,9],[[262,[409,412,368,[374,[409,412,368,260,412]]]]]],[[[193,[409]],9],[[262,[409,412,412,[374,[409,412,412,260,412]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,368,368,[385,[409,368,368,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,412,368,[385,[409,412,368,368,368]]]]]],[[[193,[409]],9,9],[[262,[409,412,412,[385,[409,412,412,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,368,412,[385,[409,368,412,368,368]]]]]],[[[193,[409]],417,417,417,417],[[262,[409,417,417,[374,[409,417,417,417,417]]]]]],[[[193,[409]],417,417,417,417],[[262,[409,417,417,[385,[409,417,417,417,417]]]]]],[[[193,[409]],9,417,417,417,417],[[262,[409,417,417,[385,[409,417,417,417,417]]]]]],[[[193,[409]],9,417,417,417,417],[[262,[409,417,417,[374,[409,417,417,417,417]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,368,368,[374,[409,368,368,368,368]]]]]],[[[193,[409]],9,9],[[262,[409,412,412,[374,[409,412,412,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,412,368,[374,[409,412,368,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,368,412,[374,[409,368,412,368,368]]]]]],[[[193,[409]],9,9,9,9,9],[[262,[409,368,368,[385,[409,368,368,368,368]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,412,368,[374,[409,412,368,368,368]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,412,368,[385,[409,412,368,368,368]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,368,412,[385,[409,368,412,368,368]]]]]],[[[193,[409]],9,9,9,9,9],[[262,[409,368,368,[374,[409,368,368,368,368]]]]]],[[[193,[409]],9,9,9,9],[[262,[409,368,412,[374,[409,368,412,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,412,412,[385,[409,412,412,368,368]]]]]],[[[193,[409]],9,9,9],[[262,[409,412,412,[374,[409,412,412,368,368]]]]]],[92,[[22,[[234,[[0,[534,437,322]]]]]]]],[[92,89],[[22,[[234,[[0,[437,322]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[456]]],234],[[[420,[415,[489,[419]]]]],[[420,[[0,[415,[506,[415]]]],419]]]],[[[262,[415]]],[[420,[[0,[415,[506,[415]]]],419]]]],[[[262,[[0,[409,[456,[409]]]],417,417]]],[[262,[409,417,417]]]],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]],[[235,[[234,[415]]]]]],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],[[235,[[423,[415]]]]]],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],[[235,[[424,[415]]]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[235,[[234,[415]]]]]],[[[235,[[424,[[0,[431,[456,[431]]]]]]]]],[[235,[[424,[431]]]]]],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]],[[235,[[423,[415]]]]]],[[[236,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]],[[235,[[424,[415]]]]]],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]],[[235,[[234,[415]]]]]],[[[429,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]],[[235,[[424,[415]]]]]],[[[425,[[0,[415,[456,[415]]]]]]],[[235,[[423,[415]]]]]],[[[425,[[0,[415,[456,[415]]]]]]],[[235,[[234,[415]]]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[235,[[424,[415]]]]]],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],[[235,[[234,[415]]]]]],[[[235,[[423,[[0,[409,[456,[409]]]]]]]]],[[235,[[423,[409]]]]]],[[[235,[[234,[[0,[415,[456,[415]]]]]]]]],[[235,[[234,[415]]]]]],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],[[235,[[423,[415]]]]]],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]],[[235,[[423,[415]]]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[235,[[423,[415]]]]]],[[[263,[[0,[409,[456,[409]]]],412]]],[[263,[409,412]]]],[[[262,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,457,456]]]],[456,[409]]]]]],[456,[409]]]]]],[456,[409]]]],260]]],[[263,[409,[512,[260]]]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[425,[415]]]],[[[262,[[0,[415,[456,[415]]]]]]],[[425,[415]]]],[[[425,[[0,[415,[456,[415]]]]]]],[[425,[415]]]],[[[235,[[234,[[0,[415,[456,[415]]]]]]]]],[[425,[415]]]],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],[[425,[415]]]],[[[235,[[423,[[0,[415,[456,[415]]]]]]]]],[[425,[415]]]],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]],[[425,[415]]]],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]],[[425,[415]]]],[[[423,[[0,[409,[456,[409]]]]]]],[[423,[409]]]],[[[424,[[0,[431,[456,[431]]]]]]],[[424,[431]]]],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],[[426,[415]]]],[[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],[[426,[415]]]],[[[262,[[0,[415,[456,[415]]]]]]],[[426,[415]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[426,[415]]]],[[[426,[[0,[409,[456,[409]]]]]]],[[426,[409]]]],[[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],[[426,[415]]]],[[[262,[[0,[415,[456,[415]]]]]]],[[427,[415]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[427,[415]]]],[[[427,[[0,[409,[456,[409]]]]]]],[[427,[409]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[236,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]]],[[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],[[236,[415,[0,[[428,[415]],[506,[[428,[[0,[415,[456,[415]]]]]]]]]]]]]],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],[[236,[415,[235,[[423,[415]]]]]]]],[[[262,[[0,[415,[456,[415]]]]]]],[[236,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]]],[[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],[[236,[415,[0,[[428,[415]],[506,[[428,[[0,[415,[456,[415]]]]]]]]]]]]]],[[[429,[[0,[415,[456,[[0,[415,[506,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]]]],[428,[[0,[415,[456,[[0,[415,[506,[[0,[415,456]]]]]]]]]]]]]]],[[429,[[0,[415,[506,[[0,[415,[456,[[0,[415,[506,[[0,[415,456]]]]]]]]]]]]]],[0,[[428,[[0,[415,[506,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]],[506,[[428,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]]]]]],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],[[429,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]]],[[[262,[[0,[415,[456,[415]]]]]]],[[429,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]]],[224,[[21,[[234,[[0,[529,437]]]]]]]],[305,[[21,[[234,[[0,[529,437]]]]]]]],[89,[[21,[[234,[[0,[529,437]]]]]]]],[188,[[21,[[234,[[0,[529,437]]]]]]]],[19,[[21,[[234,[[0,[529,437]]]]]]]],[9],[9,[[21,[[234,[[0,[529,437]]]]]]]],[9,368],[9,260],[[[103,[409,7]]],[[262,[409,412,368]]]],[[[103,[409,7]]],[[262,[409,368,412]]]],[[9,9,[103,[409,7]]],[[262,[409,368,368]]]],[[[103,[409,7]]],[[262,[409,412,412]]]],[[417,417,[103,[409,7]]],[[262,[409,417,417]]]],[[[369,[260,368]]],[[262,[260,368,[369,[260,368]]]]]],[[[369,[368,260]]],[[262,[368,260,[369,[368,260]]]]]],[[[369,[368,368]]],[[262,[368,368,[369,[368,368]]]]]],[[[262,[260,260,261]]],423],[[[262,[409,260,260,[261,[409]]]]],[[426,[409]]]],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[13],[12],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]],[[468,[436,[454,[417]],417,417]]]],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]],[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]]],16],[[[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]],[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]]],16],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417,368,368]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[417,417,[385,[417,417,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[417,417,[374,[417,417,368,368]]]]]],0,[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[417,417,[422,[417,417]]]],[535,[417,417,[422,[417,417]]]]],21],[[[262,[409,368,368,[369,[409,368,368]]]],9,9]],[[9,9]],[9],[9],[[9,9]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],[536,[417,417,[439,[417,417]],[422,[417,417]]]]],21],[[9,9]],[[[262,[417,417,[422,[417,417]]]],[535,[417,417,[422,[417,417]]]]]],[[[263,[409,412]],9],409],[9],[9],[[9,9]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],[536,[417,417,[439,[417,417]],[422,[417,417]]]]]],[[[263,[409,412]],9],409],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]],[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]]],16],[[[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]],[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]]],16],[[[470,[436,[469,[260]]]]],[[262,[436,[469,[260]],[469,[260]]]]]],[[[423,[431]]],[[423,[431]]]],[[],16],[[],16],[[[234,[537]],186]],[[[420,[[0,[415,537]],419]],186]],[[260,186]],[[[261,[537]],186]],[[[262,[[0,[409,537]],417,417,[422,[[0,[409,537]],417,417]]]],186]],[[[235,[537]],186]],[[[263,[[0,[409,537]],412]],186]],[[[425,[[0,[409,537]]]],186]],[[[423,[[0,[409,537]]]],186]],[[[426,[[0,[409,537]]]],186]],[[[427,[[0,[409,537]]]],186]],[[[236,[[0,[409,537]],537]],186]],[[[429,[[0,[409,537]],537]],186]],[[465,186]],[[452,186]],[[466,186]],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,417]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],[262,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]],417,260]]]],432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]],[434,[432,[0,[409,410,[433,[432,[0,[409,410,433,434]]]],[434,[432,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],0,[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]]],[[470,[436,[469,[260]],417]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[],[[234,[[0,[322,437]]]]]],[[[262,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,414]],409]],414]],409]],414]],409]],414]],409,417,260,[422,[[0,[[416,[[0,[[416,[[0,[416,414]],409]],414]],409]],414]],409,417,260]]]]],9],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416,414]]]],414]]]],414]]]],414]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416,414]]]],414]]]],414]],417,417]]]]]],[[[262,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,414]],409]],414]],409]],414]],409]],414]],409,417,260,[422,[[0,[[416,[[0,[[416,[[0,[416,414]],409]],414]],409]],414]],409,417,260]]]]],9],[[[262,[436,409,417,260,[422,[436,409,417,260]]]]],9],[[[262,[436,409,417,417,[422,[436,409,417,417]]]]]],[[]],[[],[[420,[415,419]]]],[9,[[262,[[0,[410,411]],409,412,368]]]],[9,[[262,[[0,[410,411]],409,368,412]]]],[[],[[262,[[0,[410,411]],409,412,412]]]],[[9,9],[[262,[[0,[410,411]],409,368,368]]]],[[],[[235,[[423,[431]]]]]],[[],[[235,[[423,[431]]]]]],[[],[[235,[[234,[431]]]]]],[[],[[235,[[424,[431]]]]]],[[],[[235,[[234,[431]]]]]],[[],[[425,[431]]]],[[],[[425,[[0,[409,410,411]]]]]],[[],[[423,[431]]]],[[],[[424,[431,409]]]],[[],[[426,[410,409]]]],[[],[[427,[411,409]]]],[[],[[236,[431,[428,[431]]]]]],[[],[[429,[431,[428,[431]]]]]],[[],[[444,[412]]]],[9,[[444,[368]]]],[[417,417],[[262,[[0,[410,411]],409,417,417]]]],[417,[[444,[417]]]],[[501,501],485],[[501,501],485],[[501,501],485],0,[[[423,[431]]],[[262,[431,260,260,[261,[431]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[[416,[[416,[[416,[416,409]],409]],409]],409,417,260,[422,[[416,[[416,[416,409]],409]],409,417,260]]]]],9],[[[262,[[416,[[416,[[416,[416,409]],409]],409]],409,417,260,[422,[[416,[[416,[416,409]],409]],409,417,260]]]]],9],[[[420,[415,419]]],415],[[[262,[417,417,[422,[417,417]]]],9]],[[[262,[417,417,[422,[417,417]]]],[535,[417,417,[422,[417,417]]]]]],[[[262,[417,417,[422,[417,417]]]]]],[[[263,[409,412]],9]],[[[425,[409]]],409],[[[423,[409]],9]],[[[424,[431]],9]],[[[420,[415,465]]],415],[[[262,[417,417,[439,[417,417]]]],9]],[[[262,[417,417,[439,[417,417]]]]]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],[536,[417,417,[439,[417,417]],[422,[417,417]]]]]],[[[263,[409,412]],9]],[[[423,[409]],9],409],[[[424,[431]],9],431],[[[262,[[0,[409,442]],417,417]],[262,[[0,[409,442]],417,417]]],[[262,[[0,[409,442]],417,417]]]],[[[262,[442,409,417,417,[418,[442,409,417,417]]]],[262,[442,409,417,417,[418,[442,409,417,417]]]]],[[262,[442,409,417,417]]]],[[[263,[[0,[409,442]],412]],[263,[[0,[409,442]],412]]],[[263,[[0,[409,442]],412]]]],[[[262,[[0,[409,442]],417,417]],[262,[[0,[409,442]],417,417]]]],[[[262,[442,409,417,417,[418,[442,409,417,417]]]],[262,[442,409,417,417,[418,[442,409,417,417]]]]]],[[[263,[[0,[409,442]],412]],[263,[[0,[409,442]],412]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[423,[431]],[423,[431]]],[[423,[431]]]],[[[262,[409,417,[482,[260]],417,[418,[409,417,[482,[260]],417]]]],9,409],[[262,[409,417]]]],[[[460,[436,[482,[260]],417]],9,[262,[436,417,260,[418,[436,417,260]]]]],[[460,[436]]]],[[[262,[409,417,[482,[368]],417,[418,[409,417,[482,[368]],417]]]],9,9,409],[[262,[409,417,368]]]],[[[262,[409,417,[482,[417]],417,[418,[409,417,[482,[417]],417]]]],9,417],[[262,[[440,[409]],417]]]],[[[262,[409,417,[482,[260]],417,[418,[409,417,[482,[260]],417]]]],9,409],[[262,[409,417]]]],[[[262,[409,[482,[260]],417,417,[418,[409,[482,[260]],417,417]]]],9,409],[[262,[409,417]]]],[[[262,[409,[482,[260]],417,417,[418,[409,[482,[260]],417,417]]]],9,409],[[262,[409,417]]]],[[[262,[409,[482,[368]],417,417,[418,[409,[482,[368]],417,417]]]],9,9,409],[[262,[409,368,417]]]],[[[262,[409,[482,[417]],417,417,[418,[409,[482,[417]],417,417]]]],9,417],[[262,[[440,[409]],417]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[420,[415,419]]],[[262,[415]]]],[235],[[[425,[409]]],[[262,[409,260,260,[261,[409]]]]]],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[409,417,417,[422,[409,417,417]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]]]],[[]],[[[261,[409]]]],[[[262,[409,417,417,[418,[409,417,417]],[422,[409,417,417]]]]],[[262,[409,417,417]]]],[[[385,[409,417,417,417,417]]]],[[[374,[409,417,417,417,417]]]],[[[369,[409,368,417]]]],[[[369,[409,412,368]]]],[[[423,[431]]],[[423,[431]]]],[[[262,[409,417,417,[418,[409,417,417]],[422,[409,417,417]]]]],[[262,[409]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[260,260,261]]]],[[[385,[417,417,417,417]]],193],[[[374,[417,417,417,417]]],193],[[[374,[409,417,417,417,417]]],[[193,[409]]]],[[[234,[[0,[322,437,481]]]]],[[234,[[0,[322,437,481]]]]]],[[[234,[[0,[322,437,481]]]]]],[[[234,[[0,[322,437,481]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]],[[236,[431,[428,[431]]]]]],[[[444,[417]],[262,[409,417,417,[435,[409,417,417]]]]]],[[[444,[417]],[262,[409,417,417,[435,[409,417,417]]]]]],[[]],[[[420,[415,[488,[452]],419]]],[[420,[415,[488,[452]],419]]]],[[[235,[[424,[431]]]]],[[235,[[424,[431]]]]]],[[[235,[[423,[431]]]]],[[235,[[423,[431]]]]]],[[[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[235,[[423,[431]]]]],[[235,[[423,[431]]]]]],[[[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[425,[409]]],[[425,[409]]]],[[[425,[431]]],[[425,[431]]]],[[[426,[486,409]]],[[426,[486,409]]]],[[[236,[431,[428,[431]]]]],[[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]]],[[429,[431,[428,[431]]]]]],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[460,[432,417]]],[[262,[432,417,417]]]],[[]],[[[420,[415,[488,[452]],419]]]],[[[235,[[424,[431]]]]]],[[[235,[[423,[431]]]]]],[[[235,[[423,[431]]]]]],[[[235,[[234,[431]]]]]],[[[235,[[234,[431]]]]]],[[[425,[409]]]],[[[425,[431]]]],[[[426,[486,409]]]],[[[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]]]],[[[263,[260]]],[[263,[260]]]],[[[420,[415,[0,[419,[488,[452]]]]]],[263,[415,260]]],[[263,[415,260]]]],[[[235,[[234,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[423,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[234,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[423,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[424,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[425,[431]],[263,[431,260]]],[[263,[431,260]]]],[[[425,[431]],[263,[431,260]]],[[263,[431,260]]]],[[[426,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]]]],[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],260]]],[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],260]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[262,[260,260,261]]]]],[[235,[[262,[260,260,261]]]]]],[[[235,[[234,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[425,[431]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[425,[431]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[236,[431,[428,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]],[[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[262,[260,260]]],[[262,[260,260]]]],[[[420,[415,[0,[419,[488,[452]]]]]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[425,[431]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[425,[431]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411]],409]],411]],409]],411]],409]],411]],409]]],[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411]],409]],411]],409]],411]],409]],411]],409]]]],0,[[],16],[[],16],[261,16],[[[385,[417,417,417,417]]],16],[[[374,[417,417,417,417]]],16],[[[369,[368,417]]],16],[[[369,[412,368]]],16],[456,16],[[[262,[417,417,[422,[417,417]]]]],16],[[[369,[417,417]]],16],[[[263,[409,412]]],16],[[[444,[417]]],16],[[],16],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],16],[[[234,[538]]],16],[[[262,[[0,[410,411,[539,[[0,[410,411,[539,[[0,[410,411,[539,[[0,[410,411,539]]]]]]]]]]]]]],417,417,[422,[[0,[410,411,[539,[[0,[410,411,[539,[[0,[410,411,539]]]]]]]]]],417,417]]]]],16],[[],16],[[[234,[456]]],16],[[],16],[[[262,[415]]],16],[[[420,[415,[489,[419]]]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[262,[[0,[409,[456,[409]]]],417,417]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[425,[[0,[415,[456,[415]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[235,[[234,[[0,[415,[456,[415]]]]]]]]],16],[[[429,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]],16],[[[425,[[0,[415,[456,[415]]]]]]],16],[[[236,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],16],[[],16],[[[235,[[424,[[0,[431,[456,[431]]]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]],16],[[[235,[[423,[[0,[409,[456,[409]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],16],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]],16],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]],16],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]],16],[[],16],[[[262,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,457,456]]]],[456,[409]]]]]],[456,[409]]]]]],[456,[409]]]],260]]],16],[[[263,[[0,[409,[456,[409]]]],412]]],16],[[],16],[[[235,[[234,[[0,[415,[456,[415]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]]]]],16],[[],16],[[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]],16],[[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]],16],[[[425,[[0,[415,[456,[415]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],16],[[[235,[[423,[[0,[415,[456,[415]]]]]]]]],16],[[],16],[[[423,[[0,[409,[456,[409]]]]]]],16],[[],16],[[[424,[[0,[431,[456,[431]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],16],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],16],[[[426,[[0,[409,[456,[409]]]]]]],16],[[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],16],[[],16],[[[262,[[0,[415,[456,[415]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[262,[[0,[415,[456,[415]]]]]]],16],[[[427,[[0,[409,[456,[409]]]]]]],16],[[],16],[[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]]]]],16],[[],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]],16],[[[235,[[424,[[0,[415,[456,[415]]]]]]]]],16],[[[262,[[0,[415,[456,[415]]]]]]],16],[[[429,[[0,[415,[456,[[0,[415,[506,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]]]],[428,[[0,[415,[456,[[0,[415,[506,[[0,[415,456]]]]]]]]]]]]]]],16],[[[420,[[0,[415,[456,[415]]]],[489,[466]]]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[234,[538]]],16],[[[262,[415,417,417,[418,[415,417,417]]]]],16],[[[467,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],16],[[[468,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],16],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],16],[[[471,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],16],[[[234,[538]]],16],[[[234,[538]]],16],[[[234,[[0,[322,437]]]]],16],[[[262,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]]]],436]]]],436,417,417,[418,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]]]],436,417,417]],[418,[[0,[410,411,[433,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[434,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]],[539,[[0,[410,411,[433,[[0,[410,411,433,434,539]],436]],[434,[[0,[410,411,433,434,539]],436]],[539,[[0,[410,411,433,434,539]],436]]]],436]]]],436,417,417]]]]],16],[[[423,[431]]],16],[[],16],[[],16],[[[262,[415,[454,[[454,[[454,[454,417]],417]],417]],417,[454,[[454,[[454,[454,417]],417]],417]],417,[418,[415,[454,[[454,[454,417]],417]],417,[454,[[454,[454,417]],417]],417]]]],415],16],[[[262,[417,417,[422,[417,417]]]]],16],[[[455,[436,[454,[417]],417]]],16],[[[234,[[0,[322,437]]]]],16],[[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]]]]]]]]]]]]]],412,412]]],16],[[[423,[431]]],16],[[[424,[431]]],16],0,[[[235,[[424,[431]]]],[235,[[424,[431]]]]],[[235,[[424,[431]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[540,[417,417,[422,[417,417]]]]]],[[[263,[409,412]]],[[540,[409,412,260]]]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]]],[[541,[417,417,[439,[417,417]],[422,[417,417]]]]]],[[[263,[409,412]]],[[541,[409,412,260]]]],[[9,[0,[409,410,411]]],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[9,[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[[[262,[[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[0,[409,410,411,[433,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]]]],[542,[417]],417,[542,[417]],417,[418,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]],[542,[417]],417,[542,[417]],417]]]],[262,[[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[0,[409,410,411,[433,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]],[[262,[[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[0,[409,410,411,[433,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[0,[409,410,411,[433,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]],[434,[[434,[434,[0,[409,410,411,433,434]]]],[0,[409,410,411,[433,[434,[0,[409,410,411,433,434]]]],[434,[434,[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[460,[432,417]]],[[262,[432,417,417]]]],[[[468,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[[391,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[[234,[[0,[322,414]]]]],[[0,[322,414]]]],[[[460,[432,417]]],[[262,[432,417,417]]]],[[[391,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]],[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]]],16],[[[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]],[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]]],16],[[[449,[415]]],415],[[[423,[415,431]],[423,[415,431]]],[[21,[[423,[415,431]]]]]],[[[262,[368,260,[369,[368,260]]]]],9],[[[262,[417,417,[422,[417,417]]]]],9],[[[369,[417,417]]],9],[[[263,[409,412]]],9],[[[444,[417]]],9],0,[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]],417,260]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]],417,260]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]]]]],[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]]]],[484,[[0,[409,410,411,433,484,434]]]],[434,[[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]],431],[[424,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]],431],[[423,[431]]]],[[[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409,412]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409,412]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409]]]],409],[[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[484,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,484,434]],409]],[484,[[0,[409,410,411,433,484,434]],409]],[434,[[0,[409,410,411,433,484,434]],409]]]],409]]]],409]]]],409,412]]]],[[[423,[431]],[423,[431]],431],[[423,[431]]]],[[[424,[431]],[424,[431]],431],[[424,[431]]]],[[[236,[415,431,[235,[[234,[415,431]]]]]],[236,[415,431,[235,[[234,[415,431]]]]]],415,431],[[236,[415,431,[235,[[234,[415,431]]]]]]]],[[[236,[415,431,[425,[415,431]]]],[236,[415,431,[425,[415,431]]]],415,431],[[236,[415,431,[425,[415,431]]]]]],[[[236,[415,431,[425,[415,431]]]],[236,[415,431,[425,[415,431]]]],415,431],[[236,[415,431,[425,[415,431]]]]]],[[[236,[415,431,[235,[[423,[415,431]]]]]],[236,[415,431,[235,[[423,[415,431]]]]]],415,431],[[236,[415,431,[235,[[423,[415,431]]]]]]]],0,[[9,9],9],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[235,[[423,[415,431]]]]],[[423,[415,431]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[460,[432,417]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[263,[415,260]],[263,[415,260]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[235,[[423,[431]]]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[425,[431]]]]]],[[[263,[415,260]],[263,[415,260]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[235,[[423,[431]]]]]]]],[[[262,[[0,[409,410]],417,417,[418,[[0,[409,410]],417,417]]]]],[[262,[[0,[409,410]],417,417]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]],518]],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]],[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]]],16],[[[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]],[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]]],16],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]],[[391,[436,[454,[417]],417,417]]]],0,0,[[[262,[432,409,417,417,[418,[432,409,417,417]]]]]],[[[423,[431]]],431],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]]],[[[423,[431]]],431],[[[262,[409,417,417,[422,[409,417,417]]]],231],[[262,[409,417,417]]]],[[[263,[409,412]],231],[[263,[409,412]]]],[[[262,[409,417,417,[422,[409,417,417]]]],231],[[262,[409,417,260]]]],[[322,218],322],[[[262,[409,417,417,[422,[409,417,417]]]],231],[[262,[409,417,417]]]],[[[420,[415,419]]],[[262,[415]]]],[[[425,[409]]],[[262,[409,260,260,[261,[409]]]]]],0,0,0,0,0,[[[420,[415,465]]],[[262,[415]]]],[[[425,[409]]],[[262,[409,260,260,[261,[409]]]]]],[[[420,[415,419]]],[[262,[415]]]],[[[425,[409]]],[[262,[409,260,260,[261,[409]]]]]],[[543,543],543],[[]],[[]],[[]],[[368,417],368],[368,368],[[260,260]],[[260,260]],[[[262,[[0,[442,410]],409,417,417,[422,[[0,[442,410]],409,417,417]]]]],[[0,[442,410]],409]],[[],21],[[],[[262,[[0,[409,544]],412,412]]]],[[]],[[]],[[],[[263,[[0,[409,544]],412]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[0,[479,[456,[51]]]],409]],[380,[[235,[[423,[415,431]]]]]],[[[262,[417,417,[418,[417,417]]]],[262,[417,417,[418,[417,417]]]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]],[262,[432,409,417,417,[418,[432,409,417,417]]]]]],[[462,[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]]],[[463,[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]]],[[464,[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]]],[[543,543],543],[[]],[[]],[[]],[[368,417],368],[368,368],[[260,260]],[[260,260]],[[[262,[[0,[442,410]],409,417,417,[422,[[0,[442,410]],409,417,417]]]]],[[0,[442,410]],409]],[[],21],[[],[[262,[[0,[409,544]],412,412]]]],[[]],[[]],[[],[[263,[[0,[409,544]],412]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[419]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[419]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[419]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[419]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],260]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[368,417],368],[[260,260]],[[260,260]],[368,368],[[[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]],417,417]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]],417,417]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[429,[431,[235,[[234,[431]]]]]]]],[[[235,[[234,[431]]]],[263,[431,260]]]],[[[235,[[234,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[234,[431]]]],[263,[431,260]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[423,[431]]]],[263,[431,260]]]],[[[235,[[234,[431]]]],[263,[431,260]]]],[[[235,[[424,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[424,[431]]]],[[[235,[[234,[431]]]],[236,[431,[235,[[234,[431]]]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[424,[431]]]],[263,[431,260]]]],[[[235,[[424,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[263,[431,260]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[263,[431,260]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[429,[431,[235,[[234,[431]]]]]]]],[[[235,[[234,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[234,[431]]]],[429,[431,[235,[[234,[431]]]]]]]],[[[235,[[234,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[234,[431]]]],[263,[431,260]]]],[[[235,[[423,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[234,[431]]]],[236,[431,[235,[[234,[431]]]]]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[423,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[234,[431]]]],[236,[431,[235,[[234,[431]]]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[263,[431,260]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[418,[431,260,260]]]]]],[[[235,[[424,[431]]]],[424,[431]]]],[[[235,[[424,[431]]]],[424,[431]]]],[[[235,[[423,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[426,[431]]]],[[[235,[[424,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[424,[431]]]],[263,[431,260]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[423,[431]]]],[263,[431,260]]]],[[[235,[[423,[431]]]],[429,[431,[235,[[423,[431]]]]]]]],[[[235,[[423,[431]]]],[426,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[234,[431]]]],[429,[431,[235,[[234,[431]]]]]]]],[[[235,[[424,[431]]]],[424,[431]]]],[[[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[423,[431]]]],[263,[431,260]]]],[[[235,[[423,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[234,[431]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]]],[[[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[234,[431]]]],[236,[431,[235,[[234,[431]]]]]]]],[[[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],412]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],412]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[235,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[431]],[426,[431]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[425,[431]],[426,[431]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[236,[431,[425,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[235,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[235,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[426,[431]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[235,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],260,260]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[431]],[429,[431,[425,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[263,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[431]],[235,[[423,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[425,[431]],[426,[431]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],431]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],431]],[[[423,[431]],[423,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],431]],[[[424,[431]],[424,[431]]]],[[[424,[431]],431]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[426,[431]],[429,[431,[428,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]]],[[[426,[431]],[235,[[423,[431]]]]]],[[[426,[431]],[235,[[423,[431]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]]],[[[426,[431]],[429,[431,[428,[431]]]]]],[[[426,[431]],[235,[[234,[431]]]]]],[[[426,[431]],[425,[431]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[426,[431]],[236,[431,[428,[431]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[426,[431]],[236,[431,[428,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[426,[431]],[236,[431,[428,[431]]]]]],[[[426,[431]],[235,[[234,[431]]]]]],[[[426,[431]],[429,[431,[428,[431]]]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[431]],[235,[[234,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]]],[[[426,[431]],[236,[431,[428,[431]]]]]],[[[426,[431]],[429,[431,[428,[431]]]]]],[[[426,[431]],[425,[431]]]],[[[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[426,[431]],[235,[[234,[431]]]]]],[[[426,[431]],[235,[[423,[431]]]]]],[[[426,[431]],[425,[431]]]],[[[426,[431]],[425,[431]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[431]],[235,[[423,[431]]]]]],[[[426,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[428,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[236,[431,[428,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[431,[428,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[235,[[262,[431,260,260,[261,[431]]]]]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[431,[425,[431]]]],[425,[431]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[431,[235,[[423,[431]]]]]],[235,[[424,[431]]]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]]],[[[236,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[429,[431,[235,[[423,[431]]]]]],[235,[[423,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[487,[466]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[425,[431]]]],[425,[431]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[235,[[234,[431]]]]]],[235,[[234,[431]]]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[]],[[[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]],[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]],[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]]],[[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]],[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]],[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]]],[[234,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]],[0,[322,437,[545,[[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]],[0,[322,437,[545,[[0,[322,437,545]],[0,[322,437,545]]]]]]]]]]]]]]]]]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]],[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]],[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]],[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]],[234,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]],[0,[322,438,[546,[[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]],[0,[322,438,[546,[[0,[322,438,546]],[0,[322,438,546]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[419]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[488,[419]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[426,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]]]]]]]],[[[420,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],419]],[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]],415]],[506,[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,415]]]],[434,[[0,[409,410,411,433,434,415]]]],415]]]],415]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[0,[[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]],451,322]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],260,260,[261,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[0,[[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]],451,322]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]],417,417]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[426,[431]]]],[[[235,[[424,[431]]]],[236,[431,[235,[[423,[431]]]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[235,[[423,[431]]]],[425,[431]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[424,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[425,[431]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]]],[[[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],412]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[[425,[431]],[235,[[234,[431]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],431]],[[[423,[431]],[423,[431]]]],[[[424,[431]],431]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[424,[431]],[235,[[424,[431]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[236,[431,[428,[431]]]],[426,[431]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[236,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[234,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[429,[431,[428,[431]]]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[429,[431,[428,[431]]]],[426,[431]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[429,[431,[428,[431]]]],[236,[431,[428,[431]]]]]],[[[429,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]]]]]],[235,[[423,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434,431]]]],[434,[[0,[409,410,411,433,434,431]]]],431]]]],431]]]],431]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[]],[[],260],[[[262,[417,417,[422,[417,417]]]]],9],[[[262,[409,368,368,[369,[409,368,368]]]]],9],0,[[[234,[[0,[322,437,481]]]]]],[[[234,[[0,[322,437,481]]]]]],[[[262,[[0,[409,486]],417,417,[418,[[0,[409,486]],417,417]]]]]],[[[262,[[0,[409,486]],417,417,[418,[[0,[409,486]],417,417]]]]]],[[[235,[[424,[431]]]]]],[[[235,[[424,[431]]]]]],[[[235,[[262,[[0,[409,486]],417,417]]]]]],[[[263,[[0,[409,486]],412]]]],[[[263,[[0,[409,486]],412]]]],[[[423,[431]]]],[[[423,[431]]]],[[[424,[431]]]],[[[424,[431]]]],[[[262,[[0,[409,486]],417,417,[435,[[0,[409,486]],417,417]]]]]],[[],234],[[[235,[[262,[436,417,260,[418,[436,417,260]]]]]],436],[[453,[436,417,[418,[436,417,260]]]]]],[9,368],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[[],[[262,[260,260,261]]]],[431,[[235,[[234,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[417,417,[103,[7]]],[[369,[417,417]]]],[409,[[263,[409,260]]]],[[409,409,409,409,409,409],[[263,[409,260]]]],[[409,409,409,409],[[263,[409,260]]]],[[409,409,409,409,409],[[263,[409,260]]]],[[409,409],[[263,[409,260]]]],[[409,409,409],[[263,[409,260]]]],[[[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[431,[[425,[431]]]],[[],423],[[],426],[[],426],[[],426],[[],426],[[],426],[[],426],[[],427],[[],427],[[],427],[[],427],[[],427],[[],427],[[[262,[431,260,260,[261,[431]]]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[262,[431,260,260,[261,[431]]]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[262,[431,260,260,[261,[431]]]],431],[[236,[431,[425,[431]]]]]],[[[262,[431,260,260,[261,[431]]]],431],[[236,[431,[235,[[234,[431]]]]]]]],[[[262,[431,260,260,[261,[431]]]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[425,[431]]]]]],[[[262,[431,260,260,[261,[431]]]],431,431],[[429,[431,[425,[431]]]]]],[[[262,[431,260,260,[261,[431]]]],431,431],[[429,[431,[235,[[234,[431]]]]]]]],[[[262,[431,260,260,[261,[431]]]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[235,[[423,[431]]]]]]]],[[415,415,415,415,415,415],[[449,[415]]]],[[415,415,415,415],[[450,[415]]]],[[[262,[436,[454,[417]],417]]],[[455,[436,[454,[417]],417]]]],[[[262,[436,417,417]]],[[21,[[460,[436,417]]]]]],[[[262,[436,[454,[417]],417]]],[[467,[436,[454,[417]],417]]]],[[[262,[436,[454,[417]],417]]],[[468,[436,[454,[417]],417]]]],[[[262,[436,[469,[260]],[469,[260]]]]],[[470,[436,[469,[260]]]]]],[[[262,[436,[454,[417]],417]]],[[391,[436,[454,[417]],417]]]],[[[262,[436,[454,[417]],417]]],[[471,[436,[454,[417]],417]]]],[[[262,[436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]]]]],[[472,[436,[0,[417,[469,[260]]]]]]]],[[[262,[436,[454,[417]],417]],16,16],[[473,[436,[454,[417]],417]]]],[[[262,[436,[469,[260]],417,[469,[260]],417]]],[[474,[436,[469,[260]],417]]]],[[[262,[436,[469,[260]],[469,[260]]]]],[[475,[436,[469,[260]]]]]],[[[262,[415,417,417]]],[[21,[[476,[415,417]]]]]],[547],[[[235,[[262,[436,260,260,[418,[436,260,260]]]]]],[263,[436,260]]],[[453,[436,260,[418,[436,260,260]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],431],[[235,[[423,[431]]]]]],[[[262,[[0,[409,410,411]],260,[418,[[0,[409,410,411]],260]]]]],[[262,[[0,[409,410,411]],[443,[260]],412,[443,[260]],412]]]],[[[262,[415,260,260,[261,[415]]]],[263,[415,260]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[415,260,260,[261,[415]]]],[263,[415,260]]],[[262,[415,260,260,[261,[415]]]]]],[547,[[235,[547]]]],[[[263,[415,260]],[263,[415,260]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[235,[[423,[431]]]]]],[[[262,[431,260,260,[418,[431,260,260]]]],[262,[431,260,260,[418,[431,260,260]]]]],[[425,[431]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[235,[[423,[431]]]]]]]],[[[263,[431,260]],[263,[431,260]],[262,[431,260,260,[261,[431]]]],431],[[429,[431,[425,[431]]]]]],[[415,415,415,415,415,415],[[262,[415,260,260,[261,[415]]]]]],[[415,415,415,415],[[262,[415,260,260,[261,[415]]]]]],[[[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[415,[[262,[415,260,260,[261,[415]]]]]],[[[262,[415,260,260,[261,[415]]]],[263,[415,260]]],[[262,[415,260,260,[261,[415]]]]]],[[[0,[409,410,411]]],[[262,[[0,[409,410,411]],412,412]]]],[[[262,[[0,[409,410,411]],260,[418,[[0,[409,410,411]],260]]]]],[[262,[[0,[409,410,411]],[443,[260]],412,[443,[260]],412]]]],[[[422,[417,417]]],[[385,[417,417]]]],[[[439,[417,417]]],[[374,[417,417]]]],[[],235],[[[262,[432,417,417]]],[[460,[432,417]]]],[[[262,[436,[454,[417]],417]],16,16],[[473,[436,[454,[417]],417]]]],[[[422,[417,417]]],[[385,[417,417,417,417]]]],[[[439,[417,417]]],[[374,[417,417,417,417]]]],[[[262,[436,417,417]],436],[[21,[[460,[436,417]]]]]],[[[262,[436,[469,[260]],[469,[260]]]],[262,[436,[469,[260]],260]]],[[470,[436,[469,[260]]]]]],[[[235,[[424,[431]]]],[235,[[424,[431]]]],431],[[235,[[424,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]],431],[[235,[[423,[431]]]]]],[[],16],[[[262,[417,417,[418,[417,417]]]]]],[[]],[[[234,[431]]]],[[[262,[432,417,417]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]]],[[462,[262,[432,417,417,[418,[432,417,417]]]]]],[[463,[262,[432,417,417,[418,[432,417,417]]]]]],[[464,[262,[432,417,417,[418,[432,417,417]]]]]],[[[423,[431]]]],[[[423,[431]]],431],[[[424,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,437]]]]],[[0,[322,437]]]],[[]],[[[234,[431]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]]],[[[262,[432,417,417]]]],[[[423,[431]]]],[[[423,[431]]],431],[[[424,[431]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]],[[262,[432,409,417,417]]]],[[[423,[431]]],[[423,[431]]]],[[[424,[431]]],[[424,[431]]]],[[[262,[432,409,417,417,[435,[432,409,417,417]]]]]],[[[423,[431]]],431],[[[424,[431]]],431],[[[262,[417,417,[422,[417,417]]]]],9],[[[262,[409,368,368,[369,[409,368,368]]]]],9],0,[[[455,[436,[454,[417]],417]]],[[262,[260]]]],[[[475,[436,[469,[260]]]]],[[262,[260]]]],0,0,[[],411],[[],[[234,[[0,[322,437]]]]]],[[]],[[],[[420,[415,419]]]],[[]],[[],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],412,412]]]],[[]],[[],[[235,[[234,[431]]]]]],[[]],[[],[[235,[[423,[431]]]]]],[[],[[235,[[424,[431]]]]]],[[],[[425,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[[]],[[]],[[],[[423,[431]]]],[[]],[[],[[424,[431]]]],[[],[[426,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]]]]]]]]]]]]]]]]]],[[]],[[]],[[],[[427,[[0,[409,411,[434,[[0,[409,411,[434,[[0,[409,411,[434,[[0,[409,411,434]]]]]]]]]]]]]]]]]],[[],[[236,[431,[428,[431]]]]]],[[]],[[]],[[],[[429,[431,[428,[431]]]]]],[[],16],[[],[[263,[410,409,412]]]],[[[262,[373,260,260,[261,[373]]]]],[[85,[[262,[373,260,260,[261,[373]]]]]]]],[[[262,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]],260,260,[261,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]]]]]]],[[85,[[262,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]],260,260,[261,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]]]]]],[[[193,[[262,[436,412,260]]]],231]],[[[262,[373,260,260,[261,[373]]]]],[[262,[373,260,260,[261,[373]]]]]],[[[262,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]],260,260,[261,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]]]]]]],[[262,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]],260,260,[261,[[0,[373,[483,[[0,[373,[483,[[0,[373,[483,[[0,[373,483]]]]]]]]]]]]]]]]]]]],[[[193,[[262,[436,412,260]]]]],9],[[[423,[431]],[423,[431]]],[[423,[431]]]],[[[467,[436,[454,[417]],417]]],444],[[[468,[436,[454,[417]],417]]],444],[[[391,[436,[454,[417]],417]]],444],0,0,0,[[[262,[432,417,417]]],[[460,[432,417]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],[[21,[[416,[[416,[[416,[416]]]]]]]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],[[21,[183]]]],[[[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]],[262,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],417,417,[422,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]],417,417]]]]],[[21,[183]]]],[[[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]],[263,[[0,[409,[416,[[0,[409,[416,[[0,[409,[416,[[0,[409,416]]]]]]]]]]]]]],412]]],[[21,[183]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],16],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],16],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],16],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],16],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],[[21,[[416,[[416,[[416,[416]]]]]]]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],[[21,[[416,[[416,[[416,[416]]]]]]]]]],[[[416,[[416,[[416,[[416,[416]]]]]]]],[416,[[416,[[416,[[416,[416]]]]]]]]],21],[[[444,[417]],[262,[409,417,417,[435,[409,417,417]]]]]],[[[444,[417]],[262,[409,417,417,[435,[409,417,417]]]]]],[[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]],417,417]]]],[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]],417,417]]]]],[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[484,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]],[434,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[484,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]],[434,[[0,[409,[433,[[0,[409,433,484,434]]]],[484,[[0,[409,433,484,434]]]],[434,[[0,[409,433,484,434]]]]]]]]]]]]]]]]]]]],[[]],0,[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]]],[[[423,[415,431]]]],[[[234,[[0,[322,437,481]]]],384]],[[[234,[[0,[322,437,481]]]],375]],[[[234,[[0,[322,437,481]]]],530]],[[[234,[[0,[322,437]]]],9]],[[[234,[[0,[322,437]]]],305]],[[[234,[[0,[322,437,481]]]],518]],[[[234,[[0,[322,437,481]]]],530]],[[[234,[[0,[322,437,481]]]],404]],[[[234,[[0,[322,437,481]]]],378]],[[[234,[[0,[322,437,481]]]],384]],[[[234,[[0,[322,437]]]],89]],[[[234,[[0,[322,437,481]]]],404]],[[[234,[[0,[322,437]]]],89]],[[[234,[[0,[322,437]]]],19]],[[[234,[[0,[322,437,481]]]],375]],[[[234,[[0,[322,437,481]]]],378]],[[[234,[[0,[322,437]]]],188]],[[[234,[[0,[322,437]]]],305]],[[[234,[[0,[322,437]]]],188]],[[[234,[[0,[322,437]]]],224]],[[[234,[[0,[322,437,481]]]],518]],[[[234,[[0,[322,437]]]],9]],[[[234,[[0,[322,437]]]],19]],[[[234,[[0,[322,437]]]],224]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]],[0,[[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],[454,[[454,[454]]]],[454,[[454,[454]]]]]],[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],[454,[[454,[454]]]],[454,[[454,[454]]]]]]]]]],89],[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]],[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],[454,[[454,[454]]]],[454,[[454,[454]]]]]]]],89]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[235,[[234,[431]]]],431],[[235,[[234,[431]]]]]],[[[235,[[423,[415,431]]]],415,431],[[235,[[423,[415,431]]]]]],[[[425,[431]],431],[[425,[431]]]],[[[425,[415,431]],415,431],[[425,[415,431]]]],[[[423,[431]],431],[[423,[431]]]],[518],[[[234,[[0,[322,437,481]]]],518],[[234,[[0,[322,437,481]]]]]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]],518],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,437]]]],89],[[234,[[0,[322,437]]]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[429,[431,[428,[431]]]],431],[[429,[431,[428,[431]]]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]]]]]]]],[[[429,[431,[428,[431]]]],431]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]],[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],[443,[260]],412,[443,[260]],412,[435,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]],[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],[443,[260]],412,[443,[260]],412]]]],[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],260,[418,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]],260]]]]]],[301,[[234,[[0,[437,322]]]]]],[301,[[234,[[0,[437,322]]]]]],[301,[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],412,412]]]],[301,[[262,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]],[433,[[0,[409,410,411,[434,[[0,[409,410,411,434,433]]]],[433,[[0,[409,410,411,434,433]]]]]]]]]]]]]],412,412]]]],[[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,417,[422,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409,417,417]]]]],[[0,[[434,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409]],411]],409]],[[[423,[415,431]],[423,[415,431]]],[[21,[[423,[415,431]]]]]],[[[449,[415]],[263,[415,260]]],[[263,[415,260]]]],[[[450,[415]],[263,[415,260]]],[[263,[415,260]]]],[[[449,[415]],[262,[415,260,260,[418,[415,260,260]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]],[262,[415,260,260,[418,[415,260,260]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[436,[454,[417]],417,[418,[436,[454,[417]],417]]]]],[[22,[[262,[436,417,[454,[417]]]],92]]]],[[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411,410]],409]],411,410]],409]],411,410]],409]],411,410]],409]]],[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411,410]],409]],411,410]],409]],411,410]],409]],411,410]],409]]]],[[[473,[436,[454,[417]],417]]],[[22,[[262,[436,417,[454,[417]]]],92]]]],[[]],[261],[[[385,[417,417,417,417]]]],[[[374,[417,417,417,417]]]],[[[369,[368,417]]]],[[[369,[412,368]]]],0,0,[[]],[261],[[[374,[417,417,417,417]]]],[[[369,[368,417]]]],[[[369,[412,368]]]],[[[423,[431]]],[[423,[431]]]],[[[262,[409,[482,[260]],260,[422,[409,[482,[260]],260]]]],409],[[262,[409,260]]]],[[[467,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[[468,[436,[454,[417]],417]]],444],[[[470,[436,[469,[260]]]]],[[262,[436,[469,[260]],[469,[260]]]]]],[[[471,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[[475,[436,[469,[260]]]]],[[262,[436,[469,[260]],[469,[260]]]]]],0,0,[[[467,[436,[454,[417]],417]],[262,[436,417,417,[435,[436,417,417]]]]]],[[[471,[436,[454,[417]],417]],[262,[436,417,417,[435,[436,417,417]]]]]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]]],[[471,[436,[454,[417]],417,417]]]],0,[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,260,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,260]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,260,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,260]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]]]]]]]],[[[235,[[423,[431]]]]],[[423,[431]]]],[[[467,[436,[454,[417]],417]]],[[262,[436,417]]]],[[[471,[436,[454,[417]],417]]],[[262,[436,417]]]],[[[262,[436,[454,[417]],417,[418,[436,[454,[417]],417]]]]],9],[[[473,[436,[454,[417]],417]]],9],[[[460,[436,417]],[262,[436,417,260,[418,[436,417,260]]]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],0,[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],0,[[412,368,[369,[409,412,368]]],[[369,[[440,[409]],412,368]]]],[[412,368,[261,[409]]],[[369,[[440,[409]],412,368]]]],[[368,417,[261,[409]]],[[369,[[440,[409]],368,417]]]],[[412,368,[369,[409,368,417]]],[[369,[[440,[409]],412,368]]]],[[260,260],[[261,[[440,[409]]]]]],[[368,417,[369,[409,412,368]]],[[369,[[440,[409]],368,417]]]],[[368,417,[369,[409,368,417]]],[[369,[[440,[409]],368,417]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[473,[436,[454,[417]],417]]],[[22,[[262,[436,[454,[417]],417]],92]]]],[[[474,[436,417]]],[[262,[436,417,417]]]],[[[475,[436,[469,[260]]]]],[[262,[436,[469,[260]],[469,[260]]]]]],[[[453,[436,417,[418,[436,417,260]]]],[262,[436,417,417,[435,[436,417,417]]]]]],[[[453,[436,417,[418,[436,417,260]]]],[262,[436,417,417,[435,[436,417,417]]]],[262,[436,417,260,[435,[436,417,260]]]]]],[[[453,[436,417,[418,[436,417,260]]]],[262,[436,417,417,[435,[436,417,417]]]],[262,[436,417,260,[435,[436,417,260]]]],436]],[[[453,[436,417,[418,[436,417,260]]]],[262,[436,417,417,[435,[436,417,417]]]],436]],[[[423,[415,431]],[423,[415,431]]],[[21,[[423,[415,431]]]]]],[[[420,[415,419]],[420,[415,419]]],16],[[[262,[[539,[[539,[[539,[539]]]]]],417,417,[422,[[539,[[539,[539]]]],417,417]]]],[262,[[539,[[539,[[539,[539]]]]]],417,417,[418,[[539,[[539,[539]]]],417,417]]]]],16],[[[262,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],417,417,[418,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]],417,417]]]],[262,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],417,417,[418,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]],417,417]]]]],16],[[[235,[[262,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],417,417,[418,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]],417,417]]]]]],[235,[[262,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],417,417,[418,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]],417,417]]]]]]],16],[[[235,[[424,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]]],[235,[[424,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]]]],16],[[[235,[[423,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]]],[235,[[423,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]]]],16],[[[235,[[234,[415]]]],[235,[[234,[415]]]]],16],[[[263,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],412]],[263,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]],412]]],16],[[[425,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]],[425,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]]],16],[[[423,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]],[423,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]],16],[[[424,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]],[424,[[0,[415,[539,[[0,[415,[539,[[0,[415,[539,[[0,[415,539]]]]]]]]]]]]]]]]],16],[[[426,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]],[426,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]]],16],[[[427,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]],[427,[[0,[409,[539,[[0,[409,[539,[[0,[409,[539,[[0,[409,539]]]]]]]]]]]]]]]]],16],[[[236,[415,[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[428,539]]]]]]]]]]]]]]]],[236,[415,[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[428,539]]]]]]]]]]]]]]]]],16],[[[429,[415,[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[428,539]]]]]]]]]]]]]]]],[429,[415,[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[[428,[415]],[539,[[0,[428,539]]]]]]]]]]]]]]]]],16],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[262,[409,417,[469,[260]],417,[418,[409,417,[469,[260]],417]]]],9],[[262,[409,417]]]],[[[460,[436,[469,[260]],417]],9],[[460,[436]]]],[[[262,[409,417,[469,[368]],417,[418,[409,417,[469,[368]],417]]]],9,9],[[262,[409,417,368]]]],[[[262,[409,417,[469,[368]],417,[418,[409,417,[469,[368]],417]]]],[193,[9]]],[[262,[409,417,368]]]],[[[262,[409,417,[469,[417]],417,[418,[409,417,[469,[417]],417]]]],9,417],[[262,[409,417]]]],[[[262,[409,417,[469,[260]],417,[418,[409,417,[469,[260]],417]]]],9],[[262,[409,417]]]],[[[262,[409,[469,[260]],417,417,[418,[409,[469,[260]],417,417]]]],9],[[262,[409,417]]]],[[[262,[409,[469,[260]],417,417,[418,[409,[469,[260]],417,417]]]],9],[[262,[409,417]]]],[[[262,[409,[469,[368]],417,417,[418,[409,[469,[368]],417,417]]]],9,9],[[262,[409,368,417]]]],[[[262,[409,[469,[368]],417,417,[418,[409,[469,[368]],417,417]]]],[193,[9]]],[[262,[409,368,417]]]],[[[262,[409,[469,[417]],417,417,[418,[409,[469,[417]],417,417]]]],9,417],[[262,[409,417]]]],[[[235,[547]]]],[[[425,[415,431]]]],[[[425,[415,431]]]],[[[235,[547]]]],[[9,409],[[262,[409,412,368]]]],[[9,409],[[262,[409,368,412]]]],[[9,9,409],[[262,[409,368,368]]]],[409,[[262,[409,412,412]]]],[[417,417,409],[[262,[409,417,417]]]],[9],[[[234,[485]],9]],[[[420,[415,419]],9]],[[[262,[[0,[409,485]],417,417]],9]],[[[235,[[234,[431]]]],9]],[[[235,[[423,[[0,[409,485]]]]]],9]],[[[263,[[0,[409,485]],260]],9]],[[[425,[[0,[409,485]]]],9]],[[[423,[[0,[409,485]]]],9]],[[[426,[[0,[409,485]]]],9]],[[[427,[[0,[409,485]]]],9]],[[[236,[431,[0,[485,[428,[431]]]]]],9]],[[[429,[431,[0,[485,[428,[431]]]]]],9]],[9],[[[234,[485]],9]],[[[420,[415,419]],9]],[[[262,[[0,[409,485]],417,417]],9]],[[[235,[[234,[431]]]],9]],[[[235,[[423,[[0,[409,485]]]]]],9]],[[[263,[[0,[409,485]],260]],9]],[[[425,[[0,[409,485]]]],9]],[[[423,[[0,[409,485]]]],9]],[[[426,[[0,[409,485]]]],9]],[[[427,[[0,[409,485]]]],9]],[[[236,[431,[0,[485,[428,[431]]]]]],9]],[[[429,[431,[0,[485,[428,[431]]]]]],9]],[[]],[[[261,[409]],260,260]],[[[262,[409,417,417,[548,[409,417,417,417,417]],[418,[409,417,417]]]],417,417],[[262,[409,417,417]]]],[[[385,[409,417,417,260,417]],417,417]],[[[374,[409,417,417,260,417]],417,417]],[[[369,[409,368,417]],412,368]],[[[369,[409,412,368]],412,368]],[[[369,[409,412,368]],368,417]],[[[369,[409,368,417]],368,417]],[[[262,[409,417,417,[418,[409,417,417]]]],9,9,409],[[262,[409,368,368]]]],[[[369,[417,417]],9],[[103,[440,7]]]],[[[262,[409,417,417,[418,[409,417,417]]]],417,417,409],[[262,[409,417,417]]]],[[[262,[409,417,417,[418,[409,417,417]]]],9,409],[[262,[409,417,368]]]],[[[262,[409,417,368]],9,409]],[[[262,[409,368,368]],9,9,409]],[[[262,[409,417,417,[418,[409,417,417]]]],9,409],[[262,[409,368,417]]]],[[[262,[409,368,417]],9,409]],[[[449,[415]]],415],[[[423,[415,431]],[423,[415,431]]],[[21,[[423,[415,431]]]]]],[[[235,[[424,[431]]]]],[[235,[[423,[431]]]]]],[431,[[236,[431,[425,[431]]]]]],[431,[[236,[431,[235,[[234,[431]]]]]]]],[[[262,[431,260,260,[261,[431]]]]],[[236,[431,[425,[431]]]]]],[[[262,[431,260,260,[261,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],0,[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]]],[[235,[[234,[415,431]]]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]]],[[21,[[235,[[423,[415,431]]]]]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]]],[[425,[415,431]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]]],[[21,[[425,[415,431]]]]]],[[[235,[[262,[431,260,260,[418,[431,260,260]]]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]]],[[235,[[234,[431]]]]]],[[[235,[[262,[415,431,260,260,[418,[415,431,260,260]]]]]],[235,[[262,[415,431,260,260,[418,[415,431,260,260]]]]]]],[[21,[[235,[[423,[415,431]]]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[235,[[423,[431]]]],[235,[[423,[431]]]]],[[235,[[423,[431]]]]]],[[[425,[431]],[425,[431]]],[[425,[431]]]],[[[425,[431]],[425,[431]]],[[425,[431]]]],[[[428,[431]],[263,[431,260]]],[[236,[431,[428,[431]]]]]],[[[428,[431]],[263,[431,260]],431],[[429,[431,[428,[431]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[417,417,[422,[417,417]]]],9],[[262,[260,417,[385,[260,417]]]]]],[[[262,[417,417,[422,[417,417]]]]],[[549,[417,417,[422,[417,417]]]]]],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]]],[[550,[417,417,[439,[417,417]],[422,[417,417]]]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,260,417]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,417,260]]]],[[[262,[417,417,[439,[417,417]]]],9],[[262,[260,417,[374,[260,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[260,368,[385,[260,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[260,368,[374,[260,368]]]]]],[[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,417,[422,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409,417,417]]]]],[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,260,417]]]],[[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,417,[422,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409,417,417]]]]],[[262,[[0,[[434,[[0,[[434,[[0,[[434,[[0,[434,411]],409]],411]],409]],411]],409]],411]],409,417,260]]]],[[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,417,[422,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409,417,417]]]]],[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,260,417]]]],[[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,417,[422,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409,417,417]]]]],[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,260]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,260,417]]]],[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[262,[[0,[479,[456,[51]]]],409,417,260]]]],[[[262,[417,417,[422,[417,417]]]],9,9],[[262,[368,417,[385,[368,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9,417],[[262,[417,417,[385,[417,417]]]]]],[[[262,[417,417,[439,[417,417]]]],9,417],[[262,[417,417,[374,[417,417]]]]]],[[[262,[417,417,[422,[417,417]]]],9,417,9],[[262,[417,417,[385,[417,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,417,9],[[262,[417,417,[374,[417,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9],[[262,[368,417,[374,[368,417]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]]],[[262,[417,[385,[417]]]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]]],[[262,[417,[374,[417]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]],[480,[417]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]],[480,[417]]]],[[[262,[417,417,[422,[417,417]]]],9,9,9],[[262,[368,417,[385,[368,417,368]]]]]],[[[262,[417,417,[439,[417,417]]]],9,9,9],[[262,[368,417,[374,[368,417,368]]]]]],[[[423,[431]]],431],[[]],[[[234,[[0,[322,437]]]],[0,[322,437]]],[[234,[[0,[322,437]]]]]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]]],[[262,[432,417,417]]]],[[]],[[[234,[431]]]],[[[262,[432,417,417]]]],[[[262,[432,417,417,[439,[432,417,417]]]]]],[[[423,[431]]]],[[[424,[431]]]],[[[235,[[234,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[423,[415,431]]]]],[[262,[415,431,260,260,[261,[415,431]]]]]],[[[425,[431]]],[[262,[431,260,260,[261,[431]]]]]],[[[425,[415,431]]],[[262,[415,431,260,260,[261,[415,431]]]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]],415,431],[[21,[[235,[[423,[415,431]]]]]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]],415,431],[[235,[[234,[415,431]]]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]],415,431],[[425,[415,431]]]],[[[262,[415,431,260,260,[418,[415,431,260,260]]]],[262,[415,431,260,260,[418,[415,431,260,260]]]],415,431],[[21,[[425,[415,431]]]]]],[[[235,[[262,[415,431,260,260,[418,[415,431,260,260]]]]]],[235,[[262,[415,431,260,260,[418,[415,431,260,260]]]]]],415,431],[[21,[[235,[[423,[415,431]]]]]]]],[[[235,[[262,[431,260,260,[418,[431,260,260]]]]]],[235,[[262,[431,260,260,[418,[431,260,260]]]]]],431],[[235,[[234,[431]]]]]],[[[429,[409]]],409],0,[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]]],[[472,[436,[469,[260]],417]]]],[[[235,[[424,[415,431]]]],[235,[[424,[415,431]]]],415,431],[[235,[[424,[415,431]]]]]],[[]],[[[234,[485]],[234,[485]]],[[234,[485]]]],[[[420,[415,419]],[420,[415,419]]],[[420,[415,419]]]],[[[262,[[0,[409,485]],417,417]],[262,[[0,[409,485]],417,417]]],[[262,[[0,[409,485]],417,417]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]]],[[235,[[234,[431]]]]]],[[[235,[[423,[[0,[409,485]]]]]],[235,[[423,[[0,[409,485]]]]]]],[[235,[[423,[[0,[409,485]]]]]]]],[[[263,[[0,[409,485]],260]],[263,[[0,[409,485]],260]]],[[263,[[0,[409,485]],260]]]],[[[425,[[0,[409,485]]]],[425,[[0,[409,485]]]]],[[425,[[0,[409,485]]]]]],[[[423,[[0,[409,485]]]],[423,[[0,[409,485]]]]],[[423,[[0,[409,485]]]]]],[[[426,[[0,[409,485]]]],[426,[[0,[409,485]]]]],[[426,[[0,[409,485]]]]]],[[[427,[[0,[409,485]]]],[427,[[0,[409,485]]]]],[[427,[[0,[409,485]]]]]],[[[236,[431,[0,[485,[428,[431]]]]]],[236,[431,[0,[485,[428,[431]]]]]]],[[236,[431,[0,[485,[428,[431]]]]]]]],[[[429,[431,[0,[485,[428,[431]]]]]],[429,[431,[0,[485,[428,[431]]]]]]],[[429,[431,[0,[485,[428,[431]]]]]]]],[[[262,[409,417,417,[418,[409,417,417]]]],380],[[262,[409,417,368]]]],[[[262,[409,417,417,[418,[409,417,417]]]],380],[[262,[409,368,417]]]],[[[262,[409,368,368,[369,[409,368,368]]]],9,9]],[[[450,[415]],415]],[[[449,[415]],415]],[[[449,[415]],415,415]],[[[420,[415,419]]],[[420,[415,[489,[419]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],9,[262,[409,417,260,[422,[409,417,260]]]]]],[[[262,[409,[454,[417]],417,417,[439,[409,[454,[417]],417,417]]]],[262,[409,417,260,[422,[409,417,260]]]]]],[[[450,[415]],415]],[[[449,[415]],415]],[[[449,[415]],415,415]],[[[262,[432,409,417,417,[435,[432,409,417,417]],[418,[432,409,417,417]]]]]],[[[234,[[0,[322,437]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],301]],[[[449,[415]],415]],[[[262,[409,417,417,[439,[409,417,417]]]],9,[262,[409,260,417,[422,[409,260,417]]]]]],[[[429,[[0,[409,410]],[428,[[0,[409,410]]]]]],[0,[409,410]]]],[[[449,[415]],415]],[[[234,[[0,[322,437]]]]]],[[[449,[415]],415]],[[[450,[415]],415]],[[[449,[415]],415]],[[[450,[415]],415]],[[[449,[415]],415,415]],[[[450,[415]],415,415]],[[]],[261],[[[262,[417,417,[422,[417,417]]]]]],[[[385,[417,417,417,417]]]],[[[374,[417,417,417,417]]]],[[[369,[412,368]]]],[[[369,[368,417]]]],0,0,[[[262,[417,417,[422,[417,417]]]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[531]]],[[234,[531]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]],[[262,[432,409,417,417]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]]]],[[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]]],[[[234,[533]],[234,[533]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]]],[[[234,[532]],[234,[532]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]]],[[[234,[531]],[234,[531]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]],[430,[[85,[84]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[430,[[85,[84]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[430,[[85,[84]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[430,[[85,[51]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]],531],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]],[430,[[85,[84]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[430,[[85,[51]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]],532],[[234,[532]]]],[[[234,[533]],533],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]],[430,[[85,[51]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[532]],[234,[532]],[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]],[234,[533]],[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]],[234,[531]],[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[[234,[532]],[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]],[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]],[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]],[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]],[234,[533]]],[[234,[533]]]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[518],[[[234,[[430,[[85,[84]]]]]],518],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]],518],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]],518],[[234,[[430,[[85,[51]]]]]]]],[518],[[[234,[533]],518],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]],518],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]],518],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]],518],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]],518],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]],518],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]],518],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[[234,[532]]],[[234,[532]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]]],[[]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[533]]],[[234,[533]]]],[[]],[[]],[[]],[[]],[[]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[533]]],[[234,[533]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[423,[431]]],[[551,[[423,[431]]]]]],[[[262,[432,409,417,417,[418,[432,409,417,417]]]]],[[551,[[262,[432,409,417,417]]]]]],[[[262,[432,409,417,417,[435,[432,409,417,417]]]]],551],[[]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[532]]],[[234,[532]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[84]]]]]]],[[234,[[430,[[85,[84]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[[430,[[85,[51]]]]]]],[[234,[[430,[[85,[51]]]]]]]],[[[234,[531]]],[[234,[531]]]],[[[234,[533]]],[[234,[533]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[235,[[234,[431]]]]],431],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[[262,[436,[454,[417]],417,[418,[436,[454,[417]],417]]]]],[[262,[260]]]],0,[[[262,[436,[454,[417]],417,[418,[436,[454,[417]],417]]]]],[[262,[260]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[]],[[]],[[[262,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260,[418,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]],417,260]]]],[262,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260,[418,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]],417,260]]]],415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]]]]]]],[[262,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[484,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]],[434,[415,[0,[409,410,411,[433,[415,[0,[409,410,411,433,484,434]]]],[484,[415,[0,[409,410,411,433,484,434]]]],[434,[415,[0,[409,410,411,433,484,434]]]]]]]]]]]]]],417,260]]]],[[[235,[[262,[415,417,260,[418,[415,417,260]]]]]],[235,[[262,[415,417,260,[418,[415,417,260]]]]]],415],[[235,[[262,[415,417,260]]]]]],[[[235,[[234,[431]]]],[235,[[234,[431]]]],431],[[235,[[234,[431]]]]]],[[[235,[[423,[415,431]]]],[235,[[423,[415,431]]]],415,431],[[235,[[423,[415,431]]]]]],[[[425,[415,431]],[425,[415,431]],415,431],[[425,[415,431]]]],[[[425,[431]],[425,[431]],431],[[425,[431]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[368,368,[385,[368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[368,368,[374,[368,368]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]],[480,[417]]],[[262,[385]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]],[480,[417]]],[[262,[374]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[368,368,[385,[368,368,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[368,368,[374,[368,368,368,368]]]]]],[[[460,[432,417]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[467,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[435,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[468,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[471,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[473,[436,[454,[417]],417]],[262,[436,417,417,[418,[436,417,417]]]]],[[22,[[262,[436,417,417]],92]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]],436],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]],432]],[[[460,[432,417]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[467,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[468,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[471,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[473,[436,[454,[417]],417]]]],[[]],[[],[[234,[485]]]],[[],[[420,[415,419]]]],[[],[[262,[[0,[409,485]],417,417]]]],[[],[[235,[[423,[[0,[409,485]]]]]]]],[[],[[235,[[234,[431]]]]]],[[],[[263,[[0,[409,485]],260]]]],[[],[[425,[[0,[409,485]]]]]],[[],[[423,[[0,[409,485]]]]]],[[],[[426,[[0,[409,485]]]]]],[[],[[427,[[0,[409,485]]]]]],[[],[[236,[431,[0,[485,[428,[431]]]]]]]],[[],[[429,[431,[0,[485,[428,[431]]]]]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[431]]],[[423,[431]]]],[[[423,[431]]],[[423,[431]]]],[[[263,[409,412]]],9],[[]],[261],[[[262,[417,417,[422,[417,417]]]]]],[[[385,[417,417,417,417]]]],[[[374,[417,417,417,417]]]],[[[369,[412,368]]]],[[[369,[368,417]]]],0,0,[[]],[[]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[[234,[[0,[322,437]]]],[234,[[0,[322,437]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]]],[[368,9],368],[[368,417],368],[368,368],[[260,260]],[[260,260]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[0,[322,438]]]],[[[234,[[0,[322,438]]]],[234,[[0,[322,438]]]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[435,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[435,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[263,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],412]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,260,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,260]]]]]],[[[423,[431]],[423,[431]]]],[[[423,[431]],[423,[431]]]],[[[424,[431]],[424,[431]]]],[[[424,[431]],[424,[431]]]],[[[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[418,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]],[262,[[0,[409,[484,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]]]]]],417,417,[435,[[0,[409,[484,[[0,[409,[484,[[0,[409,484]]]]]]]]]],417,417]]]]]],0,[301,[[234,[[0,[437,322]]]]]],[301,[[234,[[0,[437,322]]]]]],[[[262,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409,417,417,[422,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409,417,417]]]]],[[0,[[433,[[0,[[433,[[0,[[433,[[0,[[433,[[0,[433,410]],409]],410]],409]],410]],409]],410]],409]],410]],409]],[301,[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,410]]]],410]]]],410]]]],410]],412,412]]]],[301,[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,410]]]],410]]]],410]]]],410]],412,412]]]],[301,[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,410]]]],410]]]],410]]]],410]],368,417]]]],[301,[[262,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433,410]]]],410]]]],410]]]],410]],368,417]]]],[[[262,[[0,[409,442]],417,417]],[262,[[0,[409,442]],417,417]]],[[262,[[0,[409,442]],417,417]]]],[[[262,[442,409,417,417,[418,[442,409,417,417]]]],[262,[442,409,417,417,[418,[442,409,417,417]]]]],[[262,[442,409,417,417]]]],[[[263,[[0,[409,442]],412]],[263,[[0,[409,442]],412]]],[[263,[[0,[409,442]],412]]]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]],16,16],[[473,[436,[454,[417]],417,417]]]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]],16,16],[[473,[436,[454,[417]],417,417]]]],[[[262,[417,417,[439,[417,417]]]]]],[[[262,[409,417,417,[439,[409,417,417]]]],9,9]],[[[262,[409,417,417,[439,[409,417,417]]]],9,9]],[[]],[[[262,[417,417,[439,[417,417]]]]]],[[[263,[409,412]],9,9]],[[9,9]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[435,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,417]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],[262,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]],417,260,[418,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]],417,260]]]],411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]],[434,[411,[0,[409,410,[433,[411,[0,[409,410,433,434]]]],[434,[411,[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]]],[[474,[436,[469,[260]],417]]]],[[[262,[436,[469,[260]],[469,[260]],[418,[436,[469,[260]],[469,[260]]]]]]],[[262,[[469,[260]],260]]]],[[[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]]],[[475,[436,[469,[260]],417]]]],0,[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[415,431]]],[[423,[415,431]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[423,[415,431]]],[[423,[415,431]]]],[[[235,[[423,[415,431]]]]]],[[[425,[415,431]]]],[[]],[[[234,[[0,[502,437]]]]],[[21,[84]]]],[[[234,[[0,[502,437]]]]],[[21,[51]]]],[[[420,[415,419]]],[[262,[415]]]],[[[262,[[0,[409,410,411]],[0,[[482,[260]],552]],[0,[[482,[260]],552]],[422,[[0,[409,410,411]],[0,[[482,[260]],552]],[0,[[482,[260]],552]]]]]]],[[262,[[0,[409,410,411]]]]]],[[[262,[[0,[409,410]],[482,[260]],260,[422,[[0,[409,410]],[482,[260]],260]]]]],[[262,[[0,[409,410]],260]]]],[[[235,[[234,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[424,[[0,[431,415]]]]]]],[[262,[[0,[431,415]],260,260,[261,[[0,[431,415]]]]]]]],[[[235,[[423,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[263,[411,409,[512,[260]],412]]],[[262,[411,409,260]]]],[[[425,[[0,[410,411]],409]]],[[262,[[0,[410,411]],409]]]],[[[426,[[0,[410,411]],409]]],[[262,[[0,[410,411]],409]]]],[[[427,[[0,[410,411,322]],409]]],[[262,[[0,[410,411,322]],409]]]],[[[236,[431,[506,[[262,[431]]]]]]],[[262,[431]]]],[[[429,[431,[506,[[262,[431]]]]]]],[[262,[431]]]],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[234,[[0,[502,437]]]]],[[21,[530]]]],[[[234,[[0,[502,437]]]]],[[21,[378]]]],[[[234,[[0,[502,437]]]]],[[21,[518]]]],[[[234,[[0,[502,437]]]]],[[21,[384]]]],[[[234,[[0,[502,437]]]]],[[21,[375]]]],[[[234,[[0,[502,437]]]]],[[21,[404]]]],[[[235,[[424,[431]]]]],[[236,[431,[235,[[423,[431]]]]]]]],[[[236,[431,[506,[[262,[431]]]]]]],[[262,[431]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[473,[436,[454,[417]],417]]],21],[[[449,[415]]],[[420,[415,452]]]],[[[450,[415]]],[[420,[415,452]]]],[[[235,[[423,[431]]]]],[[425,[431]]]],[[[235,[[234,[431]]]]],[[425,[431]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[322,260,260,[422,[322,260,260]]]]],322],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[234,[[234,[456]]]],[[[420,[[0,[415,[506,[415]]]],419]]],[[262,[415]]]],[[[420,[[0,[415,[506,[415]]]],419]]],[[420,[415,[489,[419]]]]]],[[[262,[409,417,417]]],[[262,[[0,[409,[456,[409]]]],417,417]]]],[[[235,[[234,[415]]]]],[[235,[[234,[[0,[415,[456,[415]]]]]]]]]],[[[235,[[423,[415]]]]],[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]]],[[[235,[[424,[415]]]]],[[236,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]]],[[[235,[[424,[431]]]]],[[235,[[424,[[0,[431,[456,[431]]]]]]]]]],[[[235,[[423,[415]]]]],[[235,[[424,[[0,[415,[456,[415]]]]]]]]]],[[[235,[[423,[415]]]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[235,[[234,[415]]]]],[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]]],[[[235,[[234,[415]]]]],[[425,[[0,[415,[456,[415]]]]]]]],[[[235,[[423,[409]]]]],[[235,[[423,[[0,[409,[456,[409]]]]]]]]]],[[[235,[[424,[415]]]]],[[429,[[0,[415,[456,[415]]]],[235,[[423,[[0,[415,[456,[415]]]]]]]]]]]],[[[235,[[423,[415]]]]],[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]]],[[[235,[[234,[415]]]]],[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]]],[[[235,[[234,[415]]]]],[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[234,[415]]]]]]]]]]]],[[[235,[[423,[415]]]]],[[425,[[0,[415,[456,[415]]]]]]]],[[[235,[[424,[415]]]]],[[262,[[0,[415,[456,[415]]]],260,260,[261,[[0,[415,[456,[415]]]]]]]]]],[[[235,[[423,[415]]]]],[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[235,[[423,[415]]]]]]]]]]]],[[[235,[[234,[415]]]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[235,[[424,[415]]]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[263,[409,412]]],[[263,[[0,[409,[456,[409]]]],412]]]],[[[263,[409,[512,[260]]]]],[[262,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,[457,[[0,[409,410,411,457,456]]]],[456,[409]]]]]],[456,[409]]]]]],[456,[409]]]],260]]]],[[[425,[415]]],[[429,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]]],[[[425,[415]]],[[235,[[424,[[0,[415,[456,[415]]]]]]]]]],[[[425,[415]]],[[425,[[0,[415,[456,[415]]]]]]]],[[[425,[415]]],[[235,[[423,[[0,[415,[456,[415]]]]]]]]]],[[[425,[415]]],[[236,[[0,[415,[456,[415]]]],[0,[[428,[[0,[415,[456,[415]]]]]],[456,[[425,[415]]]]]]]]]],[[[425,[415]]],[[262,[[0,[415,[456,[415]]]]]]]],[[[425,[415]]],[[235,[[234,[[0,[415,[456,[415]]]]]]]]]],[[[425,[415]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[423,[409]]],[[423,[[0,[409,[456,[409]]]]]]]],[[[424,[431]]],[[424,[[0,[431,[456,[431]]]]]]]],[[[426,[409]]],[[426,[[0,[409,[456,[409]]]]]]]],[[[426,[415]]],[[262,[[0,[415,[456,[415]]]]]]]],[[[426,[415]]],[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]]],[[[426,[415]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[426,[415]]],[[235,[[424,[[0,[415,[456,[415]]]]]]]]]],[[[426,[415]]],[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]]],[[[427,[415]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[427,[415]]],[[262,[[0,[415,[456,[415]]]]]]]],[[[427,[409]]],[[427,[[0,[409,[456,[409]]]]]]]],[[[236,[415,[0,[[428,[415]],[506,[[428,[[0,[415,[456,[415]]]]]]]]]]]]],[[429,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]]],[[[236,[415,[0,[[428,[415]],[506,[[428,[[0,[415,[456,[415]]]]]]]]]]]]],[[236,[[0,[415,[456,[415]]]],[428,[[0,[415,[456,[415]]]]]]]]]],[[[236,[415,[235,[[423,[415]]]]]]],[[235,[[424,[[0,[415,[456,[415]]]]]]]]]],[[[236,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]],[[262,[[0,[415,[456,[415]]]]]]]],[[[236,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[429,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]],[[420,[[0,[415,[456,[415]]]],[489,[466]]]]]],[[[429,[415,[0,[[428,[415]],[506,[[262,[415]]]],[506,[[262,[[0,[415,[456,[415]]]]]]]]]]]]],[[262,[[0,[415,[456,[415]]]]]]]],[[[429,[[0,[415,[506,[[0,[415,[456,[[0,[415,[506,[[0,[415,456]]]]]]]]]]]]]],[0,[[428,[[0,[415,[506,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]],[506,[[428,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]]]]],[[429,[[0,[415,[456,[[0,[415,[506,[[0,[415,[456,[[0,[415,506]]]]]]]]]]]]]],[428,[[0,[415,[456,[[0,[415,[506,[[0,[415,456]]]]]]]]]]]]]]]],[[[234,[[0,[502,437]]]]],[[21,[224]]]],[[[234,[[0,[502,437]]]]],[[21,[305]]]],[[[234,[[0,[502,437]]]]],[[21,[89]]]],[[[234,[[0,[502,437]]]]],[[21,[188]]]],[[[234,[[0,[502,437]]]]],[[21,[19]]]],[[[234,[[0,[502,437]]]]],[[21,[9]]]],[[[449,[415]]],415],[[[262,[409,417,417,[439,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]]]],[[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]],417,417,[422,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]],417,417]]]]],[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]],[434,[[0,[409,410,[433,[[0,[409,410,433,434]]]],[434,[[0,[409,410,433,434]]]]]]]]]]]]]]]]]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]],[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417]]]],[[[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[418,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]],[262,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]]]]]],417,417,[435,[[0,[409,410,411,[433,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]],[434,[[0,[409,410,411,[433,[[0,[409,410,411,433,434]]]],[434,[[0,[409,410,411,433,434]]]]]]]]]],417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[418,[432,417,417]]]]],[[262,[432,417,417]]]],[[[262,[432,417,417,[418,[432,417,417]]]],[262,[432,417,417,[435,[432,417,417]]]]]],[[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]],409]]]],409]]]],409]]]],409,417,417,[422,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]],409]]]],409]]]],409,417,417]]]]],[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]],409]]]],409]]]],409]]]],409]]]],409]],[[[263,[260]]],[[263,[260]]]],[[[420,[415,419]],[263,[415,260]]],[[263,[415,260]]]],[[[262,[415,260,260,[418,[415,260,260]]]],[263,[415,260]]],[[263,[415,260]]]],[[[262,[415,260,260,[418,[415,260,260]]]],[263,[415,260]]],[[263,[415,260]]]],[[[235,[[234,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[234,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[423,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[424,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[235,[[423,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[425,[431]],[263,[431,260]]],[[263,[431,260]]]],[[[425,[431]],[263,[431,260]]],[[263,[431,260]]]],[[[426,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]]]],[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]],[[263,[[0,[409,[433,[[0,[409,[433,[[0,[409,[433,[[0,[409,433]]]]]]]]]]]]]],260]]]],[[[427,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]]]],[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]],[[263,[[0,[409,[434,[[0,[409,[434,[[0,[409,[434,[[0,[409,434]]]]]]]]]]]]]],260]]]],[[[236,[431,[428,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[429,[431,[428,[431]]]],[263,[431,260]]],[[263,[431,260]]]],[[[262,[260,260,261]]],[[262,[260,260,261]]]],[[[420,[415,419]],[262,[415,260,260,[261,[415]]]]],[[262,[415,260,260,[261,[415]]]]]],[[[262,[415,[443,[260]],[443,[260]],[418,[415,[443,[260]],[443,[260]]]]]],[262,[415,260]]],[[262,[415,260]]]],[[[235,[[424,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[423,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[234,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[425,[431]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[425,[431]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[236,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[429,[431,[428,[431]]]],[262,[431,260,260,[261,[431]]]]],[[262,[431,260,260,[261,[431]]]]]],[[[235,[[424,[431]]]]],[[426,[431]]]],[[431,431,431],[[236,[431,[425,[431]]]]]],[[431,431,431],[[236,[431,[235,[[423,[431]]]]]]]],[[431,431],[[236,[431,[235,[[234,[431]]]]]]]],[[431,431],[[236,[431,[425,[431]]]]]],0,[[[262,[409,417,417,[422,[409,417,417]]]]],[[262,[409,417,417]]]],[[[425,[409]]],[[425,[409]]]],[[[262,[409,417,417,[439,[409,417,417]]]]]],[[[425,[409]]]],[[[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[439,[409,417,417]]]]]],0,[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[],[[22,[[448,[447]],553]]]],[[[262,[409,417,417,[422,[409,417,417]]]]],[[21,[[262,[409,417,417]]]]]],[456,21],[456,21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[526,[[22,[[235,[[262,[51,260,260,[261,[51]]]]]]]]]],[[],22],[74,[[22,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[507,[[22,[[235,[[262,[51,260,260,[261,[51]]]]]]]]]],[514,[[22,[[235,[[262,[51,260,260,[261,[51]]]]]]]]]],[519,[[22,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[511,[[22,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[88,[[22,[[235,[[262,[84,260,260,[261,[84]]]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[524,[[22,[[236,[84,[235,[[423,[84]]]]]]]]]],[510,[[22,[[236,[51,[235,[[234,[51]]]]]]]]]],[523,[[22,[[236,[84,[235,[[234,[84]]]]]]]]]],[515,[[22,[[236,[51,[235,[[423,[51]]]]]]]]]],[[],22],[510,[[22,[[429,[51,[235,[[234,[51]]]]]]]]]],[523,[[22,[[429,[84,[235,[[234,[84]]]]]]]]]],[515,[[22,[[429,[51,[235,[[423,[51]]]]]]]]]],[[],22],[524,[[22,[[429,[84,[235,[[423,[84]]]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[420,[415,419]]],[[21,[[420,[415,419]]]]]],[[[262,[436,417,417,[418,[436,417,417]]]]],[[21,[[262,[436,417,417]]]]]],[[[423,[415,431]]],[[21,[[423,[415,431]]]]]],[[[424,[415,431]]],[[21,[[424,[415,431]]]]]],[[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411,410]],409]],411,410]],409]],411,410]],409]],411,410]],409]]],[[21,[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411,410]],409]],411,410]],409]],411,410]],409]],411,410]],409]]]]]],[[[467,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],[[21,[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]]]],[[[468,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],[[21,[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]]]],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],[[21,[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]]]],[[[471,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]],[[21,[[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]]]]]],[[[420,[415,419]]],16],[[[262,[436,417,417,[435,[436,417,417]]]]],16],[[[423,[431]]]],[[[424,[415,431]]],16],[[[427,[[0,[[457,[[0,[[457,[[0,[[457,[[0,[457,411,410]],409]],411,410]],409]],411,410]],409]],411,410]],409]]],16],[[[391,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]]]],[262,[436,[454,[[454,[[454,[454]]]]]],[454,[[454,[[454,[454]]]]]],[435,[436,[454,[[454,[454]]]],[454,[[454,[454]]]]]]]]],16],[[[427,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],411,410]]]],[263,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],411,410]],260]]],[[21,[[263,[[0,[409,[457,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],[434,[[0,[409,[457,[[0,[409,457,434,411,410]]]],[434,[[0,[409,457,434,411,410]]]],411,410]]]],411,410]]]],411,410]],260]]]]]],[[[262,[436,417,417]],[262,[436,417,417,[435,[436,417,417]]]]],16],[[[236,[415,431,[235,[[423,[415,431]]]]]],[236,[415,431,[235,[[423,[415,431]]]]]],415,431,415,431],[[21,[[236,[415,431,[235,[[423,[415,431]]]]]]]]]],[[[236,[415,431,[425,[415,431]]]],[236,[415,431,[425,[415,431]]]],415,431,415,431],[[21,[[236,[415,431,[425,[415,431]]]]]]]],[547,[[21,[[235,[547]]]]]],[[[262,[436,[0,[417,[469,[260]]]],[0,[417,[469,[260]]]]]],9],[[21,[[472,[436,[0,[417,[469,[260]]]]]]]]]],[[[262,[436,[454,[417]],417]],16,16,9],[[21,[[473,[436,[454,[417]],417]]]]]],[[[262,[436,[469,[260]],417,[469,[260]],417]],9],[[21,[[474,[436,[469,[260]],417]]]]]],[547,21],[[[262,[436,[454,[417]],417]],16,16,9],[[21,[[473,[436,[454,[417]],417]]]]]],[[[262,[436,409,417,417,[418,[436,409,417,417]]]]],[[21,[[262,[436,409,417,417]]]]]],[[[262,[436,409,417,417,[435,[436,409,417,417]]]]],21],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]],9],21],[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]],9],[[21,[[472,[436,[469,[260]],417]]]]]],[[[235,[[424,[415,431]]]],[235,[[424,[415,431]]]],415,431,415,431],[[21,[[235,[[424,[415,431]]]]]]]],[[[262,[436,409,417,417,[435,[436,409,417,417]],[418,[436,409,417,417]]]]]],[[[235,[[262,[415,417,260,[418,[415,417,260]]]]]],[235,[[262,[415,417,260,[418,[415,417,260]]]]]],415,415],[[21,[[235,[[262,[415,417,260]]]]]]]],[[[235,[[423,[415,431]]]],[235,[[423,[415,431]]]],415,431,415,431],[[21,[[235,[[423,[415,431]]]]]]]],[[[425,[415,431]],[425,[415,431]],415,431,415,431],[[21,[[425,[415,431]]]]]],[[],21],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[21,[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]]]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]],16,16,9],[[21,[[473,[436,[454,[417]],417,417]]]]]],[[[262,[436,[454,[417]],417,417,[418,[436,[454,[417]],417,417]]]],16,16,9],[[21,[[473,[436,[454,[417]],417,417]]]]]],[[[262,[436,[469,[260]],417,[469,[260]],417,[418,[436,[469,[260]],417,[469,[260]],417]]]],9],[[21,[[474,[436,[469,[260]],417]]]]]],[[],[[21,[9]]]],[[],[[21,[9]]]],[[],[[21,[9]]]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[455,[436,[454,[417]],417]]],[[262,[436,[454,[417]]]]]],[[[468,[436,[454,[417]],417]]],[[262,[436,417]]]],[[[391,[436,[454,[417]],417]]],[[262,[436,417]]]],0,0,[[[262,[415,436,417,417,[418,[415,436,417,417]]]]],[[21,[[476,[415,436,417]]]]]],[[[420,[415,419]],[420,[415,419]],89],16],[[[262,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],417,417,[422,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]],417,417]]]],[262,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],417,417,[422,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]],417,417]]]],89],16],[[[235,[[424,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]]]],[235,[[424,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]]]],89],16],[[[235,[[423,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]]]],[235,[[423,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]]]],89],16],[[[235,[[262,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],417,417,[422,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]],417,417]]]]]],[235,[[262,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],417,417,[422,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]],417,417]]]]]],89],16],[[[235,[[234,[415]]]],[235,[[234,[415]]]],89],16],[[[263,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],412]],[263,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]],412]],89],16],[[[425,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],[425,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],89],16],[[[423,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]],[423,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]],89],16],[[[424,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]],[424,[[0,[415,[554,[[0,[415,[554,[[0,[415,[554,[[0,[415,554]]]]]]]]]]]]]]]],89],16],[[[426,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],[426,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],89],16],[[[427,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],[427,[[0,[409,[554,[[0,[409,[554,[[0,[409,[554,[[0,[409,554]]]]]]]]]]]]]]]],89],16],[[[236,[415,[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[428,554]]]]]]]]]]]]]]]],[236,[415,[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[428,554]]]]]]]]]]]]]]]],89],16],[[[429,[415,[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[428,554]]]]]]]]]]]]]]]],[429,[415,[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[[428,[415]],[554,[[0,[428,554]]]]]]]]]]]]]]]],89],16],[[417,417],[[262,[[440,[409]],417,417]]]],[[[455,[436,[454,[417]],417]]]],[[[460,[432,417]]],[[262,[432,417,417]]]],[[[467,[436,[454,[417]],417]]]],[[[468,[436,[454,[417]],417]]]],[[[470,[436,[469,[260]]]]]],[[[391,[436,[454,[417]],417]]]],[[[471,[436,[454,[417]],417]]]],[[[472,[436,[0,[417,[469,[260]]]]]]]],[[[475,[436,[469,[260]]]]]],[[[460,[432,417]]],[[262,[432,417,417]]]],[[[470,[436,[469,[260]]]]],[[262,[436,[469,[260]],[469,[260]]]]]],[[[467,[436,[454,[417]],417]]],[[262,[436,417]]]],[[[471,[436,[454,[417]],417]]],[[262,[436,417]]]],[[[475,[436,[469,[260]]]]]],[[[449,[415]],[263,[415,260]]],[[263,[415,260]]]],[[[450,[415]],[263,[415,260]]],[[263,[415,260]]]],[[]],[[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]],[[234,[[0,[415,[416,[[0,[415,[416,[[0,[415,[416,[[0,[415,416]]]]]]]]]]]]]]]]]],[[[234,[[0,[322,437]]]],[0,[322,437]]],[[234,[[0,[322,437]]]]]],[[[262,[432,417,417,[422,[432,417,417]]]]],[[262,[432,417,417]]]],[[]],[[[234,[431]]]],[[[262,[432,417,417,[439,[432,417,417]]]]]],[[[262,[432,417,417]]]],[[[423,[431]]]],[[[424,[431]]]],[[[420,[415,419]]],[[262,[415]]]],[235],[[[425,[409]]],[[262,[409,260,260,[261,[409]]]]]],[[[449,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[[450,[415]]],[[262,[415,260,260,[261,[415]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[[262,[[0,[409,410]],417,417,[418,[[0,[409,410]],417,417]]]]],[[262,[[0,[409,410]],417,417]]]],0,[[[455,[436,[454,[417]],417]]],[[262,[436,417]]]],0,[[],9],[368,9],[260,9],0,[[[262,[[0,[479,[456,[51]]]],409,417,417,[422,[[0,[479,[456,[51]]]],409,417,417]]]]],[[0,[479,[456,[51]]]],409]],[[[423,[431]]],[[262,[431,260,260,[385,[431,260,260]]]]]],0,0,0,[[[423,[431]]],[[262,[431,260,260,[374,[431,260,260]]]]]],[[[262,[417,417,[422,[417,417]]]],9]],[[[262,[417,260,[422,[417,260]]]],9]],[[[262,[417,260,[439,[417,260]]]],9]],[[[262,[417,417,[422,[417,417]]]]],[[262,[368,368,[385,[368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[368,368,[374,[368,368]]]]]],[[[262,[417,417,[422,[417,417]]]],[480,[417]],[480,[417]]],[[262,[385]]]],[[[262,[417,417,[439,[417,417]]]],[480,[417]],[480,[417]]],[[262,[374]]]],[[[262,[417,417,[422,[417,417]]]]],[[262,[368,368,[385,[368,368,368,368]]]]]],[[[262,[417,417,[439,[417,417]]]]],[[262,[368,368,[374,[368,368,368,368]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[[436,436,436],436],[[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]]]],[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]]]],[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]]]]],[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[433,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]],[484,[[0,[365,[416,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[433,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]],[484,[[0,[365,[416,[[0,[365,416,433,484]]]],[433,[[0,[365,416,433,484]]]],[484,[[0,[365,416,433,484]]]]]]]]]]]]]]]]]]]],[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[[],16],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[],[[262,[[0,[409,410,411]],[0,[412,413]],260]]]],[[],[[235,[[262,[[0,[409,410,411]],[0,[412,413]],260]]]]]],[[],410],[[],[[234,[[0,[322,437]]]]]],[[]],[[],[[262,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,[433,[[0,[409,410,433]]]]]]]]]]]]]],412,412]]]],[[]],[[],[[423,[431]]]],[[]],[[]],[[],[[424,[431]]]],[[9,9],[[262,[410,409,368,368]]]],[9,[[262,[410,409,368,412]]]],[9,[[262,[410,409,412,368]]]],[[],[[262,[410,409,412,412]]]],[[417,417],[[262,[410,409,417,417]]]],[[[449,[415]]],415],[[[450,[415]]],415],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],231]],[[[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],231]],[[[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],231],[[262,[409,417,417]]]],[[322,322,218],322],[[[262,[417,417,[439,[417,417]],[422,[417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],231]],[[[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],[262,[409,417,417,[422,[409,417,417]]]],231],[[262,[409,417,417]]]],[[[449,[415]]],415],[[[450,[415]]],415],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],[[[262,[409,[0,[412,413]],260,[422,[409,[0,[412,413]],260]]]]],[[262,[409,260,260,[261,[409]]]]]],[[[263,[409,260]]],[[263,[409,260]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],193],[[],193],[[],9],[[]],0,0,0,0,0,[[],9],0,[[]],[[]],[[],9],[9],[[9,9]],[9],[9],[[9,9]],[[9,9]],[9],[9],[[9,9]],0,[[]],[[],16],[[],16],0,[[9,9],9],[[]],[[]],[[[262,[417,417,[418,[417,417]]]],[262,[417,417,[418,[417,417]]]]]],[[]],[[]],[[]],[[]],[[]],0,[[[262,[417,417,[418,[417,417]]]]]],[[]],[[]],0,[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[]],0,[[]],0,0,[[]],[[]],[[]],[[9,9]],[[],[[21,[9]]]],0,[[]],[[],9],0,0,0,0,0,0,0,0,0,[380],[380],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[555,555],[[]],[[],[[8,[6,7]]]],[9],[9],[[]],[9],[[555,10],[[22,[382]]]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[19,19]],[19],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[556,[[0,[322,409]]]]],[[556,[[0,[322,409]]]]]],[[[557,[[0,[322,409]]]]],[[557,[[0,[322,409]]]]]],[[[558,[[0,[322,409]]]]],[[558,[[0,[322,409]]]]]],[[[559,[[0,[322,409]]]]],[[559,[[0,[322,409]]]]]],[[[560,[[0,[322,409]]]]],[[560,[[0,[322,409]]]]]],[[[561,[[0,[322,409]]]]],[[561,[[0,[322,409]]]]]],[[[562,[[0,[322,409]]]]],[[562,[[0,[322,409]]]]]],[[[563,[[0,[322,409]]]]],[[563,[[0,[322,409]]]]]],[[[564,[[0,[322,409]]]]],[[564,[[0,[322,409]]]]]],[[[565,[[0,[322,409]]]]],[[565,[[0,[322,409]]]]]],[[[566,[[0,[322,409]]]]],[[566,[[0,[322,409]]]]]],[[[567,[[0,[322,409]]]]],[[567,[[0,[322,409]]]]]],[[[568,[[0,[322,409]]]]],[[568,[[0,[322,409]]]]]],[[[569,[[0,[322,409]]]]],[[569,[[0,[322,409]]]]]],[[[570,[[0,[322,409]]]]],[[570,[[0,[322,409]]]]]],[[[571,[[0,[322,409]]]]],[[571,[[0,[322,409]]]]]],[[[572,[[0,[322,409]]]]],[[572,[[0,[322,409]]]]]],[[[573,[[0,[322,409]]]]],[[573,[[0,[322,409]]]]]],[[[574,[[0,[322,409]]]]],[[574,[[0,[322,409]]]]]],[[[575,[[0,[322,409]]]]],[[575,[[0,[322,409]]]]]],[[[576,[[0,[322,409]]]]],[[576,[[0,[322,409]]]]]],[[[577,[[0,[322,409]]]]],[[577,[[0,[322,409]]]]]],[[[578,[[0,[322,409]]]]],[[578,[[0,[322,409]]]]]],[[[579,[[0,[322,409]]]]],[[579,[[0,[322,409]]]]]],[[[580,[[0,[322,409]]]]],[[580,[[0,[322,409]]]]]],[[[581,[[0,[322,409]]]]],[[581,[[0,[322,409]]]]]],[[[582,[[0,[322,409]]]]],[[582,[[0,[322,409]]]]]],[[[583,[[0,[322,409]]]]],[[583,[[0,[322,409]]]]]],[[[584,[[0,[322,409]]]]],[[584,[[0,[322,409]]]]]],[[[585,[[0,[322,409]]]]],[[585,[[0,[322,409]]]]]],[[[586,[[0,[322,409]]]]],[[586,[[0,[322,409]]]]]],[[[587,[[0,[322,409]]]]],[[587,[[0,[322,409]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[[[556,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[556,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[557,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[557,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[558,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[558,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[559,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[559,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[560,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[560,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[561,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[561,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[562,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[562,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[563,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[563,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[564,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[564,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[565,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[565,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[566,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[566,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[567,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[567,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[568,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[568,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[569,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[569,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[570,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[570,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[571,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[571,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[572,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[572,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[573,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[573,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[574,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[574,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[575,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[575,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[576,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[576,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[577,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[577,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[578,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[578,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[579,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[579,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[580,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[580,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[581,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[581,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[582,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[582,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[583,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[583,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[584,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[584,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[585,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[585,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[586,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[586,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[[[587,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]],[587,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,409]]]],409]]]],409]]]],409]]]]],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[556,[[0,[383,409]]]],10],[[22,[382]]]],[[[557,[[0,[383,409]]]],10],[[22,[382]]]],[[[558,[[0,[383,409]]]],10],[[22,[382]]]],[[[559,[[0,[383,409]]]],10],[[22,[382]]]],[[[560,[[0,[383,409]]]],10],[[22,[382]]]],[[[561,[[0,[383,409]]]],10],[[22,[382]]]],[[[562,[[0,[383,409]]]],10],[[22,[382]]]],[[[563,[[0,[383,409]]]],10],[[22,[382]]]],[[[564,[[0,[383,409]]]],10],[[22,[382]]]],[[[565,[[0,[383,409]]]],10],[[22,[382]]]],[[[566,[[0,[383,409]]]],10],[[22,[382]]]],[[[567,[[0,[383,409]]]],10],[[22,[382]]]],[[[568,[[0,[383,409]]]],10],[[22,[382]]]],[[[569,[[0,[383,409]]]],10],[[22,[382]]]],[[[570,[[0,[383,409]]]],10],[[22,[382]]]],[[[571,[[0,[383,409]]]],10],[[22,[382]]]],[[[572,[[0,[383,409]]]],10],[[22,[382]]]],[[[573,[[0,[383,409]]]],10],[[22,[382]]]],[[[574,[[0,[383,409]]]],10],[[22,[382]]]],[[[575,[[0,[383,409]]]],10],[[22,[382]]]],[[[576,[[0,[383,409]]]],10],[[22,[382]]]],[[[577,[[0,[383,409]]]],10],[[22,[382]]]],[[[578,[[0,[383,409]]]],10],[[22,[382]]]],[[[579,[[0,[383,409]]]],10],[[22,[382]]]],[[[580,[[0,[383,409]]]],10],[[22,[382]]]],[[[581,[[0,[383,409]]]],10],[[22,[382]]]],[[[582,[[0,[383,409]]]],10],[[22,[382]]]],[[[583,[[0,[383,409]]]],10],[[22,[382]]]],[[[584,[[0,[383,409]]]],10],[[22,[382]]]],[[[585,[[0,[383,409]]]],10],[[22,[382]]]],[[[586,[[0,[383,409]]]],10],[[22,[382]]]],[[[587,[[0,[383,409]]]],10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[556,[[0,[537,409]]]],186]],[[[557,[[0,[537,409]]]],186]],[[[558,[[0,[537,409]]]],186]],[[[559,[[0,[537,409]]]],186]],[[[560,[[0,[537,409]]]],186]],[[[561,[[0,[537,409]]]],186]],[[[562,[[0,[537,409]]]],186]],[[[563,[[0,[537,409]]]],186]],[[[564,[[0,[537,409]]]],186]],[[[565,[[0,[537,409]]]],186]],[[[566,[[0,[537,409]]]],186]],[[[567,[[0,[537,409]]]],186]],[[[568,[[0,[537,409]]]],186]],[[[569,[[0,[537,409]]]],186]],[[[570,[[0,[537,409]]]],186]],[[[571,[[0,[537,409]]]],186]],[[[572,[[0,[537,409]]]],186]],[[[573,[[0,[537,409]]]],186]],[[[574,[[0,[537,409]]]],186]],[[[575,[[0,[537,409]]]],186]],[[[576,[[0,[537,409]]]],186]],[[[577,[[0,[537,409]]]],186]],[[[578,[[0,[537,409]]]],186]],[[[579,[[0,[537,409]]]],186]],[[[580,[[0,[537,409]]]],186]],[[[581,[[0,[537,409]]]],186]],[[[582,[[0,[537,409]]]],186]],[[[583,[[0,[537,409]]]],186]],[[[584,[[0,[537,409]]]],186]],[[[585,[[0,[537,409]]]],186]],[[[586,[[0,[537,409]]]],186]],[[[587,[[0,[537,409]]]],186]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],9],[[]],[[]],[9],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[21,[9]]]],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[540,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]],[[540,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]]],[[[549,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]],[[549,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]]],[[[477,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]],[[477,[322,[0,[322,417]],[0,[322,417]],[0,[322,[422,[322,[0,[322,417]],[0,[322,417]]]]]]]]]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[540,[417,417,[422,[417,417]]]]],9],[[[541,[417,417,[439,[417,417]]]]],9],[[[549,[417,417,[422,[417,417]]]]],9],[[[550,[417,417,[439,[417,417]]]]],9],[[[477,[417,417,[422,[417,417]]]]],9],[[[478,[417,417,[439,[417,417]]]]],9],0,0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[540,[383,[0,[383,417]],[0,[383,417]],[0,[383,[422,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[[541,[383,[0,[383,417]],[0,[383,417]],[0,[383,[439,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[[549,[383,[0,[383,417]],[0,[383,417]],[0,[383,[422,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[[550,[383,[0,[383,417]],[0,[383,417]],[0,[383,[439,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[[477,[383,[0,[383,417]],[0,[383,417]],[0,[383,[422,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[[478,[383,[0,[383,417]],[0,[383,417]],[0,[383,[439,[383,[0,[383,417]],[0,[383,417]]]]]]]],10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[540,[417,417,[422,[417,417]]]]],9],[[[541,[417,417,[439,[417,417]]]]],9],[[[549,[409,417,417,[422,[409,417,417]]]]],9],[[[550,[409,417,417,[439,[409,417,417]]]]],9],[[[477,[409,417,417,[422,[409,417,417]]]]],9],[[[478,[409,417,417,[439,[409,417,417]]]]],9],0,0,0,0,[[[422,[417,417]]],[[540,[417,417,[422,[417,417]]]]]],[[[439,[417,417]]],[[541,[417,417,[439,[417,417]]]]]],[[[540,[417,417,[422,[417,417]]]]],21],[[[541,[417,417,[439,[417,417]]]]],21],[[[549,[417,417,[422,[417,417]]]]],21],[[[550,[417,417,[439,[417,417]]]]],21],[[[477,[417,417,[422,[417,417]]]]],21],[[[478,[417,417,[439,[417,417]]]]],21],[[[540,[417,417,[422,[417,417]]]]],21],[[[541,[417,417,[439,[417,417]]]]],21],[[[477,[417,417,[422,[417,417]]]]],21],[[[478,[409,417,417,[439,[409,417,417]]]]],21],0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],0,0,[[[540,[417,417,[422,[417,417]]]]]],[[[541,[417,417,[439,[417,417]]]]]],[[[549,[417,417,[422,[417,417]]]]]],[[[550,[417,417,[439,[417,417]]]]]],[[[477,[417,417,[422,[417,417]]]]]],[[[478,[417,417,[439,[417,417]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],193],[[],193],[[]],[[9,9]],[9],[9],[[9,9]],[[9,9]],[9],[9],[[9,9]],[[]],[[],16],[[9,9],9],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[440],[[]],[[]],[440],[[]],[[]],[[]],[[]],[588,588],[589,589],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],[179,16],[[588,588],16],[[589,589],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[588,10],[[22,[382]]]],[[589,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[440],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[[19,19]],[19],[19],[[19,19],16],[[19,19],16],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[262,[415,412,412]]],16],0,0,0,[[],16],[[]],[[]],[[]],[[[263,[260]]],[[263,[260]]]],[[[235,[[262,[260,260,261]]]]],[[235,[[262,[260,260,261]]]]]],[[[262,[260,260]]],[[262,[260,260]]]],0,0,0,0,0,0,0,0,[[[263,[260]]],[[263,[260]]]],[[[262,[260,260,261]]],[[262,[260,260,261]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[262,[436,417,417]],[262,[436,417,417,[435,[436,417,417]]]]],16],0,0,0,0,0,[[436,436,436],436],[[[262,[415,417,417]]],[[262,[415,417,260]]]],[[[262,[415,417,417]],[262,[415,417,260]]]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[[590,[436]]]],0,[[[262,[436,260,260,[418,[436,260,260]]]]],21],[[[262,[436,260,260,[418,[436,260,260]]]]],21],[[[590,[[0,[322,436]]]]],[[590,[[0,[322,436]]]]]],[[]],[[],[[8,[6,7]]]],[9],[9],[[]],[9],[[[590,[[0,[383,436]]]],10],[[22,[382]]]],[[]],[[]],[[]],[[],[[590,[436]]]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[[590,[436]]],[[590,[436]]]],[[],16],[[436,436]],[436,[[590,[436]]]],[[19,19]],[19],[[[590,[436]],[262,[436,417,417,[435,[436,417,417]]]]]],[[[590,[436]],[262,[436,417,417,[435,[436,417,417]]]]]],[[[590,[436]]],436],0,[[]],[[]],[[],21],[[]],[[],22],[[],22],[[436,436],21],[[],23],[[],21],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[591,591],[215,215],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[215,215],183],[[],183],[[215,41],592],[[],591],[[],215],[9],[591],[9],[591],[9],[9],[[]],[[]],[9],[9],[179,16],[186],[[215,215],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[215,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[[215,186]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[215,215],[[21,[183]]]],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[19,188],[[],20],[[],20],[[591,215],258],[215,258],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[593,92],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[593,88,16],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[46,46],[128,128],[594,594],[63,63],[593,593],[595,595],[596,596],[597,597],[598,598],[599,599],[600,600],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],46],[[],128],[[],594],[[],63],[[],593],[[],595],[[],597],[[],599],[[],600],[[[62,[34]],[36,[597]],[36,[115]],[36,[139]]]],[46],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[46],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[33,138],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],0,0,[[593,593],16],[1,16],[[[35,[34]],[37,[118]],[37,[69]],[37,[31]],[36,[600]],[35,[17]],119,[37,[128]],[37,[158]]]],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,[[63,10],11],[[593,10],11],[[596,10],11],[[597,10],11],[[598,10],11],[[599,10],11],[[600,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13,598],[13],[12],[12],[13],0,0,[[60,[62,[34]],[64,[4]],[35,[45]],[36,[46]],[35,[17]],[37,[147]],[37,[158]],[37,[44]],[37,[42]],[37,[69]],[37,[128]],[37,[31]],[37,[41]],[37,[594]],[37,[597]],[37,[40]],[37,[99]],[62,[599]],[37,[117]],[37,[116]],[37,[115]],[37,[600]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[33,[21,[88]]],138],0,0,0,0,[[[35,[34]],[37,[128]],[36,[44]],[36,[46]],119]],[[[35,[34]],[62,[154]],[62,[45]],[37,[597]],[36,[46]],[35,[65]],[36,[41]],[62,[598]],[37,[79]],[36,[69]],[78,[76]],[35,[111]],[35,[38]]]],[[[35,[38]],[35,[34]],[37,[128]],[37,[63]],[36,[41]],[36,[42]],[37,[594]],[36,[595]],[37,[44]]]],[33,138],0,[27],[27],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[33,[21,[33]]],138],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[[35,[34]],[62,[45]],[37,[44]],[37,[31]],[36,[128]],[36,[46]],[35,[17]]]],[33,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[27,106]],[[27,106]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[147,147],[[]],[[],[[8,[6,7]]]],0,[[],147],[9],[9],[[]],[9],[[]],[[]],[[]],[13],[12],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[27],[[19,19]],[19],[19],[[],20],0,0,[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[[35,[34]],[37,[147]]]],[90,138],[[]],0,0,0,[[601,138]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[],601],[9],[9],[9],[9],[[]],[[]],[9],[9],[[602,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[602,217],[601,217],[[],9],[[],9],[[601,13]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[602,107],[601,107],[[],601],[19],[19],[19],[[601,13]],0,[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,[[[35,[34]],[35,[45]],[36,[147]],[36,[46]],[37,[44]],[37,[69]],[35,[17]],[37,[41]]]],[27],[[[35,[34]],[35,[45]],[36,[46]],[37,[147]],[35,[17]],[37,[69]],[37,[41]]]],0,[[[35,[34]],60,[36,[147]],[36,[595]],[36,[42]],[36,[41]],[36,[128]],[37,[31]],[37,[69]],[37,[44]]]],[27],[[[35,[34]],[36,[595]],[37,[147]]]],[27],[[[35,[34]],[37,[147]]]],0,[[[35,[34]],[35,[45]],[36,[46]],[36,[147]],[35,[17]],[37,[44]],[37,[69]],[62,[47]],61,[37,[144]]]],[27],[[[35,[34]],[35,[45]],[36,[46]],[37,[147]],[36,[69]]]],0,0,[[[35,[34]],[37,[147]],[36,[46]],[35,[17]],[35,[45]],[36,[42]],[37,[44]],[37,[69]]]],[27],0,[[[35,[34]],[35,[45]],[36,[46]],[36,[147]],[35,[17]],[37,[42]],[37,[44]],[37,[69]]]],[27],[[[35,[34]],[35,[45]],[36,[46]],[35,[17]],[37,[147]],[36,[69]],[62,[47]]]],0,[[[35,[34]],[35,[45]],[36,[46]],[36,[147]],[35,[17]],[37,[42]],[37,[44]],[37,[69]],[62,[47]]]],[27],[[[35,[34]],[35,[45]],[36,[46]],[37,[147]],[36,[69]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],490],[[],490],[[],1],[[],1],[[[3,[2]]]],[[],16],[[]],[[]],[51,16],[[[603,[490]]],490],[111,111],[[]],[[],[[8,[6,7]]]],[[],111],[9],[111],[9],[111],[19,490],[[]],[9],[[],84],[[],84],[[],51],[[],51],[[[193,[19]]]],[[]],[[]],[[]],[[]],[13],[12],[[],[[85,[19]]]],[[],530],[[],378],[[],518],[[],384],[[],375],[[],404],[[],224],[[],305],[[],89],[[],188],[[],19],[[],9],[[[603,[530]]],530],[[[603,[378]]],378],[[[603,[518]]],518],[[[603,[384]]],384],[[[603,[375]]],375],[[[603,[9]]],9],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[[603,[404]]],404],[[],490],[[193,9]],[27],[[19,19]],[19],[19],[[]],[193,21],[301,21],[[193,9],[[103,[7]]]],[[301,9],[[103,[7]]]],[[193,9],[[103,[7]]]],[193,21],[[],20],[193],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[[603,[224]]],224],[[[603,[305]]],305],[[[603,[89]]],89],[[[603,[188]]],188],[[[603,[19]]],19],[[],21],[[],490],[[[603,[9]]],9],[[]],[[193,218],21],[[193,218],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[84,84,84],84],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[],604],[9],[9],[9],[9],[[]],[[]],[9],[9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[604,84],0,[19],[19],[19],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[[84,84,84],84],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[75,84],[75,88],[75,88],[75,88],[75,75],[[]],[[],[[8,[6,7]]]],[[75,88],16],[[],75],[9],[9],[[]],[9],[[75,10],11],[[]],[[]],[[]],[12],[13],[75,84],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[75,84],[75,88],0,[75,88],0,[[84,84,84,84],75],[[75,75],16],[[19,19]],[19],[19],[75,84],[75,88],[[]],[[]],[[],21],[[]],[75,84],[75,88],[75,88],[[],22],[[],22],[[],23],[[],21],[[]],[75,84],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[605,605],[606,606],[607,607],[176,176],[608,608],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[25],0,[[],605],[[],606],[[],607],[[],176],[[],608],[9],[9],[606],[9],[9],[9],[9],[9],[606],[9],[9],[9],0,0,0,[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[179,16],[186],[[607,607],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[605,10],11],[[607,10],11],[[176,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[25],[606,301],[608,[[609,[607,176]]]],0,0,[[25,610]],[[607,186]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,[25],0,0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],0,[[],20],[[],20],[[],20],[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[608,611,612,613]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[614,614],[[]],[[],[[8,[6,7]]]],[615,[[21,[616]]]],[[],615],[[],614],[9],[9],[614],[9],[614],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[25],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[[64,[4]],[53,[52]],[62,[614]],[62,[615]],[35,[617]],[35,[618]],[35,[17]]]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[619,84],[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[187,187],[517,517],[525,525],[620,620],[621,621],[622,622],[[623,623,84],16],[[624,624,84],16],[[523,523,84],16],[[88,88,84],16],[[74,74,84],16],[[508,508,84],16],[[625,625,84],16],[[524,524,84],16],[[528,528,84],16],[[511,511,84],16],[[519,519,84],16],[[626,626,51],16],[[627,627,51],16],[[520,520,51],16],[[510,510,51],16],[[515,515,51],16],[[527,527,51],16],[[507,507,51],16],[[526,526,51],16],[[514,514,51],16],[[],[[22,[[629,[628]],630]]]],[[[631,[628]]],[[22,[[629,[628]],630]]]],[[[631,[628]]],[[22,[[629,[628]],630]]]],0,0,0,[[[632,[[0,[459,459]]]],632]],[[[633,[[0,[459,459]]]],633]],[[634,106]],[[619,619]],[[523,523]],[[88,88],88],[[88,84],88],[[74,74],74],[[74,84],74],[[508,508]],[[625,625]],[[524,524]],[[528,528],528],[[511,84],511],[[511,511],511],[[519,84],519],[[519,519],519],[[520,520]],[[510,510]],[[515,515]],[[527,527],527],[[507,51],507],[[507,507],507],[[526,51],526],[[526,526],526],[[514,51],514],[[514,514],514],[[187,518],187],[[187,187],187],[[517,517],517],[[517,518],517],[[525,525],525],[[525,518],525],[[91,89],91],[[91,91],91],[[521,521],521],[[521,89],521],[[522,89],522],[[522,522],522],[[620,384],620],[[620,620],620],[[621,384],621],[[621,621],621],[[622,622],622],[[622,384],622],[[635,635],635],[[635,188],635],[[636,188],636],[[636,636],636],[[637,637],637],[[637,188],637],[[177,177],177],[[[632,[[0,[322,638,638]]]],632]],[[[633,[[0,[638,638]]]],633]],[[619,619]],[[523,523]],[[88,84]],[[88,88]],[[74,74]],[[74,84]],[[508,508]],[[625,625]],[[524,524]],[[511,511]],[[511,84]],[[519,519]],[[519,84]],[[520,520]],[[510,510]],[[515,515]],[[507,507]],[[507,51]],[[526,51]],[[526,526]],[[514,51]],[[514,514]],[[187,187]],[[187,518]],[[517,517]],[[517,518]],[[525,525]],[[525,518]],[[91,89]],[[91,91]],[[521,521]],[[521,89]],[[522,522]],[[522,89]],[[620,384]],[[620,620]],[[621,621]],[[621,384]],[[622,622]],[[622,384]],[[635,188]],[[635,635]],[[636,636]],[[636,188]],[[637,637]],[[637,188]],[[177,177]],[[508,508],508],[[520,520],520],[[523,523],523],[[625,625],625],[[510,510],510],[[524,524],524],[[515,515],515],[[29,106],29],[138],[[639,138]],[[29,640,106],29],[[67,84]],[[38,177]],0,[509,16],[516,16],[513,16],[641,16],[642,16],0,[[],490],[[],490],[[88,88],84],[[74,74],84],[[528,528],84],[[511,511],84],[[527,527],51],[[507,507],51],[[526,526],51],[[[35,[38]],[35,[34]],[225,[[643,[42]]]],[225,[[643,[43]]]]]],[27],0,[509,16],[516,16],[513,16],[641,16],[642,16],[74,74],[511,511],[526,526],[74],[511],[526],[74,74],[511,511],[526,526],[[[645,[644]],[645,[644]]]],[[[645,[[0,[644,646,376,377]]]],647]],[[648,647]],[[509,647]],[[516,647]],[[513,647]],[[641,647]],[[642,647]],[[623,647]],[[624,647]],[[523,647]],[[88,647]],[[74,647]],[[508,647]],[[625,647]],[[524,647]],[[528,647]],[[511,647]],[[519,647]],[[626,647]],[[627,647]],[[520,647]],[[510,647]],[[515,647]],[[527,647]],[[507,647]],[[526,647]],[[514,647]],[[187,647]],[[517,647]],[[525,647]],[[91,647]],[[521,647]],[[522,647]],[[177,647]],[649],[[[650,[[643,[104]]]],649]],[[[225,[[643,[104]]]],649]],[[[225,[[643,[104]]]],649]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[645,[[0,[644,646,376,377]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[648,1],[[],1],[509,1],[[],1],[[],1],[[],1],[516,1],[[],1],[[],1],[[],1],[[],1],[[],1],[513,1],[[],1],[[],1],[[],1],[641,1],[[],1],[[],1],[[],1],[642,1],[623,1],[[],1],[[],1],[[],1],[624,1],[[],1],[523,1],[[],1],[[],1],[[],1],[88,1],[[],1],[[],1],[[],1],[74,1],[[],1],[508,1],[[],1],[625,1],[[],1],[[],1],[[],1],[[],1],[524,1],[[],1],[[],1],[528,1],[511,1],[[],1],[[],1],[[],1],[[],1],[519,1],[[],1],[[],1],[626,1],[[],1],[[],1],[627,1],[[],1],[[],1],[520,1],[510,1],[[],1],[[],1],[[],1],[[],1],[515,1],[[],1],[[],1],[527,1],[[],1],[[],1],[507,1],[[],1],[[],1],[526,1],[514,1],[[],1],[[],1],[[],1],[[],1],[[],1],[187,1],[[],1],[517,1],[[],1],[[],1],[[],1],[525,1],[[],1],[[],1],[[],1],[[],1],[[],1],[91,1],[[],1],[[],1],[521,1],[[],1],[[],1],[[],1],[[],1],[522,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[177,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[645,[[0,[644,646,376,377]]]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[648,1],[[],1],[509,1],[516,1],[[],1],[513,1],[[],1],[641,1],[[],1],[[],1],[642,1],[623,1],[[],1],[[],1],[624,1],[[],1],[523,1],[[],1],[88,1],[[],1],[74,1],[[],1],[508,1],[625,1],[[],1],[[],1],[524,1],[528,1],[[],1],[[],1],[511,1],[[],1],[519,1],[[],1],[626,1],[[],1],[627,1],[520,1],[[],1],[510,1],[[],1],[[],1],[515,1],[[],1],[527,1],[[],1],[507,1],[526,1],[[],1],[514,1],[[],1],[187,1],[[],1],[[],1],[517,1],[525,1],[[],1],[[],1],[91,1],[521,1],[[],1],[522,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[177,1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[90,375],[90,651],[[[650,[652,653]]],650],[[[225,[654,653]]],225],[508,520],[523,510],[625,510],[524,515],[88,507],[187,507],[91,507],[620,507],[635,507],[74,526],[511,526],[517,526],[521,526],[621,526],[636,526],[519,514],[525,514],[522,514],[622,514],[637,514],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[527,528],[528,527],[88,620],[507,620],[187,620],[91,620],[635,620],[74,621],[511,621],[526,621],[517,621],[521,621],[636,621],[519,622],[514,622],[525,622],[522,622],[637,622],[88,187],[507,187],[91,187],[620,187],[635,187],[74,517],[511,517],[526,517],[521,517],[621,517],[636,517],[519,525],[514,525],[522,525],[622,525],[637,525],[520,508],[510,523],[515,524],[177,224],[177,224],[[[656,[655]]],[[657,[655]]]],[[[645,[644]]],193],[[[225,[[0,[658,653]]]]]],[[[225,[[658,[653]],653]]],[[225,[653]]]],[632,21],[633],[523,[[85,[84]]]],[88,[[85,[84]]]],[74,[[85,[84]]]],[508,[[85,[84]]]],[524,[[85,[84]]]],[511,[[85,[84]]]],[519,[[85,[84]]]],[520,[[85,[51]]]],[510,[[85,[51]]]],[515,[[85,[51]]]],[507,[[85,[51]]]],[526,[[85,[51]]]],[514,[[85,[51]]]],[187,[[85,[518]]]],[517,[[85,[518]]]],[525,[[85,[518]]]],[91,[[85,[89]]]],[521,[[85,[89]]]],[522,[[85,[89]]]],[620,[[85,[384]]]],[621,[[85,[384]]]],[622,[[85,[384]]]],[635,[[85,[188]]]],[636,[[85,[188]]]],[637,[[85,[188]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[523,[[85,[[85,[84]]]]]],[88,[[85,[84]]]],[74,[[85,[84]]]],[508,[[85,[[85,[84]]]]]],[524,[[85,[[85,[84]]]]]],[519,[[85,[84]]]],[187,[[85,[518]]]],[517,[[85,[518]]]],[525,[[85,[518]]]],[91,[[85,[89]]]],[521,[[85,[89]]]],[522,[[85,[89]]]],[[[645,[644]]]],[[[645,[644]]],193],[[[659,[644]]],193],[177,224],[[[657,[655]]],19],[[[656,[655]]],19],[[[660,[653]]]],[[[645,[644]]]],[[[661,[655]]],19],[[[657,[655]]],[[661,[655]]]],[[[656,[655]]],[[661,[655]]]],[[[645,[644]]],193],[[[650,[[0,[631,653]]]]]],[[[650,[[631,[653]],653]]],[[650,[653]]]],[90,92],[[[225,[[0,[631,653]]]]]],[632],[633],[662,663],[523,[[85,[84]]]],[88,[[85,[84]]]],[74,[[85,[84]]]],[508,[[85,[84]]]],[524,[[85,[84]]]],[528,[[85,[84]]]],[511,[[85,[84]]]],[519,[[85,[84]]]],[520,[[85,[51]]]],[510,[[85,[51]]]],[515,[[85,[51]]]],[527,[[85,[51]]]],[507,[[85,[51]]]],[526,[[85,[51]]]],[514,[[85,[51]]]],[187,[[85,[518]]]],[517,[[85,[518]]]],[525,[[85,[518]]]],[91,[[85,[89]]]],[521,[[85,[89]]]],[522,[[85,[89]]]],[620,[[85,[384]]]],[621,[[85,[384]]]],[622,[[85,[384]]]],[635,[[85,[188]]]],[636,[[85,[188]]]],[637,[[85,[188]]]],[523,[[85,[[85,[84]]]]]],[88,[[85,[84]]]],[74,[[85,[84]]]],[508,[[85,[[85,[84]]]]]],[524,[[85,[[85,[84]]]]]],[519,[[85,[84]]]],[187,[[85,[518]]]],[517,[[85,[518]]]],[525,[[85,[518]]]],[91,[[85,[89]]]],[521,[[85,[89]]]],[522,[[85,[89]]]],[[[645,[[0,[644,646,376,377]]]]],647],[648,647],[509,647],[516,647],[513,647],[641,647],[642,647],[623,647],[624,647],[523,647],[88,647],[74,647],[508,647],[625,647],[524,647],[528,647],[511,647],[519,647],[626,647],[627,647],[520,647],[510,647],[515,647],[527,647],[507,647],[526,647],[514,647],[187,647],[517,647],[525,647],[91,647],[521,647],[522,647],[177,647],[[[645,[[0,[644,646,376,377]]]]],647],[648,647],[509,647],[516,647],[513,647],[641,647],[642,647],[623,647],[624,647],[523,647],[88,647],[74,647],[508,647],[625,647],[524,647],[528,647],[511,647],[519,647],[626,647],[627,647],[520,647],[510,647],[515,647],[527,647],[507,647],[526,647],[514,647],[187,647],[517,647],[525,647],[91,647],[521,647],[522,647],[177,647],[619,619],[619,[[85,[84]]]],[653,664],[653,665],[177,188],[177,84],[177,51],[[[645,[644]]],193],[[[659,[644]]],193],[90,92],[88,635],[507,635],[187,635],[91,635],[620,635],[74,636],[511,636],[526,636],[517,636],[521,636],[621,636],[519,637],[514,637],[525,637],[522,637],[622,637],[88,91],[507,91],[187,91],[620,91],[635,91],[74,521],[511,521],[526,521],[517,521],[621,521],[636,521],[519,522],[514,522],[525,522],[622,522],[637,522],[507,88],[187,88],[91,88],[620,88],[635,88],[526,74],[517,74],[521,74],[621,74],[636,74],[526,511],[517,511],[521,511],[621,511],[636,511],[514,519],[525,519],[522,519],[622,519],[637,519],[[[661,[655]]],[[657,[655]]]],0,0,0,0,0,[[[389,[666]],667],668],0,0,0,0,0,0,0,0,0,0,[619,84],0,0,0,[[],16],[[]],[[]],[[],16],[[9,16]],[[],9],[[],16],[[],16],[9],[[],669],[16],[[],9],[[]],[[],16],[[]],[[]],[9],[9],[[],16],[[],16],[9,16],[[]],[[[632,[[0,[670,670]]]],632]],[[[633,[[0,[670,670]]]],633]],[[509,509],509],[[516,516],516],[[513,513],513],[[641,641],641],[[642,642],642],[[187,518]],[[187,187]],[[517,517]],[[517,518]],[[525,518]],[[525,525]],[[91,89]],[[91,91]],[[521,521]],[[521,89]],[[522,89]],[[522,522]],[[620,620]],[[620,384]],[[621,384]],[[621,621]],[[622,622]],[[622,384]],[[635,188]],[[635,635]],[[636,636]],[[636,188]],[[637,637]],[[637,188]],[[[632,[[0,[322,671,671]]]],632]],[[[633,[[0,[671,671]]]],633]],[[509,509]],[[516,516]],[[513,513]],[[641,641]],[[642,642]],[509,89],[516,89],[513,89],[641,89],[642,89],[[[632,[[0,[672,672]]]],632]],[[[633,[[0,[672,672]]]],633]],[[509,509],509],[[516,516],516],[[513,513],513],[[641,641],641],[[642,642],642],[[187,518]],[[187,187]],[[517,518]],[[517,517]],[[525,518]],[[525,525]],[[91,91]],[[91,89]],[[521,521]],[[521,89]],[[522,522]],[[522,89]],[[620,620]],[[620,384]],[[621,621]],[[621,384]],[[622,622]],[[622,384]],[[635,188]],[[635,635]],[[636,188]],[[636,636]],[[637,637]],[[637,188]],0,[[[632,[[0,[322,673,673]]]],632]],[[[633,[[0,[673,673]]]],633]],[[509,509]],[[516,516]],[[513,513]],[[641,641]],[[642,642]],[[[643,[104]]],649],[674,649],[34,649],0,0,0,0,0,0,[[[632,[[0,[675,675]]]],632]],[[[633,[[0,[675,675]]]],633]],[[509,509],509],[[516,516],516],[[513,513],513],[[641,641],641],[[642,642],642],[[187,518]],[[187,187]],[[517,518]],[[517,517]],[[525,525]],[[525,518]],[[91,89]],[[91,91]],[[521,521]],[[521,89]],[[522,89]],[[522,522]],[[620,620]],[[620,384]],[[621,621]],[[621,384]],[[622,622]],[[622,384]],[[635,188]],[[635,635]],[[636,188]],[[636,636]],[[637,637]],[[637,188]],[[[632,[[0,[322,676,676]]]],632]],[[[633,[[0,[676,676]]]],633]],[[509,509]],[[516,516]],[[513,513]],[[641,641]],[[642,642]],0,[[],16],[[677,678],677],[[679,16],679],0,[[679,84],679],0,0,0,0,[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[]],[[]],[[[660,[653]]],[[650,[653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[645,[644]]],193],[[]],[[]],[[]],[[]],[13],[[]],[650],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[[225,[653]]],653],[[]],[[]],[[]],[[]],[[]],[[]],[632],[[]],[[]],[633],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[]],[13],[13],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[680,681],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[682,[104]]],[[650,[104]]]],[[]],[[]],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[683,684],[[]],[[]],[[]],[13],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[660,[653]]],[[225,[653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[645,[644]]],193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[225,[653]]],653],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[633],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[680,685],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[682,[104]]],[[225,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[[657,[655]],9],[[657,[655]]]],[[[656,[655]],9],[[656,[655]]]],[[[661,[655]],9],[[661,[655]]]],[[[657,[655]],404],[[657,[655]]]],[[[656,[655]],404],[[656,[655]]]],[[[661,[655]],404],[[661,[655]]]],0,[[[645,[644]]],9],0,[[],104],[[],104],[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],0,0,0,[51,16],[[[603,[490]]],490],0,[[177,177],[[21,[177]]]],[[177,89],[[21,[177]]]],[[177,89],[[21,[177]]]],[[177,177],[[21,[177]]]],0,[[],686],[[],686],[[88,88,88],88],[[74,74,74],74],[[511,511,511],511],[[519,519,519],519],[[507,507,507],507],[[526,526,526],526],[[514,514,514],514],[[187,187,187],187],[[517,517,517],517],[[525,525,525],525],[[91,91,91],91],[[521,521,521],521],[[522,522,522],522],[[620,620,620],620],[[621,621,621],621],[[622,622,622],622],[[635,635,635],635],[[636,636,636],636],[[637,637,637],637],[[88,84,84],88],[[74,84,84],74],[[511,84,84],511],[[519,84,84],519],[[507,51,51],507],[[526,51,51],526],[[514,51,51],514],[[88,84],88],[[74,84],74],[[511,84],511],[[519,84],519],[[507,51],507],[[526,51],526],[[514,51],514],[[88,84],88],[[74,84],74],[[511,84],511],[[519,84],519],[[507,51],507],[[526,51],526],[[514,51],514],[[[645,[644]]]],[[]],[34],0,[[[660,[322]]],[[660,[322]]]],[687,687],[688,688],[674,674],[50,50],[38,38],[[[645,[644]]],[[645,[644]]]],[689,689],[690,690],[[[661,[[0,[322,655]]]]],[[661,[[0,[322,655]]]]]],[[[650,[653]]],[[650,[653]]]],[90,90],[618,618],[691,691],[[[659,[[0,[644,322]]]]],[[659,[[0,[644,322]]]]]],[[[632,[322]]],[[632,[322]]]],[692,692],[693,693],[694,694],[695,695],[696,696],[697,697],[698,698],[43,43],[44,44],[662,662],[613,613],[663,663],[699,699],[700,700],[701,701],[702,702],[703,703],[704,704],[705,705],[706,706],[707,707],[649,649],[708,708],[33,33],[709,709],[34,34],[710,710],[711,711],[712,712],[713,713],[714,714],[612,612],[715,715],[716,716],[[[717,[322]]],[[717,[322]]]],[17,17],[718,718],[719,719],[720,720],[721,721],[722,722],[70,70],[723,723],[680,680],[49,49],[66,66],[724,724],[725,725],[726,726],[[[682,[[0,[322,104]]]]],[[682,[[0,[322,104]]]]]],[727,727],[728,728],[634,634],[189,189],[729,729],[67,67],[129,129],[619,619],[79,79],[730,730],[93,93],[39,39],[42,42],[191,191],[190,190],[41,41],[678,678],[731,731],[732,732],[733,733],[617,617],[734,734],[735,735],[736,736],[737,737],[738,738],[739,739],[740,740],[741,741],[683,683],[742,742],[743,743],[744,744],[13,13],[745,745],[648,648],[509,509],[516,516],[513,513],[641,641],[642,642],[623,623],[624,624],[523,523],[88,88],[74,74],[508,508],[625,625],[524,524],[528,528],[511,511],[519,519],[626,626],[627,627],[520,520],[510,510],[515,515],[527,527],[507,507],[526,526],[514,514],[187,187],[517,517],[525,525],[91,91],[521,521],[522,522],[620,620],[621,621],[622,622],[635,635],[636,636],[637,637],[177,177],[680,680],[509,746],[516,746],[513,746],[623,746],[624,746],[523,746],[88,746],[74,746],[508,746],[625,746],[524,746],[511,746],[519,746],[626,746],[627,746],[520,746],[510,746],[515,746],[507,746],[526,746],[514,746],[187,746],[517,746],[525,746],[91,746],[521,746],[522,746],0,[[[660,[322]],[660,[322]]]],[[[645,[644]],[645,[644]]]],[[[650,[653]],[650,[653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[645,[[0,[644,646,376,377]]]]],[[8,[647,7]]]],[648,[[8,[647,7]]]],[509,[[8,[647,7]]]],[516,[[8,[647,7]]]],[513,[[8,[647,7]]]],[641,[[8,[647,7]]]],[642,[[8,[647,7]]]],[623,[[8,[647,7]]]],[624,[[8,[647,7]]]],[523,[[8,[647,7]]]],[88,[[8,[647,7]]]],[74,[[8,[647,7]]]],[508,[[8,[647,7]]]],[625,[[8,[647,7]]]],[524,[[8,[647,7]]]],[528,[[8,[647,7]]]],[511,[[8,[647,7]]]],[519,[[8,[647,7]]]],[626,[[8,[647,7]]]],[627,[[8,[647,7]]]],[520,[[8,[647,7]]]],[510,[[8,[647,7]]]],[515,[[8,[647,7]]]],[527,[[8,[647,7]]]],[507,[[8,[647,7]]]],[526,[[8,[647,7]]]],[514,[[8,[647,7]]]],[187,[[8,[647,7]]]],[517,[[8,[647,7]]]],[525,[[8,[647,7]]]],[91,[[8,[647,7]]]],[521,[[8,[647,7]]]],[522,[[8,[647,7]]]],[177,[[8,[647,7]]]],[[[660,[543]],[660,[543]]],183],[[688,688],183],[[[645,[644]],[645,[644]]],183],[[90,90],183],[[[632,[543]],[632,[543]]],183],[[[633,[543]],[633,[543]]],183],[[692,692],183],[[704,704],183],[[707,707],183],[[33,33],183],[[[717,[543]],[717,[543]]],183],[[177,177],183],[[692,692],183],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[88,88],509],[[74,74],516],[[511,511],641],[[519,519],642],[[507,507],509],[[526,526],516],[[514,514],513],[[187,187],509],[[517,517],516],[[525,525],513],[[91,91],509],[[521,521],516],[[522,522],513],[[620,620],509],[[621,621],516],[[622,622],513],[[635,635],509],[[636,636],516],[[637,637],513],[[523,9],74],[[508,9],88],[[625,9],511],[[524,9],519],[[520,9],507],[[510,9],526],[[515,9],514],[[523,9],74],[[508,9],88],[[625,9],511],[[524,9],519],[[520,9],507],[[510,9],526],[[515,9],514],0,0,0,0,0,[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],0,0,0,0,[528,528],[527,527],[[[643,[104]],33],16],[[649,33],16],[[725,747],16],[726,16],[[[0,[495,376,377]]],[[22,[748]]]],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[17,[[750,[749,693]]]],0,0,0,[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[]],[[618,[751,[90]]],27],[34,33],[[],649],[[[753,[752]]],523],[[[753,[752]]],88],[[[753,[752]]],74],[[[753,[752]]],508],[[[753,[752]]],524],[[[753,[752]]],519],[[[753,[752]]],187],[[[753,[752]]],517],[[[753,[752]]],525],[[[753,[752]]],91],[[[753,[752]]],521],[[[753,[752]]],522],[[74,74],74],[[511,511],511],[[526,526],526],[[517,517],517],[[521,521],521],[[621,621],621],[[636,636],636],0,0,0,0,0,0,0,0,[754,[[755,[19]]]],0,0,0,0,0,[[648,10],[[22,[382]]]],[[509,10],[[22,[382]]]],[[516,10],[[22,[382]]]],[[513,10],[[22,[382]]]],[[641,10],[[22,[382]]]],[[642,10],[[22,[382]]]],[[623,10],[[22,[382]]]],[[624,10],[[22,[382]]]],[[523,10],[[22,[382]]]],[[88,10],[[22,[382]]]],[[74,10],[[22,[382]]]],[[508,10],[[22,[382]]]],[[625,10],[[22,[382]]]],[[524,10],[[22,[382]]]],[[528,10],[[22,[382]]]],[[511,10],[[22,[382]]]],[[519,10],[[22,[382]]]],[[626,10],[[22,[382]]]],[[627,10],[[22,[382]]]],[[520,10],[[22,[382]]]],[[510,10],[[22,[382]]]],[[515,10],[[22,[382]]]],[[527,10],[[22,[382]]]],[[507,10],[[22,[382]]]],[[526,10],[[22,[382]]]],[[514,10],[[22,[382]]]],[[187,10],[[22,[382]]]],[[517,10],[[22,[382]]]],[[525,10],[[22,[382]]]],[[91,10],[[22,[382]]]],[[521,10],[[22,[382]]]],[[522,10],[[22,[382]]]],[[177,10],[[22,[382]]]],0,0,[[[645,[644]]]],[[[645,[644]],231]],[[[645,[644]],231]],[[],364],[[],[[643,[104]]]],[[],50],[[],38],[[],[[645,[644]]]],[[],27],[[],25],[[],90],[[],618],[[],691],[[],[[756,[364]]]],[[],757],[[],[[632,[364]]]],[[],[[633,[364]]]],[[],29],[[],697],[[],698],[[],43],[[],44],[[],613],[[],699],[[],701],[[],702],[[],703],[[],704],[[],705],[[],706],[[],707],[[],649],[[],708],[[],33],[[],34],[[],612],[[],715],[[],716],[[],717],[[],17],[[],718],[[],722],[[],70],[[],723],[[],52],[[],66],[[],724],[[],725],[[],726],[[],[[682,[[0,[104,364]]]]]],[[],728],[[],634],[[],189],[[],729],[[],67],[[],129],[[],619],[[],79],[[],93],[[],39],[[],42],[[],191],[[],190],[[],41],[[],678],[[],731],[[],732],[[],733],[[],617],[[],735],[[],737],[[],738],[[],758],[[],759],[[],739],[[],740],[[],741],[[],744],[[],13],[[],648],[[],509],[[],516],[[],513],[[],641],[[],642],[[],623],[[],624],[[],523],[[],88],[[],74],[[],508],[[],625],[[],524],[[],528],[[],511],[[],519],[[],626],[[],627],[[],520],[[],510],[[],515],[[],527],[[],507],[[],526],[[],514],[[],187],[[],517],[[],525],[[],91],[[],521],[[],522],[[],620],[[],621],[[],622],[[],635],[[],636],[[],637],[[],177],0,0,0,0,[[618,[751,[90]]]],0,[27],[38,177],0,[38,84],0,[38,51],0,0,0,0,0,0,[[]],[9],[9],[9],[9],[9],[9],[9],[9],[[[64,[104]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[645,[644]]],193],[9],[9],[9],[[[661,[655]]]],[9],[9],[27],[[[650,[653]]],653],[9],[9],[90],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[756,[501]]]],[9],[[[225,[653]]],653],[9],[9],[9],[9],[9],[9],[632],[9],[9],[633],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[35,[104]]]],[9],[9],[[[78,[[0,[104,760]]]]]],[[[53,[104]]]],[9],[[[62,[[0,[104,760]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[700],[9],[9],[9],[9],[9],[9],[9],[649],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[17],[9],[9],[9],[9],[9],[9],[9],[9],[9],[52],[9],[9],[681],[9],[681,650],[49],[9],[9],[685],[9],[9],[9],[9],[9],[9],[9],[9],[189],[9],[9],[60],[9],[9],[761],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[617],[9],[734],[9],[9],[735],[9],[9],[9],[9],[9],[9],[9],[9],[9],[683],[9],[742],[9],[743],[9],[762],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[623],[9],[9],[624],[9],[9],[9],[9],[508],[9],[9],[9],[528],[511],[9],[9],[519],[626],[9],[627],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[[657,[655]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[645,[644]]],193],[9],[9],[9],[9],[27],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[756,[501]]]],[9],[[[225,[653]]],653],[9],[9],[9],[9],[9],[9],[9],[9],[633],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[53,[104]]]],[9],[9],[[[62,[[0,[104,760]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[700],[9],[9],[9],[9],[9],[9],[9],[649],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[17],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[52],[9],[9],[49],[9],[9],[685],[9],[685,225],[9],[9],[9],[9],[9],[9],[9],[189],[9],[60],[9],[9],[9],[761],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[617],[9],[9],[734],[735],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[683],[9],[742],[9],[743],[9],[762],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[623],[9],[624],[9],[9],[9],[508],[9],[9],[9],[9],[528],[9],[511],[9],[519],[626],[9],[9],[627],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,22],[105,[[22,[688]]]],[105,[[22,[[645,[644]]]]]],[105,[[22,[692]]]],[[763,105],22],[[764,105],22],[105,[[22,[696]]]],[105,[[22,[710]]]],[105,[[22,[711]]]],[105,[[22,[619]]]],[105,[[22,[733]]]],[105,[[22,[737]]]],[105,[[22,[648]]]],[105,[[22,[509]]]],[105,[[22,[516]]]],[105,[[22,[513]]]],[105,[[22,[641]]]],[105,[[22,[642]]]],[105,[[22,[623]]]],[105,[[22,[624]]]],[105,[[22,[523]]]],[105,[[22,[88]]]],[105,[[22,[74]]]],[105,[[22,[508]]]],[105,[[22,[625]]]],[105,[[22,[524]]]],[105,[[22,[528]]]],[105,[[22,[511]]]],[105,[[22,[519]]]],[105,[[22,[626]]]],[105,[[22,[627]]]],[105,[[22,[520]]]],[105,[[22,[510]]]],[105,[[22,[515]]]],[105,[[22,[527]]]],[105,[[22,[507]]]],[105,[[22,[526]]]],[105,[[22,[514]]]],[105,[[22,[187]]]],[105,[[22,[517]]]],[105,[[22,[525]]]],[105,[[22,[91]]]],[105,[[22,[521]]]],[105,[[22,[522]]]],[105,[[22,[620]]]],[105,[[22,[621]]]],[105,[[22,[622]]]],[105,[[22,[635]]]],[105,[[22,[636]]]],[105,[[22,[637]]]],[105,[[22,[177]]]],0,[523,84],[508,84],[625,84],[524,84],[520,51],[510,51],[515,51],[19,490],[[88,88],84],[[74,74],84],[[511,511],84],[[519,519],84],[[507,507],51],[[526,526],51],[[514,514],51],[[88,88],84],[[74,74],84],[[511,511],84],[[519,519],84],[[507,507],51],[[526,526],51],[[514,514],51],[[187,187],518],[[517,517],518],[[525,525],518],[[620,620],384],[[621,621],384],[[622,622],384],[[[632,[[0,[765,765]]]],632]],[[[633,[[0,[765,765]]]],633]],[[88,88],88],[[88,84],88],[[74,74],74],[[74,84],74],[[528,84],528],[[511,511],511],[[511,84],511],[[519,519],519],[[519,84],519],[[527,51],527],[[507,51],507],[[507,507],507],[[526,526],526],[[526,51],526],[[514,51],514],[[514,514],514],[[187,518],187],[[187,187],187],[[517,517],517],[[517,518],517],[[525,525],525],[[525,518],525],[[91,89],91],[[91,91],91],[[521,521],521],[[521,89],521],[[522,89],522],[[522,522],522],[[620,384],620],[[620,620],620],[[621,621],621],[[621,384],621],[[622,622],622],[[622,384],622],[[635,635],635],[[635,188],635],[[636,636],636],[[636,188],636],[[637,188],637],[[637,637],637],[[177,89],177],[[[632,[[0,[322,766,766]]]],632]],[[[633,[[0,[766,766]]]],633]],[[88,84]],[[88,88]],[[74,84]],[[74,74]],[[511,511]],[[511,84]],[[519,84]],[[519,519]],[[507,507]],[[507,51]],[[526,526]],[[526,51]],[[514,51]],[[514,514]],[[187,518]],[[187,187]],[[517,518]],[[517,517]],[[525,518]],[[525,525]],[[91,91]],[[91,89]],[[521,89]],[[521,521]],[[522,522]],[[522,89]],[[620,384]],[[620,620]],[[621,621]],[[621,384]],[[622,384]],[[622,622]],[[635,635]],[[635,188]],[[636,636]],[[636,188]],[[637,188]],[[637,637]],[[177,89]],[[177,177],84],[[177,177],51],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[187,187],187],[[517,517],517],[[525,525],525],[[620,620],620],[[621,621],621],[[622,622],622],[[177,84],177],[[177,51],177],[[507,507],520],[[526,526,526],510],[[514,514,514,514],515],[[88,88],84],[[74,74],84],[[528,528],84],[[511,511],84],[[519,519],84],[[527,527],51],[[507,507],51],[[526,526],51],[[514,514],51],[[187,187],518],[[517,517],518],[[525,525],518],[[91,91],89],[[521,521],89],[[522,522],89],[[620,620],384],[[621,621],384],[[622,622],384],[[635,635],188],[[636,636],188],[[637,637],188],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[697,89],[[51,51,51,51],527],[[[8,[[645,[[0,[644,646,376,377]]]],7]]],[[103,[[8,[647,7]],7]]]],[[[645,[644]],[603,[9]]],[[767,[644]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[767,[644]]]],[9],[9],[9],[9],[9],[674],[9],[9],[9],[9],[9],[9],[9],[[[645,[644]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[659,[644]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[656,[655]]]],0,[740,177],[745,177],0,[[51,51],507],[[51,51,51],526],[[51,51,51,51],514],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[38,177],[739,177],[740,177],0,0,[38,84],0,[38,51],0,[739,84],[740,84],[739,51],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],0,[618],0,0,[[],[[769,[[8,[768,7]]]]]],[770,[[769,[[8,[768,7]]]]]],[771,[[769,[[8,[768,7]]]]]],[772,[[769,[[8,[768,7]]]]]],[[[660,[379]],660],16],[[688,688],16],[[50,50],16],[[[645,[644]],[645,[644]]],16],[[[650,[[0,[379,653]]]]],16],[[90,90],16],[[90,92],16],[[90,107],16],[[[225,[[0,[379,653]]]]],16],[[[632,[379]],632],16],[[[633,[379]],633],16],[[692,692],16],[[694,694],16],[[662,662],16],[[663,663],16],[[702,702],16],[[704,704],16],[[706,706],16],[[707,707],16],[[33,33],16],[[713,713],16],[[716,716],16],[[[717,[[379,[[379,[[379,[379]]]]]]]],[717,[[379,[[379,[[379,[379]]]]]]]]],16],[[723,723],16],[[741,741],16],[[745,745],16],[[648,648],16],[[509,509],16],[[516,516],16],[[513,513],16],[[641,641],16],[[642,642],16],[[623,623],16],[[624,624],16],[[523,523],16],[[88,88],16],[[74,74],16],[[508,508],16],[[625,625],16],[[524,524],16],[[528,528],16],[[511,511],16],[[519,519],16],[[626,626],16],[[627,627],16],[[520,520],16],[[510,510],16],[[515,515],16],[[527,527],16],[[507,507],16],[[526,526],16],[[514,514],16],[[187,187],16],[[517,517],16],[[525,525],16],[[91,91],16],[[521,521],16],[[522,522],16],[[620,620],16],[[621,621],16],[[622,622],16],[[635,635],16],[[636,636],16],[[637,637],16],[[177,177],16],0,[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],0,[697,89],0,0,[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[[[645,[644]],380]],[[88,84],74],[[74,84],519],[[511,84],519],[[507,51],526],[[526,51],514],[[187,518],517],[[517,518],525],[[91,89],521],[[521,89],522],[[620,384],621],[[621,384],622],[[635,188],636],[[636,188],637],[[[645,[644]],193]],0,[[],84],[[],84],0,[[],51],[[],51],0,0,[[509,92],[[21,[647]]]],[[516,92],[[21,[647]]]],[[513,92],[[21,[647]]]],[[623,92],[[21,[647]]]],[[624,92],[[21,[647]]]],[[523,92],[[21,[647]]]],[[88,92],[[21,[647]]]],[[74,92],[[21,[647]]]],[[508,92],[[21,[647]]]],[[625,92],[[21,[647]]]],[[524,92],[[21,[647]]]],[[511,92],[[21,[647]]]],[[519,92],[[21,[647]]]],[[626,92],[[21,[647]]]],[[627,92],[[21,[647]]]],[[520,92],[[21,[647]]]],[[510,92],[[21,[647]]]],[[515,92],[[21,[647]]]],[[507,92],[[21,[647]]]],[[526,92],[[21,[647]]]],[[514,92],[[21,[647]]]],[[187,92],[[21,[647]]]],[[517,92],[[21,[647]]]],[[525,92],[[21,[647]]]],[[91,92],[[21,[647]]]],[[521,92],[[21,[647]]]],[[522,92],[[21,[647]]]],[[509,9],[[21,[647]]]],[[516,9],[[21,[647]]]],[[513,9],[[21,[647]]]],[[623,9],[[21,[647]]]],[[624,9],[[21,[647]]]],[[523,9],[[21,[647]]]],[[88,9],[[21,[647]]]],[[74,9],[[21,[647]]]],[[508,9],[[21,[647]]]],[[625,9],[[21,[647]]]],[[524,9],[[21,[647]]]],[[511,9],[[21,[647]]]],[[519,9],[[21,[647]]]],[[626,9],[[21,[647]]]],[[627,9],[[21,[647]]]],[[520,9],[[21,[647]]]],[[510,9],[[21,[647]]]],[[515,9],[[21,[647]]]],[[507,9],[[21,[647]]]],[[526,9],[[21,[647]]]],[[514,9],[[21,[647]]]],[[187,9],[[21,[647]]]],[[517,9],[[21,[647]]]],[[525,9],[[21,[647]]]],[[91,9],[[21,[647]]]],[[521,9],[[21,[647]]]],[[522,9],[[21,[647]]]],[[509,9],[[21,[647]]]],[[516,9],[[21,[647]]]],[[513,9],[[21,[647]]]],[[623,9],[[21,[647]]]],[[624,9],[[21,[647]]]],[[523,9],[[21,[647]]]],[[88,9],[[21,[647]]]],[[74,9],[[21,[647]]]],[[508,9],[[21,[647]]]],[[625,9],[[21,[647]]]],[[524,9],[[21,[647]]]],[[511,9],[[21,[647]]]],[[519,9],[[21,[647]]]],[[626,9],[[21,[647]]]],[[627,9],[[21,[647]]]],[[520,9],[[21,[647]]]],[[510,9],[[21,[647]]]],[[515,9],[[21,[647]]]],[[507,9],[[21,[647]]]],[[526,9],[[21,[647]]]],[[514,9],[[21,[647]]]],[[187,9],[[21,[647]]]],[[517,9],[[21,[647]]]],[[525,9],[[21,[647]]]],[[91,9],[[21,[647]]]],[[521,9],[[21,[647]]]],[[522,9],[[21,[647]]]],[509,9],[516,9],[513,9],[623,9],[624,9],[523,9],[88,9],[74,9],[508,9],[625,9],[524,9],[511,9],[519,9],[626,9],[627,9],[520,9],[510,9],[515,9],[507,9],[526,9],[514,9],[187,9],[517,9],[525,9],[91,9],[521,9],[522,9],[[509,92],[[21,[647]]]],[[516,92],[[21,[647]]]],[[513,92],[[21,[647]]]],[[623,92],[[21,[647]]]],[[624,92],[[21,[647]]]],[[523,92],[[21,[647]]]],[[88,92],[[21,[647]]]],[[74,92],[[21,[647]]]],[[508,92],[[21,[647]]]],[[625,92],[[21,[647]]]],[[524,92],[[21,[647]]]],[[511,92],[[21,[647]]]],[[519,92],[[21,[647]]]],[[626,92],[[21,[647]]]],[[627,92],[[21,[647]]]],[[520,92],[[21,[647]]]],[[510,92],[[21,[647]]]],[[515,92],[[21,[647]]]],[[507,92],[[21,[647]]]],[[526,92],[[21,[647]]]],[[514,92],[[21,[647]]]],[[187,92],[[21,[647]]]],[[517,92],[[21,[647]]]],[[525,92],[[21,[647]]]],[[91,92],[[21,[647]]]],[[521,92],[[21,[647]]]],[[522,92],[[21,[647]]]],0,0,[[[193,[19]]]],[[[650,[653]],501],[[22,[[650,[653]],[650,[653]]]]]],[[[225,[653]],501],[[22,[[225,[653]],[225,[653]]]]]],[740,16],0,0,0,0,0,0,0,0,[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],0,[[[657,[655]],10],[[22,[382]]]],[[[656,[655]],10],[[22,[382]]]],[[[669,[[0,[773,653]]]],10],[[22,[382]]]],[[[669,[[0,[773,653]]]],10],[[22,[382]]]],[[[669,[[0,[773,653]]]],10],[[22,[382]]]],[[[669,[[0,[773,653]]]],10],[[22,[382]]]],[[[767,[644]],10],[[22,[382]]]],[[[660,[383]],10],[[22,[382]]]],[[[660,[495]],10],[[22,[382]]]],[[688,10],[[22,[382]]]],[[688,10],[[22,[382]]]],[[774,10],[[22,[382]]]],[[774,10],[[22,[382]]]],[[50,10],[[22,[382]]]],[[38,10],[[22,[382]]]],[[775,10],[[22,[382]]]],[[775,10],[[22,[382]]]],[[[645,[644]],10],[[22,[382]]]],[[[661,[655]],10],[[22,[382]]]],[[27,10],[[22,[382]]]],[[[650,[[0,[495,653]]]],10],[[22,[382]]]],[[[650,[[0,[383,653]]]],10],[[22,[382]]]],[[90,10],[[22,[382]]]],[[90,10],[[22,[382]]]],[[618,10],[[22,[382]]]],[[691,10],[[22,[382]]]],[[[756,[383]],10],[[22,[382]]]],[[[225,[[0,[495,653]]]],10],[[22,[382]]]],[[[225,[383]],10],[[22,[382]]]],[[[659,[644]],10],[[22,[382]]]],[[[632,[495]],10],[[22,[382]]]],[[[632,[383]],10],[[22,[382]]]],[[[633,[383]],10],[[22,[382]]]],[[[633,[495]],10],[[22,[382]]]],[[692,10],[[22,[382]]]],[[692,10],[[22,[382]]]],[[29,10],[[22,[382]]]],[[776,10],[[22,[382]]]],[[776,10],[[22,[382]]]],[[693,10],[[22,[382]]]],[[694,10],[[22,[382]]]],[[694,10],[[22,[382]]]],[[695,10],[[22,[382]]]],[[696,10],[[22,[382]]]],[[697,10],[[22,[382]]]],[[698,10],[[22,[382]]]],[[43,10],[[22,[382]]]],[[44,10],[[22,[382]]]],[[662,10],[[22,[382]]]],[[613,10],[[22,[382]]]],[[663,10],[[22,[382]]]],[[699,10],[[22,[382]]]],[[700,10],[[22,[382]]]],[[701,10],[[22,[382]]]],[[702,10],[[22,[382]]]],[[703,10],[[22,[382]]]],[[704,10],[[22,[382]]]],[[704,10],[[22,[382]]]],[[705,10],[[22,[382]]]],[[706,10],[[22,[382]]]],[[706,10],[[22,[382]]]],[[707,10],[[22,[382]]]],[[649,10],[[22,[382]]]],[[777,10],[[22,[382]]]],[[777,10],[[22,[382]]]],[[33,10],[[22,[382]]]],[[709,10],[[22,[382]]]],[[34,10],[[22,[382]]]],[[710,10],[[22,[382]]]],[[711,10],[[22,[382]]]],[[712,10],[[22,[382]]]],[[713,10],[[22,[382]]]],[[713,10],[[22,[382]]]],[[714,10],[[22,[382]]]],[[714,10],[[22,[382]]]],[[612,10],[[22,[382]]]],[[715,10],[[22,[382]]]],[[716,10],[[22,[382]]]],[[[717,[383]],10],[[22,[382]]]],[[718,10],[[22,[382]]]],[[719,10],[[22,[382]]]],[[720,10],[[22,[382]]]],[[721,10],[[22,[382]]]],[[722,10],[[22,[382]]]],[[70,10],[[22,[382]]]],[[723,10],[[22,[382]]]],[[680,10],[[22,[382]]]],[[49,10],[[22,[382]]]],[[66,10],[[22,[382]]]],[[724,10],[[22,[382]]]],[[[682,[[0,[104,383]]]],10],[[22,[382]]]],[[727,10],[[22,[382]]]],[[728,10],[[22,[382]]]],[[67,10],[[22,[382]]]],[[619,10],[[22,[382]]]],[[778,10],[[22,[382]]]],[[778,10],[[22,[382]]]],[[79,10],[[22,[382]]]],[[730,10],[[22,[382]]]],[[93,10],[[22,[382]]]],[[39,10],[[22,[382]]]],[[42,10],[[22,[382]]]],[[191,10],[[22,[382]]]],[[190,10],[[22,[382]]]],[[41,10],[[22,[382]]]],[[678,10],[[22,[382]]]],[[731,10],[[22,[382]]]],[[732,10],[[22,[382]]]],[[733,10],[[22,[382]]]],[[617,10],[[22,[382]]]],[[735,10],[[22,[382]]]],[[737,10],[[22,[382]]]],[[738,10],[[22,[382]]]],[[739,10],[[22,[382]]]],[[740,10],[[22,[382]]]],[[741,10],[[22,[382]]]],[[13,10],[[22,[382]]]],[[745,10],[[22,[382]]]],[[648,10],[[22,[382]]]],[[509,10],[[22,[382]]]],[[509,10],[[22,[382]]]],[[516,10],[[22,[382]]]],[[516,10],[[22,[382]]]],[[513,10],[[22,[382]]]],[[513,10],[[22,[382]]]],[[641,10],[[22,[382]]]],[[641,10],[[22,[382]]]],[[642,10],[[22,[382]]]],[[642,10],[[22,[382]]]],[[623,10],[[22,[382]]]],[[623,10],[[22,[382]]]],[[624,10],[[22,[382]]]],[[624,10],[[22,[382]]]],[[523,10],[[22,[382]]]],[[523,10],[[22,[382]]]],[[88,10],[[22,[382]]]],[[88,10],[[22,[382]]]],[[74,10],[[22,[382]]]],[[74,10],[[22,[382]]]],[[508,10],[[22,[382]]]],[[508,10],[[22,[382]]]],[[625,10],[[22,[382]]]],[[625,10],[[22,[382]]]],[[524,10],[[22,[382]]]],[[524,10],[[22,[382]]]],[[528,10],[[22,[382]]]],[[528,10],[[22,[382]]]],[[511,10],[[22,[382]]]],[[511,10],[[22,[382]]]],[[519,10],[[22,[382]]]],[[519,10],[[22,[382]]]],[[626,10],[[22,[382]]]],[[626,10],[[22,[382]]]],[[627,10],[[22,[382]]]],[[627,10],[[22,[382]]]],[[520,10],[[22,[382]]]],[[520,10],[[22,[382]]]],[[510,10],[[22,[382]]]],[[510,10],[[22,[382]]]],[[515,10],[[22,[382]]]],[[515,10],[[22,[382]]]],[[527,10],[[22,[382]]]],[[527,10],[[22,[382]]]],[[507,10],[[22,[382]]]],[[507,10],[[22,[382]]]],[[526,10],[[22,[382]]]],[[526,10],[[22,[382]]]],[[514,10],[[22,[382]]]],[[514,10],[[22,[382]]]],[[187,10],[[22,[382]]]],[[187,10],[[22,[382]]]],[[517,10],[[22,[382]]]],[[517,10],[[22,[382]]]],[[525,10],[[22,[382]]]],[[525,10],[[22,[382]]]],[[91,10],[[22,[382]]]],[[91,10],[[22,[382]]]],[[521,10],[[22,[382]]]],[[521,10],[[22,[382]]]],[[522,10],[[22,[382]]]],[[522,10],[[22,[382]]]],[[620,10],[[22,[382]]]],[[620,10],[[22,[382]]]],[[621,10],[[22,[382]]]],[[621,10],[[22,[382]]]],[[622,10],[[22,[382]]]],[[622,10],[[22,[382]]]],[[635,10],[[22,[382]]]],[[635,10],[[22,[382]]]],[[636,10],[[22,[382]]]],[[636,10],[[22,[382]]]],[[637,10],[[22,[382]]]],[[637,10],[[22,[382]]]],[[177,10],[[22,[382]]]],[779,780],[[677,16],677],0,0,0,[231],[231],[[],674],[[[756,[501]]]],[[[756,[501]]]],[[]],0,[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],0,0,[[]],[[],[[657,[689]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],660],[781],[[[85,[92]]],666],[[]],[92,666],[[]],[193,687],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[193,[[645,[644]]]],[644,[[645,[644]]]],[781],[[[103,[7]]],[[645,[644]]]],[[]],[[]],[[],[[661,[689]]]],[[]],[[]],[[]],[[]],[92,90],[92,90],[107,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[629,[782]]],[[632,[782]]]],[781],[[],632],[[],632],[[],633],[781],[[]],[[],633],[[]],[[]],[[]],[[]],[[]],[783,776],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[663,662],[[]],[[]],[[],663],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,717],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[519,619],[[[85,[84]]],619],[[]],[[[85,[84]]],619],[[]],[784,778],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[262,[16,260,260,[422,[16,260,260]]]]],509],[[[263,[16,260]]],509],[[]],[[[263,[16,260]]],516],[[[262,[16,260,260,[422,[16,260,260]]]]],516],[[[263,[16,260]]],513],[[]],[[[262,[16,260,260,[422,[16,260,260]]]]],513],[[]],[[]],[[]],[[]],[[[236,[84,[235,[[234,[84]]]]]]],523],[[[785,[84]]],523],[[[429,[84,[235,[[234,[84]]]]]]],523],[[[786,[84]]],523],[[[262,[84,260,260,[422,[84,260,260]]]]],523],[623,523],[[]],[625,523],[[[85,[84]]],88],[[[787,[84]]],88],[[[262,[84,260,260,[422,[84,260,260]]]]],88],[[[426,[84]]],88],[[[788,[84]]],88],[[]],[[[235,[[262,[84,260,260,[261,[84]]]]]]],88],[[[263,[84,260]]],88],[[],88],[[[789,[84]]],74],[[[263,[84,260]]],74],[[[790,[84]]],74],[[[235,[[262,[84,260,260,[261,[84]]]]]]],74],[[[426,[84]]],74],[[]],[511,74],[[],74],[[[85,[84]]],74],[[[262,[84,260,260,[422,[84,260,260]]]]],74],[[],74],[[[235,[[234,[84]]]]],508],[[[425,[84]]],508],[[[791,[84]]],508],[[[262,[84,260,260,[422,[84,260,260]]]]],508],[[]],[[[792,[84]]],508],[[[786,[84]]],625],[623,625],[[]],[[[785,[84]]],625],[523,625],[[[793,[84]]],524],[[[236,[84,[235,[[423,[84]]]]]]],524],[[[262,[84,260,260,[422,[84,260,260]]]]],524],[[[429,[84,[235,[[423,[84]]]]]]],524],[624,524],[[[794,[84]]],524],[[]],[[[795,[84]]],528],[[[235,[[423,[84]]]]],528],[[[423,[84]]],528],[[]],[[[425,[84]]],528],[[[235,[[262,[84,260,260,[261,[84]]]]]]],511],[[[789,[84]]],511],[[[263,[84,260]]],511],[[],511],[[]],[796,511],[[[85,[84]]],511],[[[262,[84,260,260,[422,[84,260,260]]]]],511],[[],511],[[[426,[84]]],511],[74,511],[[[790,[84]]],511],[519,511],[796,519],[[],519],[[],519],[[],519],[619,519],[[[262,[84,260,260,[422,[84,260,260]]]]],519],[[]],[[],519],[[],519],[[[235,[[262,[84,260,260,[261,[84]]]]]]],519],[528,519],[[],519],[797,519],[[[263,[84,260]]],519],[[[85,[84]]],519],[[[798,[84]]],519],[[[426,[84]]],519],[[],519],[[]],[[]],[[]],[[[425,[51]]],520],[[[791,[51]]],520],[[[235,[[234,[51]]]]],520],[[[262,[51,260,260,[422,[51,260,260]]]]],520],[[[792,[51]]],520],[[[785,[51]]],510],[[]],[[[236,[51,[235,[[234,[51]]]]]]],510],[[[429,[51,[235,[[234,[51]]]]]]],510],[[[786,[51]]],510],[626,510],[[[262,[51,260,260,[422,[51,260,260]]]]],510],[[]],[[[236,[51,[235,[[423,[51]]]]]]],515],[[[793,[51]]],515],[[[429,[51,[235,[[423,[51]]]]]]],515],[627,515],[[[794,[51]]],515],[[[262,[51,260,260,[422,[51,260,260]]]]],515],[[[425,[51]]],527],[[[423,[51]]],527],[[[235,[[423,[51]]]]],527],[[]],[[[795,[51]]],527],[[[263,[51,260]]],507],[[[787,[51]]],507],[88,507],[[[426,[51]]],507],[[],507],[[]],[[[788,[51]]],507],[187,507],[[[85,[51]]],507],[91,507],[[[235,[[262,[51,260,260,[261,[51]]]]]]],507],[[[262,[51,260,260,[422,[51,260,260]]]]],507],[521,526],[74,526],[[[85,[51]]],526],[[]],[[[263,[51,260]]],526],[[[235,[[262,[51,260,260,[261,[51]]]]]]],526],[[[426,[51]]],526],[[[262,[51,260,260,[422,[51,260,260]]]]],526],[517,526],[[],526],[[[789,[51]]],526],[[],526],[[[790,[51]]],526],[527,514],[[]],[[[426,[51]]],514],[522,514],[[],514],[[[85,[51]]],514],[[],514],[[],514],[519,514],[[[798,[51]]],514],[[[263,[51,260]]],514],[[[262,[51,260,260,[422,[51,260,260]]]]],514],[525,514],[[],514],[[],514],[[[235,[[262,[51,260,260,[261,[51]]]]]]],514],[[]],[[[788,[518]]],187],[[],187],[[[787,[518]]],187],[[[85,[518]]],187],[178,187],[[[263,[518,260]]],187],[[[262,[518,260,260,[422,[518,260,260]]]]],187],[[],517],[[[789,[518]]],517],[[[85,[518]]],517],[[]],[[[263,[518,260]]],517],[[[790,[518]]],517],[[[262,[518,260,260,[422,[518,260,260]]]]],517],[[],517],[[],525],[[],525],[[],525],[[[798,[518]]],525],[[[262,[518,260,260,[422,[518,260,260]]]]],525],[[[85,[518]]],525],[[]],[[[263,[518,260]]],525],[[],525],[[],525],[[[787,[89]]],91],[[[788,[89]]],91],[[[85,[89]]],91],[[]],[[[263,[89,260]]],91],[[],91],[[[262,[89,260,260,[422,[89,260,260]]]]],91],[[[263,[89,260]]],521],[[[789,[89]]],521],[[],521],[[],521],[[]],[[[262,[89,260,260,[422,[89,260,260]]]]],521],[[[85,[89]]],521],[[[790,[89]]],521],[[],522],[[],522],[[[798,[89]]],522],[[],522],[[]],[[[262,[89,260,260,[422,[89,260,260]]]]],522],[[],522],[[],522],[[[263,[89,260]]],522],[[[85,[89]]],522],[[[85,[384]]],620],[187,620],[[[787,[384]]],620],[[[788,[384]]],620],[[]],[[],620],[[[790,[384]]],621],[[],621],[517,621],[[]],[[[85,[384]]],621],[[[789,[384]]],621],[[],621],[[[85,[384]]],622],[[]],[525,622],[[],622],[[],622],[[],622],[[[798,[384]]],622],[[],622],[[],622],[91,635],[[]],[[[787,[188]]],635],[[],635],[[[788,[188]]],635],[[[85,[188]]],635],[[],636],[[],636],[[[85,[188]]],636],[[[790,[188]]],636],[521,636],[[[789,[188]]],636],[[]],[[],637],[[]],[[[798,[188]]],637],[[],637],[[],637],[522,637],[[[85,[188]]],637],[[],637],[[],637],[799,177],[[]],[800,177],[801,177],[624,528],[627,527],[84,623],[84,523],[84,88],[84,508],[84,625],[51,626],[51,520],[51,510],[51,507],[[84,88],623],[[51,507],626],[[[85,[84]]],88],[[[85,[84]]],74],[[[85,[84]]],528],[[[85,[84]]],511],[[[85,[84]]],519],[[[85,[51]]],527],[[[85,[51]]],507],[[[85,[51]]],526],[[[85,[51]]],514],[[[85,[518]]],187],[[[85,[518]]],517],[[[85,[518]]],525],[[[85,[89]]],91],[[[85,[89]]],521],[[[85,[89]]],522],[[[85,[384]]],620],[[[85,[384]]],621],[[[85,[384]]],622],[[[85,[188]]],635],[[[85,[188]]],636],[[[85,[188]]],637],[[74,84],624],[[74,84],523],[[74,84],625],[[74,84],524],[[74,84],528],[[526,51],627],[[526,51],510],[[526,51],515],[[526,51],527],[644,[[645,[644]]]],[[644,9],[[645,[644]]]],[[[440,[644]],9],[[645,[644]]]],[[88,88,88],623],[[511,511,511,511],624],[[74,74,74],523],[[88,88],508],[[511,511,511],625],[[519,519,519,519],524],[[507,507,507],626],[[526,526,526,526],627],[[507,507],520],[[526,526,526],510],[[514,514,514,514],515],[[[85,[84]]],623],[[[85,[84]]],624],[[[85,[84]]],523],[[[85,[84]]],508],[[[85,[84]]],625],[[[85,[84]]],524],[[[85,[51]]],626],[[[85,[51]]],627],[[[85,[51]]],520],[[[85,[51]]],510],[[[85,[51]]],515],[[[85,[[85,[84]]]]],623],[[[85,[[85,[84]]]]],624],[[[85,[[85,[84]]]]],523],[[[85,[[85,[84]]]]],508],[[[85,[[85,[84]]]]],625],[[[85,[[85,[84]]]]],524],[[[85,[[85,[51]]]]],626],[[[85,[[85,[51]]]]],627],[[[85,[[85,[51]]]]],520],[[[85,[[85,[51]]]]],510],[[[85,[[85,[51]]]]],515],[[[193,[84]]],623],[[[193,[84]]],624],[[[193,[84]]],523],[[[193,[84]]],508],[[[193,[84]]],625],[[[193,[84]]],524],[[[193,[51]]],626],[[[193,[51]]],627],[[[193,[51]]],520],[[[193,[51]]],510],[[[193,[51]]],515],[[[802,[[0,[[631,[[193,[19]]]],376,377]]]],803],[[22,[745,804]]]],[74,523],[88,508],[74,625],[519,524],[507,520],[526,510],[514,515],[9,[[645,[644]]]],[[648,84,84,84],523],[[648,84,84,84],625],[[648,84,84,84],524],[[648,84,84,84],528],[[648,51,51,51],510],[[648,51,51,51],515],[[648,51,51,51],527],[92,[[21,[90]]]],[[[631,[628]],803],[[22,[745,804]]]],[380,[[645,[644]]]],[508,623],[508,523],[508,625],[520,626],[520,510],[[508,88],623],[[520,507],626],[523,623],[523,624],[523,508],[523,524],[523,528],[510,626],[510,627],[510,520],[510,515],[510,527],[[523,74],624],[[510,526],627],[625,623],[625,508],[625,524],[625,528],[524,624],[524,523],[524,625],[524,528],[515,627],[515,510],[515,527],[[805,803],[[22,[745,804]]]],[188,177],[188,177],[188,177],[[[85,[[85,[84]]]]],523],[[[85,[84]]],88],[[[85,[84]]],74],[[[85,[[85,[84]]]]],508],[[[85,[[85,[84]]]]],524],[[[85,[84]]],519],[[[85,[518]]],187],[[[85,[518]]],517],[[[85,[518]]],525],[[[85,[89]]],91],[[[85,[89]]],521],[[[85,[89]]],522],[528,624],[528,523],[528,625],[528,524],[527,627],[527,510],[527,515],[[9,9],[[645,[644]]]],[647,[[21,[[645,[[0,[644,646,376,377]]]]]]]],[647,[[21,[648]]]],[647,[[21,[509]]]],[647,[[21,[516]]]],[647,[[21,[513]]]],[647,[[21,[641]]]],[647,[[21,[642]]]],[647,[[21,[623]]]],[647,[[21,[624]]]],[647,[[21,[523]]]],[647,[[21,[88]]]],[647,[[21,[74]]]],[647,[[21,[508]]]],[647,[[21,[625]]]],[647,[[21,[524]]]],[647,[[21,[528]]]],[647,[[21,[511]]]],[647,[[21,[519]]]],[647,[[21,[626]]]],[647,[[21,[627]]]],[647,[[21,[520]]]],[647,[[21,[510]]]],[647,[[21,[515]]]],[647,[[21,[527]]]],[647,[[21,[507]]]],[647,[[21,[526]]]],[647,[[21,[514]]]],[647,[[21,[187]]]],[647,[[21,[517]]]],[647,[[21,[525]]]],[647,[[21,[91]]]],[647,[[21,[521]]]],[647,[[21,[522]]]],[647,[[21,[177]]]],[528,41],[[74,74],528],[[526,526],527],[[88,88],528],[[507,507],527],[[74,74],528],[[526,526],527],[[528,74],624],[[528,74],524],[[527,526],627],[[527,526],515],[84,624],[84,523],[84,625],[84,524],[84,528],[51,627],[51,510],[51,515],[51,527],[84,624],[84,523],[84,625],[84,524],[84,528],[51,627],[51,510],[51,515],[51,527],[84,624],[84,523],[84,625],[84,524],[84,528],[51,627],[51,510],[51,515],[51,527],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,41],[88,623],[74,624],[88,523],[88,625],[74,524],[507,626],[526,627],[507,510],[526,515],[[88,84],508],[[507,51],520],[[88,84,88],623],[[88,84,88],523],[[88,84,88],625],[[507,51,507],626],[[507,51,507],510],[[74,528,74],624],[[74,528,74],524],[[526,527,526],627],[[526,527,526],515],[74,528],[526,527],[20,680],[[84,741],740],[188,177],[84,177],[51,177],[193,[[645,[644]]]],[[[193,[84]]],88],[[[193,[84]]],74],[[[193,[84]]],528],[[[193,[84]]],511],[[[193,[84]]],519],[[[193,[51]]],527],[[[193,[51]]],507],[[[193,[51]]],526],[[[193,[51]]],514],[[[193,[518]]],187],[[[193,[518]]],517],[[[193,[518]]],525],[[[193,[89]]],91],[[[193,[89]]],521],[[[193,[89]]],522],[[[193,[384]]],620],[[[193,[384]]],621],[[[193,[384]]],622],[[[193,[188]]],635],[[[193,[188]]],636],[[[193,[188]]],637],[92,[[22,[688]]]],[92,[[22,[90]]]],[92,[[22,[[632,[534]]]]]],[92,[[22,[[633,[534]]]]]],[92,[[22,[692]]]],[92,[[22,[695]]]],[92,[[22,[696]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,41],[88,623],[74,624],[88,523],[88,625],[74,524],[507,626],[526,627],[507,510],[526,515],[[]],[674,[[643,[104]]]],[680,[[682,[104]]]],[[[103,[7]]],[[645,[644]]]],[519,528],[514,527],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[[84,84,84,84],528],[[51,51,51,51],527],0,[619,84],0,0,0,0,0,0,0,0,[[],[[85,[19]]]],[[],530],[[],378],[[],518],[[],384],[[],375],[[],404],[[],224],[[],305],[[],89],[[],188],[[],19],[[],9],[33,89],0,0,0,[[[643,[104]],33],[[21,[104]]]],[[687,9]],[[674,33],[[21,[104]]]],[[[645,[[0,[644,646,376,377]]]],9],[[21,[647]]]],[[618,[751,[90]]],[[21,[27]]]],[[[756,[501]]],21],[708,[[22,[[650,[[643,[104]]]],777]]]],[[17,[50,[104]]],[[807,[704,700,104,806]]]],[[725,747],[[21,[681]]]],[726,[[21,[[650,[104]]]]]],[[191,91],[[21,[33]]]],[[735,[50,[730]]],808],[758,[[21,[104]]]],[[743,92],[[629,[92]]]],[708,[[22,[[14,[[660,[[643,[104]]]],7]],777]]]],[[725,747],[[21,[680]]]],[726,[[21,[[682,[104]]]]]],[[708,747],[[22,[[14,[[660,[674]],7]],777]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[92,[[21,[647]]]],[[[643,[104]],[85,[33]]],[[85,[[21,[104]]]]]],[[674,[85,[33]]],[[85,[[21,[104]]]]]],[[674,[85,[33]]],[[85,[[21,[664]]]]]],[[[643,[104]],33],[[21,[104]]]],[[[660,[653]]],653],[[674,33],[[21,[104]]]],[[[645,[[0,[644,646,376,377]]]],9],[[21,[647]]]],[[618,[751,[90]]],[[21,[27]]]],[[[756,[501]]],21],[708,[[22,[[225,[[643,[104]]]],777]]]],[[17,[50,[104]]],[[809,[704,700,104,806]]]],[[725,747],[[21,[685]]]],[726,[[21,[[225,[104]]]]]],[758,[[21,[104]]]],[758,[[0,[104,364]]]],[758,[[0,[104,364]]]],[[674,33],[[21,[665]]]],[[674,33],[[21,[664]]]],[[[645,[[0,[644,646,376,377]]]]],[[21,[810]]]],[648,[[21,[810]]]],[509,[[21,[810]]]],[516,[[21,[810]]]],[513,[[21,[810]]]],[641,[[21,[810]]]],[642,[[21,[810]]]],[623,[[21,[810]]]],[624,[[21,[810]]]],[523,[[21,[810]]]],[88,[[21,[810]]]],[74,[[21,[810]]]],[508,[[21,[810]]]],[625,[[21,[810]]]],[524,[[21,[810]]]],[528,[[21,[810]]]],[511,[[21,[810]]]],[519,[[21,[810]]]],[626,[[21,[810]]]],[627,[[21,[810]]]],[520,[[21,[810]]]],[510,[[21,[810]]]],[515,[[21,[810]]]],[527,[[21,[810]]]],[507,[[21,[810]]]],[526,[[21,[810]]]],[514,[[21,[810]]]],[187,[[21,[810]]]],[517,[[21,[810]]]],[525,[[21,[810]]]],[91,[[21,[810]]]],[521,[[21,[810]]]],[522,[[21,[810]]]],[177,[[21,[810]]]],[13,[[21,[[650,[104]]]]]],[13,[[21,[[225,[104]]]]]],[92,107],[[],[[0,[322,364,377,376]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[],811],[[17,707],[[21,[[812,[704,700,806]]]]]],[[17,707],[[21,[[813,[704,700,806]]]]]],[[743,92,814],[[629,[92]]]],0,[[[645,[644]],9]],[[17,231]],0,0,0,[[688,186]],[[50,186]],[[[645,[644]],186]],[[[650,[[0,[537,653]]]],186]],[[90,186]],[[[225,[[0,[537,653]]]],186]],[[[632,[537]],186]],[[[633,[537]],186]],[[692,186]],[[694,186]],[[662,186]],[[663,186]],[[702,186]],[[704,186]],[[706,186]],[[707,186]],[[33,186]],[[713,186]],[[716,186]],[[[717,[537]],186]],[[723,186]],[[741,186]],[[648,186]],[[509,186]],[[516,186]],[[513,186]],[[641,186]],[[642,186]],[[187,186]],[[517,186]],[[525,186]],[[91,186]],[[521,186]],[[522,186]],[[620,186]],[[621,186]],[[622,186]],[[635,186]],[[636,186]],[[637,186]],[[177,186]],0,[[[631,[92]]],[[22,[619,778]]]],[[[603,[530]]],530],[[[603,[378]]],378],0,[[[603,[518]]],518],0,[[[603,[384]]],384],[[384,384],620],[[384,384,384],621],[[384,384,384,384],622],[[[603,[375]]],375],[[],217],[[],217],[639,217],[727,217],[737,815],0,0,0,0,0,0,0,[[191,91],89],0,0,0,0,0,0,0,0,0,0,0,[697],[697],[697],[697],0,[[[645,[644]],[816,[193]]]],[[[603,[9]]],9],[33,89],[[88,9]],[[74,9]],[[511,9]],[[519,9]],[[507,9]],[[526,9]],[[514,9]],[[187,9]],[[517,9]],[[525,9]],[[91,9]],[[521,9]],[[522,9]],[[620,9]],[[621,9]],[[622,9]],[[635,9]],[[636,9]],[[637,9]],0,0,[[[645,[644]],[816,[193]]]],[[88,9]],[[74,9]],[[511,9]],[[519,9]],[[507,9]],[[526,9]],[[514,9]],[[187,9]],[[517,9]],[[525,9]],[[91,9]],[[521,9]],[[522,9]],[[620,9]],[[621,9]],[[622,9]],[[635,9]],[[636,9]],[[637,9]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[708],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[13,13],[13,[[225,[[0,[104,760]]]]]],[25,[[225,[[0,[104,364]]]]]],[13],[13],[13],[13],[13],[13],[[639,13]],[[138,13]],[13],[13],[13],[13],[13],[13],[13],0,[[29,13]],[[[645,[644]]],9],0,[[[643,[104]],33,104],[[21,[104]]]],[[674,33,104],[[21,[104]]]],[[[645,[[0,[644,646,376,377]]]],9,[8,[647,7]]]],[[[645,[644]],9]],[[725,817],[[21,[680]]]],[[726,104],[[21,[[682,[104]]]]]],[[758,104]],[[674,33,817],[[21,[817]]]],[[725,680],[[21,[680]]]],[[726,[682,[104]]]],[[[645,[644]],9,193]],[[[645,[644]],9,380]],[[674,33,19],16],[[13,104],[[21,[[682,[104]]]]]],[[25,104]],[[29,640,818],29],[[29,640,818],29],[27],[[819,27]],[[820,25]],[[27,821],27],[[25,822],25],[[74,74,51],74],[[528,528,51],528],[[177,177,51],177],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[632,[782]]],[[629,[782]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[[645,[[0,[644,646,376,377]]]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[648,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[509,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[516,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[513,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[641,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[642,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[623,7]]],[[8,[1,7]]]],[[[8,[624,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[523,7]]],[[8,[1,7]]]],[[[8,[88,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[74,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[508,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[625,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[524,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[528,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[511,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[519,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[626,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[627,7]]],[[8,[1,7]]]],[[[8,[520,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[510,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[515,7]]],[[8,[1,7]]]],[[[8,[527,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[507,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[526,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[514,7]]],[[8,[1,7]]]],[[[8,[187,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[517,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[525,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[91,7]]],[[8,[1,7]]]],[[[8,[521,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[522,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[177,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[645,[644]]],[[8,[193,7]]]],[660],[[[645,[644]]],[[22,[644,[645,[644]]]]]],[[]],[[]],[[]],[[[645,[644]]]],[[[645,[644]]]],[[[645,[644]]]],[[]],[[]],[[]],[[]],[[]],[[[632,[322]]],322],[[[633,[322]]],322],[[[8,[[645,[[0,[644,646,376,377]]]],7]]],[[8,[647,7]]]],[[[8,[648,7]]],[[8,[647,7]]]],[[[8,[509,7]]],[[8,[647,7]]]],[[[8,[516,7]]],[[8,[647,7]]]],[[[8,[513,7]]],[[8,[647,7]]]],[[[8,[641,7]]],[[8,[647,7]]]],[[[8,[642,7]]],[[8,[647,7]]]],[[[8,[623,7]]],[[8,[647,7]]]],[[[8,[624,7]]],[[8,[647,7]]]],[[[8,[523,7]]],[[8,[647,7]]]],[[[8,[88,7]]],[[8,[647,7]]]],[[[8,[74,7]]],[[8,[647,7]]]],[[[8,[508,7]]],[[8,[647,7]]]],[[[8,[625,7]]],[[8,[647,7]]]],[[[8,[524,7]]],[[8,[647,7]]]],[[[8,[528,7]]],[[8,[647,7]]]],[[[8,[511,7]]],[[8,[647,7]]]],[[[8,[519,7]]],[[8,[647,7]]]],[[[8,[626,7]]],[[8,[647,7]]]],[[[8,[627,7]]],[[8,[647,7]]]],[[[8,[520,7]]],[[8,[647,7]]]],[[[8,[510,7]]],[[8,[647,7]]]],[[[8,[515,7]]],[[8,[647,7]]]],[[[8,[527,7]]],[[8,[647,7]]]],[[[8,[507,7]]],[[8,[647,7]]]],[[[8,[526,7]]],[[8,[647,7]]]],[[[8,[514,7]]],[[8,[647,7]]]],[[[8,[187,7]]],[[8,[647,7]]]],[[[8,[517,7]]],[[8,[647,7]]]],[[[8,[525,7]]],[[8,[647,7]]]],[[[8,[91,7]]],[[8,[647,7]]]],[[[8,[521,7]]],[[8,[647,7]]]],[[[8,[522,7]]],[[8,[647,7]]]],[[[8,[177,7]]],[[8,[647,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,22],[745,22],[[[650,[653]]]],[[[225,[653]]]],[674,[[643,[104]]]],[[[643,[104]]],674],[726,725],[756,22],[[[645,[644]]],[[103,[7]]]],[623,623],[624,624],[523,523],[508,508],[625,625],[524,524],[528,528],[626,626],[627,627],[520,520],[510,510],[515,515],[527,527],0,[[34,33],16],[[[645,[644]]],16],[90,16],[697,16],[623,16],[624,16],[523,16],[88,16],[74,16],[508,16],[625,16],[524,16],[528,16],[511,16],[519,16],[626,16],[627,16],[520,16],[510,16],[515,16],[527,16],[507,16],[526,16],[514,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[623,16],[624,16],[523,16],[88,16],[74,16],[508,16],[625,16],[524,16],[528,16],[511,16],[519,16],[626,16],[627,16],[520,16],[510,16],[515,16],[527,16],[507,16],[526,16],[514,16],[88,509],[74,516],[511,641],[519,642],[507,509],[526,516],[514,513],[528,16],[527,16],[88,89],[74,89],[511,89],[519,89],[507,89],[526,89],[514,89],[187,89],[517,89],[525,89],[620,89],[621,89],[622,89],[88,16],[74,16],[528,16],[511,16],[519,16],[527,16],[507,16],[526,16],[514,16],[632,16],[633,16],[38,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[177,16],[[[603,[404]]],404],[[[643,[104]]],301],[674,823],[[[645,[[0,[644,646,376,377]]]]],824],[618,[[825,[90,27]]]],0,[509,826],[516,826],[513,826],[623,826],[624,826],[523,826],[88,826],[74,826],[508,826],[625,826],[524,826],[511,826],[519,826],[626,826],[627,826],[520,826],[510,826],[515,826],[507,826],[526,826],[514,826],[187,826],[517,826],[525,826],[91,826],[521,826],[522,826],[[[643,[104]]],301],[674,827],[618,[[828,[90,27]]]],[[[643,[104]],[15,[649,7]]],[[830,[829]]]],[[674,[15,[649,7]]],829],[[34,230],831],[[[15,[649,7]]]],[[[643,[104]],[15,[649,7]]],[[830,[832]]]],[[674,[15,[649,7]]],832],[[[650,[[643,[104]]]],[15,[649,7]]]],[[[225,[[643,[104]]]],[15,[649,7]]]],[[[225,[[643,[104]]]],[15,[649,7]]]],[[34,649],833],[[518,518],187],[[518,518,518],517],[[518,518,518,518],525],[740,16],0,0,0,[[34,33]],[34,[[103,[33,7]]]],0,0,0,0,0,[[[650,[653]]],653],[[[225,[653]]],653],0,[[[767,[644]]],9],[[[645,[644]]],9],[[[645,[[0,[644,646,376,377]]]]],9],[90,9],0,0,[88,84],[74,84],[528,84],[511,84],[519,84],[527,51],[507,51],[526,51],[514,51],[88,84],[74,84],[528,84],[511,84],[519,84],[527,51],[507,51],[526,51],[514,51],[88,84],[74,84],[528,84],[511,84],[519,84],[527,51],[507,51],[526,51],[514,51],[187,518],[517,518],[525,518],[91,89],[521,89],[522,89],[620,384],[621,384],[622,384],[635,188],[636,188],[637,188],[[88,88,84],88],[[74,74,84],74],[[528,528,84],528],[[511,511,84],511],[[519,519,84],519],[[527,527,51],527],[[507,507,51],507],[[526,526,51],526],[[514,514,51],514],[16,16],0,[697,[[769,[[8,[834,7]]]]]],[[835,[193,[19]]],[[769,[[8,[768,7]]]]]],[[],[[103,[817,7]]]],[[836,835,[193,[19]]],[[769,[[8,[768,7]]]]]],[[837,835,[193,[19]]],[[769,[[8,[768,7]]]]]],[[838,763,664,105],[[22,[171]]]],[758],[759,[[103,[817,7]]]],[[835,628],[[22,[707,748]]]],[[17,663],707],[[17,662,16],768],[[17,663],707],[17,768],[17,768],[663,[[769,[[8,[768,7]]]]]],[[770,663],[[769,[[8,[768,7]]]]]],[[771,663],[[769,[[8,[768,7]]]]]],[[772,663],[[769,[[8,[768,7]]]]]],[[17,[21,[92]]],768],0,[697,89],0,0,0,0,[[74,74,74],624],[[74,74,74],524],[[526,526,526],627],[[526,526,526],515],[[74,74,74],624],[[74,74,74],524],[[526,526,526],627],[[526,526,526],515],[[74,74,74],624],[[74,74,74],524],[[526,526,526],627],[[526,526,526],515],[[74,74,74],624],[[74,74,74],524],[[526,526,526],627],[[526,526,526],515],[[],490],[13],0,[501],[[[632,[322]]],322],[[[633,[322]]],322],[[[650,[653]],501],[[650,[653]]]],[[[225,[653]],501],[[225,[653]]]],0,0,0,[[[650,[653]],501]],[[[225,[653]],501]],[[677,[389,[839]]],677],[[679,839],679],0,0,[[88,88],508],[[74,74,74],523],[[511,511,511],625],[[519,519,519,519],524],0,0,0,0,[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],0,[88,84],[74,84],[511,84],[519,84],[507,51],[526,51],[514,51],[187,518],[517,518],[525,518],[91,89],[521,89],[522,89],[620,384],[621,384],[622,384],[635,188],[636,188],[637,188],0,0,[92,668],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[88,84],[74,84],[511,84],[519,84],[507,51],[526,51],[514,51],[187,518],[517,518],[525,518],[91,89],[521,89],[522,89],[620,384],[621,384],[622,384],[635,188],[636,188],[637,188],[[677,88],677],0,0,[740,741],0,[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],0,0,0,[[[632,[[0,[458,458]]]],632]],[[[633,[[0,[458,458]]]],633]],[[619,[85,[84]]]],[[619,74]],[[619,[85,[84]]]],[[619,519]],[[619,84]],[[623,523]],[[623,623]],[[623,625]],[[624,524]],[[624,624]],[[523,523]],[[523,74]],[[523,623]],[[523,511],511],[[523,84]],[[88,88],88],[[88,84],88],[[74,84],74],[[74,74],74],[[508,88]],[[508,84]],[[508,508]],[[625,74],74],[[625,623]],[[625,511]],[[625,84]],[[625,625]],[[524,624]],[[524,524]],[[524,84]],[[524,519]],[[528,84],528],[[528,528],528],[[528,511]],[[528,74]],[[511,84],511],[[511,511],511],[[519,519],519],[[519,84],519],[[626,510]],[[626,626]],[[627,627]],[[627,515]],[[520,51]],[[520,520]],[[520,507]],[[510,526]],[[510,510]],[[510,51]],[[510,626]],[[515,514]],[[515,627]],[[515,515]],[[515,51]],[[527,527],527],[[527,526]],[[527,51],527],[[507,51],507],[[507,507],507],[[526,51],526],[[526,526],526],[[514,51],514],[[514,514],514],[[187,518],187],[[187,187],187],[[517,518],517],[[517,517],517],[[525,518],525],[[525,525],525],[[91,89],91],[[91,91],91],[[521,89],521],[[521,521],521],[[522,89],522],[[522,522],522],[[620,384],620],[[620,620],620],[[621,384],621],[[621,621],621],[[622,622],622],[[622,384],622],[[635,188],635],[[635,635],635],[[636,636],636],[[636,188],636],[[637,188],637],[[637,637],637],[[177,89],177],[[88,88,88],88],[[74,74,74],74],[[511,511,511],511],[[519,519,519],519],[[507,507,507],507],[[526,526,526],526],[[514,514,514],514],[[[632,[[0,[322,840,840]]]],632]],[[[633,[[0,[840,840]]]],633]],[[619,[85,[84]]]],[[619,84]],[[619,519]],[[619,[85,[84]]]],[[619,74]],[[623,623]],[[624,624]],[[523,84]],[[523,523]],[[88,84]],[[88,88]],[[74,74]],[[74,84]],[[508,84]],[[508,508]],[[625,625]],[[625,84]],[[524,524]],[[524,84]],[[528,528]],[[511,511]],[[511,84]],[[519,519]],[[519,84]],[[626,626]],[[627,627]],[[520,51]],[[520,520]],[[510,51]],[[510,510]],[[515,515]],[[515,51]],[[527,527]],[[507,51]],[[507,507]],[[526,51]],[[526,526]],[[514,51]],[[514,514]],[[187,187]],[[187,518]],[[517,517]],[[517,518]],[[525,518]],[[525,525]],[[91,91]],[[91,89]],[[521,521]],[[521,89]],[[522,522]],[[522,89]],[[620,384]],[[620,620]],[[621,384]],[[621,621]],[[622,384]],[[622,622]],[[635,188]],[[635,635]],[[636,636]],[[636,188]],[[637,637]],[[637,188]],[[177,89]],[[177,84],177],[[177,51],177],[[508,508],508],[[520,520],520],[[523,523],523],[[625,625],625],[[510,510],510],[[524,524],524],[[515,515],515],[[528,528],528],[[527,527],527],[[523,84],523],[[508,84],508],[[625,84],625],[[524,84],524],[[520,51],520],[[510,51],510],[[515,51],515],[[508,88],88],[[520,507],507],[[523,74],74],[[625,74],74],[[528,74],74],[[510,526],526],[[527,526],526],[[523,511],511],[[625,511],511],[[528,511],511],[[524,519],519],[[515,514],514],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],92],[639,107],[138,92],[727,107],0,0,0,0,0,0,0,[[509,9],[[21,[92]]]],[[516,9],[[21,[92]]]],[[513,9],[[21,[92]]]],[[623,9],[[21,[92]]]],[[624,9],[[21,[92]]]],[[523,9],[[21,[92]]]],[[88,9],[[21,[92]]]],[[74,9],[[21,[92]]]],[[508,9],[[21,[92]]]],[[625,9],[[21,[92]]]],[[524,9],[[21,[92]]]],[[511,9],[[21,[92]]]],[[519,9],[[21,[92]]]],[[626,9],[[21,[92]]]],[[627,9],[[21,[92]]]],[[520,9],[[21,[92]]]],[[510,9],[[21,[92]]]],[[515,9],[[21,[92]]]],[[507,9],[[21,[92]]]],[[526,9],[[21,[92]]]],[[514,9],[[21,[92]]]],[[187,9],[[21,[92]]]],[[517,9],[[21,[92]]]],[[525,9],[[21,[92]]]],[[91,9],[[21,[92]]]],[[521,9],[[21,[92]]]],[[522,9],[[21,[92]]]],0,[[[632,[481]]]],[[[633,[481]]]],[523],[88,88],[74,74],[508],[625],[524],[528,528],[511,511],[519,519],[520],[510],[515],[527,527],[507,507],[526,526],[514,514],[187,187],[517,517],[525,525],[620,620],[621,621],[622,622],[[[755,[19]]],[[657,[655]]]],[[[755,[19]]],[[656,[655]]]],[[],660],[92,[[22,[688,774]]]],[20,674],[841,38],[[],[[645,[644]]]],[[[755,[19]]],[[661,[655]]]],[[],27],[653,[[650,[653]]]],[[],25],[[628,628],770],[92,771],[380,772],[[],756],[653,[[225,[653]]]],[[[389,[842]]],677],[678,679],[[188,188,188],692],[640,639],[[89,89],33],[[843,692],17],[817,680],[[],725],[[],726],[104,[[682,[104]]]],[[84,88,84,84],67],[[[50,[93]]],42],[[91,88,[50,[93]]],191],[[[0,[218,377,376]]],734],[[],739],[[177,741],740],[[],13],[[16,16],509],[[16,16,16],516],[[16,16,16,16],513],[[16,16,16],641],[[16,16,16,16],642],[[84,84],88],[[84,84,84],74],[[84,84,84],511],[[84,84,84,84],519],[[51,51],507],[[51,51,51],526],[[51,51,51,51],514],[[518,518],187],[[518,518,518],517],[[518,518,518,518],525],[[89,89],91],[[89,89,89],521],[[89,89,89,89],522],[[384,384],620],[[384,384,384],621],[[384,384,384,384],622],[[188,188],635],[[188,188,188],636],[[188,188,188,188],637],[[188,89],177],[[92,217],[[22,[688,774]]]],[832,21],[829,21],[[[767,[644]]],21],[823,21],[827,21],[[[831,[301]]],21],[833,21],[[[659,[644]]],21],[[[767,[644]]],21],[[[659,[644]]],21],0,0,0,0,[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],[88,88],[74,74],[528,528],[511,511],[519,519],[527,527],[507,507],[526,526],[514,514],[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[[[632,[846]]]],[[[633,[846]]]],[509,509],[516,516],[513,513],[641,641],[642,642],[187],[517],[525],[91],[521],[522],[620],[621],[622],[635],[636],[637],0,[[677,[21,[678]]],677],0,[[677,[21,[678]]],677],0,[717,21],[[84,84,84,84,84,84],524],[[51,51,51,51,51,51],515],[[84,84,84,84,84,84],524],[[51,51,51,51,51,51],515],[[84,84,84,84,84,84],524],[[51,51,51,51,51,51],515],0,0,0,0,0,0,0,0,[17,[[847,[694,693,806]]]],0,0,0,0,[[677,[389,[839]]],677],[[679,[389,[839]]],679],0,0,0,0,[[679,808,848],849],0,[92,[[22,[692,850]]]],[[[660,[416]],660],[[21,[183]]]],[[688,688],[[21,[183]]]],[[[645,[644]],[645,[644]]],[[21,[183]]]],[[[650,[[0,[416,653]]]]],[[21,[183]]]],[[90,90],[[21,[183]]]],[[[225,[[0,[416,653]]]]],[[21,[183]]]],[[[632,[[416,[[416,[[416,[416]]]]]]]],[632,[[416,[[416,[[416,[416]]]]]]]]],[[21,[183]]]],[[[633,[[416,[[416,[[416,[416]]]]]]]],[633,[[416,[[416,[[416,[416]]]]]]]]],[[21,[183]]]],[[692,692],[[21,[183]]]],[[704,704],[[21,[183]]]],[[707,707],[[21,[183]]]],[[33,33],[[21,[183]]]],[[[717,[[416,[[416,[[416,[416]]]]]]]],[717,[[416,[[416,[[416,[416]]]]]]]]],[[21,[183]]]],[[177,177],[[21,[183]]]],[[193,9]],0,0,0,0,0,[38],[739],[740],[739,16],[740,16],0,0,0,[740,84],[740,84],[88,88],[507,507],[187,187],[620,620],[[88,88],84],[[507,507],51],[[187,187],518],[[620,620],384],[[84,84,84],524],[[51,51,51],515],[[84,84,84],524],[[51,51,51],515],[[84,84,84],524],[[51,51,51],515],[[84,84,84],524],[[51,51,51],515],[[84,84,84,84],524],[[51,51,51,51],515],[[84,84,84,84],524],[[51,51,51,51],515],[[84,84,84,84],524],[[51,51,51,51],515],0,0,0,[[[645,[644]]],21],[[[645,[[0,[644,646,376,377]]]]],[[21,[[8,[647,7]]]]]],[[191,89],91],0,[[88,84],88],[[74,84],74],[[511,84],511],[[519,84],519],[[507,51],507],[[526,51],526],[[514,51],514],0,[90,188],[688,92],0,[723,16],0,0,[301,623],[301,624],[301,523],[301,523],[301,88],[301,88],[301,74],[301,74],[301,508],[301,508],[301,625],[301,625],[301,524],[301,524],[301,528],[301,528],[301,511],[301,511],[301,519],[301,519],[301,626],[301,627],[301,520],[301,520],[301,510],[301,510],[301,515],[301,515],[301,527],[301,527],[301,507],[301,507],[301,526],[301,526],[301,514],[301,514],[301,187],[301,187],[301,517],[301,517],[301,525],[301,525],[301,91],[301,91],[301,521],[301,521],[301,522],[301,522],[301,620],[301,620],[301,621],[301,621],[301,622],[301,622],[301,635],[301,635],[301,636],[301,636],[301,637],[301,637],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[524,74],74],[[515,526],526],[[[657,[655]]],[[656,[655]]]],0,0,0,0,0,0,[[[645,[[0,[644,646,376,377]]]],[8,[647,7]]]],[[[645,[644]]]],[[84,84,84,84],528],0,0,0,[619,84],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[[],365],[[[656,[655]]]],[[523,[753,[752]]]],[[88,[753,[752]]]],[[74,[753,[752]]]],[[508,[753,[752]]]],[[524,[753,[752]]]],[[519,[753,[752]]]],[[187,[753,[752]]]],[[517,[753,[752]]]],[[525,[753,[752]]]],[[91,[753,[752]]]],[[521,[753,[752]]]],[[522,[753,[752]]]],[[[656,[690]]]],[[[657,[655]]],[[657,[655]]]],[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[187,[[21,[188]]]],[517,[[21,[188]]]],[525,[[21,[188]]]],[91,[[21,[188]]]],[521,[[21,[188]]]],[522,[[21,[188]]]],[177,[[21,[188]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[[645,[[0,[644,646,376,377]]]]],851],[648,851],[509,851],[516,851],[513,851],[641,851],[642,851],[623,851],[624,851],[523,851],[88,851],[74,851],[508,851],[625,851],[524,851],[528,851],[511,851],[519,851],[626,851],[627,851],[520,851],[510,851],[515,851],[527,851],[507,851],[526,851],[514,851],[187,851],[517,851],[525,851],[91,851],[521,851],[522,851],[177,851],[[[8,[[645,[[0,[644,646,376,377]]]],7]]],852],[[[8,[648,7]]],852],[[[8,[509,7]]],852],[[[8,[516,7]]],852],[[[8,[513,7]]],852],[[[8,[641,7]]],852],[[[8,[642,7]]],852],[[[8,[623,7]]],852],[[[8,[624,7]]],852],[[[8,[523,7]]],852],[[[8,[88,7]]],852],[[[8,[74,7]]],852],[[[8,[508,7]]],852],[[[8,[625,7]]],852],[[[8,[524,7]]],852],[[[8,[528,7]]],852],[[[8,[511,7]]],852],[[[8,[519,7]]],852],[[[8,[626,7]]],852],[[[8,[627,7]]],852],[[[8,[520,7]]],852],[[[8,[510,7]]],852],[[[8,[515,7]]],852],[[[8,[527,7]]],852],[[[8,[507,7]]],852],[[[8,[526,7]]],852],[[[8,[514,7]]],852],[[[8,[187,7]]],852],[[[8,[517,7]]],852],[[[8,[525,7]]],852],[[[8,[91,7]]],852],[[[8,[521,7]]],852],[[[8,[522,7]]],852],[[[8,[177,7]]],852],[[[645,[[0,[644,646,376,377]]]],647],[[21,[16]]]],[[509,647],[[21,[16]]]],[[516,647],[[21,[16]]]],[[513,647],[[21,[16]]]],[[623,647],[[21,[16]]]],[[624,647],[[21,[16]]]],[[523,647],[[21,[16]]]],[[88,647],[[21,[16]]]],[[74,647],[[21,[16]]]],[[508,647],[[21,[16]]]],[[625,647],[[21,[16]]]],[[524,647],[[21,[16]]]],[[528,647],[[21,[16]]]],[[511,647],[[21,[16]]]],[[519,647],[[21,[16]]]],[[626,647],[[21,[16]]]],[[627,647],[[21,[16]]]],[[520,647],[[21,[16]]]],[[510,647],[[21,[16]]]],[[515,647],[[21,[16]]]],[[527,647],[[21,[16]]]],[[507,647],[[21,[16]]]],[[526,647],[[21,[16]]]],[[514,647],[[21,[16]]]],[[187,647],[[21,[16]]]],[[517,647],[[21,[16]]]],[[525,647],[[21,[16]]]],[[91,647],[[21,[16]]]],[[521,647],[[21,[16]]]],[[522,647],[[21,[16]]]],[[177,647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[[[645,[[0,[644,646,376,377]]]]],854],[648,854],[509,854],[516,854],[513,854],[641,854],[642,854],[623,854],[624,854],[523,854],[88,854],[74,854],[508,854],[625,854],[524,854],[528,854],[511,854],[519,854],[626,854],[627,854],[520,854],[510,854],[515,854],[527,854],[507,854],[526,854],[514,854],[187,854],[517,854],[525,854],[91,854],[521,854],[522,854],[177,854],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[]],[17,17],[17,17],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[88,88],88],[[88,84],88],[[74,84],74],[[74,74],74],[[511,511],511],[[511,84],511],[[519,519],519],[[519,84],519],[[507,507],507],[[507,51],507],[[526,526],526],[[526,51],526],[[514,51],514],[[514,514],514],[[187,187],187],[[187,518],187],[[517,518],517],[[517,517],517],[[525,518],525],[[525,525],525],[[91,91],91],[[91,89],91],[[521,521],521],[[521,89],521],[[522,522],522],[[522,89],522],[[620,620],620],[[620,384],620],[[621,384],621],[[621,621],621],[[622,384],622],[[622,622],622],[[635,635],635],[[635,188],635],[[636,188],636],[[636,636],636],[[637,188],637],[[637,637],637],[[88,84]],[[88,88]],[[74,84]],[[74,74]],[[511,511]],[[511,84]],[[519,84]],[[519,519]],[[507,507]],[[507,51]],[[526,51]],[[526,526]],[[514,51]],[[514,514]],[[187,187]],[[187,518]],[[517,517]],[[517,518]],[[525,525]],[[525,518]],[[91,91]],[[91,89]],[[521,89]],[[521,521]],[[522,522]],[[522,89]],[[620,620]],[[620,384]],[[621,384]],[[621,621]],[[622,622]],[[622,384]],[[635,635]],[[635,188]],[[636,636]],[[636,188]],[[637,637]],[[637,188]],[[88,88],88],[[74,74],74],[[511,511],511],[[519,519],519],[[507,507],507],[[526,526],526],[[514,514],514],[[187,187],187],[[517,517],517],[[525,525],525],[[620,620],620],[[621,621],621],[[622,622],622],[740,177],[740,84],[[[643,[104]],33],[[21,[104]]]],[[674,33],[[21,[104]]]],[[[645,[[0,[644,646,376,377]]]],9],[[8,[647,7]]]],[[[645,[644]],9]],[[725,747],[[21,[680]]]],[758],[[674,33],[[21,[817]]]],[[674,33,[21,[19]]],16],[25,[[21,[104]]]],0,[660],[[660,501]],[[]],[[[645,[644]],9]],[[[645,[644]],9]],[739],[740],[[[645,[644]],9]],[[[645,[644]],9,231]],[13,[[650,[104]]]],[13,[[225,[104]]]],0,0,[618],[[27,13]],[[[645,[644]],231]],[[[645,[644]],231]],0,[[84,84,84],619],[[19,19,19],619],[[84,84,84,84],619],[[19,19,19,19],619],[[737,[389,[107]]],855],0,0,[17,[[807,[704,700,104,806]]]],0,0,0,[[88,88],88],[[507,507],507],[[187,187],187],[[620,620],620],0,[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[[523,9],74],[[508,9],88],[[625,9],511],[[524,9],519],[[520,9],507],[[510,9],526],[[515,9],514],0,[13],[13],[[29,13]],[[639,13]],[[138,13]],0,[[13,106]],[[13,106]],0,[193,21],[301,21],[[193,9],[[103,[7]]]],[[301,9],[[103,[7]]]],[[193,9],[[103,[7]]]],[193,21],0,[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[177,177],177],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[177,89],177],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[177,177],177],[[[103,[817,7]]]],[758],[[759,[103,[817,7]]]],0,0,0,0,[[],20],[674,20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[680,20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[509,88,88],88],[[516,74,74],74],[[641,511,511],511],[[642,519,519],519],[[509,507,507],507],[[516,526,526],526],[[513,514,514],514],[[509,187,187],187],[[516,517,517],517],[[513,525,525],525],[[509,91,91],91],[[516,521,521],521],[[513,522,522],522],[[509,620,620],620],[[516,621,621],621],[[513,622,622],622],[[509,635,635],635],[[516,636,636],636],[[513,637,637],637],[[129,84]],[[677,856],677],0,[172,22],[[688,172],22],[[[645,[644]],172],22],[[692,172],22],[[648,172],22],[[509,172],22],[[516,172],22],[[513,172],22],[[641,172],22],[[642,172],22],[[623,172],22],[[624,172],22],[[523,172],22],[[88,172],22],[[74,172],22],[[508,172],22],[[625,172],22],[[524,172],22],[[528,172],22],[[511,172],22],[[519,172],22],[[626,172],22],[[627,172],22],[[520,172],22],[[510,172],22],[[515,172],22],[[527,172],22],[[507,172],22],[[526,172],22],[[514,172],22],[[187,172],22],[[517,172],22],[[525,172],22],[[91,172],22],[[521,172],22],[[522,172],22],[[620,172],22],[[621,172],22],[[622,172],22],[[635,172],22],[[636,172],22],[[637,172],22],[[177,172],22],0,0,[[[645,[[0,[644,646,376,377]]]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[191,91,[21,[33]]]],[[648,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[509,9,16]],[[509,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[516,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[516,9,16]],[[513,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[513,9,16]],[[641,9,16]],[[641,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[642,9,16]],[[642,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[623,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[624,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[523,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[88,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[74,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[508,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[625,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[524,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[528,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[511,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[519,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[626,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[627,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[520,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[510,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[515,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[527,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[507,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[526,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[514,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[187,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[517,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[525,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[91,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[521,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[522,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[177,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[619,84],619],[[619,84],619],[[740,177]],[[739,177]],[[740,177]],[[619,84],619],[[17,843]],[[[645,[644]],9]],[[740,741]],[[619,84],619],[[[0,[322,364,377,376]]]],0,[25,[[21,[[650,[104]]]]]],[25,[[21,[[682,[104]]]]]],[25,[[21,[[225,[104]]]]]],0,[[[632,[[0,[857,857]]]],632]],[[[633,[[0,[857,857]]]],633]],[[187,378]],[[187,188]],[[187,305]],[[187,19]],[[187,375]],[[187,518]],[[187,89]],[[187,187]],[[187,384]],[[187,91]],[[517,384]],[[517,517]],[[517,378]],[[517,19]],[[517,518]],[[517,305]],[[517,375]],[[517,521]],[[517,188]],[[517,89]],[[525,89]],[[525,384]],[[525,188]],[[525,305]],[[525,518]],[[525,19]],[[525,378]],[[525,525]],[[525,522]],[[525,375]],[[91,89]],[[91,378]],[[91,91]],[[91,518]],[[91,384]],[[91,187]],[[91,19]],[[91,188]],[[91,375]],[[91,305]],[[521,378]],[[521,375]],[[521,518]],[[521,188]],[[521,89]],[[521,19]],[[521,521]],[[521,384]],[[521,305]],[[521,517]],[[522,518]],[[522,188]],[[522,522]],[[522,378]],[[522,375]],[[522,89]],[[522,305]],[[522,19]],[[522,384]],[[522,525]],[[620,19]],[[620,187]],[[620,378]],[[620,518]],[[620,89]],[[620,305]],[[620,188]],[[620,375]],[[620,91]],[[620,384]],[[621,19]],[[621,378]],[[621,517]],[[621,89]],[[621,375]],[[621,305]],[[621,188]],[[621,384]],[[621,521]],[[621,518]],[[622,522]],[[622,375]],[[622,518]],[[622,525]],[[622,89]],[[622,305]],[[622,188]],[[622,378]],[[622,384]],[[622,19]],[[635,378]],[[635,187]],[[635,384]],[[635,89]],[[635,305]],[[635,91]],[[635,518]],[[635,375]],[[635,188]],[[635,19]],[[636,305]],[[636,375]],[[636,384]],[[636,378]],[[636,517]],[[636,521]],[[636,89]],[[636,188]],[[636,19]],[[636,518]],[[637,518]],[[637,188]],[[637,384]],[[637,375]],[[637,19]],[[637,522]],[[637,525]],[[637,305]],[[637,378]],[[637,89]],[[[632,[[0,[322,858,858]]]],632]],[[[633,[[0,[858,858]]]],633]],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[677,779],780],[[679,779,501],859],[[[632,[[0,[860,860]]]],632]],[[[633,[[0,[860,860]]]],633]],[[187,384]],[[187,518]],[[187,378]],[[187,188]],[[187,305]],[[187,89]],[[187,187]],[[187,19]],[[187,375]],[[187,91]],[[517,521]],[[517,188]],[[517,305]],[[517,384]],[[517,89]],[[517,375]],[[517,19]],[[517,517]],[[517,518]],[[517,378]],[[525,89]],[[525,188]],[[525,19]],[[525,518]],[[525,305]],[[525,378]],[[525,375]],[[525,384]],[[525,522]],[[525,525]],[[91,375]],[[91,187]],[[91,19]],[[91,384]],[[91,188]],[[91,518]],[[91,305]],[[91,378]],[[91,91]],[[91,89]],[[521,305]],[[521,378]],[[521,517]],[[521,375]],[[521,384]],[[521,19]],[[521,521]],[[521,518]],[[521,188]],[[521,89]],[[522,89]],[[522,305]],[[522,518]],[[522,522]],[[522,375]],[[522,19]],[[522,378]],[[522,525]],[[522,188]],[[522,384]],[[620,305]],[[620,518]],[[620,375]],[[620,188]],[[620,384]],[[620,187]],[[620,19]],[[620,91]],[[620,89]],[[620,378]],[[621,188]],[[621,384]],[[621,378]],[[621,521]],[[621,89]],[[621,517]],[[621,19]],[[621,305]],[[621,375]],[[621,518]],[[622,384]],[[622,305]],[[622,522]],[[622,19]],[[622,525]],[[622,518]],[[622,89]],[[622,188]],[[622,378]],[[622,375]],[[635,384]],[[635,518]],[[635,19]],[[635,375]],[[635,188]],[[635,89]],[[635,187]],[[635,378]],[[635,91]],[[635,305]],[[636,378]],[[636,517]],[[636,375]],[[636,305]],[[636,384]],[[636,518]],[[636,19]],[[636,188]],[[636,521]],[[636,89]],[[637,89]],[[637,525]],[[637,305]],[[637,188]],[[637,522]],[[637,378]],[[637,375]],[[637,384]],[[637,19]],[[637,518]],[[[632,[[0,[322,861,861]]]],632]],[[[633,[[0,[861,861]]]],633]],[[[645,[644]]]],[193],[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[187,187],[517,517],[525,525],[620,620],[621,621],[622,622],[[],9],[93,88],0,0,0,0,[[[767,[644]]]],[[],9],[[[659,[644]]]],[[],9],[[528,528,84],528],[[527,527,51],527],[[[650,[193]],[603,[9]]],[[650,[193]]]],[[[225,[193]],[603,[9]]],[[225,[193]]]],0,[27,13],0,[778,[[21,[862]]]],[[34,[225,[[643,[41]]]],[225,[[643,[66]]]]],33],0,[[[645,[644]]],16],[16,509],[16,516],[16,513],[16,641],[16,642],[84,88],[84,74],[84,511],[84,519],[51,507],[51,526],[51,514],[518,187],[518,517],[518,525],[89,91],[89,521],[89,522],[384,620],[384,621],[384,622],[188,635],[188,636],[188,637],0,0,[[618,26]],[618],0,0,0,[[841,13,29]],[[25,841]],0,0,0,0,0,[[],863],[[],863],[[[632,[[0,[864,864]]]],632]],[[[633,[[0,[864,864]]]],633]],[[523,523]],[[88,88],88],[[88,84],88],[[74,84],74],[[74,74],74],[[508,508]],[[625,625]],[[524,524]],[[528,528],528],[[511,511],511],[[511,84],511],[[519,84],519],[[519,519],519],[[520,520]],[[510,510]],[[515,515]],[[527,527],527],[[507,51],507],[[507,507],507],[[526,526],526],[[526,51],526],[[514,51],514],[[514,514],514],[[187,187],187],[[187,518],187],[[517,517],517],[[517,518],517],[[525,525],525],[[525,518],525],[[91,89],91],[[91,91],91],[[521,89],521],[[521,521],521],[[522,522],522],[[522,89],522],[[620,620],620],[[620,384],620],[[621,621],621],[[621,384],621],[[622,384],622],[[622,622],622],[[635,188],635],[[635,635],635],[[636,636],636],[[636,188],636],[[637,188],637],[[637,637],637],[[177,177],177],[[[632,[[0,[322,865,865]]]],632]],[[[633,[[0,[865,865]]]],633]],[[523,523]],[[88,88]],[[88,84]],[[74,84]],[[74,74]],[[508,508]],[[625,625]],[[524,524]],[[511,511]],[[511,84]],[[519,84]],[[519,519]],[[520,520]],[[510,510]],[[515,515]],[[507,507]],[[507,51]],[[526,51]],[[526,526]],[[514,514]],[[514,51]],[[187,187]],[[187,518]],[[517,517]],[[517,518]],[[525,525]],[[525,518]],[[91,91]],[[91,89]],[[521,89]],[[521,521]],[[522,89]],[[522,522]],[[620,620]],[[620,384]],[[621,621]],[[621,384]],[[622,384]],[[622,622]],[[635,635]],[[635,188]],[[636,636]],[[636,188]],[[637,637]],[[637,188]],[[177,177]],[[508,508],508],[[520,520],520],[[523,523],523],[[625,625],625],[[510,510],510],[[524,524],524],[[515,515],515],[177,89],[177,89],[177,89],[301,523],[301,523],[301,88],[301,88],[301,74],[301,74],[301,508],[301,508],[301,625],[301,625],[301,524],[301,524],[301,528],[301,528],[301,511],[301,511],[301,519],[301,519],[301,520],[301,520],[301,510],[301,510],[301,515],[301,515],[301,527],[301,527],[301,507],[301,507],[301,526],[301,526],[301,514],[301,514],[301,187],[301,187],[301,517],[301,517],[301,525],[301,525],[301,91],[301,91],[301,521],[301,521],[301,522],[301,522],[301,620],[301,620],[301,621],[301,621],[301,622],[301,622],[301,635],[301,635],[301,636],[301,636],[301,637],[301,637],[301,177],[301,177],[[660,660]],[[[645,[644]],9]],0,[[]],[[]],0,0,0,0,0,[[[660,[364]]],364],[[509,9],16],[[516,9],16],[[513,9],16],[[641,9],16],[[642,9],16],0,0,0,[[731,[389,[855]]],677],0,[[739,177],739],[[740,177],740],[[93,89],88],0,0,0,0,[740,89],0,[88,[[85,[84]]]],[74,[[85,[84]]]],[528,[[85,[84]]]],[511,[[85,[84]]]],[519,[[85,[84]]]],[527,[[85,[51]]]],[507,[[85,[51]]]],[526,[[85,[51]]]],[514,[[85,[51]]]],[187,[[85,[518]]]],[517,[[85,[518]]]],[525,[[85,[518]]]],[91,[[85,[89]]]],[521,[[85,[89]]]],[522,[[85,[89]]]],[620,[[85,[384]]]],[621,[[85,[384]]]],[622,[[85,[384]]]],[635,[[85,[188]]]],[636,[[85,[188]]]],[637,[[85,[188]]]],[528],[527],[623,[[85,[84]]]],[624,[[85,[84]]]],[523,[[85,[84]]]],[508,[[85,[84]]]],[625,[[85,[84]]]],[524,[[85,[84]]]],[626,[[85,[51]]]],[627,[[85,[51]]]],[520,[[85,[51]]]],[510,[[85,[51]]]],[515,[[85,[51]]]],[623,[[85,[[85,[84]]]]]],[624,[[85,[[85,[84]]]]]],[523,[[85,[[85,[84]]]]]],[508,[[85,[[85,[84]]]]]],[625,[[85,[[85,[84]]]]]],[524,[[85,[[85,[84]]]]]],[626,[[85,[[85,[51]]]]]],[627,[[85,[[85,[51]]]]]],[520,[[85,[[85,[51]]]]]],[510,[[85,[[85,[51]]]]]],[515,[[85,[[85,[51]]]]]],[[528,648]],[[527,648]],[697,89],[[[632,[322]]],322],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[663,662],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[623],[626],[624],[524],[627],[515],[528,74],[527,526],[[],645],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[657,[689]]],[[657,[690]]]],[[[656,[689]]],[[656,[690]]]],[[[661,[689]]],[[661,[690]]]],0,0,[[624,[389,[74]]],74],[[524,[389,[74]]],74],[[623,88],88],[[523,88],88],[[625,88],88],[[626,507],507],[[510,507],507],[[624,74],74],[[524,74],74],[[627,526],526],[[515,526],526],[[624,511],511],[[524,511],511],[[623,88],88],[[523,88],88],[[625,88],88],[[626,507],507],[[510,507],507],[[624,74],74],[[524,74],74],[[627,526],526],[[515,526],526],[[624,511],511],[[524,511],511],0,0,0,0,0,[[],[[657,[689]]]],[[],[[661,[689]]]],[[[657,[689]]],[[657,[689]]]],[[[661,[689]]],[[661,[689]]]],[[[650,[21]]],[[21,[650]]]],[[[225,[21]]],[[21,[225]]]],[523,523],[508,508],[625,625],[524,524],[520,520],[510,510],[515,515],0,[88,88],[74,74],[511,511],[519,519],[507,507],[526,526],[514,514],[[[645,[644]],9]],[74,88],[511,88],[519,74],[526,507],[514,526],[517,187],[525,517],[521,91],[522,521],[621,620],[622,621],[636,635],[637,636],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[[660,[653]]],[[21,[[650,[653]]]]]],[[[660,[653]]],[[21,[[225,[653]]]]]],[[[660,[653]]],[[21,[653]]]],[[[660,[653]]],[[21,[653]]]],[[],[[22,[104,866]]]],[[],[[22,[104,866]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[674,[[22,[[643,[104]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[91,[[22,[187]]]],[635,[[22,[187]]]],[[],22],[620,[[22,[187]]]],[521,[[22,[517]]]],[[],22],[621,[[22,[517]]]],[636,[[22,[517]]]],[622,[[22,[525]]]],[522,[[22,[525]]]],[637,[[22,[525]]]],[[],22],[620,[[22,[91]]]],[[],22],[187,[[22,[91]]]],[635,[[22,[91]]]],[636,[[22,[521]]]],[517,[[22,[521]]]],[621,[[22,[521]]]],[[],22],[622,[[22,[522]]]],[525,[[22,[522]]]],[[],22],[637,[[22,[522]]]],[635,[[22,[620]]]],[[],22],[636,[[22,[621]]]],[[],22],[637,[[22,[622]]]],[[],22],[[],22],[620,[[22,[635]]]],[[],22],[621,[[22,[636]]]],[622,[[22,[637]]]],[[],22],[[],22],[84,[[22,[177,867]]]],[51,[[22,[177,867]]]],[[674,33],[[22,[[21,[104]],866]]]],[[17,[50,[104]]],[[21,[[807,[704,700,104,806]]]]]],[[674,[85,[33]]],[[22,[[85,[[21,[104]]]],866]]]],[[674,33],[[22,[[21,[104]],866]]]],[[[645,[644]],9],[[22,[776]]]],[[674,33,104],[[22,[[21,[104]],866]]]],[[674,33,817],[[22,[[21,[817]],866]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[680,[[22,[817,680]]]],[88,[[21,[88]]]],[74,[[21,[74]]]],[511,[[21,[511]]]],[519,[[21,[519]]]],[507,[[21,[507]]]],[526,[[21,[526]]]],[514,[[21,[514]]]],[[674,33],[[22,[[21,[104]],866]]]],[[[645,[644]],9],[[22,[776]]]],[[[645,[644]],9],[[22,[776]]]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[],810],[[[645,[[0,[644,646,376,377]]]]],92],[[],92],[648,92],[509,92],[516,92],[513,92],[641,92],[642,92],[623,92],[624,92],[523,92],[88,92],[74,92],[508,92],[625,92],[524,92],[528,92],[511,92],[519,92],[626,92],[627,92],[520,92],[510,92],[515,92],[527,92],[507,92],[526,92],[514,92],[187,92],[517,92],[525,92],[91,92],[521,92],[522,92],[177,92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],868],[[],868],[707,50],[681,[[650,[104]]]],[685,[[225,[104]]]],[[[603,[224]]],224],[[[603,[305]]],305],0,[[[603,[89]]],89],0,[[[603,[188]]],188],[[188,188],635],[[188,188,188],636],[[188,188,188,188],637],[[[603,[19]]],19],[[677,779],780],[27],[688,217],0,[[[660,[653]]],653],0,[16,16],[38],[739],[740],[50,707],[726,725],0,0,0,[726,725],[[],85],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[38],[[704,[193,[19]]]],[[[35,[34]],[225,[[643,[44]]]],[225,[[643,[43]]]]]],[[38,841]],[[],490],[[[603,[9]]],9],[92,90],[[89,89],91],[[89,89,89],521],[[89,89,89,89],522],0,0,0,0,0,0,0,0,0,[[84,84],88],[[84,84,84],74],[[84,84,84],511],[[84,84,84,84],519],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[[870,[869]]],16],[[770,[870,[869]]],16],[17],0,[[193,218],21],[[193,218],21],0,0,[[[8,[871,7]]],758],[[653,872],[[650,[653]]]],[[653,873],[[225,[653]]]],[9,[[645,[644]]]],[[737,619],737],[501,[[22,[748]]]],[[],29],[[745,501],745],[[]],[[745,803],745],[[84,84,88,84,84],67],0,[[677,16],677],0,[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[187,187],187],[[517,517],517],[[525,525],525],[[91,91],91],[[521,521],521],[[522,522],522],[[620,620],620],[[621,621],621],[[622,622],622],[[635,635],635],[[636,636],636],[[637,637],637],[[623,[193,[84]]]],[[624,[193,[84]]]],[[523,[193,[84]]]],[[508,[193,[84]]]],[[625,[193,[84]]]],[[524,[193,[84]]]],[[626,[193,[51]]]],[[627,[193,[51]]]],[[520,[193,[51]]]],[[510,[193,[51]]]],[[515,[193,[51]]]],[[523,[875,[874]]]],[[88,[875,[874]]]],[[74,[875,[874]]]],[[508,[875,[874]]]],[[524,[875,[874]]]],[[519,[875,[874]]]],[[187,[875,[874]]]],[[517,[875,[874]]]],[[525,[875,[874]]]],[[91,[875,[874]]]],[[521,[875,[874]]]],[[522,[875,[874]]]],[[88,[193,[84]]]],[[74,[193,[84]]]],[[528,[193,[84]]]],[[511,[193,[84]]]],[[519,[193,[84]]]],[[527,[193,[51]]]],[[507,[193,[51]]]],[[526,[193,[51]]]],[[514,[193,[51]]]],[[187,[193,[518]]]],[[517,[193,[518]]]],[[525,[193,[518]]]],[[91,[193,[89]]]],[[521,[193,[89]]]],[[522,[193,[89]]]],[[620,[193,[384]]]],[[621,[193,[384]]]],[[622,[193,[384]]]],[[635,[193,[188]]]],[[636,[193,[188]]]],[[637,[193,[188]]]],[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,88],[74,88],[511,88],[519,88],[507,507],[526,507],[514,507],[187,187],[517,187],[525,187],[91,91],[521,91],[522,91],[620,620],[621,620],[622,620],[635,635],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,88],[74,88],[511,88],[519,88],[507,507],[526,507],[514,507],[187,187],[517,187],[525,187],[91,91],[521,91],[522,91],[620,620],[621,620],[622,620],[635,635],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[528,74],[511,511],[519,74],[527,526],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,88],[511,88],[519,88],[526,507],[514,507],[517,187],[525,187],[521,91],[522,91],[621,620],[622,620],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,88],[74,88],[511,88],[519,88],[507,507],[526,507],[514,507],[187,187],[517,187],[525,187],[91,91],[521,91],[522,91],[620,620],[621,620],[622,620],[635,635],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,88],[74,88],[511,88],[519,88],[507,507],[526,507],[514,507],[187,187],[517,187],[525,187],[91,91],[521,91],[522,91],[620,620],[621,620],[622,620],[635,635],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[[]],[88,74],[74,74],[511,511],[519,74],[507,526],[526,526],[514,526],[187,517],[517,517],[525,517],[91,521],[521,521],[522,521],[620,621],[621,621],[622,621],[635,636],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[[]],[88,519],[74,519],[511,519],[519,519],[507,514],[526,514],[514,514],[187,525],[517,525],[525,525],[91,522],[521,522],[522,522],[620,622],[621,622],[622,622],[635,637],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,88],[511,88],[519,88],[526,507],[514,507],[517,187],[525,187],[521,91],[522,91],[621,620],[622,620],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[519,88],[514,507],[525,187],[522,91],[622,620],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,88],[511,88],[519,88],[526,507],[514,507],[517,187],[525,187],[521,91],[522,91],[621,620],[622,620],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,88],[511,88],[519,88],[526,507],[514,507],[517,187],[525,187],[521,91],[522,91],[621,620],[622,620],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,88],[511,88],[519,88],[526,507],[514,507],[517,187],[525,187],[521,91],[522,91],[621,620],[622,620],[636,635],[637,635],[[]],[519,74],[514,526],[525,517],[522,521],[622,621],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,74],[511,511],[519,74],[526,526],[514,526],[517,517],[525,517],[521,521],[522,521],[621,621],[622,621],[636,636],[637,636],[[]],[519,519],[514,514],[525,525],[522,522],[622,622],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],[[]],[[]],[74,519],[511,519],[519,519],[526,514],[514,514],[517,525],[525,525],[521,522],[522,522],[621,622],[622,622],[636,637],[637,637],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[22,[748]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[748,862],[748,862],0,[[]],[[]],[[]],[[]],[748,876],[876,876],[[]],[[[0,[495,376,377]]],[[22,[748]]]],[[748,[0,[495,376,377]]],748],[[],876],[748],[9],[9],[748],[9],[9],[[]],[748,[[22,[[0,[495,383,376,377]],748]]]],[[]],[748,[[21,[[0,[495,383,376,377]]]]]],[748,[[21,[[0,[495,383,376,377]]]]]],[9],[748],[9],0,[[748,10],[[22,[382]]]],[[748,10],[[22,[382]]]],0,[781],[[]],[[[0,[862,376,377]]],748],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],0,[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[748,16],[[],16],[[],16],[876,9],[[[0,[495,383,376,377]]],748],[[[0,[862,376,377]]],748],[862,876],[876,21],[876,21],[[19,19]],[19],[19],[19],[748,862],[876],0,[[]],[[]],[[]],[[],107],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[501,[[22,[748]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[877,[[21,[878]]]],[877,[[21,[879]]]],[653,664],[653,665],[877,[[21,[880]]]],[877,[[21,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[],104],[881,881],[877,877],[882,882],[880,880],[878,878],[883,883],[884,884],[885,885],[879,879],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[881,882],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[881]]]],[105,[[22,[877]]]],[105,[[22,[880]]]],[105,[[22,[878]]]],[105,[[22,[883]]]],[105,[[22,[884]]]],[105,[[22,[879]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[179,16],[179,16],[179,16],[179,16],[186],[[878,878],16],[[883,883],16],[[884,884],16],[[879,879],16],0,[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[881,10],[[22,[382]]]],[[877,10],[[22,[382]]]],[[882,10],[[22,[382]]]],[[880,10],[[22,[382]]]],[[878,10],[[22,[382]]]],[[883,10],[[22,[382]]]],[[884,10],[[22,[382]]]],[[885,10],[[22,[382]]]],[[879,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[881,16],[[879,186]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[883,886],0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],0,[19,188],0,[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[104,866]]]],[[],[[22,[104,866]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[887,9],[888,9],[[[889,[104]]],9],[887,887],[888,888],[[[890,[104,104]]],[[890,[104,104]]]],[[[889,[104]]],[[889,[104]]]],[891,891],[892,892],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[890,[104,104]]]],[[],[[889,[104]]]],[[],892],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[889,[104]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[889,[104]]]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[887],[9],[9],[888],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],0,0,[[888,888],16],[[[889,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,104]]]],104]]]],104]]]],104]]]],[889,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,104]]]],104]]]],104]]]],104]]]]],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[888,10],[[22,[382]]]],[[[890,[[0,[104,383]],[0,[104,383]]]],10],[[22,[382]]]],[[[889,[[0,[104,383]]]],10],[[22,[382]]]],[[891,10],[[22,[382]]]],[[892,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[380,[[890,[104,104]]]],[380,[[889,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[12],[13],[[888,9],[[21,[104]]]],[[[890,[104,104]],104],[[21,[104]]]],[[[889,[104]],9],[[21,[104]]]],[[891,104],[[21,[104]]]],[892,[[21,[104]]]],[[888,9],[[21,[104]]]],[[[890,[104,104]],104],[[21,[104]]]],[[[889,[104]],9],[[21,[104]]]],[[891,104],[[21,[104]]]],[[888,9],[[21,[665]]]],[[891,665],[[21,[665]]]],[[888,9],[[21,[664]]]],[[891,665],[[21,[664]]]],[[891,665],[[21,[665]]]],[[891,665],[[21,[664]]]],[888,188],[[[889,[104]]],188],0,0,0,0,0,0,[[[890,[104,104]],104]],[[[889,[104]],9]],[[[890,[104,104]],104]],[[[889,[104]],9]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[890,[104,104]],104,104],[[21,[104]]]],[[891,104,104],[[21,[104]]]],[[892,104]],[[891,817,817],[[21,[817]]]],[[891,817,817],[[21,[817]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[888],[888],[[]],[[]],[[]],[[]],[[[890,[104,104]]]],[[[890,[104,104]]]],[[[889,[104]]]],[[[889,[104]]]],[891],[891],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[890,[104,104]]],891],[[[889,[104]]],888],[891,[[890,[104,104]]]],[888,[[889,[104]]]],[888,16],[[[889,[104]]],16],[891,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[887,893],[888,894],[[[890,[104,104]]],[[830,[[895,[817,817]]]]]],[[[889,[104]]],[[896,[104]]]],[891,[[830,[[895,[817,817]]]]]],[887,897],[888,898],[[[890,[104,104]]],[[830,[[899,[817,817]]]]]],[[[889,[104]]],[[900,[104]]]],[891,[[830,[[899,[817,817]]]]]],[891,20],0,[[[890,[104,104]]],[[830,[[901,[817,817]]]]]],[891,[[830,[[901,[817,817]]]]]],[887,886],0,[888,9],[[[889,[104]]],9],[891,9],0,0,0,[886,887],[20,888],[[],[[890,[104,104]]]],[[],[[889,[104]]]],[[20,20],891],[893,21],[897,21],[894,21],[898,21],[[[896,[104]]],21],[[[900,[104]]],21],[[[896,[104]]],21],[[[900,[104]]],21],0,[9,9],[888,[[21,[104]]]],[[[889,[104]]],[[21,[104]]]],[888,[[21,[817]]]],[887,[[661,[689]]]],0,[887,[[657,[689]]]],[[888,104]],[[[889,[104]],104]],[[888,817]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[[[890,[104,104]],104],[[21,[104]]]],[[891,104],[[21,[104]]]],[892,[[21,[104]]]],[[891,665],[[21,[817]]]],[[891,665],[[21,[817]]]],[9,[[22,[783]]]],[[887,9],[[22,[783]]]],[888,20],[[],20],[[],20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[888,9],[[22,[[21,[104]],866]]]],[[891,104],[[22,[[21,[104]],866]]]],[[888,9],[[22,[[21,[104]],866]]]],[[891,104],[[22,[[21,[104]],866]]]],[[891,665],[[22,[[21,[665]],866]]]],[[891,665],[[22,[[21,[664]],866]]]],[[891,104,104],[[22,[[21,[104]],866]]]],[[891,817,817],[[22,[[21,[817]],866]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[891,[[22,[[890,[104,104]],866]]]],[888,[[22,[[889,[104]],866]]]],[888,[[22,[[21,[104]],866]]]],[[888,104],[[22,[866]]]],[[888,817],[[22,[866]]]],[[891,104],[[22,[[21,[104]],866]]]],[[891,665],[[22,[[21,[817]],866]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[887,9],[[661,[689]]]],[[887,9],[[657,[689]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[891,20],0,[[[890,[104,104]]],[[830,[[902,[817,817]]]]]],[891,[[830,[[902,[817,817]]]]]],[[[890,[104,104]]],[[830,[[903,[817,817]]]]]],[891,[[830,[[903,[817,817]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[886,9],[[22,[887,783]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[],179],[653,664],[653,665],0,[[]],[[]],0,[[],104],[[],104],[217,217],0,[[]],[[],[[8,[6,7]]]],[[217,217],183],[[],183],[[],217],[217,904],[[],217],0,[9],[9],[105,[[22,[217]]]],0,[[]],[9],0,[179,16],[186],[[217,217],16],0,[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],0,0,[[217,10],[[22,[382]]]],[[217,10],[[22,[382]]]],[[],217],[224,217],[[]],[[[85,[19]]],217],[[[85,[19]]],217],[904,217],[[904,[0,[905,653]]],217],[[188,224],217],[[]],[92,[[22,[217]]]],[92,[[22,[217,906]]]],[[]],[[]],[12],[13],0,[[217,186]],0,0,0,[217,[[21,[217]]]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[217,16],0,0,0,0,0,0,0,0,0,[[],217],0,[[],217],0,[[217,217],[[21,[183]]]],0,0,0,[217,224],[[19,19]],[19],[19],[[19,19],16],[19,188],[[],20],0,0,0,0,0,0,0,[[217,172],22],0,[217,188],[217,[[85,[19]]]],[[]],[[]],[[217,[193,[19]]],[[22,[92,907]]]],[217,107],[[],107],[[],21],[[]],[[],[[22,[104,866]]]],[[],[[22,[104,866]]]],[[],22],[[],22],0,[[],23],0,[[],21],0,0,0,[[]],[905,217],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[817,664],[664,19],[665,19],[817,665],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[665,104],[664,104],[664,104],[817,104],[817,104],[817,817],[[[908,[104]]],[[908,[104]]]],[665,665],[909,909],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[20,817],[[],[[908,[104]]]],[9],[9],[[[908,[104]]]],[9],[665],[9],[9],[9],[9],[664],[9],[9],[[[908,[104]]]],[9],[9],[9],[9],[9],[[664,105],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[817],[9],[9],[9],[9],[9],[179,16],[186],[[817,817],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[664,[389,[909]]],664],[[817,[389,[909]]],665],[[665,[389,[909]]],665],[[817,[389,[909]]],664],[[664,10],[[22,[382]]]],[[817,10],[[22,[382]]]],[[[908,[[0,[104,383]]]],10],[[22,[382]]]],[[909,10],[[22,[382]]]],[[909,10],[[22,[382]]]],[[866,10],[[22,[382]]]],[[866,10],[[22,[382]]]],[[910,10],[[22,[382]]]],[[910,10],[[22,[382]]]],[817],[[]],[[[908,[104]]],817],[[]],[[]],[[]],[107,909],[[]],[9,909],[92,909],[[]],[[]],[[19,20],664],[[19,20],665],[[[656,[689]],20],817],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[664,[389,[909]]],[[22,[664,910]]]],[[817,[389,[909]]],[[22,[665,910]]]],[[665,[389,[909]]],[[22,[665,910]]]],[[817,[389,[909]]],[[22,[664,910]]]],[664,[[21,[188]]]],[[817,186]],[817,188],[665,[[21,[188]]]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[664,[389,[909]]],664],[817,104],[817,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[817,[[908,[104]]]],[[[908,[104]]],817],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[104,664],[[[0,[104,377,376]]],817],[104,[[908,[104]]]],[104,665],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[664,20],[817,20],[[],20],[[],20],[665,20],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[665,[[22,[104,866]]]],[664,[[22,[104,866]]]],[664,[[22,[104,866]]]],[817,[[22,[104,866]]]],[817,[[22,[104,866]]]],[[],22],[[],22],[[],22],[817,[[22,[[908,[104]]]]]],[[],22],[[],22],[[],22],[[],22],[817,[[21,[188]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[664,[389,[909]]],[[22,[664,664]]]],[817,[[22,[104,866]]]],[817,[[22,[[908,[104]],817]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[20,817],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[19,19]],[19],[19],[[19,19],16],[19,188],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[747,747],[[]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],[186],[[747,747],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[747,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[747,186]],0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,[[19,19]],[19],[19],[[19,19],16],[19,188],[[911,881],20],0,[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[912,105],22],[[913,664,105],22],0,[[]],[[]],[[]],[9],[9],[9],[169,[[22,[170,171]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],913],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[19],[19],[19],[[],20],[[914,172],22],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],490],[[],490],[[],16],0,[51,16],[[[603,[490]]],490],0,[[]],0,[754,[[755,[19]]]],0,0,[[],364],[[]],[[]],[19,490],0,[[],84],[[],84],[[],51],[[],51],[[[193,[19]]]],[[]],[[],[[85,[19]]]],[[],530],[[],378],[[],518],[[],384],[[],375],[[],404],[[],224],[[],305],[[],89],[[],188],[[],19],[[],9],[92,107],[[[603,[530]]],530],[[[603,[378]]],378],[[[603,[518]]],518],[[[603,[384]]],384],[[[603,[375]]],375],[[[603,[9]]],9],[[[603,[404]]],404],0,0,[16,16],[[],490],[[193,9]],0,0,0,[[],365],[[]],[193,21],[301,21],[[193,9],[[103,[7]]]],[[301,9],[[103,[7]]]],[[193,9],[[103,[7]]]],[193,21],[193],[[],9],0,0,0,[[],645],[[],[[657,[689]]]],[[],[[661,[689]]]],[[[603,[224]]],224],[[[603,[305]]],305],[[[603,[89]]],89],[[[603,[188]]],188],[[[603,[19]]],19],0,[16,16],[[],490],[[[603,[9]]],9],[92,90],0,[[193,218],21],[[193,218],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],490],[[],490],[[],16],0,[51,16],[[[603,[490]]],490],0,[[]],0,[754,[[755,[19]]]],0,0,[[],364],[[]],[[]],[19,490],0,[[],84],[[],84],[[],51],[[],51],[[[193,[19]]]],[[]],[[],[[85,[19]]]],[[],530],[[],378],[[],518],[[],384],[[],375],[[],404],[[],224],[[],305],[[],89],[[],188],[[],19],[[],9],[92,107],[[[603,[530]]],530],[[[603,[378]]],378],[[[603,[518]]],518],[[[603,[384]]],384],[[[603,[375]]],375],[[[603,[9]]],9],[[[603,[404]]],404],0,0,[16,16],[[],490],[[193,9]],0,0,0,[[],365],[[]],0,[193,21],[301,21],[[193,9],[[103,[7]]]],[[301,9],[[103,[7]]]],[[193,9],[[103,[7]]]],[193,21],[193],[[],9],0,0,0,[[],645],[[],[[657,[689]]]],[[],[[661,[689]]]],[[[603,[224]]],224],[[[603,[305]]],305],[[[603,[89]]],89],[[[603,[188]]],188],[[[603,[19]]],19],0,[16,16],[[],490],[[[603,[9]]],9],[92,90],0,[[193,218],21],[[193,218],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[886,9],0,[[886,9],[[22,[886,783]]]],[886,19],[886,19],[886,19],[886,19],[886,[[22,[[755,[[193,[19]]]],915]]]],[[7,886],[[22,[[755,[[193,[19]]]],915]]]],[[7,886],[[22,[[755,[[193,[19]]]],915]]]],[886,[[22,[[755,[[193,[19]]]],915]]]],[9,[[22,[886,783]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[653,653],[7,7],[886,886],[783,783],[915,915],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[886,[[755,[19]]]],[[19,886]],[[19,886]],[[[755,[19]],886]],[[7,[755,[19]],886]],[[],7],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[179,16],[179,16],[186],[[886,886],16],[[783,783],16],[[915,915],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[886,886],[[22,[783]]]],[[886,886],[[22,[886,783]]]],[[7,10],[[22,[382]]]],[[886,10],[[22,[382]]]],[[783,10],[[22,[382]]]],[[783,10],[[22,[382]]]],[[915,10],[[22,[382]]]],[[915,10],[[22,[382]]]],[653,886],[[],886],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],[[22,[886,783]]]],[[9,9],886],[[]],[[]],[[]],[[]],[13],[12],[[7,[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[[[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[[7,[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[[[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[886,781],[[886,186]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],886],[886,886],[[886,9],9],[[886,9],9],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[[19,886,9],19],[[19,886,9],19],[[886,9],[[22,[783]]]],[[886,9],[[22,[783]]]],[[886,9],[[22,[886,783]]]],[[7,[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[[[755,[19]],886,886],[[22,[[755,[[193,[19]]]],915]]]],[886,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[629,[92]],92]],[[[629,[92]],[629,[92]]]],[[[629,[92]],[629,[92]]]],[[[629,[92]],92]],[[[629,[92]],647]],[[[629,[[193,[[0,[916,322,646]]]]]],647]],[[[629,[628]],647]],[[],1],[[[629,[92]]],1],[[],1],[[[629,[[193,[[0,[916,322,646]]]]]]],1],[[],1],[[[629,[628]]],1],[[[629,[628]]],1],[[],1],[[[629,[[193,[[0,[916,322,646]]]]]]],1],[[[629,[92]]],1],[[[3,[2]]]],[[],[[448,[447]]]],[[],179],[[[629,[917]]],628],[[[629,[[0,[782,653]]]]],[[0,[782,653]]]],[[[629,[628]]],647],[[[629,[[193,[[0,[916,322,646]]]]]]],647],[[[629,[92]]],647],[[[629,[92]]],647],[[[629,[628]]],647],[[[629,[[193,[[0,[916,322,646]]]]]]],647],[[[629,[92]]],92],[[]],[[[629,[[0,[782,653]]]]],[[0,[782,653]]]],[[]],[[]],[[]],[188,918],[[[629,[92]]]],[[[629,[[0,[782,653]]]]],[[629,[[0,[782,653]]]]]],[[[629,[[0,[782,653]]]],[629,[[0,[782,653]]]]]],[[]],[[]],[[],[[8,[6,7]]]],[[[629,[628]]],[[8,[647,7]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],[[8,[647,7]]]],[[[629,[92]]],[[8,[647,7]]]],[[[629,[[0,[543,782,653]]]],[629,[[0,[543,782,653]]]]],183],[[],183],[[],[[21,[92]]]],[[],[[21,[92]]]],[[[753,[752]]],[[629,[[0,[782,919,653]]]]]],[[[629,[628]],10],[[22,[382]]]],[[],[[629,[[0,[782,653]]]]]],[[[629,[92]],[405,[9]]]],[9],[[[629,[[0,[782,653]]]]],[[0,[782,653]]]],[9],[105,[[22,[[629,[[0,[782,653]]]]]]]],[[]],[[[8,[[629,[[193,[[0,[916,322,646]]]]]],7]]],[[103,[[8,[647,7]],7]]]],[9],[179,16],[186],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[629,[917]],917],16],[[[629,[917]],628],16],[[[629,[628]],628],16],[[[629,[628]],917],16],[[[629,[628]],920],16],[[[629,[917]],921],16],[[[629,[628]],628],16],[[[629,[628]],917],16],[[[629,[92]],92],16],[[[629,[[193,[[0,[379,322]]]]]],193],16],[[[629,[917]],628],16],[[[629,[[193,[[0,[379,322]]]]]],193],16],[[[629,[[0,[[379,[[0,[782,653]]]],782,653]]]],[629,[[0,[782,653]]]]],16],[[[629,[628]],921],16],[[[629,[917]],917],16],[[[629,[92]],92],16],[[[629,[917]],920],16],[[[629,[[193,[[0,[379,322]]]]]],[103,[922]]],16],[[[629,[92]],107],16],[[[629,[[193,[[0,[379,322]]]]]],[924,[923]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[[629,[[0,[495,782,653]]]],10],[[22,[382]]]],[[[629,[[0,[383,782,653]]]],10],[[22,[382]]]],[925,[[629,[92]]]],[107,[[629,[92]]]],[926,[[629,[[193,[19]]]]]],[[]],[[[193,[322]]],[[629,[[193,[322]]]]]],[921,[[629,[917]]]],[917,[[629,[917]]]],[921,[[629,[917]]]],[927,[[629,[651]]]],[920,[[629,[628]]]],[920,[[629,[628]]]],[92,[[629,[92]]]],[628,[[629,[628]]]],[[[103,[322,7]]],[[629,[[193,[322]]]]]],[[[103,[322,7]]],[[629,[[193,[322]]]]]],[927,[[629,[651]]]],[651,[[629,[651]]]],[107,[[629,[92]]]],[380,[[629,[92]]]],[380,[[629,[92]]]],[380,[[629,[92]]]],[380,[[629,[[193,[322]]]]]],[647,[[21,[[629,[[193,[[0,[916,322,646]]]]]]]]]],[647,[[21,[[629,[92]]]]]],[647,[[21,[[629,[628]]]]]],[[]],[[]],[12],[13],[[[629,[[193,[[0,[916,322,646]]]]]],9],[[21,[647]]]],[[[629,[[193,[[0,[916,322,646]]]]]],9],[[21,[647]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],[[21,[810]]]],[[[629,[92]]],[[21,[810]]]],[[[629,[628]]],[[21,[810]]]],[[],811],[[],811],[[],811],[[[629,[[0,[537,782,653]]]],186]],[[],9],[[[629,[[193,[[0,[916,322,646]]]]]],9,[8,[647,7]]]],[[[629,[92]],92,9],9],[[]],[[[8,[[629,[92]],7]]],[[8,[1,7]]]],[[[8,[[629,[[193,[[0,[916,322,646]]]]]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[[629,[628]],7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[629,[92]]],[[929,[928]]]],[[[629,[[0,[782,653]]]]]],[[[8,[[629,[628]],7]]],[[8,[647,7]]]],[[[8,[[629,[92]],7]]],[[8,[647,7]]]],[[[8,[[629,[[193,[[0,[916,322,646]]]]]],7]]],[[8,[647,7]]]],[[]],[[[629,[[0,[782,653]]]]],16],[[],16],[[[629,[92]]],16],[[[629,[[0,[782,653]]]]],16],[[[629,[[193,[[0,[916,322,646]]]]]]],824],[[[629,[[193,[[0,[916,322,646]]]]]]],9],[[],[[21,[92]]]],[[],[[21,[92]]]],[[[629,[[193,[[0,[379,322]]]]]],193],16],[[[629,[92]],92],16],[[[629,[[193,[[0,[379,322]]]]]],[103,[922]]],16],[[[629,[92]],107],16],[[[629,[[193,[[0,[379,322]]]]]],193],16],[[[629,[92]],92],16],[[[629,[[193,[[0,[379,322]]]]]],[924,[923]]],16],[[[629,[[193,[19]]]]],[[21,[[629,[[193,[19]]]]]]]],[[[629,[92]]],[[21,[[629,[92]]]]]],[[[629,[[193,[19]]]]],[[21,[[629,[[193,[19]]]]]]]],[[[629,[92]]],[[21,[[629,[92]]]]]],[[[629,[628]],921],[[21,[183]]]],[[[629,[628]],917],[[21,[183]]]],[[[629,[917]],628],[[21,[183]]]],[[[629,[917]],921],[[21,[183]]]],[[[629,[628]],628],[[21,[183]]]],[[[629,[628]],628],[[21,[183]]]],[[[629,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,782,653]]]],782,653]]]],782,653]]]],782,653]]]],[629,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,782,653]]]],782,653]]]],782,653]]]],782,653]]]]],[[21,[183]]]],[[[629,[917]],917],[[21,[183]]]],[[[629,[917]],920],[[21,[183]]]],[[[629,[917]],628],[[21,[183]]]],[[[629,[628]],917],[[21,[183]]]],[[[629,[628]],920],[[21,[183]]]],[[[629,[917]],917],[[21,[183]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],[[21,[[8,[647,7]]]]]],[[[629,[[193,[[0,[916,322,646]]]]]],[8,[647,7]]]],[[19,19]],[19],[19],[[19,19],16],[19,188],[[],[[21,[92]]]],[[[629,[628]]],[[21,[188]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],[[21,[188]]]],[[[629,[92]]],[[21,[188]]]],[[],[[21,[92]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],851],[[[629,[92]]],851],[[[629,[628]]],851],[[[8,[[629,[628]],7]]],852],[[[8,[[629,[[193,[[0,[916,322,646]]]]]],7]]],852],[[[8,[[629,[92]],7]]],852],[[[629,[[193,[[0,[916,322,646]]]]]],647],[[21,[16]]]],[[[629,[92]],647],[[21,[16]]]],[[[629,[628]],647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[[[629,[[193,[[0,[916,322,646]]]]]]],854],[[[629,[628]]],854],[[[629,[92]]],854],[[],92],[[],[[21,[92]]]],[[],92],[[[629,[[193,[[0,[916,322,646]]]]]],9],[[8,[647,7]]]],[[[629,[92]],92]],[[[629,[[193,[19]]]],930,[103,[19,7]]]],[[[629,[[193,[19]]]],930,[103,[19,7]]]],[[[629,[92]],931,107]],[[[629,[92]],931,107]],[[[629,[[0,[932,782,653]]]],172],22],[[[629,[[193,[[0,[916,322,646]]]]]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[[629,[92]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[[629,[628]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[],92],[[],92],[[[629,[[0,[782,933,653]]]]],918],[[[629,[92]]],107],[[[629,[[0,[782,653]]]]]],[[]],[[]],[[]],[[],107],[[],21],[[]],[[],[[22,[[448,[447]],553]]]],[[],22],[[],22],[[],23],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],810],[[],810],[[],810],[[[629,[628]]],92],[[[629,[92]]],92],[[[629,[[193,[[0,[916,322,646]]]]]]],92],[[],92],[[],92],[[],21],[[]],[[[629,[[0,[782,934,653]]]],[875,[874]]]],0,0,0,[[[8,[653,922]]],922],[[935,12]],[12],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],179],[[[8,[936,7]]],179],[[[8,[937,7]]],938],[[[8,[653,922]]],653],[[],[[448,[447]]]],[[[8,[939,7]]],518],[[[8,[653,922]]],653],[[],940],[[[8,[[193,[440]],922]]],[[8,[193,922]]]],[[[8,[440,922]]],[[8,[922]]]],[[[8,[193,7]]],16],[[[8,[193,7]],[8,[193,7]]],[[8,[193,7]]]],[[[8,[193,7]],[8,[193,7]]],[[8,[193,7]]]],[[[8,[193,7]]],16],[[[8,[193,7]],9,16],[[8,[193,7]]]],[[[8,[193,7]]],9],[[[8,[193,7]],[8,[193,7]]],16],[[[8,[193,7]],[8,[193,7]]],16],[[[8,[193,7]],9],[[8,[193,7]]]],[[[8,[193,7]],16],[[8,[193,7]]]],[[[8,[193,7]]],9],[[[8,[193,7]],[8,[193,7]],[8,[193,7]]],[[8,[193,7]]]],[[[8,[193,7]]],16],[[[8,[193,7]]],[[8,[193,7]]]],[[[8,[193,7]],[8,[193,7]]],[[8,[193,7]]]],[[[8,[193,7]],9],[[8,[193,7]]]],[[[8,[193,7]],9],[[8,[193,7]]]],[[[8,[193,7]],[8,[193,7]]],16],[[[8,[193,7]],[8,[193,7]]],16],[[[8,[193,7]],9],16],[[[8,[193,7]],[8,[193,7]]],[[8,[193,7]]]],[[]],[[]],[[[8,[653,922]]],653],[[]],[[[8,[653,922]]],653],[[]],[188,918],[[[8,[[0,[[218,[941]],653]],922]],941]],[[[8,[[0,[[231,[941]],653]],922]],941]],[[[8,[[0,[[501,[941]],653]],922]],941]],[[[8,[942,7]],943],944],[[[8,[[0,[874,653]],7]]],9],[[[8,[862,7]]],[[21,[862]]]],[[],686],[[[8,[945,7]]]],[[[8,[917,7]]],[[8,[917,7]]]],[[[8,[322,[0,[922,322]]]]],[[8,[322,[0,[922,322]]]]]],[[[8,[[946,[322]],7]]],[[8,[[946,[322]],7]]]],[[[8,[651,7]]],[[8,[651,7]]]],[[[8,[[947,[322,322]],7]]],[[8,[[947,[322,322]],7]]]],[[[8,[948,7]]],[[8,[948,7]]]],[[[8,[628,7]]],[[8,[628,7]]]],[[[8,[92,7]]],[[8,[92,7]]]],[[[8,[[193,[322]],[0,[922,322]]]]],[[8,[[193,[322]],[0,[922,322]]]]]],[[[8,[936,7]]],[[8,[936,7]]]],[[[8,[949,7]]],[[8,[949,7]]]],[[[8,[[193,[322]],[0,[922,322]]]],[8,[[193,[322]],[0,[922,322]]]]]],[[[8,[322,[0,[922,322]]]],[8,[322,[0,[922,322]]]]]],[[]],[[[8,[[0,[950,653]],7]],951],951],[[],[[8,[6,7]]]],[[[8,[[0,[543,653]],922]],[8,[[0,[543,653]],922]]],183],[[],183],[[[769,[[8,[[0,[952,953,653]],7]]]],9]],[[[8,[[0,[954,653]],7]],9]],[[[753,[752]]],[[8,[[0,[919,653]],7]]]],[[[8,[[0,[950,653]],7]]],955],[[],[[8,[193,7]]]],[[],[[8,[946,7]]]],[[],[[8,[947,7]]]],[[],[[8,[364,7]]]],[[],[[8,[917,7]]]],[[],[[8,[651,7]]]],[[],[[8,[92,7]]]],[[[956,[653]]],653],[9],[[[8,[653,922]]],653],[9],[[[956,[653]]],653],[9],[[[8,[653,922]]],653],[9],[[[8,[[0,[957,653]],7]],958],[[22,[630]]]],[[[8,[862,7]]],92],[105,[[22,[[8,[[193,[214]],7]]]]]],[105,[[22,[[8,[917,7]]]]]],[105,[[22,[[8,[92,7]]]]]],[105,[[22,[[8,[651,7]]]]]],[105,[[22,[[8,[628,7]]]]]],[105,[[22,[[8,[214,7]]]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],92,[193,[92]],960],[[22,[171]]]],[[[8,[959,7]],9,960],[[22,[171]]]],[[[8,[959,7]],9,960],[[22,[171]]]],[[[8,[959,7]],9,960],[[22,[171]]]],[[[8,[959,7]],9,960],[[22,[171]]]],[[[8,[959,7]],92,9,960],[[22,[171]]]],[[[8,[959,7]],92,9,960],[[22,[171]]]],[[[8,[959,7]],92,9,960],[[22,[171]]]],[[[8,[959,7]],92,9,960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[[8,[959,7]],92,960],[[22,[171]]]],[[]],[[]],[[[8,[1,922]]],[[22,[[8,[1,922]],[8,[1,922]]]]]],[[[8,[1,922]]],[[22,[[8,[1,922]],[8,[1,922]]]]]],[[[8,[1,922]]],[[22,[[8,[1,922]],[8,[1,922]]]]]],[[[8,[[0,[950,653]],7]],23],21],[[[8,[1,922]]],[[8,[1,922]]]],[[[8,[1,922]]],[[8,[1,922]]]],[[[8,[1,922]]],[[8,[1,922]]]],[9],[[[956,[653]]]],[[[8,[653,922]]]],[9],[[[8,[[0,[950,653]],7]],951]],[[[8,[936,7]]],[[8,[936,7]]]],[179,16],[186],[[[8,[936,7]],186]],[[[8,[[0,[961,653]],7]],962],16],[[[8,[[0,[950,653]],7]],943],16],[[[8,[942,7]],943,963],16],[[[8,[964,7]],943,[963,[950]]],16],[[[8,[[964,[950]],7]],943,[963,[950]]],16],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[8,[[0,[950,653]],7]],951]],[[[8,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],92,[193,[92]],965],[[22,[966,171]]]],[[[8,[959,7]],9,965],[[22,[966,171]]]],[[[8,[959,7]],9,965],[[22,[966,171]]]],[[[8,[959,7]],9,965],[[22,[966,171]]]],[[[8,[959,7]],9,965],[[22,[966,171]]]],[[[8,[959,7]],92,9,965],[[22,[966,171]]]],[[[8,[959,7]],92,9,965],[[22,[966,171]]]],[[[8,[959,7]],92,9,965],[[22,[966,171]]]],[[[8,[959,7]],92,9,965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[959,7]],92,965],[[22,[966,171]]]],[[[8,[169,7]]],16],[[[8,[959,7]]],16],[[[8,[959,7]]],16],[[[8,[169,7]]],16],[[[8,[959,7]]],16],[[[8,[959,7]]],16],[[[8,[169,7]]],16],[[[8,[169,7]]],16],[169,[[22,[170,171]]]],[[[8,[169,7]],16],[[22,[170,171]]]],[[[8,[169,7]],16],[[22,[170,171]]]],[[[8,[169,7]],16],[[22,[170,171]]]],[[[8,[169,7]],16],[[22,[170,171]]]],[[[8,[169,7]],[193,[19]]],[[22,[170,171]]]],[[[8,[169,7]],[193,[19]]],[[22,[170,171]]]],[[[8,[169,7]],[193,[19]]],[[22,[170,171]]]],[[[8,[169,7]],[193,[19]]],[[22,[170,171]]]],[[[8,[169,7]],490],[[22,[170,171]]]],[[[8,[169,7]],490],[[22,[170,171]]]],[[[8,[169,7]],490],[[22,[170,171]]]],[[[8,[169,7]],490],[[22,[170,171]]]],[[[8,[169,7]],84],[[22,[170,171]]]],[[[8,[169,7]],84],[[22,[170,171]]]],[[[8,[169,7]],84],[[22,[170,171]]]],[[[8,[169,7]],84],[[22,[170,171]]]],[[[8,[169,7]],51],[[22,[170,171]]]],[[[8,[169,7]],51],[[22,[170,171]]]],[[[8,[169,7]],51],[[22,[170,171]]]],[[[8,[169,7]],51],[[22,[170,171]]]],[[[8,[169,7]],530],[[22,[170,171]]]],[[[8,[169,7]],530],[[22,[170,171]]]],[[[8,[169,7]],530],[[22,[170,171]]]],[[[8,[169,7]],530],[[22,[170,171]]]],[[[8,[169,7]],378],[[22,[170,171]]]],[[[8,[169,7]],378],[[22,[170,171]]]],[[[8,[169,7]],378],[[22,[170,171]]]],[[[8,[169,7]],378],[[22,[170,171]]]],[[[8,[169,7]],518],[[22,[170,171]]]],[[[8,[169,7]],518],[[22,[170,171]]]],[[[8,[169,7]],518],[[22,[170,171]]]],[[[8,[169,7]],518],[[22,[170,171]]]],[[[8,[169,7]],384],[[22,[170,171]]]],[[[8,[169,7]],384],[[22,[170,171]]]],[[[8,[169,7]],384],[[22,[170,171]]]],[[[8,[169,7]],384],[[22,[170,171]]]],[[[8,[169,7]],375],[[22,[170,171]]]],[[[8,[169,7]],375],[[22,[170,171]]]],[[[8,[169,7]],375],[[22,[170,171]]]],[[[8,[169,7]],375],[[22,[170,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[967,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[967,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[967,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[967,171]]]],[[[8,[169,7]],92,968],[[22,[170,171]]]],[[[8,[169,7]],92,968],[[22,[170,171]]]],[[[8,[169,7]],92,968],[[22,[170,171]]]],[[[8,[169,7]],92,968],[[22,[170,171]]]],[[[8,[169,7]],92,89,92,968],[[22,[170,171]]]],[[[8,[169,7]],92,89,92,968],[[22,[170,171]]]],[[[8,[169,7]],92,89,92,968],[[22,[170,171]]]],[[[8,[169,7]],92,89,92,968],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[969,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[969,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[969,171]]]],[[[8,[169,7]],[21,[9]]],[[22,[969,171]]]],[[[8,[169,7]],968],[[22,[170,171]]]],[[[8,[169,7]],968],[[22,[170,171]]]],[[[8,[169,7]],968],[[22,[170,171]]]],[[[8,[169,7]],968],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92,9],[[22,[970,171]]]],[[[8,[169,7]],92,9],[[22,[970,171]]]],[[[8,[169,7]],92,9],[[22,[970,171]]]],[[[8,[169,7]],92,9],[[22,[970,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[971,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[971,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[971,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[971,171]]]],[[[8,[169,7]],9],[[22,[972,171]]]],[[[8,[169,7]],9],[[22,[972,171]]]],[[[8,[169,7]],9],[[22,[972,171]]]],[[[8,[169,7]],9],[[22,[972,171]]]],[[[8,[169,7]],92,9],[[22,[973,171]]]],[[[8,[169,7]],92,9],[[22,[973,171]]]],[[[8,[169,7]],92,9],[[22,[973,171]]]],[[[8,[169,7]],92,9],[[22,[973,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[974,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[974,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[974,171]]]],[[[8,[169,7]],92,89,92,9],[[22,[974,171]]]],[[[8,[169,7]],224],[[22,[170,171]]]],[[[8,[169,7]],224],[[22,[170,171]]]],[[[8,[169,7]],224],[[22,[170,171]]]],[[[8,[169,7]],224],[[22,[170,171]]]],[[[8,[169,7]],305],[[22,[170,171]]]],[[[8,[169,7]],305],[[22,[170,171]]]],[[[8,[169,7]],305],[[22,[170,171]]]],[[[8,[169,7]],305],[[22,[170,171]]]],[[[8,[169,7]],89],[[22,[170,171]]]],[[[8,[169,7]],89],[[22,[170,171]]]],[[[8,[169,7]],89],[[22,[170,171]]]],[[[8,[169,7]],89],[[22,[170,171]]]],[[[8,[169,7]],188],[[22,[170,171]]]],[[[8,[169,7]],188],[[22,[170,171]]]],[[[8,[169,7]],188],[[22,[170,171]]]],[[[8,[169,7]],188],[[22,[170,171]]]],[[[8,[169,7]],19],[[22,[170,171]]]],[[[8,[169,7]],19],[[22,[170,171]]]],[[[8,[169,7]],19],[[22,[170,171]]]],[[[8,[169,7]],19],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]]],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92],[[22,[170,171]]]],[[[8,[169,7]],92,89,92],[[22,[170,171]]]],[[[8,[169,7]],92,89,92],[[22,[170,171]]]],[[[8,[169,7]],92,89,92],[[22,[170,171]]]],[[[8,[169,7]],92,89,92],[[22,[170,171]]]],[[[8,[[0,[950,653]],7]],975]],[[[8,[[964,[950]],7]],975,[963,[950]]],16],[[[8,[[0,[950,653]],7]],975],16],[[[8,[964,7]],975,[963,[950]]],16],[[[8,[[0,[950,653]],7]],951]],[[[8,[[0,[954,653]],7]]],[[22,[[193,[19]],630]]]],[[[8,[[0,[940,653]],7]],[193,[19]]]],[[[8,[[0,[976,653]],7]],[193,[19]]]],[[[8,[[0,[977,653]],7]],[193,[19]]]],[[[21,[978]],979],[[21,[978]]]],[[[8,[[0,[186,653]],922]]],188],[[[8,[[0,[961,653]],7]]]],[[[8,[[0,[980,653]],7]]],[[22,[630]]]],[[[956,[[0,[495,653]]]],10],[[22,[382]]]],[[[956,[[0,[383,653]]]],10],[[22,[382]]]],[[[8,[[0,[495,653]],922]],10],[[22,[382]]]],[[[8,[[0,[383,653]],922]],10],[[22,[382]]]],[[[8,[653,922]],10],[[22,[382]]]],[231],[[]],[85,[[8,[193,7]]]],[[[946,[365]]],[[8,[[946,[365]],7]]]],[781],[[]],[[[8,[92,922]]],[[8,[[193,[19]],922]]]],[[[982,[981,447]]],[[8,[[193,[981]],7]]]],[92,[[8,[92,7]]]],[927,[[8,[651,7]]]],[[],[[8,[7]]]],[[[629,[92]]],[[8,[92,7]]]],[107,[[8,[862,7]]]],[92,[[8,[862,7]]]],[92,[[8,[862,7]]]],[[[193,[322]]],[[8,[[193,[322]],7]]]],[[[0,[862,376,377]]],[[8,[862,7]]]],[[[629,[628]]],[[8,[628,7]]]],[[[629,[92]]],[[8,[862,7]]]],[921,[[8,[917,7]]]],[107,[[8,[862,7]]]],[862,[[8,[862,7]]]],[748,[[8,[862,7]]]],[[[103,[922]]],[[8,[193,922]]]],[107,[[8,[92,7]]]],[[[629,[[193,[322]]]]],[[8,[[193,[322]],7]]]],[748,[[8,[862,7]]]],[748,[[8,[862,7]]]],[[[947,[365,365]]],[[8,[[947,[365,365]],7]]]],[[[629,[651]]],[[8,[651,7]]]],[917,[[8,[917,7]]]],[[[629,[92]]],[[8,[862,7]]]],[651,[[8,[651,7]]]],[628,[[8,[628,7]]]],[[[629,[917]]],[[8,[917,7]]]],[920,[[8,[628,7]]]],[380,[[8,[193,7]]]],[[],[[8,[653,7]]]],[922,[[8,[653,922]]]],[[]],[[]],[[]],[[]],[12],[13],[[[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[8,[[0,[983,653]],7]]],[[85,[19]]]],[[[8,[[0,[984,653]],7]],85],51],[[[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[985,986],[[22,[987,988]]]],[[[22,[920,989]]]],[[[22,[990,989]]]],[[[8,[[0,[537,653]],922]],186]],[[],16],[[],16],[[],9],[[],9],[[[8,[936,7]]],23],[25],[27],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[8,[922]]],[[8,[193,922]]]],[[],991],[[]],[[[8,[922]]]],[[[8,[946,7]]]],[[]],[[[8,[947,7]]]],[[[8,[653,922]]],[[769,[[8,[653,922]]]]]],[[[8,[653,922]]]],[[[8,[653,922]]]],[[]],[[]],[92,992],[[]],[[]],[[]],[[]],[92,16],[[[8,[[0,[392,653]],922]]],16],[[[8,[959,7]]],16],[[[8,[959,7]]],16],[[[8,[959,7]]],16],[[[8,[959,7]]],16],[[],16],[[],16],[92,16],[[[8,[[0,[993,653]],7]]],16],[92,16],[[[8,[[0,[994,653]],7]]],16],[[[8,[[0,[995,953,653]],7]]],16],[[[8,[[0,[996,953,653]],7]]],16],[[[8,[[0,[980,653]],7]]],16],[[[8,[[0,[301,653]],922]]],21],[[[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[8,[653,922]]],653],[[[8,[[0,[392,653]],922]]],9],[[[8,[[0,[752,653]],7]]],9],[[[8,[[0,[961,653]],7]],997]],[[[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[]],[[]],[[[8,[942,7]]],[[21,[998]]]],[[[8,[[0,[950,653]],7]]],[[21,[998]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[[],956],[[],[[8,[7]]]],[[922,922],[[8,[922,922]]]],[[[8,[[0,[950,653]],7]],999],951],[[],[[8,[440,7]]]],[[922,922],[[8,[440,922,922]]]],[9,[[8,[[193,[440]],7]]]],[[9,922],[[8,[[193,[440]],922]]]],[[[1000,[653]]],[[956,[653]]]],[1001],[1002],[[],[[8,[440,7]]]],[[922,922],[[8,[440,922,922]]]],[9,[[8,[[193,[440]],7]]]],[[9,922],[[8,[[193,[440]],922]]]],[[[8,[[0,[301,653]],922]]],21],[1003,[[21,[84]]]],[[[8,[[0,[1004,653]],922]]],21],[[[8,[[0,[940,653]],7]]],89],[[[8,[[0,[976,653]],7]]],89],[[[8,[[0,[940,653]],7]]],188],[[[8,[[0,[976,653]],7]]],188],[[],844],[[],845],[[],844],[[],845],[[[8,[[0,[301,653]],922]],9],21],[[[8,[[0,[1004,653]],922]],9],21],[[[8,[964,7]],951,[963,[950]]]],[[[8,[[964,[950]],7]],951,[963,[950]]]],[[[8,[964,7]],951,[963,[950]]]],[[[8,[[964,[950]],7]],951,[963,[950]]]],[[[8,[[964,[950]],7]],975,[963,[950]]]],[[[8,[964,7]],975,[963,[950]]]],[[[8,[[964,[950]],7]],951,[963,[950]]]],[[[8,[964,7]],951,[963,[950]]]],[[[8,[[964,[950]],7]],951,951,[963,[950]]]],[[[8,[964,7]],951,951,[963,[950]]]],[[[8,[[964,[950]],7]],951,951,[963,[950]]]],[[[8,[964,7]],951,951,[963,[950]]]],[[[8,[964,7]],950]],[[[8,[[964,[950]],7]],950]],[[[8,[964,7]],999,951,[963,[950]]]],[[[8,[[964,[950]],7]],999,951,[963,[950]]]],[[[8,[[964,[950]],7]],951,1005,[963,[950]]]],[[[8,[964,7]],951,1005,[963,[950]]]],[[[8,[964,7]],1006]],[[[8,[[964,[950]],7]],1006]],[[[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[8,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],[[21,[183]]]],[[],[[769,[[8,[7]]]]]],[[922,922],[[769,[[8,[922,922]]]]]],[[[769,[[8,[[0,[768,953,653]],922]]]],1007],1008],[[[769,[[8,[[0,[1009,953,653]],7]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[8,[[0,[952,953,653]],7]]]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[[8,[[0,[1009,953,653]],7]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[8,[[0,[1010,953,653]],7]]]],1007],[[1008,[21]]]],[[[769,[[8,[[0,[1011,953,653]],7]]]],1007],[[1008,[21]]]],[[[769,[[8,[[0,[1012,953,653]],7]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[8,[[0,[1012,953,653]],7]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[8,[[0,[1014,953,653]],7]]]],1007,1015],[[1008,[[22,[188,630]]]]]],[[[769,[[8,[[0,[1009,953,653]],7]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[8,[[0,[1009,953,653]],7]]]],1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],0,[[19,19]],[19],[19],[19],[[19,19],16],[19,188],[[[8,[[0,[752,653]],7]],9],[[85,[19]]]],[[[8,[[0,[993,653]],7]],[193,[19]]],[[22,[9,630]]]],[[[8,[[0,[993,653]],7]],1017],[[22,[630]]]],[[[8,[[0,[993,653]],7]],[193,[19]]],[[22,[630]]]],[[[8,[[0,[1018,653]],7]],[753,[752]]]],[[[8,[[0,[954,653]],7]],107],[[22,[9,630]]]],[[[8,[[0,[993,653]],7]],[103,[19,7]]],[[22,[9,630]]]],[[[8,[[0,[993,653]],7]],107],[[22,[9,630]]]],[[[8,[[0,[954,653]],7]],19,[103,[19,7]]],[[22,[9,630]]]],[[[8,[[0,[993,653]],7]],[193,[1013]]],[[22,[9,630]]]],[[[8,[[0,[950,653]],7]],951,1005]],[[[8,[[0,[1019,653]],7]],1020,1021]],[[1020,383]],[[[8,[[0,[950,653]],7]],951,951]],[[[8,[[0,[957,653]],7]],958,1022,1023],[[22,[630]]]],[[[8,[964,7]],943],944],[[[8,[[0,[950,653]],7]],943],944],[[[8,[[964,[950]],7]],943],944],[[930,[103,[19,7]]]],[[931,107]],[[[8,[[0,[957,653]],7]],958,1022,1023],[[22,[630]]]],[[[8,[[0,[994,653]],7]]],[[22,[630]]]],[92,[[22,[[103,[1024,7]],630]]]],[[[769,[[8,[[0,[1025,953,653]],922]]]]],1026],[12],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[]],[[]],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[]],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[1027,1028]],[[[8,[[0,[1029,653]],7]],1015],[[22,[188,630]]]],[[[8,[[0,[932,653]],7]],172],22],[[[8,[[0,[994,653]],7]],1030],[[22,[630]]]],[[[8,[[0,[994,653]],7]],1031],[[22,[630]]]],[[[8,[[0,[933,653]],7]]],918],[[[8,[[0,[1010,953,653]],7]]]],[[[8,[[0,[301,653]],922]]]],[[[8,[[0,[1011,953,653]],7]]]],[[],9],[[[8,[[0,[1032,653]],7]]],[[21,[1033]]]],[[[956,[[0,[862,653]]]]],[[21,[862]]]],[[[8,[862,7]]],[[21,[862]]]],[[[8,[[0,[1029,653]],7]]],[[22,[188,630]]]],[[],863],[92,[[21,[92]]]],[92,[[21,[92]]]],[[[8,[[0,[994,653]],7]]],16],[[[8,[[0,[994,653]],7]]],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[[8,[[0,[950,653]],7]],951],16],[[[8,[[0,[874,653]],7]],9],[[22,[1034]]]],[[[8,[[0,[940,653]],7]],[193,[19]]],[[22,[1035]]]],[[[8,[[0,[976,653]],7]],[193,[19]]],[[22,[1036]]]],[[],22],[[],22],[[[8,[193,7]]],[[22,[[8,[85,7]]]]]],[[[103,[7]]],[[22,[[8,[85,7]]]]]],[[],22],[[],22],[[],[[22,[[8,[7]],915]]]],[[922,922],[[22,[[8,[922,922]],915]]]],[[],[[22,[[8,[440,7]],915]]]],[[922,922],[[22,[[8,[440,922,922]],915]]]],[9,[[22,[[8,[[193,[440]],7]],915]]]],[[],[[22,[[8,[440,7]],915]]]],[[922,922],[[22,[[8,[440,922,922]],915]]]],[9,[[22,[[8,[[193,[440]],7]],915]]]],[[769,1007],1008],[[769,1007],[[1008,[[21,[22]]]]]],[[],23],[[],23],[779,780],[[],21],[[],21],[[[21,[[85,[21]]]]],1037],[[]],[[]],[[[8,[440,922]]],[[8,[922]]]],[[[8,[[0,[874,653]],7]],9,[85,[19]]]],[[[8,[[0,[980,653]],7]],[193,[19]]],[[22,[9,630]]]],[[[8,[[0,[186,653]],922]],[193,[19]]]],[[[8,[[0,[980,653]],7]],[193,[19]]],[[22,[630]]]],[[[8,[[0,[980,653]],7]],1038],[[22,[630]]]],[[[8,[[0,[186,653]],922]],530]],[[[8,[[0,[186,653]],922]],378]],[[[8,[[0,[186,653]],922]],518]],[[[8,[[0,[186,653]],922]],384]],[[[8,[[0,[186,653]],922]],375]],[[[8,[[0,[934,653]],7]],[875,[874]]]],[[[8,[[0,[186,653]],922]],404]],[[[8,[[0,[186,653]],922]],9]],[[[8,[[0,[186,653]],922]],92]],[[[8,[[0,[186,653]],922]],224]],[[[8,[[0,[186,653]],922]],305]],[[[8,[[0,[186,653]],922]],89]],[[[8,[[0,[186,653]],922]],188]],[[[8,[[0,[186,653]],922]],19]],[[[8,[[0,[186,653]],922]],9]],[[[8,[[0,[980,653]],7]],[193,[1016]]],[[22,[9,630]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[1039,[922]]],922],[[[1040,[922]]],922],[[[1039,[543,922]],[1039,[543,922]]]],[[[1041,[543,322,[0,[922,322]]]],[1041,[543,322,[0,[922,322]]]]]],[[[1042,[543,322,[0,[922,322]]]],[1042,[543,322,[0,[922,322]]]]]],[[[1043,[7]],[1043,[7]]]],[[[1040,[922]],[1040,[922]]]],[[[1040,[[0,[916,646]],7]],647]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[1040,[[0,[916,646]],7]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[1040,[[0,[916,646]],7]]],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[],179],[[],179],[[[1040,[922]]]],[[[1040,[[0,[916,646]],7]]],647],[[[1040,[[0,[916,646]],7]]],647],[[[1039,[922]]],193],[[[1040,[922]]]],[[[1043,[922]]],21],[[[1040,[922]]],21],[[[1043,[922]]],21],[[[1040,[922]]],21],0,[[[1040,[543,922]],543],[[22,[9,9]]]],[[[1040,[922]],231],[[22,[9,9]]]],[[[1040,[922]],543,231],[[22,[9,9]]]],[[[1042,[[0,[543,322]],[0,[922,322]]]],[1042,[[0,[543,322]],[0,[922,322]]]]],[[1042,[[0,[543,322]],[0,[922,322]]]]]],[[[1042,[[0,[543,322]],[0,[922,322]]]],[1042,[[0,[543,322]],[0,[922,322]]]]],[[1042,[[0,[543,322]],[0,[922,322]]]]]],[[[1042,[[0,[543,322]],[0,[922,322]]]],[1042,[[0,[543,322]],[0,[922,322]]]]],[[1042,[[0,[543,322]],[0,[922,322]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[188,918],[188,918],[[[1039,[922]]],9],[[[1040,[922]]],9],[[[1039,[922]]]],[[[1041,[[0,[922,322]]]]]],[[[1042,[322,[0,[922,322]]]]]],[[[1043,[922]]]],[[[1040,[922]]]],[[[1039,[322,[0,[922,322]]]]],[[1039,[322,[0,[922,322]]]]]],[[[1041,[322,322,[0,[922,322]]]]],[[1041,[322,322,[0,[922,322]]]]]],[[[1042,[322,[0,[922,322]]]]],[[1042,[322,[0,[922,322]]]]]],[[[1043,[322,[0,[922,322]]]]],[[1043,[322,[0,[922,322]]]]]],[[[1040,[322,[0,[922,322]]]]],[[1040,[322,[0,[922,322]]]]]],[1044,1044],[1045,1045],[[[1039,[322,[0,[922,322]]]],[1039,[322,[0,[922,322]]]]]],[[[1042,[322,[0,[922,322]]]],[1042,[322,[0,[922,322]]]]]],[[[1043,[322,[0,[922,322]]]],[1043,[322,[0,[922,322]]]]]],[[[1040,[322,[0,[922,322]]]],[1040,[322,[0,[922,322]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[1040,[[0,[916,646]],7]]],[[8,[647,7]]]],[[[1041,[543,543,[0,[922,322]]]],[1041,[543,543,[0,[922,322]]]]],183],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],183],[[[1043,[543,922]],[1043,[543,922]]],183],[[[1040,[543,922]],[1040,[543,922]]],183],[[],183],[[],183],[[],183],[[],183],[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],16],[[[1043,[[379,[[379,[[379,[379]]]]]],922]],[379,[[379,[[379,[[379,[379]]]]]]]]],16],[[[1040,[[379,[[379,[[379,[379]]]]]],922]],[379,[[379,[[379,[[379,[379]]]]]]]]],16],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],16],[[],[[21,[92]]]],[[[753,[752]]],[[1043,[919,7]]]],[[[753,[752]]],[[1040,[919,7]]]],[[[1043,[922]]],[[1047,[922]]]],[[[1043,[922]]],[[1048,[922]]]],[[[1043,[922]]],[[1047,[922]]]],[[[1043,[922]]],[[1048,[922]]]],0,[[],[[1039,[543,7]]]],[[],[[1041,[7]]]],[[],[[1042,[7]]]],[[],[[1043,[7]]]],[[],[[1040,[7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[[1039,[[0,[214,543]],7]]]]]],[105,[[22,[[1041,[[0,[214,543]],214,7]]]]]],[105,[[22,[[1042,[[0,[214,1049,543]],7]]]]]],[105,[[22,[[1043,[214,7]]]]]],[105,[[22,[[1040,[214,7]]]]]],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],[[1050,[543,[0,[922,322]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1039,[922]]],[[1051,[922]]]],[[[1040,[922]],[603,[9]]],[[1052,[922]]]],[[[8,[[1040,[[0,[916,646]],7]],7]]],[[103,[[8,[647,7]],7]]]],[[[1039,[543,922]]],[[1053,[543,922]]]],[9],[[[1041,[[0,[922,322]]]]]],[9],[9],[9],[[[1043,[922]]]],[[[1040,[922]]]],[9],[9],[9],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[[[1041,[543,[0,[922,322]]]],543],[[1054,[543,[0,[922,322]]]]]],[[[1041,[[379,[[379,[[379,[379]]]]]],[379,[[379,[[379,[379]]]]]],[0,[922,322]]]],[1041,[[379,[[379,[[379,[379]]]]]],[379,[[379,[[379,[379]]]]]],[0,[922,322]]]]],16],[[[1042,[[379,[[379,[[379,[379]]]]]],[0,[922,322]]]],[1042,[[379,[[379,[[379,[379]]]]]],[0,[922,322]]]]],16],[[[1043,[[379,[[379,[[379,[379]]]]]],922]],[1043,[[379,[[379,[[379,[379]]]]]],922]]],16],[[[1040,[379,922]],[103,[922]]],16],[[[1040,[[379,[[379,[[379,[379]]]]]],922]],[1040,[[379,[[379,[[379,[379]]]]]],922]]],16],[[[1040,[379,922]],193],16],[[[1040,[379,922]],193],16],[[[1040,[379,922]],85],16],[[[1040,[379,922]],85],16],[[[1040,[379,922]],85],16],[[1044,1044],16],[[1045,1045],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[1039,[[0,[543,365]],922]],380]],[[[1039,[543,922]],380]],[[[1041,[543,[0,[922,322]]]],380]],[[[1041,[[0,[543,365]],365,[0,[922,322]]]],380]],[[[1042,[[0,[543,365]],[0,[922,322]]]],380]],[[[1042,[543,[0,[922,322]]]],380]],[[[1043,[922]],380]],[[[1043,[365,922]],380]],[[[1040,[365,922]],380]],[[[1040,[922]],380]],[[[1039,[[0,[543,365]],922]],[0,[543,365]]]],[[[1039,[543,922]],543]],[[[1041,[[0,[543,365]],365,[0,[922,322]]]]]],[[[1041,[543,[0,[922,322]]]]]],[[[1042,[[0,[543,365]],[0,[922,322]]]],[0,[543,365]]]],[[[1042,[543,[0,[922,322]]]],543]],[[[1043,[922]]]],[[[1043,[365,922]],365]],[[[1040,[365,922]],365]],[[[1040,[922]]]],[[[1039,[543,922]],9]],[[[1039,[[0,[543,365]],922]],9]],[[[1040,[922]],9]],[[[1040,[365,922]],9]],[[[1041,[543,[0,[922,322]]]],231],[[1055,[543,231,[0,[922,322]]]]]],[[[1042,[543,[0,[922,322]]]],231],[[1056,[543,231,[0,[922,322]]]]]],[[[1043,[922]],231],[[1057,[231,922]]]],[[[1042,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1041,[543,[0,[922,322]]]]],[[21,[[1058,[543,[0,[922,322]]]]]]]],[[[1041,[543,[0,[922,322]]]]],21],[[[1040,[19,922]]],[[22,[630]]]],[[[1039,[383,922]],10],[[22,[382]]]],[[[1041,[383,383,[0,[922,322]]]],10],[[22,[382]]]],[[[1042,[383,[0,[922,322]]]],10],[[22,[382]]]],[[[1043,[383,922]],10],[[22,[382]]]],[[[1040,[383,922]],10],[[22,[382]]]],[[1044,10],[[22,[382]]]],[[1044,10],[[22,[382]]]],[[1045,10],[[22,[382]]]],[[[85,[543]]],[[1039,[543,7]]]],[[]],[[[103,[543,922]]],[[1039,[543,922]]]],[85,[[1041,[543,7]]]],[[]],[[]],[[[85,[543]]],[[1042,[543,7]]]],[85,[[1043,[7]]]],[[]],[[[103,[922]]],[[1040,[922]]]],[85,[[1040,[7]]]],[[]],[1045,1044],[[]],[783,1045],[[]],[380,[[1039,[543,7]]]],[380,[[1041,[543,7]]]],[380,[[1042,[543,7]]]],[380,[[1043,[7]]]],[380,[[1040,[7]]]],[647,[[21,[[1040,[[0,[916,646]],7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[[[1043,[922]]],21],[[[1040,[922]]],21],[[[1043,[922]]],21],[[[1040,[922]]],21],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],21],[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],[[21,[[0,[[1046,[[0,[543,653]]]],543]]]]]],[[[1040,[[0,[916,646]],7]],9],[[21,[647]]]],[[[1040,[922]],9],21],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],21],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],21],[[[1040,[[0,[916,646]],7]],9],[[21,[647]]]],[[[1040,[922]],9],21],[[[1040,[[0,[916,646]],7]]],[[21,[810]]]],[[],811],[[[1041,[537,537,[0,[922,322]]]],186]],[[[1042,[537,[0,[922,322]]]],186]],[[[1043,[537,922]],186]],[[[1040,[537,922]],186]],0,0,[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]]],[[[1040,[922]],9]],[[[1040,[922]],9]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[1041,[543,[0,[922,322]]]],543],21],[[[1042,[543,[0,[922,322]]]],543],16],[[[1040,[922]],9]],[[[1040,[[0,[916,646]],7]],9,[8,[647,7]]]],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],[[1059,[543,[0,[922,322]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[[1040,[[0,[916,646]],7]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1041,[[0,[[1060,[928]],1049,543]],[1060,[928]],7]]]],[[[1042,[[0,[[1060,[928]],1049,543]],7]]]],[[[1039,[922]]],[[1061,[922]]]],[[[1039,[922]]],1062],[[[1041,[[0,[922,322]]]]],[[1063,[[0,[922,322]]]]]],[[[1041,[[0,[922,322]]]]],1064],[[[1041,[[0,[922,322]]]]],1065],[[[1042,[[0,[922,322]]]]],1066],[[[1042,[[0,[922,322]]]]],[[1067,[[0,[922,322]]]]]],[[[1043,[922]]],1068],[[[1043,[922]]],[[1069,[922]]]],[[[1043,[922]]],1070],[[[1040,[922]]],[[1071,[922]]]],[[[1040,[922]]],1072],[[[1040,[922]]],1073],[[[1039,[922]]],[[1074,[922]]]],[[[1041,[[0,[922,322]]]]],[[1075,[[0,[922,322]]]]]],[[[8,[[1040,[[0,[916,646]],7]],7]]],[[8,[647,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1039,[543,922]]],[[103,[543,922]]]],[[[1041,[[0,[922,322]]]]],[[1076,[[0,[922,322]]]]]],[[[1039,[922]]],[[103,[922]]]],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],16],[[[1039,[922]]],16],[[[1041,[[0,[922,322]]]]],16],[[[1042,[[0,[922,322]]]]],16],[[[1043,[922]]],16],[[[1040,[922]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],16],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],16],[[[1040,[19,922]]],16],[[[1039,[922]]],1062],[[[1041,[[0,[922,322]]]]],1064],[[[1042,[[0,[922,322]]]]],1066],[[[1043,[922]]],1070],[[[1040,[[0,[916,646]],7]]],824],[[[1040,[922]]],1072],[[[1041,[[0,[922,322]]]]],1065],[[[1043,[922]]],1068],[[[1040,[922]]],1073],[[[1041,[[0,[922,322]]]]],1077],[1044,1045],0,[[[1042,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1041,[543,[0,[922,322]]]]],[[21,[[1058,[543,[0,[922,322]]]]]]]],[[[1041,[543,[0,[922,322]]]]],21],[[[1039,[922]]],9],[[[1041,[[0,[922,322]]]]],9],[[[1042,[[0,[922,322]]]]],9],[[[1043,[922]]],9],[[[1040,[922]]],9],[[[1040,[[0,[916,646]],7]]],9],0,0,[[[1043,[7]]],9],[[[1040,[7]]],9],0,0,[[[1041,[[0,[[1046,[543]],543]],[0,[922,322]]]],[1078,[543]]],[[1079,[[0,[[1046,[543]],543]]]]]],[[[1041,[[0,[[1046,[543]],543]],[0,[922,322]]]],[1078,[543]]],[[1080,[[0,[[1046,[543]],543]],[0,[922,322]]]]]],[[[1040,[922]]],193],0,0,[[],[[21,[92]]]],[[[1043,[[379,[[379,[[379,[379]]]]]],922]],[1043,[[379,[[379,[[379,[379]]]]]],922]]],16],[[],[[1039,[543,7]]]],[[],[[1041,[7]]]],[[],[[1042,[7]]]],[[],[[1043,[7]]]],[[],[[1040,[7]]]],[922,[[1039,[543,922]]]],[[[0,[922,322]]],[[1041,[[0,[922,322]]]]]],[[[0,[922,322]]],[[1042,[[0,[922,322]]]]]],[922,[[1043,[922]]]],[922,[[1040,[922]]]],[[[1041,[[416,[[416,[[416,[416]]]]]],[416,[[416,[[416,[416]]]]]],[0,[922,322]]]],[1041,[[416,[[416,[[416,[416]]]]]],[416,[[416,[[416,[416]]]]]],[0,[922,322]]]]],[[21,[183]]]],[[[1042,[[416,[[416,[[416,[416]]]]]],[0,[922,322]]]],[1042,[[416,[[416,[[416,[416]]]]]],[0,[922,322]]]]],[[21,[183]]]],[[[1043,[[416,[[416,[[416,[416]]]]]],922]],[1043,[[416,[[416,[[416,[416]]]]]],922]]],[[21,[183]]]],[[[1040,[[416,[[416,[[416,[416]]]]]],922]],[1040,[[416,[[416,[[416,[416]]]]]],922]]],[[21,[183]]]],[[[1040,[922]],231],9],[[[1039,[922]]],21],[[[1039,[543,922]]],[[21,[[1081,[543,922]]]]]],[[[1039,[543,922]]],[[21,[543]]]],[[[1040,[[0,[916,646]],7]]],[[21,[[8,[647,7]]]]]],[[[1043,[922]]],21],[[[1040,[922]]],21],[[[1041,[543,[0,[922,322]]]]],21],[[[1042,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1043,[922]]],21],[[[1040,[922]]],21],[[[1041,[543,[0,[922,322]]]]],21],[[[1042,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1039,[543,922]],543]],[[[1040,[[0,[916,646]],7]],[8,[647,7]]]],[[[1043,[922]]]],[[[1040,[922]]]],[[[1043,[922]]]],[[[1040,[922]]]],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[603,[[0,[543,653]]]]],[[1082,[[0,[[1046,[[0,[543,653]]]],543]]]]]],[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[603,[[0,[543,653]]]]],[[1083,[[0,[[1046,[[0,[543,653]]]],543]]]]]],[[[1040,[922]],[603,[9]]],1072],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[603,[[0,[543,653]]]]],[[1084,[[0,[[1046,[[0,[543,653]]]],543]]]]]],[[[1040,[922]],[603,[9]]],1073],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[[[1040,[19,922]],[193,[19]]],[[22,[9,630]]]],[[[1040,[19,922]],1017],[[22,[630]]]],[[[1043,[[0,[919,1018]],7]],[753,[752]]]],[[[1040,[[0,[919,1018]],7]],[753,[752]]]],[[[1040,[19,922]],[103,[19,7]]],[[22,[9,630]]]],[[[1040,[19,922]],107],[[22,[9,630]]]],[[],[[21,[92]]]],[[[1040,[[0,[916,646]],7]]],[[21,[188]]]],[[],[[21,[92]]]],[[[1040,[[0,[916,646]],7]]],851],[[[8,[[1040,[[0,[916,646]],7]],7]]],852],[[[1040,[[0,[916,646]],7]],647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[[[1040,[[0,[916,646]],7]]],854],[[],92],[[],[[21,[92]]]],[[],92],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],21],[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],16],[[[1043,[922]],9]],[[[1040,[922]],9],21],[[[1040,[[0,[916,646]],7]],9],[[8,[647,7]]]],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],21],[[[1042,[543,[0,[922,322]]]],543],[[21,[543]]]],[[[1039,[922]],9]],[[[1040,[922]],9]],[[[1039,[922]],9]],[[[1040,[922]],9]],[[[1040,[322,922]],9,322]],[[[1040,[922]],9,231]],[[[1039,[543,922]],231]],[[[1041,[543,[0,[922,322]]]],231]],[[[1042,[543,[0,[922,322]]]],231]],[[[1040,[922]],231]],[[[1040,[922]],231]],0,[[[1040,[922]],9]],[[[1040,[922]],9]],[[[1039,[932,7]],172],22],[[[1041,[932,932,7]],172],22],[[[1042,[932,7]],172],22],[[[1043,[932,7]],172],22],[[[1040,[932,7]],172],22],[[[1040,[[0,[916,646]],7]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[],92],[[[1039,[922]],9]],[[[1040,[922]],9]],[[[1039,[922]]]],[[[1040,[922]]]],[[[1043,[[0,[933,1085]],7]]],918],[[[1040,[[0,[933,1085]],7]]],918],[[[1041,[[0,[[1046,[[0,[543,653]]]],543]],322,[0,[922,322]]]],[0,[543,653]]],[[1041,[[0,[[1046,[[0,[543,653]]]],543]],322,[0,[922,322]]]]]],[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],322,[0,[922,322]]]],[0,[543,653]]],[[1042,[[0,[[1046,[[0,[543,653]]]],543]],322,[0,[922,322]]]]]],[[[1043,[322,922]],9],[[1043,[322,922]]]],[[[1040,[322,922]],9],[[1040,[322,922]]]],[[[1042,[[0,[543,322]],[0,[922,322]]]],[1042,[[0,[543,322]],[0,[922,322]]]]],[[1042,[[0,[543,322]],[0,[922,322]]]]]],[[[1040,[922]],9,9]],[[[1040,[922]],9],21],[[[1040,[922]],9],21],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],[[1086,[543]]]],0,[[[1042,[[0,[[1046,[[0,[543,653]]]],543]],[0,[922,322]]]],[0,[543,653]]],[[21,[[0,[[1046,[[0,[543,653]]]],543]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1043,[7]],9]],[[[1040,[7]],9]],[[[1040,[922]],9]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[1041,[543,[0,[922,322]]]],543],[[22,[[1087,[543,[0,[922,322]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[1039,[922]],9],[[22,[1044]]]],[[[1040,[922]],9],[[22,[1044]]]],[[[1039,[922]],9],[[22,[1044]]]],[[[1040,[922]],9],[[22,[1044]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],[[21,[92]]]],[[],810],[[[1040,[[0,[916,646]],7]]],92],[[],92],[[[1042,[543,[0,[922,322]]]],[1042,[543,[0,[922,322]]]]],[[1088,[543]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[[1041,[[0,[[1046,[543]],543]],[0,[922,322]]]],[1078,[543]]],[[1079,[[0,[[1046,[543]],543]]]]]],[[[1041,[[0,[[1046,[543]],543]],[0,[922,322]]]],[1078,[543]]],[[1080,[[0,[[1046,[543]],543]],[0,[922,322]]]]]],[[[1041,[[0,[922,322]]]]],1089],[[[1041,[[0,[922,322]]]]],1090],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[1039,[543,7]]]],[9,[[1040,[7]]]],[[9,922],[[1039,[543,922]]]],[[9,922],[[1040,[922]]]],[[[1040,[19,922]],[193,[19]]],[[22,[9,630]]]],[[[1040,[19,922]],[193,[19]]],[[22,[630]]]],[[[1043,[934,7]],[875,[874]]]],[[[1040,[934,7]],[875,[874]]]],[[[1040,[19,922]],[193,[1016]]],[[22,[9,630]]]],0,0,0,0,0,0,0,0,[[[1061,[922]]],922],[[[1074,[922]]],922],[[[1051,[922]]],922],[[[1053,[543,922]]],922],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[[],686],[[],686],[1062,1062],[[[1061,[322,[0,[322,922]]]]],[[1061,[322,[0,[322,922]]]]]],[[[1074,[322,[0,[322,922]]]]],[[1074,[322,[0,[322,922]]]]]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],[[1061,[7]]]],[[[1081,[543,922]]],543],[9],[9],[9],[9],[9],[9],[9],[[[1081,[543,922]]],543],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[[[1081,[543,922]]]],[9],[9],[9],[9],[9],[[[1053,[543,922]]]],[[[1081,[[0,[543,383]],922]],10],[[22,[382]]]],[[[1062,[383]],10],[[22,[382]]]],[[[1061,[383,922]],10],[[22,[382]]]],[[[1074,[383,[0,[383,922]]]],10],[[22,[382]]]],[[[1051,[383,[0,[383,922]]]],10],[[22,[382]]]],[[[1053,[[0,[383,543]],[0,[383,922]]]],10],[[22,[382]]]],[231],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1062,16],[[[1061,[922]]],16],[[[1051,[922]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[1062,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1062,21],[[[1061,[922]]],21],[[[1074,[543,922]]],[[21,[543]]]],[[[1051,[922]]],21],[[[1053,[543,922]]],[[21,[543]]]],[1062,21],[[[1061,[922]]],21],[[[1051,[922]]],21],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],0,[[[1081,[543,922]]],543],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[1062],[[],9],[[[1061,[922]]]],[[[1074,[543,922]]]],[[[1051,[922]]]],[[],9],[[[1053,[543,922]]]],[[],9],[[],863],[[],863],[[],863],[[],863],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1054,[543,[0,[922,322]]]],501],[[1054,[543,[0,[922,322]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1080,1079],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[1064,1064],[1077,1077],[1089,1089],[1082,1082],[1079,1079],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1064],[[],1065],[[],[[1063,[[0,[922,364,322]]]]]],[[],1077],[[],1089],[[],[[1075,[[0,[922,364,322]]]]]],[[],[[1076,[[0,[922,364,322]]]]]],[[],1082],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[1087,[[0,[383,543]],383,7]]],92],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[1063,[[0,[922,322]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[[1054,[[0,[383,543]],383,[0,[922,322]]]],10],[[22,[382]]]],[[[1091,[[0,[383,543]],[0,[922,322]]]],10],[[22,[382]]]],[[[1058,[[0,[383,543]],383,[0,[922,322]]]],10],[[22,[382]]]],[[[1087,[[0,[383,543]],383,[0,[922,322]]]],10],[[22,[382]]]],[[[1087,[[0,[383,543]],383,[0,[922,322]]]],10],[[22,[382]]]],[[[1064,[383,383]],10],[[22,[382]]]],[[[1065,[383,383]],10],[[22,[382]]]],[[[1063,[383,383,[0,[922,322]]]],10],[[22,[382]]]],[[[1077,[383]],10],[[22,[382]]]],[[[1089,[383]],10],[[22,[382]]]],[[[1090,[383]],10],[[22,[382]]]],[[[1075,[383,[0,[922,322]]]],10],[[22,[382]]]],[[[1076,[383,[0,[922,322]]]],10],[[22,[382]]]],[[[1082,[383,383]],10],[[22,[382]]]],[[[1084,[383,383]],10],[[22,[382]]]],[[[1055,[383,383,231,7]],10],[[22,[382]]]],[[[1079,[383,383]],10],[[22,[382]]]],[[[1080,[383,383]],10],[[22,[382]]]],[231],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[13],[12],[12],[13],[13],[12],[13],[12],[12],[13],[12],[13],[[[1058,[543,[0,[922,322]]]]]],[[[1058,[543,[0,[922,322]]]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[[[1091,[543,[0,[922,322]]]]]],[[[1058,[543,[0,[922,322]]]]]],[[[1080,[543,[0,[922,322]]]],543]],[[[1080,[543,[0,[922,322]]]],543]],[[[1080,[543,[0,[922,322]]]],543]],[[[1080,[543,[0,[922,322]]]],543]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1091,[543,[0,[922,322]]]]],543],[[[1058,[543,[0,[922,322]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1054,[543,[0,[922,322]]]]],543],[[[1091,[543,[0,[922,322]]]]],543],[[[1058,[543,[0,[922,322]]]]],543],[1079,21],[1080,21],0,[1080,21],[1079,21],[1080,21],[1080,21],[1064,21],[1065,21],[1077,21],[1089,21],[1090,21],[[[1075,[[0,[922,322]]]]],21],[[[1076,[[0,[922,322]]]]],21],[1082,21],[1084,21],[1064,9],[1065,9],[[[1063,[[0,[922,322]]]]],9],[1077,9],[1089,9],[1090,9],[[[1075,[[0,[922,322]]]]],9],[[[1076,[[0,[922,322]]]]],9],0,0,0,0,0,[1064,21],[1065,21],[1077,21],[[[1075,[543,[0,[922,322]]]]],[[21,[543]]]],[1082,21],[1084,21],[1064,21],[1065,21],[1077,21],[[[1075,[543,[0,[922,322]]]]],[[21,[543]]]],[1082,21],[1084,21],[1079],[1080],[1079],[1080],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1064,21],[1065,21],[[[1063,[[0,[922,322]]]]],21],[1077,21],[1089,21],[1090,21],[[[1075,[[0,[922,322]]]]],21],[[[1076,[[0,[922,322]]]]],21],[1082,21],[1084,21],[[[1055,[231,[0,[922,322]]]]],21],[1064,21],[1065,21],[[[1063,[[0,[922,322]]]]],21],[1077,21],[1089,21],[1090,21],[[[1075,[[0,[922,322]]]]],21],[[[1076,[[0,[922,322]]]]],21],[1082,21],[1084,21],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],[[[1054,[543,364,[0,[922,322]]]]],364],[[[1054,[543,[0,[922,322]]]]]],[[[1054,[543,[0,[922,322]]]],501]],[[[1054,[543,[0,[922,322]]]],501]],[1079,21],[1080,21],[1079,21],[1080,21],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[1058,[543,[0,[922,322]]]]]],[[[1080,[543,[0,[922,322]]]]],21],[[[1080,[543,[0,[922,322]]]]],21],[[[1058,[543,[0,[922,322]]]]]],0,0,0,[1064],[1065],[[],9],[[[1063,[[0,[922,322]]]]]],[1077],[1089],[1090],[[],9],[[[1075,[[0,[922,322]]]]]],[[],9],[[[1076,[[0,[922,322]]]]]],[[[1055,[231,[0,[922,322]]]]]],[[],863],[[],863],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[1079,21],[1080,21],0,[1080,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[1066,1066],[[[1050,[[0,[922,322]]]]],[[1050,[[0,[922,322]]]]]],[1086,1086],[[[1059,[[0,[922,322]]]]],[[1059,[[0,[922,322]]]]]],[1088,1088],[1083,1083],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1066],[[],[[1067,[[0,[922,364,322]]]]]],[[],1083],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[[[1066,[383]],10],[[22,[382]]]],[[[1050,[383,[0,[922,322]]]],10],[[22,[382]]]],[[[1086,[383]],10],[[22,[382]]]],[[[1059,[383,[0,[922,322]]]],10],[[22,[382]]]],[[[1088,[383]],10],[[22,[382]]]],[[[1056,[383,231,[0,[922,322]]]],10],[[22,[382]]]],[[[1067,[383,[0,[383,922,322]]]],10],[[22,[382]]]],[[[1083,[383]],10],[[22,[382]]]],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[1066,21],[1083,21],[1066,9],[[[1067,[[0,[922,322]]]]],9],0,[1066,21],[1083,21],[1066,21],[[[1050,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1086,[543]]],[[21,[543]]]],[[[1059,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1088,[543]]],[[21,[543]]]],[1083,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1066,21],[[[1050,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1086,[543]]],[[21,[543]]]],[[[1059,[543,[0,[922,322]]]]],[[21,[543]]]],[[[1088,[543]]],[[21,[543]]]],[[[1056,[231,[0,[922,322]]]]],21],[[[1067,[[0,[922,322]]]]],21],[1083,21],[1066,21],[[[1067,[[0,[922,322]]]]],21],[1083,21],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[1066],[[[1050,[543,[0,[922,322]]]]]],[[[1086,[543]]]],[[[1059,[543,[0,[922,322]]]]]],[[[1088,[543]]]],[[[1056,[231,[0,[922,322]]]]]],[[[1067,[[0,[922,322]]]]]],[[],9],[[],863],[[],863],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[1048,[922]]],[[1047,[922]]]],[[[1047,[922]]],21],[[[1048,[922]]],21],[[[1048,[922]]],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[1070,1070],[[[1047,[922]]],[[1047,[922]]]],[[[1069,[322,[0,[322,922]]]]],[[1069,[322,[0,[322,922]]]]]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[1047,[922]]],21],[[[1048,[922]]],21],0,0,[[],1070],[[],1068],[[],[[1069,[7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[1070,[383]],10],[[22,[382]]]],[[[1068,[383]],10],[[22,[382]]]],[[[1047,[383,922]],10],[[22,[382]]]],[[[1048,[383,922]],10],[[22,[382]]]],[[[1057,[383,231,7]],10],[[22,[382]]]],[[[1069,[383,922]],10],[[22,[382]]]],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[13],[12],[[[1047,[922]]],21],[[[1048,[922]]],21],[[[1048,[922]]],21],0,0,0,0,[[[1047,[922]]],[[21,[9]]]],[[[1048,[922]]],[[21,[9]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[1048,[922]]]],[[[1048,[922]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[1070,21],[1068,21],0,0,0,0,0,0,0,0,0,0,[[[1047,[922]]]],[[[1048,[922]]]],[[[1047,[922]]]],[[[1048,[922]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1070,21],[1068,21],[[[1057,[231,922]]],21],[[[1069,[922]]],21],[1070,21],[1068,21],[[[1069,[922]]],21],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],0,[[[1047,[922]]],21],[[[1048,[922]]],21],[[[1047,[922]]],21],[[[1048,[922]]],21],[[1070,501],21],[[[1048,[922]]],21],[[[1048,[922]]],21],0,[[[1048,[922]]]],[[[1048,[922]]]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[1048,[922]]],21],[[[1048,[322,922]]],[[21,[[1043,[322,922]]]]]],[1070],[1068],[[[1057,[231,922]]]],[[],9],[[[1069,[922]]]],[[[1048,[7]],[1043,[7]]]],[[[1048,[7]],[1043,[7]]]],[[[1048,[322,922]]],[[1043,[322,922]]]],[[[1048,[322,922]]],[[1043,[322,922]]]],[[],863],[[],863],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[1073,9],[[22,[754]]]],[[1072,9],[[22,[754]]]],[[[1071,[922]],9],[[22,[754]]]],[[1073,9],[[22,[754]]]],[[1072,9],[[22,[754]]]],[[[1071,[922]],9],[[22,[754]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],686],[[],686],[1072,1072],[[[1071,[322,[0,[322,922]]]]],[[1071,[322,[0,[322,922]]]]]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[1071,[922]]],9],0,[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],0,[9],[[[1052,[922]]]],[9],[9],[9],[[[1052,[383,922]],10],[[22,[382]]]],[[[1073,[383]],10],[[22,[382]]]],[[[1072,[383]],10],[[22,[382]]]],[[[1071,[383,922]],10],[[22,[382]]]],[[1073,231]],[[1072,231]],[[[1071,[922]],231]],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1073,16],[1072,16],[[[1071,[922]]],16],[[],16],[[],16],[[],16],[[],16],[1073,21],[1072,21],[[[1071,[922]]],21],[1073,9],[1072,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1052,[922]]],21],[1073,21],[1072,21],[[[1071,[922]]],21],[[[1052,[922]]],21],[1073,21],[1072,21],[[[1071,[922]]],21],[[[1071,[922]]],[[22,[85,1092]]]],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],[[1072,501],21],[[19,19]],[[19,19]],[19],[19],[19],[19],0,[[1073,231]],[[1072,231]],[[[1071,[922]],231]],[[[1052,[922]]]],[[],9],[1073],[1072],[[],9],[[[1071,[922]]]],[[],863],[[],863],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[1073,231],1093],[[1072,231],1093],[[[1071,[922]],231],1093],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[1073,231],1093],[[1072,231],1093],[[[1071,[922]],231],1093],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[927,[[193,[19]]]],[1094,[[193,[19]]]],[927,[[193,[19]]]],[927,651],[[],179],[927,651],[927,651],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[927,927],[1095,1095],[1094,1094],[1096,1096],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[927,927],183],[[],183],[[],927],[927,651],[9],[9],[9],[9],[9],[9],[9],[9],[1095,92],[1096,92],[105,[[22,[927]]]],[[]],[[]],[[]],[[]],[927],[9],[9],[9],[9],[179,16],[179,16],[179,16],[179,16],[186],[[927,927],16],[[1095,1095],16],[[1094,1094],16],[[1096,1096],16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],0,0,[[927,10],[[22,[382]]]],[[1095,10],[[22,[382]]]],[[1095,10],[[22,[382]]]],[[1094,10],[[22,[382]]]],[[1094,10],[[22,[382]]]],[[1096,10],[[22,[382]]]],[[1096,10],[[22,[382]]]],[[[629,[651]]],927],[651,927],[[[103,[1097,7]]],927],[[[8,[651,7]]],927],[[]],[[]],[[]],[[]],[375,927],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[19,7]]],927],[[[103,[19,7]]],[[22,[927,1094]]]],[[[103,[19,7]]],927],[13],[12],[[927,186]],[[927,1098],651],[[],9],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[927,[[8,[651,7]]]],[927,[[103,[19,7]]]],[1094,[[103,[19,7]]]],[927,[[103,[19,7]]]],[1096,927],[927,375],[[]],[[]],[[]],[[]],[927,[[22,[107,1096]]]],[1095,[[103,[19,7]]]],[[],16],[[],16],[[],16],[[],16],[[[389,[[103,[19,7]]]]],[[22,[927,1095]]]],[1095,9],[[927,927],[[21,[183]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[[927,172],22],[1096,[[21,[862]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[1096,1099],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,[[21,[1100]]]],0,[10,16],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[1038,[[21,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1100,1100],[382,382],[1038,1038],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[382,382],183],[[10,[0,[495,653]]],[[22,[382]]]],[[],183],[495,382],[10,1101],[10,1102],[10,1103],[[10,92],1104],[[10,92],1105],[[],382],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[382,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],[186],0,[[1103,380],1103],[[1101,380],1101],[[1102,380],1102],[[1103,383],1103],[[1101,383],1101],[[1102,383,383],1102],[[1100,1100],16],[[382,382],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[1104,92,383],1104],[[1105,383],1105],0,[10,490],0,[1104,[[22,[382]]]],[1105,[[22,[382]]]],[1103,[[22,[382]]]],[1101,[[22,[382]]]],[1102,[[22,[382]]]],[1104,[[22,[382]]]],[10,89],0,[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[10,[[22,[382]]]],[[1100,10],[[22,[382]]]],[[382,10],[[22,[382]]]],[[382,10],[[22,[382]]]],[[1038,10],[[22,[382]]]],[[1038,10],[[22,[382]]]],0,0,0,0,[1038,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1106,382],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],0,0,0,[[382,186]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1102,383],1102],[[10,92],[[22,[382]]]],[[10,16,92,92],[[22,[382]]]],[[382,382],[[21,[183]]]],0,[10,[[21,[9]]]],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],[[1038,1020,1021]],[[1104,1020,383]],[[1102,1020,383]],0,0,0,[[1038,172],22],[[10,16],[[22,[382]]]],[[10,[193,[19]]],[[22,[382]]]],[[10,490],[[22,[382]]]],[[10,84],[[22,[382]]]],[[10,51],[[22,[382]]]],[[10,530],[[22,[382]]]],[[10,378],[[22,[382]]]],[[10,518],[[22,[382]]]],[[10,384],[[22,[382]]]],[[10,375],[[22,[382]]]],[[10,[21,[9]]],[[22,[382]]]],[[10,92,[0,[932,653]]],[[22,[382]]]],[[10,92,89,92,[0,[932,653]]],[[22,[382]]]],[10,[[22,[382]]]],[[10,[21,[9]]],[[22,[382]]]],[[10,[0,[932,653]]],[[22,[382]]]],[[10,92],[[22,[382]]]],[[10,92,9],[[22,[382]]]],[[10,92,89,92,9],[[22,[382]]]],[[10,9],[[22,[382]]]],[[10,92,9],[[22,[382]]]],[[10,92,89,92,9],[[22,[382]]]],[[10,224],[[22,[382]]]],[[10,305],[[22,[382]]]],[[10,89],[[22,[382]]]],[[10,188],[[22,[382]]]],[[10,19],[[22,[382]]]],[10,[[22,[382]]]],[[10,92],[[22,[382]]]],[[10,92,89,92],[[22,[382]]]],[10,16],[10,16],[10,16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1102,383],1102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[21,[9]]]],0,[[1107,1038],[[22,[382]]]],[490,[[22,[382]]]],[[10,490],[[22,[382]]]],[1038,[[22,[382]]]],[[10,1038],[[22,[382]]]],[[10,1038],[[22,[382]]]],[92,[[22,[382]]]],[[10,92],[[22,[382]]]],[[10,92],[[22,[382]]]],0,0,0,0,0,[[[15,[922]]],922],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],179],[[[15,[937,7]]],938],[[[15,[653,922]]]],[[[1108,[653,922]]]],[[[15,[939,7]]],518],[[[15,[653,922]]],653],[[[15,[440,322,922]]],[[15,[322,922]]]],[[[15,[[193,[440]],322,922]]],[[15,[193,322,922]]]],[[]],[[[15,[653,922]]],653],[[]],[[]],[[]],[[]],[[]],[188,918],[[[15,[653,[0,[922,322]]]]],[[15,[653,[0,[922,322]]]]]],[[[1108,[653,[0,[922,322]]]]],[[1108,[653,[0,[922,322]]]]]],[[]],[[]],[[[15,[[0,[543,653]],922]],[15,[[0,[543,653]],922]]],183],[[],183],[[[753,[752]]],[[15,[[0,[919,653]],7]]]],[[]],[922],[[],[[15,[364,7]]]],[[],[[1108,[7]]]],[[[15,[653,922]]],653],[9],[9],[1109],[9],[9],[9],[9],[1109],[105,[[22,[[15,[653,7]]]]]],[105,[[22,[[1108,[[0,[214,653]],7]]]]]],[[[15,[1,[0,[922,322]]]]],[[22,[[15,[1,[0,[922,322]]]],[15,[1,[0,[922,322]]]]]]]],[[]],[[]],[[]],[[[15,[1,[0,[922,322]]]]],[[15,[1,[0,[922,322]]]]]],[[[15,[653,322,922]]],[[1108,[653,322,922]]]],[1109,[[1108,[7]]]],[[[15,[653,922]]]],[9],[[[1108,[653,922]]]],[9],[1109],[9],[179,16],[186],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[15,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[15,[[0,[495,653]],922]],10],[[22,[382]]]],[[[15,[[0,[383,653]],922]],10],[[22,[382]]]],[[[15,[653,922]],10],[[22,[382]]]],[[[1108,[653,922]],10],[[22,[382]]]],[[[1109,[383]],10],[[22,[382]]]],[927,[[15,[651,7]]]],[781],[628,[[15,[628,7]]]],[917,[[15,[917,7]]]],[92,[[15,[92,7]]]],[[]],[921,[[15,[917,7]]]],[651,[[15,[651,7]]]],[[[629,[[0,[782,653]]]]],[[15,[[0,[782,653]],7]]]],[107,[[15,[92,7]]]],[920,[[15,[628,7]]]],[[[15,[92,7]]],[[15,[[193,[19]],7]]]],[[],[[15,[7]]]],[[[193,[322]]],[[15,[[193,[322]],7]]]],[[[8,[653,922]]],[[15,[653,922]]]],[[[103,[922]]],[[15,[193,922]]]],[[]],[[]],[380,[[15,[193,7]]]],[[],[[15,[653,7]]]],[[],[[1108,[653,7]]]],[922,[[15,[653,922]]]],[922,[[1108,[653,922]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[[[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[15,[653,922]]],[[21,[653]]]],[[[15,[653,922]]],653],[[[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[15,[[0,[537,653]],922]],186]],[[]],[[322,922]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[922]]],21],[[[15,[653,922]]]],[[[1108,[653,922]]]],[[[1108,[653,322,922]]]],[1109,[[15,[7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[15,[[0,[752,653]],7]]],9],[[[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[15,[322,[0,[922,322]]]]],322],[[[15,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[[],[[15,[7]]]],[[],[[1108,[7]]]],[[],1109],[501,[[15,[7]]]],[922,[[15,[922]]]],[922,[[1108,[922]]]],[[],[[15,[440,7]]]],[922,[[15,[440,922]]]],[9,[[15,[[193,[440]],7]]]],[[9,922],[[15,[[193,[440]],922]]]],[[],[[15,[440,7]]]],[922,[[15,[440,922]]]],[9,[[15,[[193,[440]],7]]]],[[9,922],[[15,[[193,[440]],922]]]],[[[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[15,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],[[21,[183]]]],0,0,[[],[[769,[[15,[7]]]]]],[922,[[769,[[15,[922]]]]]],0,0,0,[[[15,[653,922]],[15,[653,922]]],16],[[[1108,[653,922]],[1108,[653,922]]],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[[[15,[[0,[752,653]],7]],9],[[85,[19]]]],[[[15,[[0,[932,653]],7]],172],22],[[[1108,[[0,[932,653]],7]],172],22],[[[15,[[0,[933,653]],7]]],918],[[[15,[653,922]]],9],[[[1108,[653,922]]],9],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],22],[[[15,[193,7]]],[[22,[[15,[85,7]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],[[22,[[15,[7]],915]]]],[922,[[22,[[15,[922]],915]]]],[[],[[22,[[15,[440,7]],915]]]],[922,[[22,[[15,[440,922]],915]]]],[[],[[22,[[15,[440,7]],915]]]],[922,[[22,[[15,[440,922]],915]]]],[[[15,[922]]],[[22,[[15,[922]]]]]],[[],23],[[],23],[[],23],[[[15,[322,[0,[922,322]]]]],322],[[],21],[[],21],[[],21],[[[1108,[653,322,922]]],[[21,[[15,[653,322,922]]]]]],[[]],[[]],[[]],[[[15,[653,922]]],9],[[[1108,[653,922]]],9],[[[15,[[0,[934,653]],7]],[875,[874]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1110,9],[[22,[754]]]],[[1111,9],[[22,[754]]]],[[1110,9],[[22,[754]]]],[[1111,9],[[22,[754]]]],[[1110,231],16],[[1111,231],16],[[1110,231],16],[[1111,231],16],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[1111,193],[1110,193],[1111,193],[1110,193],[1111,193],[[[1112,[231]]],193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1110,1110],[[[1112,[[0,[322,231]]]]],[[1112,[[0,[322,231]]]]]],[[[1113,[[0,[322,231]]]]],[[1113,[[0,[322,231]]]]]],[[[1114,[[0,[322,231]]]]],[[1114,[[0,[322,231]]]]]],[1115,1115],[1116,1116],[1117,1117],[1118,1118],[[[1119,[322]]],[[1119,[322]]]],[1120,1120],[1121,1121],[1122,1122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[]],[1110,9],[1111,9],[1116,9],[1117,9],[1123,9],[1118,9],[1124,9],[1119,9],[1120,9],[1125,9],[1121,9],[1126,9],[1122,9],[1127,9],[[],1110],[[],1111],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],0,0,[[1110,231],21],[[1111,231],21],[[1110,231],21],[[1111,231],21],0,0,0,0,[[[1110,[383]],10],[[22,[382]]]],[[[1111,[383]],10],[[22,[382]]]],[[[1112,[383,231]],10],[[22,[382]]]],[[[1113,[383,231]],10],[[22,[382]]]],[[[1128,[383,231]],10],[[22,[382]]]],[[[1129,[383,231]],10],[[22,[382]]]],[[[1114,[383,231]],10],[[22,[382]]]],[[[1130,[383,231]],10],[[22,[382]]]],[[[1131,[383,231]],10],[[22,[382]]]],[[[1132,[383,231]],10],[[22,[382]]]],[[[1133,[383,231]],10],[[22,[382]]]],[[[1134,[383,231]],10],[[22,[382]]]],[[[1135,[383]],10],[[22,[382]]]],[[[1136,[383]],10],[[22,[382]]]],[[1115,10],[[22,[382]]]],[[1115,10],[[22,[382]]]],[[[1116,[383]],10],[[22,[382]]]],[[[1117,[383]],10],[[22,[382]]]],[[[1123,[383]],10],[[22,[382]]]],[[[1118,[383]],10],[[22,[382]]]],[[[1124,[383]],10],[[22,[382]]]],[[[1119,[383]],10],[[22,[382]]]],[[[1120,[383]],10],[[22,[382]]]],[[[1125,[383]],10],[[22,[382]]]],[[[1121,[383]],10],[[22,[382]]]],[[[1126,[383]],10],[[22,[382]]]],[[[1122,[383]],10],[[22,[382]]]],[[[1127,[383]],10],[[22,[382]]]],[[1110,231]],[[1111,231]],[[1115,231]],[[1110,231]],[[1111,231]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],193],[405,193],[405,193],[9,193],[9,193],[[],193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1124,193],[1125,193],[1127,193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1111,193],[1110,16],[1111,16],[1118,16],[1124,16],[1119,16],[1120,16],[1125,16],[1122,16],[1127,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1110,231],16],0,0,[[]],[1110,21],[1111,21],[[[1135,[231]]],21],[[[1136,[231]]],21],[1115,[[21,[19]]]],[1116,21],[1117,21],[1123,21],[1118,21],[1124,21],[1119,21],[1120,21],[1125,21],[1121,21],[1126,21],[1122,21],[1127,21],[1110,9],[1111,9],0,[1110,21],[1111,21],[[[1112,[231]]],[[21,[193]]]],[[[1113,[231]]],[[21,[193]]]],[[[1128,[231]]],[[21,[193]]]],[[[1129,[231]]],[[21,[193]]]],[[[1114,[231]]],[[21,[193]]]],[[[1130,[231]]],[[21,[193]]]],[[[1131,[231]]],[[21,[193]]]],[[[1132,[231]]],[[21,[193]]]],[[[1133,[231]]],[[21,[193]]]],[[[1134,[231]]],[[21,[193]]]],[[[1135,[231]]],21],[[[1136,[231]]],21],[1115,[[21,[19]]]],[1116,[[21,[193]]]],[1117,[[21,[193]]]],[1123,[[21,[193]]]],[1118,[[21,[193]]]],[1124,[[21,[193]]]],[1119,21],[1120,[[21,[85]]]],[1125,[[21,[85]]]],[1121,[[21,[193]]]],[1126,[[21,[193]]]],[1122,[[21,[193]]]],[1127,[[21,[193]]]],[1110,21],[1111,21],[[[1112,[231]]],[[21,[193]]]],[[[1113,[231]]],[[21,[193]]]],[[[1128,[231]]],[[21,[193]]]],[[[1129,[231]]],[[21,[193]]]],[[[1114,[231]]],[[21,[193]]]],[[[1130,[231]]],[[21,[193]]]],[[[1135,[231]]],21],[[[1136,[231]]],21],[1115,[[21,[19]]]],[1116,[[21,[193]]]],[1117,[[21,[193]]]],[1123,[[21,[193]]]],[1118,[[21,[193]]]],[1124,[[21,[193]]]],[1119,[[21,[85]]]],[1120,[[21,[85]]]],[1125,[[21,[85]]]],[1121,[[21,[193]]]],[1126,[[21,[193]]]],[1122,[[21,[193]]]],[1127,[[21,[193]]]],[[1110,9],21],[[1111,9],21],[[1116,9],21],[[1117,9],21],[[1123,9],[[21,[193]]]],[[1118,9],21],[[1124,9],[[21,[193]]]],[[1119,9],21],[[1120,9],21],[[1125,9],21],[[1121,9],21],[[1126,9],[[21,[193]]]],[[1122,9],21],[[1127,9],[[21,[193]]]],[[1110,9],21],[[1111,9],21],[[1116,9],21],[[1117,9],21],[[1123,9],21],[[1118,9],21],[[1124,9],21],[[1119,9],[[21,[85]]]],[[1120,9],21],[[1125,9],21],[[1121,9],21],[[1126,9],21],[[1122,9],21],[[1127,9],21],0,[[1110,501],21],[[1110,231],[[21,[9]]]],[[1111,231],[[21,[9]]]],0,0,0,0,0,0,0,0,[[[603,[9]],[1137,[9]]],[[405,[9]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,0,0,0,0,0,[1118,193],[1120,193],[1122,193],[[1110,231],[[21,[9]]]],[[1111,231],[[21,[9]]]],0,[1110],[1111],[[[1112,[231]]]],[[[1113,[231]]]],[[[1128,[231]]]],[[[1129,[231]]]],[[[1114,[231]]]],[[[1130,[231]]]],[[[1131,[231]]]],[[[1132,[231]]]],[[[1133,[231]]]],[[[1134,[231]]]],[[[1135,[231]]]],[[[1136,[231]]]],[1115],[1116],[1117],[1123],[1118],[1124],[1119],[1120],[1125],[1121],[1126],[1122],[1127],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[1115,231],1093],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1138,231],16],[[1138,231],16],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1139,92],[1140,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],686],[[],686],[[],686],[[],686],[[[1142,[1141]]],[[1142,[1141]]]],[1099,1099],[1143,1143],[1139,1139],[1140,1140],[1138,1138],[[[1144,[1141]]],[[1144,[1141]]]],[[[1145,[1141]]],[[1145,[1141]]]],[[[1146,[1141]]],[[1146,[1141]]]],[[[1147,[1141]]],[[1147,[1141]]]],[[[1148,[1141]]],[[1148,[1141]]]],[[[1149,[1141]]],[[1149,[1141]]]],[[[1150,[1141]]],[[1150,[1141]]]],[[[1151,[1141]]],[[1151,[1141]]]],[[[1152,[1141]]],[[1152,[1141]]]],[[[1153,[1141]]],[[1153,[1141]]]],[1154,1154],[1155,1155],[1156,1156],[1157,1157],[1158,1158],[1159,1159],[1160,1160],[1161,1161],[1162,1162],[1163,1163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[1139,9],[1140,9],[1138,9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[1099,92],[1143,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],[179,16],[[1099,1099],16],[[1143,1143],16],[[1162,1162],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[1099,[[21,[9]]]],0,0,[[1138,231],21],[[[1142,[1141]],10],[[22,[382]]]],[[1099,10],[[22,[382]]]],[[1099,10],[[22,[382]]]],[[1143,10],[[22,[382]]]],[[1143,10],[[22,[382]]]],[[1139,10],[[22,[382]]]],[[1140,10],[[22,[382]]]],[[1138,10],[[22,[382]]]],[[[1144,[1141]],10],[[22,[382]]]],[[[1145,[1141]],10],[[22,[382]]]],[[[1146,[1141]],10],[[22,[382]]]],[[[1147,[1141]],10],[[22,[382]]]],[[[1148,[1141]],10],[[22,[382]]]],[[[1149,[1141]],10],[[22,[382]]]],[[[1150,[1141]],10],[[22,[382]]]],[[[1151,[1141]],10],[[22,[382]]]],[[[1152,[1141]],10],[[22,[382]]]],[[[1153,[1141]],10],[[22,[382]]]],[[1154,10],[[22,[382]]]],[[1155,10],[[22,[382]]]],[[1156,10],[[22,[382]]]],[[1157,10],[[22,[382]]]],[[1158,10],[[22,[382]]]],[[1159,10],[[22,[382]]]],[[1159,10],[[22,[382]]]],[[1160,10],[[22,[382]]]],[[1160,10],[[22,[382]]]],[[1161,10],[[22,[382]]]],[[1161,10],[[22,[382]]]],[[1162,10],[[22,[382]]]],[[1163,10],[[22,[382]]]],[[1159,231]],[[1160,231]],[[1161,231]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[193,[19]],7]]],[[8,[92,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[193,[19]]],[[22,[92,1099]]]],[[[193,[19]]],[[22,[92,1099]]]],[[[193,[19]]],92],[[[193,[19]]],92],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1162,[[193,[19]]]],0,[1138,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[1139,[[21,[490]]]],[1140,21],[1138,21],[1154,[[21,[92]]]],[1156,[[21,[92]]]],[1157,[[21,[92]]]],[1138,9],[[]],[[]],[[]],[[[193,[19]]],1163],[[[1142,[1141]]],[[21,[92]]]],[1139,[[21,[490]]]],[1140,21],[1138,[[21,[19]]]],[[[1144,[1141]]],[[21,[92]]]],[[[1145,[1141]]],[[21,[92]]]],[[[1146,[1141]]],[[21,[92]]]],[[[1147,[1141]]],[[21,[92]]]],[[[1148,[1141]]],[[21,[92]]]],[[[1149,[1141]]],[[21,[92]]]],[[[1150,[1141]]],21],[[[1151,[1141]]],21],[[[1152,[1141]]],[[21,[92]]]],[[[1153,[1141]]],[[21,[92]]]],[1154,[[21,[92]]]],[1155,[[21,[92]]]],[1156,[[21,[92]]]],[1157,[[21,[92]]]],[1158,[[21,[305]]]],[1159,[[21,[490]]]],[1160,[[21,[490]]]],[1161,[[21,[490]]]],[1163,[[21,[1162]]]],[[[1142,[1141]]],[[21,[92]]]],[1139,[[21,[490]]]],[1140,21],[1138,[[21,[19]]]],[[[1144,[1141]]],[[21,[92]]]],[[[1145,[1141]]],[[21,[92]]]],[[[1146,[1141]]],[[21,[92]]]],[[[1147,[1141]]],[[21,[92]]]],[[[1150,[1141]]],21],[[[1151,[1141]]],21],[[[1152,[1141]]],[[21,[92]]]],[[[1153,[1141]]],[[21,[92]]]],[1154,[[21,[92]]]],[1155,[[21,[92]]]],[1156,[[21,[92]]]],[1157,[[21,[92]]]],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],[[1138,9],21],[[1138,9],21],[1140,9],0,[[1139,501],21],[[1140,501],21],[[1138,501],21],[[1138,231],[[21,[9]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[[1142,[1141]]],[[21,[92]]]],[[[1144,[1141]]],[[21,[92]]]],[[[1145,[1141]]],[[21,[92]]]],[[[1146,[1141]]],[[21,[92]]]],[[[1147,[1141]]],[[21,[92]]]],[[[1148,[1141]]],[[21,[92]]]],[[[1149,[1141]]],[[21,[92]]]],[1156,[[21,[92]]]],[1157,[[21,[92]]]],[1154,1164],[[1138,231],21],[[1138,231],[[21,[9]]]],[1139],[1140],[1138],[1154],[1155],[1156],[1157],[1158],[1159],[1160],[1161],0,[[],863],[[],863],[[],863],[[],863],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1159,231],1093],[[1160,231],1093],[[1161,231],1093],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[1162,92],0,[1099,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1165,1165],[1166,1166],[1167,1167],[1168,1168],[1169,1169],[[[992,[[0,[322,231]]]]],[[992,[[0,[322,231]]]]]],[1170,1170],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[179,16],[[1165,1165],16],[1,16],[[],16],[[],16],[[],16],[[],16],0,0,[[1165,10],[[22,[382]]]],[[1166,10],[[22,[382]]]],[[1167,10],[[22,[382]]]],[[1168,10],[[22,[382]]]],[[1169,10],[[22,[382]]]],[[[992,[231]],10],[[22,[382]]]],[[1170,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],92],[1166,92],[1167,92],[1168,92],[1169,92],[[[992,[231]]],92],[1170,92],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92],[92,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[92,16],[92,16],0,0,[[],1165],[1166,1165],[1167,1165],[1168,1165],[1169,1165],[[[992,[231]]],1165],[1170,1165],[[],1165],[1166,1165],[1167,1165],[1168,1165],[1169,1165],[[[992,[231]]],1165],[1170,1165],[[],21],[1166,21],[1167,21],[1168,21],[1169,21],[[[992,[231]]],21],[1170,21],[[],21],[1166,21],[1167,21],[1168,21],[1169,21],[[[992,[231]]],21],[1170,21],[[],21],[1167,21],[1168,21],[1169,21],[[[992,[231]]],21],[[],21],[1167,21],[1168,21],[1169,21],[[[992,[231]]],21],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],0,[92,[[21,[92]]]],[92,[[21,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[107,92],107],[[107,92]],[[107,647]],[[],1],[[],1],[107,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[107,1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[107,[[193,[19]]]],[1171,[[193,[19]]]],[[],179],[107,92],[107,92],[107,107],[107,107],[107,[[103,[19,7]]]],[1172,92],[1172,[[193,[19]]]],[107,92],[107,[[193,[19]]]],[107,628],[107,917],[107,647],[107,647],[1172,92],[107,92],[107,92],[[]],[107,92],[107,92],[[]],[[]],[[]],[[]],[107,92],[[]],[[]],[[]],0,[107,9],[[],686],[107],[107],[107],[107,107],[1171,1171],[[107,107]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[107,[[8,[647,7]]]],[[107,107],183],[[],183],[[107,92]],[[],[[21,[92]]]],[[107,10],[[22,[382]]]],[[],107],[[107,[405,[9]]]],[9],[107,92],[9],[9],[9],[9],[9],[107,92],[9],[9],[1171,92],[1173,92],[105,[[22,[107]]]],[[]],[[]],[[]],[[]],[[107,[603,[9]]],1172],[9],[1172],[9],[9],[9],[179,16],[179,16],[186],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[107,9,501],[[22,[9,1174]]]],0,[[107,1175],16],[[107,1175],16],[[107,1176],16],[[107,92],16],[[107,1177],16],[[107,92],16],[[107,107],16],[[107,[629,[92]]],16],[[1171,1171],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],0,[[107,380]],[[107,380]],[[107,380]],[[107,380]],[[107,380]],[[107,380]],[[107,380]],[[107,[603,[9]]]],[[107,92]],[[107,490]],[[107,490]],[[107,107]],[[107,[629,[92]]]],[[107,9]],[[107,9]],[107,107],[107,107],[[1172,10],[[22,[382]]]],[[107,10],[[22,[382]]]],[[107,10],[[22,[382]]]],[[1171,10],[[22,[382]]]],[[1171,10],[[22,[382]]]],[[1173,10],[[22,[382]]]],[[1173,10],[[22,[382]]]],[[107,10],[[22,[382]]]],[[]],[217,107],[107,107],[490,107],[1178,107],[[]],[92,107],[[[8,[92,7]]],107],[92,107],[[[629,[92]]],107],[1178,107],[1179,107],[1175,107],[[]],[[]],[380,107],[380,107],[380,107],[380,107],[380,107],[380,107],[[19,9,9],107],[647,[[21,[107]]]],[[]],[[]],[[]],[[]],[92,[[22,[107]]]],[[]],[[]],[[]],[[]],[[[193,[305]]],[[22,[107,1173]]]],[[[193,[305]]],107],[[[103,[19,7]]],[[22,[107,1171]]]],[[[193,[19]]],[[629,[92]]]],[[[103,[19,7]]],107],[13],[12],[107,[[21,[810]]]],[[],811],[[107,186]],[[107,[405,[9]]],92],[[107,[1180,[9]]],92],[[107,[1137,[9]]],92],[[107,1098],92],[[107,[1181,[9]]],92],[[107,[1182,[9]]],92],[[107,[1181,[9]]],92],[[107,[1180,[9]]],92],[[107,[1137,[9]]],92],[[107,[405,[9]]],92],[[107,1098],92],[[107,[1182,[9]]],92],[[],9],[[],9],[[],9],[[],9],[[107,9,490]],[[107,9,92]],[[107,92,9],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[107,7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[107,[[8,[92,7]]]],[107,[[103,[19,7]]]],[1171,[[103,[19,7]]]],[107,[[1183,[928]]]],[[]],[107],[[[8,[107,7]]],[[8,[647,7]]]],[[]],[[]],[[]],[[]],[[107,92]],[[107,92],16],[107,16],[[],16],[[],16],[[],16],[[],16],[107,16],[[107,92],16],[[107,92],16],0,[1172,[[21,[490]]]],[107,92],[107,9],[[],[[21,[92]]]],[[107,[629,[92]]],16],[[107,92],16],[[107,92],16],[[],107],[1172,[[21,[490]]]],[1172,[[21,[490]]]],[[],844],[[],845],[[],844],[[],845],[107,[[21,[[629,[92]]]]]],[107,[[21,[[629,[92]]]]]],[[107,107],[[21,[183]]]],[[107,186]],[107,[[21,[490]]]],[[107,490]],[[107,92]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],[[107,1020,1021]],[[],[[21,[92]]]],[107,[[21,[188]]]],[[],[[21,[92]]]],[107,851],[[[8,[107,7]]],852],[[107,647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[107,854],[[],92],[[],[[21,[92]]]],[[],92],[[107,9],490],[[107,1141]],[[107,92]],[[107,931,107]],[[107,931,107]],[[107,[603,[9]],92]],[[107,9]],[[107,9]],[[107,231]],[[],20],[[107,172],22],[[107,[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[],92],[[107,9]],[107],[1172],[[107,[405,[9]]],107],[[107,9],107],0,[[],863],0,[[107,92],[[21,[92]]]],[[107,92],[[21,[92]]]],[107,107],[[]],[[]],[[]],[[]],[[]],[[]],[107,[[22,[[1184,[1024,7]],630]]]],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[107],[[107,9]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[107,9],[[22,[1044]]]],[[107,9],[[22,[1044]]]],[[],23],[[],23],[[],23],[[],23],[[],[[21,[92]]]],[[],810],[[],92],[107,92],[[],92],[[],868],[[],21],[[],21],[[],21],[[],21],[1171,1099],0,[[]],[[]],[[]],[[]],[9,107],[[107,490],[[22,[382]]]],[[107,92],[[22,[382]]]],0,0,0,0,[[[14,[922]]],922],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],179],[[[14,[937,7]]],938],[[[14,[653,922]]]],[[[1185,[653,922]]]],[[[14,[939,7]]],518],[[[14,[653,922]]],653],[[[14,[[193,[440]],322,922]]],[[14,[193,322,922]]]],[[[14,[440,322,922]]],[[14,[322,922]]]],[[[14,[653,922]]],653],[[]],[[]],[[]],[[]],[188,918],[[[14,[942,7]],943],944],[[[14,[[0,[862,653]],7]]],[[21,[862]]]],[[[14,[653,[0,[922,322]]]]],[[14,[653,[0,[922,322]]]]]],[[[1185,[653,[0,[922,322]]]]],[[1185,[653,[0,[922,322]]]]]],[[]],[[]],[[[14,[[0,[950,653]],7]],951],951],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[14,[[0,[543,653]],922]],[14,[[0,[543,653]],922]]],183],[[],183],[[[14,[1186,7]],92,[8,[1032,7]]],[[22,[[8,[1032,7]],988]]]],[[[753,[752]]],[[14,[[0,[919,653]],7]]]],[[[14,[[0,[950,653]],7]]],955],[[]],[922],[[],[[14,[364,7]]]],[[],[[1185,[7]]]],[[[14,[653,922]]],653],[9],[9],[9],[9],[[[14,[[0,[862,653]],7]]],92],[105,[[22,[[14,[653,7]]]]]],[105,[[22,[[1185,[[0,[214,653]],7]]]]]],[[[14,[1,[0,[922,322]]]]],[[22,[[14,[[0,[1,376,377]],[0,[922,322]]]],[14,[1,[0,[922,322]]]]]]]],[[]],[[]],[[[14,[[0,[950,653]],7]],23],21],[[[14,[1,[0,[922,322]]]]],[[14,[[0,[1,376,377]],[0,[922,322]]]]]],[[[14,[653,322,922]]],[[1185,[653,322,922]]]],[[[14,[653,922]]]],[9],[9],[[[1185,[653,922]]]],[[[14,[[0,[950,653]],7]],951]],[179,16],[186],[[[14,[[0,[961,653]],7]],962],16],[[[14,[942,7]],943,963],16],[[[14,[[0,[950,653]],7]],943],16],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[14,[[0,[950,653]],7]],951]],[[[14,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[14,[[0,[950,653]],7]],975]],[[[14,[[0,[950,653]],7]],975],16],[[[14,[[0,[950,653]],7]],951]],[[[14,[1187,7]]],[[22,[630]]]],[[[14,[[0,[961,653]],7]]]],[[[14,[653,922]],10],[[22,[382]]]],[[[14,[[0,[383,653]],922]],10],[[22,[382]]]],[[[14,[[0,[495,653]],922]],10],[[22,[382]]]],[[[1185,[653,7]],10],[[22,[382]]]],[651,[[14,[651,7]]]],[[[14,[92,7]]],[[14,[[193,[19]],7]]]],[[[629,[[0,[782,653]]]]],[[14,[[0,[782,653]],7]]]],[917,[[14,[917,7]]]],[[[103,[[0,[922,322]]]]],[[14,[193,[0,[922,322]]]]]],[921,[[14,[917,7]]]],[920,[[14,[628,7]]]],[628,[[14,[628,7]]]],[927,[[14,[651,7]]]],[107,[[14,[92,7]]]],[[],[[14,[7]]]],[781],[[]],[92,[[14,[92,7]]]],[[[8,[653,922]]],[[14,[653,922]]]],[[[193,[322]]],[[14,[[193,[322]],7]]]],[[]],[380,[[14,[193,7]]]],[[],[[14,[653,7]]]],[[],[[1185,[653,7]]]],[922,[[14,[653,922]]]],[922,[[1185,[653,922]]]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[[[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[14,[653,922]]],[[21,[653]]]],[[[14,[653,922]]],653],[[[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[14,[[0,[537,653]],922]],186]],[[]],[[322,922]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[14,[922]]],21],[[[14,[653,922]]]],[[[1185,[653,922]]]],[[]],[[]],[[],16],[[],16],[[[14,[1187,7]]],16],[[[14,[1187,7]]],16],[[[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[14,[[0,[752,653]],7]]],9],[[[14,[[0,[961,653]],7]],997]],[[[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],16],[[[14,[322,[0,[922,322]]]]],322],[[[14,[7]]]],[[[14,[942,7]]],[[21,[998]]]],[[[14,[[0,[950,653]],7]]],[[21,[998]]]],[[[14,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[379,[[0,[[379,[[0,[[379,[[0,[379,653]]]],653]]]],653]]]],653]],922]]],16],[[],[[14,[7]]]],[[],[[1185,[7]]]],[501,[[14,[7]]]],[922,[[14,[922]]]],[922,[[1185,[922]]]],[[[14,[[0,[950,653]],7]],999],951],[[],[[14,[440,7]]]],[922,[[14,[440,922]]]],[9,[[14,[[193,[440]],7]]]],[[9,922],[[14,[[193,[440]],922]]]],[[],[[14,[440,7]]]],[922,[[14,[440,922]]]],[9,[[14,[[193,[440]],7]]]],[[9,922],[[14,[[193,[440]],922]]]],[[[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]],[14,[[0,[[416,[[0,[[416,[[0,[[416,[[0,[416,653]]]],653]]]],653]]]],653]],922]]],[[21,[183]]]],0,[[],[[769,[[14,[7]]]]]],[922,[[769,[[14,[922]]]]]],[[[14,[[0,[862,653]],7]],1188]],0,0,[[[14,[653,922]],[14,[653,922]]],16],[[[1185,[653,922]],[1185,[653,922]]],16],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[19,188],[[[14,[1187,7]],[193,[19]]],[[22,[9,630]]]],[[[14,[[0,[752,653]],7]],9],[[85,[19]]]],[[[14,[1187,7]],1017],[[22,[630]]]],[[[14,[1187,7]],[103,[19,7]]],[[22,[9,630]]]],[[[14,[1187,7]],107],[[22,[9,630]]]],[[[14,[1187,7]],[193,[1013]]],[[22,[9,630]]]],[[[14,[[0,[950,653]],7]],951,1005]],[[[14,[[0,[950,653]],7]],951,951]],[[[14,[[0,[950,653]],7]],943],944],[[[14,[1187,7]],1015],[[22,[188,630]]]],[[[14,[[0,[932,653]],7]],172],22],[[[1185,[[0,[932,653]],7]],172],22],[[[14,[[0,[933,653]],7]]],918],[[[14,[[0,[862,653]],7]]],[[21,[862]]]],[[[14,[653,922]]],9],[[[1185,[653,922]]],9],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[[14,[[0,[950,653]],7]],951],16],[[],22],[[[14,[193,[0,[922,322]]]]],[[22,[[14,[85,[0,[922,322]]]]]]]],[[],22],[[],22],[[],22],[[],[[22,[[14,[7]],915]]]],[922,[[22,[[14,[922]],915]]]],[[],[[22,[[14,[440,7]],915]]]],[922,[[22,[[14,[440,922]],915]]]],[[],[[22,[[14,[440,7]],915]]]],[922,[[22,[[14,[440,922]],915]]]],[[],[[22,[[769,[[14,[7]]]],915]]]],[922,[[22,[[769,[[14,[922]]]],915]]]],[[[14,[922]]],[[22,[[14,[922]]]]]],[[],23],[[],23],[[[14,[322,[0,[922,322]]]]],322],[[],21],[[],21],[[[1185,[653,322,922]]],[[21,[[14,[653,322,922]]]]]],[[]],[[]],[[[14,[653,922]]],9],[[[1185,[653,922]]],9],[[[14,[1187,7]],[193,[19]]],[[22,[9,630]]]],[[[14,[[0,[934,653]],7]],[875,[874]]]],[[[14,[1187,7]],[193,[1016]]],[[22,[9,630]]]],0,[[[14,[7]]]],[[[14,[7]]]],0,0,0,0,0,[[[1184,[922]],9],[[22,[754]]]],[[[1184,[922]],9],[[22,[754]]]],0,[[[1189,[922]]],922],[[[1184,[922]]],922],[[[103,[922]]],922],[[[1190,[231,922]]],922],[[[103,[922]],[103,[922]]]],[[[103,[[0,[916,646]],7]],647]],[[],1],[[],1],[[],1],[[],1],[[],1],[[[103,[[0,[916,646]],7]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[103,[[0,[916,646]],7]]],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[[],[[448,[447]]]],[[],179],[[[103,[922]]],[[103,[922]]]],[[[103,[922]]],193],[[],[[448,[447]]]],[[],440],[[[103,[922]]]],[[[1184,[922]]],193],[[[103,[922]]],193],[[[103,[922]]]],[[[1189,[922]]],193],[[[1184,[922]]],193],[[[103,[922]]],[[103,[922]]]],[[[103,[922]]],193],[[[103,[[0,[916,646]],7]]],647],[[[103,[[0,[916,646]],7]]],647],[[[103,[1191,7]]],[[21,[[193,[19]]]]]],[[[1189,[922]]],193],[[[1184,[922]]],193],[[[103,[922]]],193],[[[103,[7]]],16],[[[103,[7]],[103,[7]]],[[103,[7]]]],[[[103,[7]],[103,[7]]],[[103,[7]]]],[[[103,[7]]],16],[[[103,[7]],9,16],[[103,[7]]]],[[[103,[7]]],9],[[[103,[7]],[103,[7]]],16],[[[103,[7]],[103,[7]]],16],[[[103,[7]],9],[[103,[7]]]],[[[103,[7]],16],[[103,[7]]]],[[[103,[7]]],9],[[[103,[7]],[103,[7]],[103,[7]]],[[103,[7]]]],[[[103,[7]]],16],[[[103,[7]]],[[103,[7]]]],[[[103,[7]],[103,[7]]],[[103,[7]]]],[[[103,[7]],9],[[103,[7]]]],[[[103,[7]],9],[[103,[7]]]],[[[103,[7]],[103,[7]]],16],[[[103,[7]],[103,[7]]],16],[[[103,[7]],9],16],[[[103,[7]],[103,[7]]],[[103,[7]]]],[[]],[[]],[[[103,[19,7]]],[[193,[19]]]],[[[103,[922]]],193],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[922]]],193],[[]],[[]],0,0,[188,918],0,[[[103,[922]]],9],[[[103,[19,7]]],9],[[],686],[[],686],[[],686],[[],686],[[[103,[7]]]],[[[103,[922]]]],[[[1184,[322,[0,[922,322]]]]],[[1184,[322,[0,[922,322]]]]]],[[[103,[322,[0,[922,322]]]]],[[103,[322,[0,[922,322]]]]]],[[[103,[322,[0,[922,322]]]],[103,[322,[0,[922,322]]]]]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[103,[[0,[916,646]],7]]],[[8,[647,7]]]],[[[103,[543,922]],[103,[543,922]]],183],[[],183],[[[1184,[922]]],9],[[],[[21,[92]]]],[[[753,[752]]],[[103,[919,7]]]],[[[103,[19,7]],9,501],[[22,[9,1192]]]],[[[103,[[379,[[379,[[379,[379]]]]]],922]]]],[[[103,[922]],231]],[[[103,[922]],231]],[[],[[1184,[[0,[922,364]]]]]],[[],[[103,[7]]]],0,[9],[9],[9],[[[103,[922]]],193],[9],[9],[9],[9],[9],[[[103,[922]]],193],[9],[9],[105,[[22,[[103,[214,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[[8,[[103,[[0,[916,646]],7]],7]]],[[103,[[8,[647,7]],7]]]],[[[103,[922]],[603,[9]]],[[1189,[922]]]],0,[[[1189,[922]]]],[9],[9],[[[1184,[922]]]],[[[103,[922]]]],[9],[9],[[[1190,[231,922]]]],[9],[[[1193,[301,922]]]],[179,16],[186],[[[103,[[964,[950]],7]],943,[963,[950]]],16],[[[103,[[0,[1194,1195,383]],7]],[103,[19,7]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[103,[19,7]],9,501],[[22,[9,1174]]]],0,[[[103,[379,922]],85],16],[[[103,[379,922]],193],16],[[[103,[379,922]],193],16],[[[103,[379,922]],193],16],[[[103,[379,922]],85],16],[[[103,[379,922]],[103,[922]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[[103,[[964,[950]],7]],975,[963,[950]]],16],[[[103,[922]],380]],[[[103,[365,922]],380]],[[[103,[322,922]],[193,[322]]]],[[[103,[322,922]],[603,[9]]]],[[[103,[922]]]],[[[103,[365,922]],365]],[[[103,[922]],9]],[[[103,[365,922]],9]],[[[103,[922]],231],[[1190,[231,922]]]],[[[103,[19,922]]],[[22,[630]]]],[[[1189,[383,922]],10],[[22,[382]]]],[[[1184,[383,922]],10],[[22,[382]]]],[[[103,[383,922]],10],[[22,[382]]]],[[[1190,[383,[0,[383,231]],[0,[383,922]]]],10],[[22,[382]]]],[[[1193,[[0,[383,301]],[0,[383,922]]]],10],[[22,[382]]]],[231],[231],[231],[[]],[[]],[[[1039,[922]]],[[103,[922]]]],[[[1040,[922]]],[[103,[922]]]],[[[193,[322]]],[[103,[322,7]]]],[[[193,[322]]],[[103,[322,7]]]],[85,[[103,[7]]]],[[[1196,[981,447]]],[[103,[981,7]]]],[[]],[92,[[103,[19,7]]]],[[[629,[193]]],[[103,[7]]]],[[[369,[417,417]]],[[103,[7]]]],[927,[[103,[19,7]]]],[[[8,[193,922]]],[[103,[922]]]],[107,[[103,[19,7]]]],[1197,[[103,[1198,7]]]],[[]],[[]],[[[631,[[193,[19]]]]],[[22,[[103,[19,7]]]]]],[[],[[103,[440,7]]]],[380,[[103,[7]]]],[[9,9],[[103,[7]]]],[[9,9,922],[[103,[922]]]],[647,[[21,[[103,[[0,[916,646]],7]]]]]],[[]],[[]],[[]],[[]],[[]],[[[193,[[193,[19]]]]],[[103,[1191,7]]]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[[[103,[[0,[916,646]],7]],9],[[21,[647]]]],[[[103,[1199,7]]],[[193,[1199]]]],[[[103,[[0,[916,646]],7]],9],[[21,[647]]]],[[[103,[[0,[916,646]],7]]],[[21,[810]]]],[[],811],[[[103,[537,922]],186]],0,[[[103,[7]],1200]],[[[103,[7]],1201]],[[[103,[922]],[816,[193]]]],[[[103,[7]],1202]],[[[103,[7]],1203]],[[[103,[7]],1204]],[[[103,[7]],1205]],[[[103,[7]],1201]],[[[103,[7]],1202]],[[[103,[7]],1203]],[[[103,[7]],1200]],[[[103,[922]],[816,[193]]]],[[[103,[7]],1205]],[[[103,[7]],1204]],[[[103,[7]],9,9]],[[],9],[[],9],[[],9],[[],9],[[],9],[[[103,[922]],9]],[[[103,[[0,[916,646]],7]],9,[8,[647,7]]]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[[103,[[0,[916,646]],7]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[103,[922]]],[[8,[193,922]]]],[[[103,[[1060,[928]],7]]]],[[[103,[85,922]]],[[103,[922]]]],[[[103,[440,7]]]],[[]],[[]],[[[103,[922]]]],[[[103,[922]]]],[[[103,[922]]]],[[]],[[]],[[[103,[922]]]],[[[103,[922]]]],[[[8,[[103,[[0,[916,646]],7]],7]]],[[8,[647,7]]]],[[]],[[]],[[]],[[]],[[]],[[[1189,[922]]],16],[[[1184,[922]]],16],[[[103,[922]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[103,[19,922]]],16],[[[103,[[0,[916,646]],7]]],824],0,[[[1189,[922]]]],[[[103,[922]]],193],[[[103,[[0,[916,646]],7]]],9],[[[103,[922]]],9],[[[103,[7]]],9],[[],9],[[[103,[19,7]]],9],0,[[[103,[7]]],9],[[],[[21,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[379,922]],193],16],[[[103,[379,922]],85],16],[[[103,[379,922]],[103,[922]]],16],[[[103,[379,922]],193],16],[[[103,[379,922]],193],16],[[[103,[379,922]],85],16],[[],[[103,[7]]]],[922,[[103,[922]]]],[[[1189,[922]]],21],[[[1184,[922]]],21],[[[1190,[231,922]]],21],[[[1193,[301,922]]],21],[[[1189,[922]]],21],[[[1184,[922]]],21],[[[1193,[301,922]]],21],[[[1184,[922]]],[[22,[85,1092]]]],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],[[],844],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],845],[[[103,[19,7]]],[[21,[[629,[[193,[19]]]]]]]],[[[103,[19,7]]],[[21,[[629,[[193,[19]]]]]]]],0,[[[103,[[964,[950]],7]],951,[963,[950]]]],[[[103,[[964,[950]],7]],951,[963,[950]]]],[[[103,[[964,[950]],7]],975,[963,[950]]]],[[[103,[[964,[950]],7]],951,[963,[950]]]],[[[103,[[964,[950]],7]],951,951,[963,[950]]]],[[[103,[[964,[950]],7]],950]],[[[103,[[964,[950]],7]],999,951,[963,[950]]]],[[[103,[[964,[950]],7]],951,1005,[963,[950]]]],[[[103,[[416,[[416,[[416,[416]]]]]],922]],[103,[[416,[[416,[[416,[416]]]]]],922]]],[[21,[183]]]],0,[[[103,[19,7]],186]],[[[769,[[103,[19,7]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[103,[19,7]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[103,[19,7]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[103,[19,7]]]],1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],[[[103,[922]]],21],[[[103,[[0,[916,646]],7]]],[[21,[[8,[647,7]]]]]],0,0,[[[103,[922]]]],[[[103,[[0,[916,646]],7]],[8,[647,7]]]],[[[103,[922]]],22],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[1206,[[22,[[103,[[0,[1194,1195,383]],7]],1207]]]],[[[103,[19,7]],9],[[85,[19]]]],[[[103,[[0,[919,1018]],7]],[753,[752]]]],[[],[[21,[92]]]],[[[103,[[0,[916,646]],7]]],[[21,[188]]]],[[],[[21,[92]]]],[[[103,[[0,[916,646]],7]]],851],[[[8,[[103,[[0,[916,646]],7]],7]]],852],[[[103,[[0,[916,646]],7]],647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[[[103,[[0,[916,646]],7]]],854],[[],92],[[],[[21,[92]]]],[[],92],[[[103,[[964,[950]],7]],943],944],[[[103,[922]],9]],[[[103,[[0,[916,646]],7]],9],[[8,[647,7]]]],[[[103,[19,7]],930,[103,[19,7]]]],[[[103,[19,7]],930,[103,[19,7]]]],0,[[[103,[922]],9]],[[[103,[922]],9]],[[[103,[322,922]],9,322]],[[[103,[922]],9,231]],[[[103,[922]],231]],[[[103,[922]],231]],[[[103,[932,7]],172],22],[[[103,[[0,[916,646]],7]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[[103,[922]],9]],[[],92],[[[103,[922]],9]],[[[103,[922]]]],[[[103,[[0,[933,1085]],7]]],918],[[],9],[[[1189,[922]]]],[[[1184,[922]]]],[[],9],[[[1190,[231,922]]]],[[[1193,[301,922]]]],[[],9],[[[103,[922]]],[[193,[440]]]],[[[103,[922]],[603,[9]],380],[[1193,[922]]]],[[[103,[922]]]],[[[103,[322,922]],9],[[103,[322,922]]]],[[],863],[[],863],[[],863],[[],863],[[[103,[922]],9]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[103,[1191,7]]],[[103,[[193,[19]],7]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[[103,[922]],9]],[[[103,[7]],9]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[[103,[19,7]],9],[[22,[1034]]]],[[],22],[[],22],[1208,[[22,[[103,[84,7]]]]]],[1208,[[22,[[103,[[85,[378]],7]]]]]],[[],22],[1208,[[22,[[103,[[85,[518]],7]]]]]],[1208,[[22,[[103,[[85,[89]],7]]]]]],[1208,[[22,[[103,[[85,[89]],7]]]]]],[1208,[[22,[[103,[[85,[84]],7]]]]]],[1208,[[22,[[103,[522,7]]]]]],[1208,[[22,[[103,[[85,[305]],7]]]]]],[1208,[[22,[[103,[88,7]]]]]],[1208,[[22,[[103,[511,7]]]]]],[1208,[[22,[[103,[91,7]]]]]],[1208,[[22,[[103,[525,7]]]]]],[1208,[[22,[[103,[519,7]]]]]],[1208,[[22,[[103,[187,7]]]]]],[1208,[[22,[[103,[[85,[89]],7]]]]]],[1208,[[22,[[103,[[85,[19]],7]]]]]],[1208,[[22,[[103,[[85,[518]],7]]]]]],[1208,[[22,[[103,[[85,[378]],7]]]]]],[1208,[[22,[[103,[[85,[305]],7]]]]]],[1208,[[22,[[103,[518,7]]]]]],[1208,[[22,[[103,[[85,[19]],7]]]]]],[1208,[[22,[[103,[74,7]]]]]],[1208,[[22,[[103,[[85,[84]],7]]]]]],[1208,[[22,[[103,[[85,[375]],7]]]]]],[1208,[[22,[[103,[[85,[518]],7]]]]]],[1208,[[22,[[103,[517,7]]]]]],[1208,[[22,[[103,[521,7]]]]]],[1208,[[22,[[103,[[85,[84]],7]]]]]],[1208,[[22,[[103,[89,7]]]]]],[1208,[[22,[[103,[[85,[375]],7]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[103,[922]],9],[[22,[1044]]]],[[[103,[922]],9],[[22,[1044]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],[[21,[92]]]],[[],810],[[],92],[[[103,[[0,[916,646]],7]]],92],[[],92],[[],868],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[[]],[9,[[103,[7]]]],[[9,922],[[103,[922]]]],[[[103,[19,7]],9,[85,[19]]]],[[[103,[19,922]],[193,[19]]],[[22,[9,630]]]],[[[103,[19,922]],[193,[19]]],[[22,[630]]]],[[[103,[934,7]],[875,[874]]]],[[[103,[19,922]],[193,[1016]]],[[22,[9,630]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[953,231],[[1209,[953,231]]]],[[953,231],[[1210,[953,231]]]],[[[0,[653,376]]],[[769,[[8,[768,7]]]]]],[[[0,[376,653]]],[[769,[[8,[1010,7]]]]]],[653,[[769,[[8,[768,7]]]]]],[653,[[769,[[8,[1010,7]]]]]],[[[0,[653,376]]],[[769,[[8,[1012,7]]]]]],[[[0,[653,376]]],[[769,[[8,[1009,7]]]]]],[653,[[1211,[653]]]],[[[0,[653,1212]]],[[1213,[[0,[653,1212]]]]]],[[653,1010],[[1214,[653,1010]]]],[[653,1012],[[1215,[653,1012]]]],[[[0,[1010,653]]],[[1216,[[0,[1010,653]]]]]],[953,[[1217,[953]]]],[653,[[1218,[653,[0,[364,492]]]]]],[[769,9]],[[953,9]],[[[0,[1010,653]]],[[1219,[[0,[1010,653]]]]]],[653,[[1220,[653]]]],[[[0,[322,653]]],[[1221,[[0,[322,653]]]]]],[653,[[1222,[653]]]],[953,[[1223,[953]]]],[[653,231],[[1224,[653,231]]]],[[653,231],[[1225,[653,231]]]],[[953,231],[[1226,[953,231]]]],[[953,231],[[1227,[953,231]]]],[[653,231],[[1228,[653,1010,231]]]],[653,[[1229,[653]]]],[953,[[1230,[953]]]],[[653,231],[[1231,[653,231]]]],[[653,231],[[1232,[653,231]]]],[653,[[1233,[653]]]],0,[[653,231],[[1234,[653,231]]]],0,[653,[[1235,[653]]]],[[[0,[953,653]]],[[1236,[[0,[953,653]]]]]],[[653,231],[[1237,[653,231]]]],[953,[[1238,[953]]]],[[953,9],[[1239,[953]]]],[[653,768],[[1240,[653,768]]]],[[653,1010],[[1241,[653,1010]]]],[[653,231],[[1242,[653,231,[0,[364,492]]]]]],0,[[769,1007],1008],[[953,1007],1008],[[769,1007],[[1008,[[22,[630]]]]]],[[769,1007],[[1008,[[22,[[193,[19]],630]]]]]],[[769,1007],[[1008,[[22,[630]]]]]],[[769,1007],[[1008,[21]]]],[[953,1007],[[1008,[21]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[769,1007,1015],[[1008,[[22,[188,630]]]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],[[953,231],[[1243,[953,231]]]],0,[[653,768],[[1244,[653,768]]]],[[653,1010],[[1245,[653,1010]]]],[[953,[193,[19]]],[[1246,[953]]]],[[953,[193,[19]]],[[1247,[953]]]],[[953,107],[[1248,[953]]]],[[953,[103,[19,7]]],[[1249,[953]]]],[[953,107],[[1250,[953]]]],[[953,19,[103,[19,7]]],[[1251,[953]]]],[[953,[193,[1013]]],[[1252,[953]]]],0,[[653,231],[[1253,[653,231]]]],[[953,1015],[[1254,[953]]]],[[]],[[653,9],[[1255,[653]]]],[[653,231],[[1256,[653,231]]]],[[653,19],[[1257,[653]]]],[[653,9],[[1258,[653]]]],0,[[653,9],[[1259,[653]]]],[[653,188],[[1260,[653]]]],[[653,231],[[1261,[653,231]]]],[[653,231],[[1262,[653,231,768]]]],[[[0,[1010,653]]],[[1263,[[0,[1010,653]],[0,[364,492]]]]]],[[[0,[1010,953,653]],231],[[1264,[[0,[1010,953,653]],231]]]],[[953,231],[[1265,[953,231]]]],[[[0,[1010,953]]],[[1266,[[0,[1010,953]]]]]],[[[0,[1010,653]]],[[1267,[[0,[1010,653]],[0,[364,492]],[0,[364,492]]]]]],[[953,[193,[19]]],[[1268,[953]]]],[[953,[193,[19]]],[[1269,[953]]]],[[953,[193,[1016]]],[[1270,[953]]]],[[653,1010],[[1271,[653,1010]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[768],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[653,376]]],[[769,[[8,[768,7]]]]]],[653,[[769,[[8,[768,7]]]]]],[[[0,[653,1212]]],[[1213,[[0,[653,1212]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,[[1272,10],[[22,[382]]]],[[1273,10],[[22,[382]]]],[[1274,10],[[22,[382]]]],[[[1275,[383]],10],[[22,[382]]]],[[1276,10],[[22,[382]]]],[[[1277,[[0,[383,768]],[0,[383,768]]]],10],[[22,[382]]]],[[[1278,[[0,[383,768]],[0,[383,768]]]],10],[[22,[382]]]],[[[1240,[383,383]],10],[[22,[382]]]],[[[1244,[383,383]],10],[[22,[382]]]],[[[1213,[383]],10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[768,768],[[1240,[768,768]]]],[[653,768],[[1240,[653,768]]]],0,0,0,0,[[],1272],[[769,1007],1008],[[[769,[1272]],1007],1008],[[953,1007],1008],[[[769,[[1273,[768]]]],1007],1008],[[[769,[[1274,[231]]]],1007],1008],[[[769,[1275]],1007],1008],[[[769,[1276]],1007],1008],[[[769,[[1277,[768,768]]]],1007],1008],[[[769,[[1278,[768,768]]]],1007],1008],[[[769,[[1240,[768,768]]]],1007],1008],[[[769,[[1244,[768,768]]]],1007],1008],[[[769,[[1213,[[0,[768,1212]]]]]],1007],1008],[231,[[1274,[231]]]],[768,[[1273,[768]]]],[[768,768],[[1244,[768,768]]]],[[653,768],[[1244,[653,768]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],1275],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[768,768],[[1278,[768,768]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1276],[[768,768],[[1277,[768,768]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[],179],[[],179],[1279],[[],[[448,[447]]]],[1279],[[]],[[]],[[]],[1279],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1279],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[653,376]]],[[769,[[8,[1012,7]]]]]],[[[0,[653,376]]],[[769,[[8,[1009,7]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,[1280,[[193,[19]]]],[[[1281,[1009]]],[[193,[19]]]],0,0,0,0,[653,[[1211,[653]]]],0,0,0,0,[630,[[21,[862]]]],[[653,1012],[[1215,[653,1012]]]],[[[1282,[322]]],[[1282,[322]]]],[[[1283,[322]]],[[1283,[322]]]],[1284,1284],[1015,1015],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[953,[[1217,[953]]]],[[[1279,[[0,[1009,953]]]]],[[22,[630]]]],[[[1282,[543]],[1282,[543]]],183],[[1284,1284],183],[[],183],[[],183],[[769,9]],[[[769,[1285]],9]],[[953,9]],[[[1286,[[0,[952,953]]]],9]],[[[769,[[1280,[1012]]]],9]],[[[769,[[1283,[[0,[[631,[[193,[19]]]],953]]]]]],9]],[[[769,[[1260,[952]]]],9]],[[[769,[[1215,[952,952]]]],9]],0,[[[0,[1012,953]],[0,[1009,953]]],768],[[],[[1283,[364]]]],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[630,92],0,[[]],[[]],[630,[[22,[[8,[[0,[862,376,377]],7]],630]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],[179,16],[186],[186],[[],1285],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[1282,[[379,[[379,[[379,[379]]]]]]]],[1282,[[379,[[379,[[379,[379]]]]]]]]],16],[[1284,1284],16],[[1015,1015],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[953,[[1223,[953]]]],[[[1286,[[0,[952,953]]]]],[[22,[[193,[19]],630]]]],0,[953,[[1230,[953]]]],[[[1279,[[0,[1009,953]]]]],[[22,[630]]]],[[[1286,[[0,[1009,953]]]]],[[22,[630]]]],[[1285,10],[[22,[382]]]],[[630,10],[[22,[382]]]],[[630,10],[[22,[382]]]],[[[1282,[383]],10],[[22,[382]]]],[[[1279,[383]],10],[[22,[382]]]],[[[1286,[383]],10],[[22,[382]]]],[[[1280,[383]],10],[[22,[382]]]],[[[1281,[383]],10],[[22,[382]]]],[[[1283,[383]],10],[[22,[382]]]],[[1287,10],[[22,[382]]]],[[1288,10],[[22,[382]]]],[[[1223,[[0,[383,653]]]],10],[[22,[382]]]],[[[1251,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1248,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1236,[383]],10],[[22,[382]]]],[[[1257,[383]],10],[[22,[382]]]],[[[1246,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1252,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1249,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1250,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1247,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1260,[383]],10],[[22,[382]]]],[[[1211,[383]],10],[[22,[382]]]],[[[1215,[383,383]],10],[[22,[382]]]],[[[1254,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1268,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1270,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1269,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1230,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1217,[[0,[383,953,653]]]],10],[[22,[382]]]],[[[1289,[383]],10],[[22,[382]]]],[[[1290,[383]],10],[[22,[382]]]],[[1284,10],[[22,[382]]]],[[1284,10],[[22,[382]]]],[[1015,10],[[22,[382]]]],[[]],[1291,630],[1292,630],[1293,630],[1294,630],[1095,630],[[]],[1295,630],[1296,630],[1297,630],[1298,630],[1299,630],[1284,630],[1035,630],[1300,630],[1301,630],[1036,630],[1302,630],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[518,630],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[630,[[21,[862]]]],[1282],[1286],[1280],[[[1281,[1009]]],1009],[1283],[1260],[1215],[630,[[21,[862]]]],[1282],[1286],[1280],[[[1281,[1009]]],1009],[1283],[1260],[1215],[[[1282,[537]],186]],[[1284,186]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[630,[[21,[[8,[862,7]]]]]],[1282],[1286],[1280],[[[1281,[1009]]],1009],[1283],[1260],[1215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[630,1284],[[],630],[1260,188],0,[[[0,[953,653]]],[[1236,[[0,[953,653]]]]]],[[1284,[389,[[8,[862,7]]]]],630],[[],1282],[1007,1279],[[],1286],[1012,[[1280,[1012]]]],[1009,[[1281,[1009]]]],[[],1283],[[[389,[[8,[862,7]]]]],630],[[[1282,[[416,[[416,[[416,[416]]]]]]]],[1282,[[416,[[416,[[416,[416]]]]]]]]],[[21,[183]]]],[[1284,1284],[[21,[183]]]],[[[769,[[1223,[[0,[952,953,653]]]]]],1007],1008],[[[769,[[1251,[[0,[952,953,653]]]]]],1007],1008],[[[769,[[1248,[[0,[952,953,653]]]]]],1007],1008],[[[769,[[1246,[[0,[1012,953,653]]]]]],1007],1008],[[[769,[[1252,[[0,[1012,953,653]]]]]],1007],1008],[[[769,[[1249,[[0,[1012,953,653]]]]]],1007],1008],[[[769,[[1250,[[0,[1012,953,653]]]]]],1007],1008],[[[769,[[1247,[[0,[1012,953,653]]]]]],1007],1008],[[[769,[[1254,[[0,[1014,953,653]]]]]],1007],1008],[[[769,[[1268,[[0,[1009,953,653]]]]]],1007],1008],[[[769,[[1270,[[0,[1009,953,653]]]]]],1007],1008],[[[769,[[1269,[[0,[1009,953,653]]]]]],1007],1008],[[[769,[[1230,[[0,[1009,953,653]]]]]],1007],1008],[[[769,[[1217,[[0,[1009,953,653]]]]]],1007],1008],[[769,1007],[[1008,[[22,[630]]]]]],[[[769,[[1282,[980]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1280,[1009]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1281,[1009]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[193,[19]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[1288]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1290,[[0,[1009,953]]]]]],1007],[[1008,[[22,[630]]]]]],[[769,1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[1285]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[[1280,[1012]]]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[[1283,[[0,[[631,[[193,[19]]]],953]]]]]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[[1260,[952]]]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[[769,[[1215,[952,952]]]],1007],[[1008,[[22,[[193,[19]],630]]]]]],[[769,1007],[[1008,[[22,[630]]]]]],[[[769,[[1282,[980]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1280,[1009]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1281,[1009]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1283,[[193,[19]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[1288]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1290,[[0,[1009,953]]]]]],1007],[[1008,[[22,[630]]]]]],[[[769,[[1236,[952]]]],1007],[[1008,[21]]]],[[[769,[[1257,[952]]]],1007],[[1008,[21]]]],[[[769,[[1211,[[0,[1012,953]]]]]],1007],[[1008,[21]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[1285]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1282,[993]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1280,[1012]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[0,[[631,[[193,[19]]]],953]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[1287]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1260,[1012]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1211,[1012]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1215,[1012,1012]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1289,[[0,[1012,953]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1282,[993]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1280,[1012]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[0,[[631,[[193,[19]]]],953]]]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1211,[1012]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1215,[1012,1012]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1289,[[0,[1012,953]]]]]],1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[769,1007,1015],[[1008,[[22,[188,630]]]]]],[[[769,[[1282,[1029]]]],1007,1015],[[1008,[[22,[188,630]]]]]],[[[769,[[1280,[1014]]]],1007,1015],[[1008,[[22,[188,630]]]]]],[[[769,[[1281,[[0,[1009,1014]]]]]],1007,1015],[[1008,[[22,[188,630]]]]]],[[[769,[[1283,[[0,[[631,[[193,[19]]]],953]]]]]],1007,1015],[[1008,[[22,[188,630]]]]]],[[[1279,[953]],501],[[22,[630]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1282,[980]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1280,[1009]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1281,[1009]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[193,[19]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[103,[19,7]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[1288]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1290,[[0,[1009,953]]]]]],1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1282,[980]]]],1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],[[[769,[[1283,[[193,[19]]]]]],1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],0,0,[1283,188],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[630,[[21,[518]]]],[[953,[193,[19]]],[[1246,[953]]]],[[[1279,[[0,[1012,953]]]],[193,[19]]],[[22,[9,630]]]],[[[1286,[[0,[1012,953]]]],[193,[19]]],[[22,[9,630]]]],0,0,0,0,[[953,[193,[19]]],[[1247,[953]]]],[[953,107],[[1248,[953]]]],[[953,[103,[19,7]]],[[1249,[953]]]],[[953,107],[[1250,[953]]]],[[953,19,[103,[19,7]]],[[1251,[953]]]],[[953,[193,[1013]]],[[1252,[953]]]],[[[1279,[[0,[1012,953]]]],[193,[1013]]],[[22,[9,630]]]],0,0,0,0,0,0,0,0,0,0,[19,1287],0,0,[[953,1015],[[1254,[953]]]],[[[1279,[[0,[1014,953]]]],1015],[[22,[188,630]]]],[[[1286,[[0,[1014,953]]]],1015],[[22,[188,630]]]],0,[[1260,188]],[[1283,188]],[[],1288],[630,[[21,[862]]]],[[[0,[1012,1009,953]]]],[[653,19],[[1257,[653]]]],0,0,[[653,188],[[1260,[653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],[[22,[[448,[447]],553]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,1012],[[1280,[1012]]]],[[9,1009],[[1281,[1009]]]],[[953,[193,[19]]],[[1268,[953]]]],[[[1279,[[0,[1009,953]]]],[193,[19]]],[[22,[9,630]]]],[[[1286,[[0,[1009,953]]]],[193,[19]]],[[22,[9,630]]]],[[953,[193,[19]]],[[1269,[953]]]],[[953,[193,[1016]]],[[1270,[953]]]],[[[1279,[[0,[1009,953]]]],[193,[1016]]],[[22,[9,630]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[953,231],[[1209,[953,231]]]],[[953,231],[[1210,[953,231]]]],[[[0,[653,376]]],[[769,[[8,[768,7]]]]]],[[[0,[376,653]]],[[769,[[8,[1010,7]]]]]],[653,[[769,[[8,[768,7]]]]]],[653,[[769,[[8,[1010,7]]]]]],[[[0,[653,376]]],[[769,[[8,[1012,7]]]]]],[[[0,[653,376]]],[[769,[[8,[1009,7]]]]]],[653,[[1211,[653]]]],[[[0,[653,1212]]],[[1213,[[0,[653,1212]]]]]],[[653,1010],[[1214,[653,1010]]]],[[653,1012],[[1215,[653,1012]]]],[[[0,[1010,653]]],[[1216,[[0,[1010,653]]]]]],[953,[[1217,[953]]]],[653,[[1218,[653,[0,[364,492]]]]]],[[769,9]],[[953,9]],[[[0,[1010,653]]],[[1219,[[0,[1010,653]]]]]],[653,[[1220,[653]]]],[[[0,[322,653]]],[[1221,[[0,[322,653]]]]]],[653,[[1222,[653]]]],[953,[[1223,[953]]]],[[653,231],[[1224,[653,231]]]],[[653,231],[[1225,[653,231]]]],[[953,231],[[1226,[953,231]]]],[[953,231],[[1227,[953,231]]]],[[653,231],[[1228,[653,1010,231]]]],[653,[[1229,[653]]]],[953,[[1230,[953]]]],[[653,231],[[1231,[653,231]]]],[[653,231],[[1232,[653,231]]]],[653,[[1233,[653]]]],[[653,231],[[1234,[653,231]]]],[653,[[1235,[653]]]],[[[0,[953,653]]],[[1236,[[0,[953,653]]]]]],[[653,231],[[1237,[653,231]]]],[953,[[1238,[953]]]],[[953,9],[[1239,[953]]]],[[653,768],[[1240,[653,768]]]],[[653,1010],[[1241,[653,1010]]]],[[653,231],[[1242,[653,231,[0,[364,492]]]]]],[[769,1007],1008],[[953,1007],1008],[[769,1007],[[1008,[[22,[630]]]]]],[[769,1007],[[1008,[[22,[[193,[19]],630]]]]]],[[769,1007],[[1008,[[22,[630]]]]]],[[769,1007],[[1008,[21]]]],[[953,1007],[[1008,[21]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1013]]],[[1008,[[22,[9,630]]]]]],[[769,1007,1015],[[1008,[[22,[188,630]]]]]],[[769,1007,[193,[19]]],[[1008,[[22,[9,630]]]]]],[[769,1007,[193,[1016]]],[[1008,[[22,[9,630]]]]]],[[953,231],[[1243,[953,231]]]],[[653,768],[[1244,[653,768]]]],[[653,1010],[[1245,[653,1010]]]],[[953,[193,[19]]],[[1246,[953]]]],[[953,[193,[19]]],[[1247,[953]]]],[[953,107],[[1248,[953]]]],[[953,[103,[19,7]]],[[1249,[953]]]],[[953,107],[[1250,[953]]]],[[953,19,[103,[19,7]]],[[1251,[953]]]],[[953,[193,[1013]]],[[1252,[953]]]],[[653,231],[[1253,[653,231]]]],[[953,1015],[[1254,[953]]]],[[]],[[653,9],[[1255,[653]]]],[[653,231],[[1256,[653,231]]]],[[653,19],[[1257,[653]]]],[[653,9],[[1258,[653]]]],[[653,9],[[1259,[653]]]],[[653,188],[[1260,[653]]]],[[653,231],[[1261,[653,231]]]],[[653,231],[[1262,[653,231,768]]]],[[[0,[1010,653]]],[[1263,[[0,[1010,653]],[0,[364,492]]]]]],[[[0,[1010,953,653]],231],[[1264,[[0,[1010,953,653]],231]]]],[[953,231],[[1265,[953,231]]]],[[[0,[1010,953]]],[[1266,[[0,[1010,953]]]]]],[[[0,[1010,653]]],[[1267,[[0,[1010,653]],[0,[364,492]],[0,[364,492]]]]]],[[953,[193,[19]]],[[1268,[953]]]],[[953,[193,[19]]],[[1269,[953]]]],[[953,[193,[1016]]],[[1270,[953]]]],[[653,1010],[[1271,[653,1010]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[953,231],[[1209,[953,231]]]],[[[1303,[[0,[1010,953]]]],231],16],[[953,231],[[1210,[953,231]]]],[[[1303,[[0,[1010,953]]]],231],16],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[0,[1010,953]]],[[1303,[[0,[1010,953]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[376,653]]],[[769,[[8,[1010,7]]]]]],[653,[[769,[[8,[1010,7]]]]]],[[653,1010],[[1214,[653,1010]]]],[[],686],[[[1304,[322]]],[[1304,[322]]]],[[[1305,[322]]],[[1305,[322]]]],[[[1306,[322]]],[[1306,[322]]]],[[[1307,[322]]],[[1307,[322]]]],[[[1308,[322]]],[[1308,[322]]]],[[[1309,[322]]],[[1309,[322]]]],[[[1310,[322]]],[[1310,[322]]]],[[[1311,[322,322,322]]],[[1311,[322,322,322]]]],[[[1312,[322,322,322]]],[[1312,[322,322,322]]]],[[[1253,[322,322,322]]],[[1253,[322,322,322]]]],[[[1233,[322]]],[[1233,[322]]]],[[[1237,[322,322]]],[[1237,[322,322]]]],[[[1228,[322,322,322]]],[[1228,[322,322,322]]]],[[[1229,[[0,[322,1010]]]]],[[1229,[[0,[322,1010]]]]]],[[[1262,[322,322,322]]],[[1262,[322,322,322]]]],[[[1224,[322,322]]],[[1224,[322,322]]]],[[[1241,[322,322]]],[[1241,[322,322]]]],[[[1245,[322,322]]],[[1245,[322,322]]]],[[[1225,[322,322]]],[[1225,[322,322]]]],[[[1259,[322]]],[[1259,[322]]]],[[[1261,[322,322]]],[[1261,[322,322]]]],[[[1255,[322]]],[[1255,[322]]]],[[[1256,[322,322]]],[[1256,[322,322]]]],[[[1258,[322]]],[[1258,[322]]]],[[[1214,[322,322]]],[[1214,[322,322]]]],[[[1216,[322]]],[[1216,[322]]]],[[[1219,[322]]],[[1219,[322]]]],[[[1221,[322]]],[[1221,[322]]]],[[[1222,[322]]],[[1222,[322]]]],[[[1234,[322,322]]],[[1234,[322,322]]]],[[[1271,[[0,[322,1010]],322]]],[[1271,[[0,[322,1010]],322]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[0,[1010,653]]],[[1216,[[0,[1010,653]]]]]],[653,[[1218,[653,[0,[364,492]]]]]],0,[[[0,[1010,653]]],[[1219,[[0,[1010,653]]]]]],[653,[[1220,[653]]]],[[[1303,[[0,[1010,953]]]]],9],0,[[[0,[322,653]]],[[1221,[[0,[322,653]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],1304],[653,[[1222,[653]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[653,231],[[1224,[653,231]]]],[[653,231],[[1225,[653,231]]]],[[953,231],[[1226,[953,231]]]],[[[1303,[[0,[1010,953]]]],231],21],[[953,231],[[1227,[953,231]]]],[[[1303,[[0,[1010,953]]]],231],21],0,0,[[653,231],[[1228,[653,1010,231]]]],[653,[[1229,[653]]]],[[[1303,[383]],10],[[22,[382]]]],[[[1304,[383]],10],[[22,[382]]]],[[[1305,[383]],10],[[22,[382]]]],[[[1306,[383]],10],[[22,[382]]]],[[[1307,[383]],10],[[22,[382]]]],[[1308,10],[[22,[382]]]],[[[1309,[383]],10],[[22,[382]]]],[[[1310,[383]],10],[[22,[382]]]],[[[1311,[383,383]],10],[[22,[382]]]],[[[1312,[383,383]],10],[[22,[382]]]],[[[1313,[383]],10],[[22,[382]]]],[[[1238,[[0,[383,653]]]],10],[[22,[382]]]],[[[1266,[[0,[383,653]]]],10],[[22,[382]]]],[[[1220,[[0,[383,653]]]],10],[[22,[382]]]],[[[1218,[383,383]],10],[[22,[382]]]],[[[1263,[383,383]],10],[[22,[382]]]],[[[1242,[383,383,383]],10],[[22,[382]]]],[[[1231,[383,383,383]],10],[[22,[382]]]],[[[1264,[383,383,383]],10],[[22,[382]]]],[[[1253,[383,383,383]],10],[[22,[382]]]],[[[1233,[383]],10],[[22,[382]]]],[[[1237,[383,383]],10],[[22,[382]]]],[[[1228,[383,383,383]],10],[[22,[382]]]],[[[1229,[[0,[383,1010]]]],10],[[22,[382]]]],[[[1262,[383,383,383]],10],[[22,[382]]]],[[[1224,[383,383]],10],[[22,[382]]]],[[[1241,[383,383]],10],[[22,[382]]]],[[[1245,[383,383]],10],[[22,[382]]]],[[[1225,[383,383]],10],[[22,[382]]]],[[[1259,[383]],10],[[22,[382]]]],[[[1261,[383,383]],10],[[22,[382]]]],[[[1255,[383]],10],[[22,[382]]]],[[[1256,[383,383]],10],[[22,[382]]]],[[[1258,[383]],10],[[22,[382]]]],[[[1214,[383,383]],10],[[22,[382]]]],[[[1216,[383]],10],[[22,[382]]]],[[[1219,[383]],10],[[22,[382]]]],[[[1221,[383]],10],[[22,[382]]]],[[[1222,[383]],10],[[22,[382]]]],[[[1234,[383,383]],10],[[22,[382]]]],[[[1239,[[0,[383,653]]]],10],[[22,[382]]]],[[[1235,[[0,[383,1010]]]],10],[[22,[382]]]],[[[1226,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1227,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1243,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1209,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1210,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1232,[383,383]],10],[[22,[382]]]],[[[1265,[[0,[383,653]],383]],10],[[22,[382]]]],[[[1271,[[0,[383,1010]],383]],10],[[22,[382]]]],[[[1267,[383,383,383]],10],[[22,[382]]]],[[653,231],[[1231,[653,231]]]],[[[1303,[[0,[1010,953]]]],231]],[[653,231],[[1232,[653,231]]]],[[[1303,[[0,[1010,953]]]],231]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[653,[[1233,[653]]]],0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[653,231],[[1234,[653,231]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[380,1305],0,[653,[[1235,[653]]]],[[[1303,[[0,[1010,953]]]]],21],0,[[653,231],[[1237,[653,231]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[953,[[1238,[953]]]],[[[1303,[[0,[1010,953]]]]],21],[[],844],[[],845],[[],844],[[],845],[[953,9],[[1239,[953]]]],[[[1303,[[0,[1010,953]]]],9],21],[[],1306],[768,[[1313,[768]]]],[[1010,1010],[[1241,[1010,1010]]]],[[653,1010],[[1241,[653,1010]]]],0,[[653,231],[[1242,[653,231,[0,[364,492]]]]]],[[],1307],[[[769,[[1238,[[0,[1010,953,653]]]]]],1007],1008],[[[769,[[1266,[[0,[1010,953,653]]]]]],1007],1008],[[[769,[[1220,[[0,[1010,653]]]]]],1007],1008],[[[769,[[1218,[1010,[0,[364,492]]]]]],1007],[[1008,[[0,[364,492]]]]]],[[[769,[[1263,[1010,[0,[364,492]]]]]],1007],1008],[[[769,[[1242,[1010,231,[0,[364,492]]]]]],1007],1008],[[[769,[[1231,[1010,231]]]],1007],1008],[[[769,[[1264,[[0,[1010,953]],231]]]],1007],1008],[[[769,[[1239,[[0,[1010,953,653]]]]]],1007],1008],[[[769,[[1235,[1010]]]],1007],1008],[[[769,[[1226,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1227,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1243,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1209,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1210,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1232,[1010,231]]]],1007],1008],[[[769,[[1265,[[0,[1010,953,653]],231]]]],1007],1008],[[[769,[[1267,[1010,[0,[364,492]],[0,[364,492]]]]]],1007],1008],[231,[[1308,[231]]]],[[769,1007],[[1008,[21]]]],[[953,1007],[[1008,[21]]]],[[[769,[1304]],1007],[[1008,[21]]]],[[[769,[[1305,[301]]]],1007],[[1008,[21]]]],[[[769,[1306]],1007],[[1008,[21]]]],[[[769,[1307]],1007],[[1008,[21]]]],[[[769,[[1308,[231]]]],1007],[[1008,[21]]]],[[[769,[[1309,[322]]]],1007],[[1008,[21]]]],[[[769,[[1310,[231]]]],1007],[[1008,[21]]]],[[[769,[[1311,[231,768]]]],1007],[[1008,[21]]]],[[[769,[[1312,[231,768]]]],1007],[[1008,[21]]]],[[[769,[[1313,[768]]]],1007],[[1008,[21]]]],[[[769,[[1253,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1233,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1237,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1228,[1010,1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1229,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1262,[1010,231,768]]]],1007],[[1008,[21]]]],[[[769,[[1224,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1241,[1010,1010]]]],1007],[[1008,[21]]]],[[[769,[[1245,[1010,1010]]]],1007],[[1008,[21]]]],[[[769,[[1225,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1259,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1261,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1255,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1256,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1258,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1214,[1010,1010]]]],1007],[[1008,[21]]]],[[[769,[[1216,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1219,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1221,[[0,[1010,322]]]]]],1007],[[1008,[21]]]],[[[769,[[1222,[1010]]]],1007],[[1008,[21]]]],[[[769,[[1234,[1010,231]]]],1007],[[1008,[21]]]],[[[769,[[1271,[1010,1010]]]],1007],[[1008,[21]]]],[[953,231],[[1243,[953,231]]]],[[[1303,[[0,[1010,953]]]],231],[[21,[9]]]],0,0,0,0,0,0,0,0,[[1010,1010],[[1245,[1010,1010]]]],[[653,1010],[[1245,[653,1010]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[322,[[1309,[322]]]],[231,[[1310,[231]]]],0,0,[[653,231],[[1253,[653,231]]]],0,0,[[]],[[[1303,[[0,[1010,953]]]]]],[1304],[[[1305,[301]]]],[1306],[1307],[[[1309,[322]]]],[[[1310,[231]]]],[[[1237,[1010,231]]]],[[[1262,[1010,231,768]]]],[[653,9],[[1255,[653]]]],[[653,231],[[1256,[653,231]]]],0,0,0,0,[[653,9],[[1258,[653]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],863],[[653,9],[[1259,[653]]]],[[653,231],[[1261,[653,231]]]],[[653,231],[[1262,[653,231,768]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[1010,653]]],[[1263,[[0,[1010,653]],[0,[364,492]]]]]],[[[0,[1010,953,653]],231],[[1264,[[0,[1010,953,653]],231]]]],[[953,231],[[1265,[953,231]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[0,[1010,953]]],[[1266,[[0,[1010,953]]]]]],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],1008],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[[769,1007],[[1008,[[21,[22]]]]]],[231,[[1312,[231,768]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[231,[[1311,[231,768]]]],[[[0,[1010,653]]],[[1267,[[0,[1010,653]],[0,[364,492]],[0,[364,492]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[653,1010],[[1271,[653,1010]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1314,1314],[1315,1315],[1316,1316],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1314],[[],1315],[[],1316],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[1314,188],[1315,188],[1316,188],[[1314,10],[[22,[382]]]],[[1315,10],[[22,[382]]]],[[1316,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[13],[12],[[[0,[537,653]]],9],0,0,0,[[[0,[537,653]]],89],[[[0,[537,653]]],188],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[1314,[193,[19]]]],[[1315,[193,[19]]]],[[1316,[193,[19]]]],[[1314,305]],[[1315,305]],[[1316,305]],[[1314,89]],[[1315,89]],[[1316,89]],[[1314,188]],[[1315,188]],[[1316,188]],[[1314,19]],[[1315,19]],[[1316,19]],[[1314,9]],[[1315,9]],[[1316,9]],0,0,0,0,0,0,[[[1317,[923]]],923],[[[1318,[923]]],923],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],647]],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]],647]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],1],[[],1],[[],1],[[],1],[[],1],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],1],[[],1],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],647],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],647],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],647],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],647],[[[1318,[[0,[1049,537,322]],[0,[1319,364]],923]],[1318,[[0,[1049,537,322]],[0,[1319,364]],923]]],[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]]],[[[1318,[[0,[1049,537,322]],[0,[1319,364]],923]],[1318,[[0,[1049,537,322]],[0,[1319,364]],923]]],[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]]],[[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]],[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]],[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1317,[923]]],9],[[[1318,[923]]],9],[[[1317,[923]]]],[[[1318,[923]]]],[[[1317,[322,322,322,[0,[923,322]]]]],[[1317,[322,322,322,[0,[923,322]]]]]],[[[1318,[322,322,[0,[923,322]]]]],[[1318,[322,322,[0,[923,322]]]]]],[1323,1323],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],1324],[[[1317,[322,322,322,[0,[923,322]]]],[1317,[322,322,322,[0,[923,322]]]]]],[[[1318,[322,322,[0,[923,322]]]],[1318,[322,322,[0,[923,322]]]]]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],[[8,[647,7]]]],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],[[8,[647,7]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],16],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],16],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[1317,[364,[0,[364,923]]]]]],[[],[[1318,[364,[0,[364,923]]]]]],[9],[9],[9],[9],[9],[9],[105,[[22,[[1317,[[0,[214,1049,537]],214,[0,[1319,364]],[0,[923,364]]]]]]]],[105,[[22,[[1318,[[0,[214,1049,537]],[0,[1319,364]],[0,[923,364]]]]]]]],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],[[1326,[[0,[1049,537]],1319,923]]]],[[]],[[]],[[]],[[[8,[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],7]]],[[103,[7]]]],[[[1317,[923]]],[[1327,[923]]]],[[[1318,[923]]],[[1328,[923]]]],[9],[9],[9],[179,16],[179,16],[179,16],[[[1317,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[1329,[[0,[1049,537]],1319,923]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[1330,[[0,[1049,537]],1319,923]]]],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],[[1331,[[0,[1049,537]],[0,[537,[1325,[[0,[1049,537]]]],653]],1319,923]]]],[[[1317,[[0,[1049,537]],[379,[[379,[[379,[379]]]]]],1319,923]],[1317,[[0,[1049,537]],[379,[[379,[[379,[379]]]]]],1319,923]]],16],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],16],[[1323,1323],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[1317,[[0,[1049,537,365]],365,1319,923]],380]],[[[1317,[[0,[1049,537]],1319,923]],380]],[[[1317,[[0,[1049,537,365]],365,1319,923]],380]],[[[1318,[[0,[1049,537,365]],1319,923]],380]],[[[1318,[[0,[1049,537]],1319,923]],380]],[[[1317,[923]],231],[[1332,[231,923]]]],[[[1318,[923]],231],[[1333,[231,923]]]],[[[1317,[383,383,923]],10],[[22,[382]]]],[[[1318,[383,923]],10],[[22,[382]]]],[[1323,10],[[22,[382]]]],[[]],[85,[[1317,[[0,[1049,537]],[1322,[1321]],[0,[364,923]]]]]],[[[1317,[923]]],[[1318,[923]]]],[[]],[[[85,[[0,[1049,537]]]]],[[1318,[[0,[1049,537]],[1322,[1321]],[0,[364,923]]]]]],[[]],[380,[[1317,[[0,[1049,537]],[0,[1319,364]],[0,[364,923]]]]]],[380,[[1318,[[0,[1049,537]],[0,[1319,364]],[0,[364,923]]]]]],[647,[[21,[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,364,376,377]],1320]]]]]],[647,[[21,[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],647],[[21,[647]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],[[21,[[0,[1049,537]]]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],9],21],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],9],21],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1317,[[0,[1049,537]],1319,923]],[85,[[0,[537,[1325,[[0,[1049,537]]]],653]]]]],[[21,[85]]]],[[[1317,[[0,[1049,537]],1319,923]],[85,[[0,[537,[1325,[[0,[1049,537]]]],653]]]]],[[21,[85]]]],[[[1317,[[0,[1049,537]],1319,923]],[85,[[0,[537,[1325,[[0,[1049,537]]]],653]]]]],[[21,[85]]]],[[[1317,[[0,[1049,537]],1319,923]],[85,[[0,[537,[1325,[[0,[1049,537]]]],653]]]]],[[21,[85]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],647],[[21,[647]]]],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1318,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[0,[1049,537]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],782,653]]],[[0,[1049,537]]]],[[[1317,[[1335,[[0,[537,1049,[379,[[0,[537,1049,[379,[[0,[537,1049,[379,[[0,[537,1049,379,322]]]],322]]]],322]]]],322]],1334]],1336,1320]],[1335,[[0,[537,1049,[379,[[0,[537,1049,[379,[[0,[537,1049,[379,[[0,[537,1049,379,322]]]],322]]]],322]]]],322]],1334]],501]],[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]],501],[[0,[1049,537]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],[[21,[810]]]],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],[[21,[810]]]],[[],811],[[],811],0,0,0,[[[1317,[923]]]],[[[1318,[923]]]],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]]],[[],9],[[],9],[[],9],[[[1317,[[0,[1049,537]],1319,923]],[0,[1049,537]]],21],[[[1318,[[0,[1049,537]],1319,923]],[0,[1049,537]]],16],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],[8,[647,7]],[8,[647,7]]],[[21,[[8,[647,7]]]]]],[[[1317,[[0,[1049,537]],1319,923]],[0,[1049,537]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[0,[1049,537]]]],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],[[1337,[[0,[1049,537]],1319,923]]]],[[]],[[]],[[]],[[[8,[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]],7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1317,[923]]],895],[[[1317,[923]]],899],[[[1317,[923]]],[[1338,[923]]]],[[[1318,[923]]],[[1339,[923]]]],[[[1318,[923]]],1340],[[[1317,[923]]],[[1341,[923]]]],[[[8,[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],7]]],[[8,[647,7]]]],[[[8,[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]],7]]],[[8,[647,7]]]],[[]],[[]],[[]],[[[1317,[923]]],[[1342,[923]]]],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],16],[[[1317,[923]]],16],[[[1318,[923]]],16],[[],16],[[],16],[[],16],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],16],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],16],[[[1317,[923]]],895],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],1343],[[[1318,[923]]],1340],[[[1317,[923]]],899],[[[1317,[923]]],901],[[[1317,[923]]],9],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],9],[[[1318,[923]]],9],0,[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[1317,[[1322,[1321]],1320]]]],[[],[[1318,[[1322,[1321]],1320]]]],[923,[[1317,[[1322,[1321]],923]]]],[923,[[1318,[[0,[537,1049]],[1322,[1321]],923]]]],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[[1317,[923]]],[[1344,[923]]]],[[[1317,[923]]],[[1345,[923]]]],[[19,19],16],[[19,19],16],[[19,19],16],[[[1317,[923]]],[[1346,[923]]]],[[[1318,[923]]],[[1346,[923]]]],[[[1317,[923]]],[[1346,[923]]]],[[[1318,[923]]],[[1346,[923]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],[[21,[92]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],851],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],851],[[[8,[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],7]]],852],[[[8,[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]],7]]],852],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],647],[[21,[16]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[92,[[22,[647,853]]]],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],854],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],854],[[],92],[[],92],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],92],[[],92],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],647],[[21,[[8,[647,7]]]]]],[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],16],[[[1317,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],21],[[[1318,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[21,[[0,[1049,537]]]]]],[[[1317,[[0,[1049,537]],1319,923]],9]],[[[1318,[[0,[1049,537]],1319,923]],9]],[[[1317,[923]],231]],[[[1318,[923]],231]],[[[1317,[[0,[932,1049,537]],932,1319,923]],172],22],[[[1318,[[0,[932,1049,537]],1319,923]],172],22],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]],[8,[647,7]]],[[22,[[8,[647,7]]]]]],[[],92],[[],92],[[[1317,[[0,[1049,537]],1319,923]],9]],[[[1318,[[0,[1049,537]],1319,923]],9]],[[[1317,[[0,[1049,537]],1319,923]]]],[[[1318,[[0,[1049,537]],1319,923]]]],[[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]],[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]],[[1318,[[0,[1049,537,322]],[0,[1319,364]],1320]]]],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],[[1347,[[0,[1049,537]],1319,923]]]],0,[[[1318,[[0,[1049,537]],1319,923]],[0,[537,[1325,[[0,[1049,537]]]],653]]],[[21,[[0,[1049,537]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[[1317,[[0,[1049,537]],1319,923]],[0,[1049,537]]],[[22,[[1348,[[0,[1049,537]],1319,923]]]]]],[[],22],[[],22],[[],22],[[[1317,[[0,[1049,537]],1319,923]],9],[[22,[1323]]]],[[[1318,[[0,[1049,537]],1319,923]],9],[[22,[1323]]]],[[],23],[[],23],[[],23],[[],[[21,[92]]]],[[],[[21,[92]]]],[[],810],[[],810],[[[1317,[[0,[916,646,1049,537]],[0,[916,646]],[0,[646,1319,376,377]],1320]]],92],[[],92],[[[1318,[[0,[537,1049,322,376,377,646]],[1322,[1321]],1320]]],92],[[],92],[[],92],[[],92],[[],868],[[],868],[[[1318,[[0,[1049,537]],1319,923]],[1318,[[0,[1049,537]],1319,923]]],[[1349,[[0,[1049,537]],1319,923]]]],[[],21],[[],21],[[],21],[[[1317,[923]]],902],[[[1317,[923]]],903],[[]],[[]],[[]],[9,[[1317,[[1322,[1321]],1320]]]],[9,[[1318,[[1322,[1321]],1320]]]],[9,[[1317,[1320]]]],[9,[[1318,[1320]]]],[[9,923],[[1317,[923]]]],[[9,923],[[1318,[923]]]],[[9,923],[[1317,[[1322,[1321]],923]]]],[[9,923],[[1318,[[0,[537,1049]],[1322,[1321]],923]]]],[[],[[1317,[1320]]]],[[],[[1318,[1320]]]],[923,[[1317,[923]]]],[923,[[1318,[923]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1350,[923]],501],[[1350,[923]]]],[[[1329,[923]],501],[[1329,[923]]]],[[[1331,[653,923]],501],[[1331,[653,923]]]],[[[1350,[923]],501],[[1350,[923]]]],[[[1329,[923]],501],[[1329,[923]]]],[[[1331,[653,923]],501],[[1331,[653,923]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[895,895],[901,901],[902,902],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,0,0,0,[[[895,[383,383]],10],[[22,[382]]]],[[[899,[383,383]],10],[[22,[382]]]],[[[1338,[383,383,923]],10],[[22,[382]]]],[[[1341,[383,383,923]],10],[[22,[382]]]],[[[1342,[383,923]],10],[[22,[382]]]],[[[901,[383]],10],[[22,[382]]]],[[[902,[383]],10],[[22,[382]]]],[[[1327,[383,383,923]],10],[[22,[382]]]],[[[903,[383]],10],[[22,[382]]]],[[[1345,[923]],10],[[22,[382]]]],[[[1350,[383,383,923]],10],[[22,[382]]]],[[[1351,[383,383,923]],10],[[22,[382]]]],[[[1352,[923]],10],[[22,[382]]]],[[[1344,[923]],10],[[22,[382]]]],[[[1329,[383,383,923]],10],[[22,[382]]]],[[[1353,[383,383,923]],10],[[22,[382]]]],[[[1354,[383,923]],10],[[22,[382]]]],[[[1331,[[1046,[[0,[383,653]]]],[0,[383,653]],383,923]],10],[[22,[382]]]],[[[1355,[[1046,[[0,[383,653]]]],[0,[383,653]],383,923]],10],[[22,[382]]]],[[[1356,[[1046,[[0,[383,653]]]],[0,[383,653]],923]],10],[[22,[382]]]],[[[1348,[383,383,923]],10],[[22,[382]]]],[[[1348,[383,383,923]],10],[[22,[382]]]],[231],[231],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1345,[923]],188,231],[[1350,[923]]]],[[[1344,[923]],188,231],21],[[[1345,[1319,923]],[0,[537,1325,653]]],[[1350,[1319,923]]]],[[[1344,[1319,923]],[0,[537,1325,653]]],21],[[[1345,[923]],188,[0,[1325,653]]],[[1350,[923]]]],[[[1344,[923]],188,[0,[1325,653]]],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1351,[923]]]],[[[1353,[923]]]],[[[1355,[653,923]]]],[[[1351,[923]]]],[[[1351,[923]]]],[[[1351,[923]]]],[[[1353,[923]]]],[[[1355,[653,923]]]],0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,[[[1350,[537,1319,923]],537],[[1351,[537,1319,923]]]],[[[1351,[923]]]],[[[1352,[537,1319,923]],537]],[[[1329,[537,1319,923]]],[[1353,[537,1319,923]]]],[[[1353,[923]]]],[[[1354,[537,1319,923]]]],[[[1331,[[0,[537,[505,[653]]]],653,1319,923]]],[[1355,[[0,[537,[505,[653]]]],653,1319,923]]]],[[[1355,[653,923]]]],[[[1356,[[0,[537,[505,[653]]]],653,1319,923]]]],[[[1352,[537,1319,923]],188,537]],[[[1351,[923]]]],[[[1352,[923]],188,218]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1351,[923]]]],[[[1354,[923]]]],[[[1356,[[505,[653]],653,923]]],[[505,[653]]]],[[[1351,[923]]]],[[[1351,[923]]]],[[[1353,[923]]]],[[[1355,[653,923]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1351,[923]]]],[[[1329,[923]]]],[[[1353,[923]]]],[[[1354,[923]]]],[[[1331,[[1046,[653]],653,923]]],653],[[[1355,[653,923]]]],[[[1356,[[1046,[653]],653,923]]],653],0,0,0,0,[[[1351,[923]]]],[895,9],[899,9],[[[1338,[923]]],9],[[[1341,[923]]],9],[[[1342,[923]]],9],[901,9],[902,9],[[[1327,[923]]],9],[903,9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[895,21],[899,21],[[[1338,[923]]],21],[[[1341,[923]]],21],[[[1342,[923]]],21],[901,21],[902,21],[[[1327,[923]]],21],[[[1332,[231,923]]],21],[903,21],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],[[[1329,[537,364,1319,923]]],364],[[[1331,[[0,[537,[505,[653]]]],653,364,1319,923]]],364],[[[1350,[537,1319,923]],537]],[[[1329,[537,1319,923]]]],[[[1331,[[0,[537,[505,[653]]]],653,1319,923]]]],[[[1350,[537,1319,923]],501]],[[[1329,[537,1319,923]],501]],[[[1331,[[0,[537,[505,[653]]]],653,1319,923]],501]],[[[1329,[537,1319,923]],501]],[[[1331,[[0,[537,[1046,[653]],[505,[653]]]],653,1319,923]],501]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[1351,[923]]]],[[[1353,[923]]]],[[[1355,[653,923]]]],[[[1351,[923]]]],[[[1353,[923]]]],[[[1355,[653,923]]]],[[[1353,[923]]]],[[[1355,[[505,[653]],653,923]]]],[[[1351,[923]],501],[[1350,[923]]]],[[[1353,[923]],501],[[1329,[923]]]],[[[1355,[653,923]],501],[[1331,[653,923]]]],[[[1353,[923]]]],[[[1355,[[505,[653]],653,923]]],[[505,[653]]]],[895],[899],[[],9],[[[1338,[923]]]],[[],9],[[[1341,[923]]]],[[[1342,[923]]]],[[],9],[901],[902],[[],9],[[[1327,[923]]]],[[[1332,[231,923]]]],[903],[[],863],[[],863],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],686],[[],686],[[],686],[1340,1340],[[[1337,[923]]],[[1337,[923]]]],[[[1326,[923]]],[[1326,[923]]]],[[[1347,[923]]],[[1347,[923]]]],[[[1349,[923]]],[[1349,[923]]]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[[1340,[383]],10],[[22,[382]]]],[[[1339,[383,923]],10],[[22,[382]]]],[[[1328,[383,923]],10],[[22,[382]]]],[[[1337,[[0,[383,1049,537]],1319,923]],10],[[22,[382]]]],[[[1326,[[0,[383,1049,537]],1319,923]],10],[[22,[382]]]],[[[1347,[[0,[383,1049,537]],1319,923]],10],[[22,[382]]]],[[[1349,[[0,[383,1049,537]],1319,923]],10],[[22,[382]]]],[[[1330,[383,923]],10],[[22,[382]]]],[[[1357,[383,923]],10],[[22,[382]]]],[[[1358,[383,923]],10],[[22,[382]]]],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1330,[923]]]],[[[1357,[923]]]],[[[1358,[923]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[[1330,[537,1319,923]]],[[1357,[537,1319,923]]]],[[[1358,[537,1319,923]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1358,[923]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[1340,9],[[[1339,[923]]],9],[[[1328,[923]]],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1340,21],[[[1339,[923]]],21],[[[1328,[923]]],21],[[[1333,[231,923]]],21],[[[1337,[[0,[1049,537]],1319,923]]],[[21,[[0,[1049,537]]]]]],[[[1326,[[0,[1049,537]],1319,923]]],[[21,[[0,[1049,537]]]]]],[[[1347,[[0,[1049,537]],1319,923]]],[[21,[[0,[1049,537]]]]]],[[[1349,[[0,[1049,537]],1319,923]]],[[21,[[0,[1049,537]]]]]],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[],844],[[],844],[[],844],[[],845],[[],845],[[],845],[[[1330,[537,1319,923]]]],0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[1357,[923]]]],[[[1357,[923]]]],[1340],[[[1339,[923]]]],[[],9],[[[1328,[923]]]],[[],9],[[[1333,[231,923]]]],[[[1337,[[0,[1049,537]],1319,923]]]],[[[1326,[[0,[1049,537]],1319,923]]]],[[[1347,[[0,[1049,537]],1319,923]]]],[[[1349,[[0,[1049,537]],1319,923]]]],[[],863],[[],863],[[],863],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[[1346,[923]]]],[[[1346,[923]]],923],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1359],[1359],[1359],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1346,[923]],9],1359],[[[1346,[923]],1359],9],[[[1346,[923]]],9],[[[1346,[923]]],9],[[],686],[[],686],[[[1346,[923]]]],[[[1346,[923]]]],[1359,1359],[[[1346,[322,[0,[923,322]]]]],[[1346,[322,[0,[923,322]]]]]],[1360,1360],[[[1346,[322,[0,[923,322]]]],[1346,[322,[0,[923,322]]]]]],[[[1346,[322,[0,[923,322]]]],[1346,[322,[0,[923,322]]]],218]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[1359,1359]],[[[1346,[923]]],755],[[[1346,[923]]],755],[[],[[1346,[[0,[923,364]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1346,[923]]],[[1361,[923]]]],[[[1346,[923]],1360],[[1361,[923]]]],[9],[9],[[[1346,[923]]]],[9],[9],[[[1362,[923]]]],[9],[9],[[[1361,[923]]]],[9],[[[1346,[923]],1359]],[[[1346,[923]],188,231],16],[[[1346,[923]],188,231],[[21,[1359]]]],[[[1346,[923]],188,231,218],[[22,[1359,1363]]]],[231],[231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[[1346,[923]],188,231],21],[[[1346,[923]],[85,[188]],231],[[21,[85]]]],[[[1346,[923]],[85,[188]],231],[[21,[85]]]],[[[1346,[923]],188,231],21],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[[1346,[923]],188,218],1359],[[[1346,[923]],188,218]],[[[1346,[923]],188,1363],1359],[[[1346,[923]],188],1359],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1346,[923]]],[[1362,[923]]]],[[]],[[]],[[]],[[]],[[[1346,[923]],1360],[[1362,[923]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1346,[923]],9],16],[[[1346,[923]]],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[[1346,[923]]],1360],[[[1362,[923]]],1360],[[[1361,[923]]],1360],0,0,0,[[[1346,[923]],188],1364],[[[1346,[923]]],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[1346,[1320]]]],[923,[[1346,[923]]]],[1360,[[21,[1359]]]],[[[1362,[923]]],21],[[[1361,[923]]],21],[1364,[[21,[1359]]]],[[],844],[[],844],[[],845],[[],845],[[],844],[[],844],[[],845],[[],845],0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[1360,1359]],[[1360,1359]],[[[1346,[923]],1359]],[[[1346,[923]],188,231],21],[[[1346,[923]],1359,501],16],[[[1346,[923]],9,218]],[[[1346,[923]],9,218]],[1360],[[[1362,[923]]]],[[],9],[[[1361,[923]]]],[[],9],[[],863],[[],863],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[1346,[923]],188],[[22,[1359]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[1346,[923]],9,218],[[22,[1323]]]],[9,[[22,[[1346,[1320]],1323]]]],[[9,923],[[22,[[1346,[923]],1323]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[1346,[1320]]]],[[9,923],[[1346,[923]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1365],[749],[1366],[1366],[1366],[[1367,501]],[[1367,501]],[1368,1368],[1369,1369],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[1370,[1365]]]],[[],[[1370,[749]]]],[[],[[1372,[749,1371]]]],[[],[[1373,[1366]]]],[[],1374],[[],1367],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[1369,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1366],[1366],[1366],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[179,16],[[1368,1368],16],[[1369,1369],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1374,10],[[22,[382]]]],[[1367,10],[[22,[382]]]],[[1368,10],[[22,[382]]]],[[1369,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[1365,16],[749,16],[1366,16],[1366,16],[1365],[749],[1366],[1366],[1366],[1366],[[],1374],[[],1367],[1371,754],[1374,9],[1374,16],[1369,16],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[1367,1369],0,0,0,[1368,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[1365,16],[749,16],[1366,16],[[1366,177],16],[[1366,841],16],[1365,16],[[749,177],16],[1366,16],[1366,16],[1366,16],[1366,16],[1366,16],[1366,16],[1365,16],[[749,841],16],[1366,16],[[1366,177],16],[[1366,841],16],[1366,16],[[1366,177],16],[[1366,841],16],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[1365],[749],[1366],[1366],[1365],[749],[1366],[1366],[1366],[1366],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[1366],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1374,[1375,[749,653]]]],[[1374,[1375,[749,653]],177],1368],[[1374,[1375,[749,653]],841],1368],[[1374,[1375,[749,653]],231]],[[1374,[1375,[749,653]],231,177],1368],[[1374,[1375,[749,653]],231,841],1368],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1378,[1376,1377]]]],[[[1375,[1376,653]]]],[[[1379,[1376,1377,653]]]],[[[1381,[1380,653]]]],[[[1382,[1380,653]]]],[[[1384,[1383,653]]]],[[]],[[]],[[]],[[],1370],[[],1372],[[],1373],0,0,0,0,0,0,0,[[[1370,[1385,653]]]],[[[1372,[1385,1377,653]]]],[[[1373,[1386,653]]]],[[],[[1370,[1385,[0,[364,653]]]]]],[[],[[1372,[1385,1377,[0,[364,653]]]]]],[[],[[1373,[1386,[0,[364,653]]]]]],[9],[9],[9],[9],[9],[9],[[[1375,[1385,653]]],653],[9],[9],[[[750,[1385,653]]],653],[9],[[[1379,[1385,1377,653]]],653],[[[1387,[1385,1377,653]]],653],[9],[9],[[[1381,[1386,653]]],653],[9],[[[1382,[1386,653]]],653],[9],[[[1384,[1388,653]]],653],[9],[[[1389,[1386,653]]],653],[[[1390,[1386,653]]],653],[9],[9],[9],[9],[9],[9],[9],[9],[[[1375,[1385,653]]],653],[[[750,[1385,653]]],653],[9],[9],[9],[9],[[[1382,[1386,653]]],653],[9],[9],[9],[9],[[[1390,[1386,653]]],653],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1382,[1391,653]]],[[1381,[1391,653]]]],[[[1384,[1392,653]]],[[1381,[1392,653]]]],[[]],[[[1382,[1392,653]]],[[1384,[1392,653]]]],[[]],[9],[9],[9],[9],[9],[9],[9],[[[1375,[1385,653]]]],[[[750,[1385,653]]]],[9],[9],[[[1379,[1385,1377,653]]]],[9],[[[1387,[1385,1377,653]]]],[[[1381,[1386,653]]]],[9],[9],[[[1382,[1386,653]]]],[[[1384,[1388,653]]]],[9],[9],[[[1389,[1386,653]]]],[9],[[[1390,[1386,653]]]],[[[1370,[1385,[0,[383,653]]]],10],[[22,[382]]]],[[[1372,[1385,1377,[0,[383,653]]]],10],[[22,[382]]]],[[[1373,[1386,[0,[383,653]]]],10],[[22,[382]]]],[[[1375,[1385,[0,[383,653]]]],10],[[22,[382]]]],[[[1375,[1385,[0,[495,653]]]],10],[[22,[382]]]],[[[750,[1385,[0,[495,653]]]],10],[[22,[382]]]],[[[750,[1385,[0,[383,653]]]],10],[[22,[382]]]],[[[1379,[1385,1377,[0,[383,653]]]],10],[[22,[382]]]],[[[1379,[1385,1377,[0,[495,653]]]],10],[[22,[382]]]],[[[1387,[1385,1377,[0,[383,653]]]],10],[[22,[382]]]],[[[1387,[1385,1377,[0,[495,653]]]],10],[[22,[382]]]],[[[1381,[1386,[0,[495,653]]]],10],[[22,[382]]]],[[[1381,[1386,[0,[383,653]]]],10],[[22,[382]]]],[[[1382,[1386,[0,[495,653]]]],10],[[22,[382]]]],[[[1382,[1386,[0,[383,653]]]],10],[[22,[382]]]],[[[1384,[1388,[0,[495,653]]]],10],[[22,[382]]]],[[[1384,[1388,[0,[383,653]]]],10],[[22,[382]]]],[[[1389,[1386,[0,[495,653]]]],10],[[22,[382]]]],[[[1389,[1386,[0,[383,653]]]],10],[[22,[382]]]],[[[1390,[1386,[0,[495,653]]]],10],[[22,[382]]]],[[[1390,[1386,[0,[383,653]]]],10],[[22,[382]]]],[[[1370,[1385,653]]]],[[[1372,[1385,1377,653]]]],[[[1370,[1376,653]]]],[[[1372,[1376,1377,653]]]],[[[1373,[1386,653]]]],[[[1373,[1380,653]]]],[[[1373,[1386,653]]]],[[[1373,[1380,653]]]],[[[1370,[749,1393]],[0,[1394,383]]]],[[]],[[]],[[]],[[],[[1370,[1385]]]],[781],[[]],[[],[[1372,[1385,1377]]]],[[]],[781],[[],[[1373,[1386]]]],[[]],[781],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],[[[1370,[1385,653]]],653],[[[1372,[1385,1377,653]]],653],[[[1373,[1386,653]]],653],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1370,[1385]]]],[[[1372,[1385,1377]]]],[[[1373,[1386]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1370,[1385,653]]],16],[[[1378,[1385,1377]]],16],[[[1372,[1385,1377,653]]],16],[[],16],[[[1373,[1386,653]]],16],[[],16],[[[1373,[1386,653]]],16],[[[1378,[1385,1377]]],16],[[[1372,[1385,1377,653]]],16],[[[1375,[1385,653]]],653],[[]],[[[1370,[1385,653]]],[[1375,[1385,653]]]],[[[1378,[1385,1377]]]],[[[1372,[1385,1377,653]]],[[1379,[1385,1377,653]]]],0,[[]],[[]],[[]],[[]],[[[1375,[1385,653]],501],[[750,[1385,653]]]],[[[750,[1385,653]],501],[[750,[1385,653]]]],[[[1379,[1385,1377,653]],501],[[1387,[1385,1377,653]]]],[[[1387,[1385,1377,653]],501],[[1387,[1385,1377,653]]]],[[[1381,[1386,653]],501],[[1389,[1386,653]]]],[[[1382,[1386,653]],501],[[1390,[1386,653]]]],[[[1389,[1386,653]],501],[[1389,[1386,653]]]],[[[1390,[1386,653]],501],[[1390,[1386,653]]]],0,0,0,0,0,0,0,0,0,[[[1375,[1385,653]]],[[1370,[1385,653]]]],0,0,[[],[[1370,[1385]]]],[[],[[1372,[1385,1377]]]],[[],[[1373,[1386]]]],[[],754],0,[[[1370,[749,1393]],1395],[[0,[1394,383]]]],[[[1370,[1385,653]]],1385],[[[1372,[1385,1377,653]]],1385],[[[1373,[1386,653]]],1386],0,0,0,0,0,0,0,[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[1373,[1386,653]]],[[1381,[1386,653]]]],[[[1373,[1396,653]]],[[1381,[1396,653]]]],[[[1379,[1385,1377,653]]],[[1372,[1385,1377,653]]]],0,[[[1381,[1386,653]]],[[1373,[1386,653]]]],[[[1382,[1386,653]]],[[1373,[1386,653]]]],[[[1384,[1388,653]]],[[1373,[1388,653]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],16],[[[1370,[1385,653]]],[[21,[[1375,[1385,653]]]]]],[[[1378,[1385,1377]]],16],[[[1372,[1385,1377,653]]],[[21,[[1379,[1385,1377,653]]]]]],[[],16],[[],16],[[],16],[[],16],[[[1370,[1397,653]]],[[21,[[1375,[1397,653]]]]]],[[[1378,[1397,1377]]],16],[[[1372,[1397,1377,653]]],[[21,[[1379,[1397,1377,653]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1370,[1397,653]]],[[21,[[1375,[1397,653]]]]]],[[[1378,[1397,1377]]],16],[[[1372,[1397,1377,653]]],[[21,[[1379,[1397,1377,653]]]]]],[[],16],[[],16],[[],16],[[[1375,[1385,653]],501],[[22,[[750,[1385,653]],[1375,[1385,653]]]]]],[[[750,[1385,653]],501],[[22,[[750,[1385,653]],[750,[1385,653]]]]]],[[[1379,[1385,1377,653]],501],[[22,[[1387,[1385,1377,653]],[1379,[1385,1377,653]]]]]],[[[1387,[1385,1377,653]],501],[[22,[[1387,[1385,1377,653]],[1387,[1385,1377,653]]]]]],[[[1381,[1386,653]],501],[[22,[[1389,[1386,653]],[1381,[1386,653]]]]]],[[[1382,[1386,653]],501],[[22,[[1390,[1386,653]],[1382,[1386,653]]]]]],[[[1389,[1386,653]],501],[[22,[[1389,[1386,653]],[1389,[1386,653]]]]]],[[[1390,[1386,653]],501],[[22,[[1390,[1386,653]],[1390,[1386,653]]]]]],[[[1373,[1386,653]]],[[21,[[1381,[1386,653]]]]]],[[[1373,[1398,653]]],[[21,[[1381,[1398,653]]]]]],[[[1373,[1396,653]]],[[21,[[1381,[1396,653]]]]]],[[[1373,[1399,653]]],[[21,[[1381,[1399,653]]]]]],[[[1373,[1399,653]]],[[21,[[1381,[1399,653]]]]]],[[[1373,[1398,653]]],[[21,[[1381,[1398,653]]]]]],[[[1373,[1388,653]]],[[21,[[1384,[1388,653]]]]]],[[[1373,[1400,653]]],[[21,[[1384,[1400,653]]]]]],[[[1373,[1400,653]]],[[21,[[1384,[1400,653]]]]]],[[],16],[[[1384,[1388,653]]],[[22,[[1382,[1388,653]],[1384,[1388,653]]]]]],[[],16],[[[1384,[1400,653]]],[[22,[[1382,[1400,653]],[1384,[1400,653]]]]]],[[],16],[[[1384,[1400,653]]],[[22,[[1382,[1400,653]],[1384,[1400,653]]]]]],[[[1384,[1392,653]],501],21],[[[1384,[[0,[1400,1392]],653]],501],21],[[[1384,[[0,[1400,1392]],653]],501],21],[[[1373,[1386,653]]],[[21,[[1382,[1386,653]]]]]],[[[1373,[1398,653]]],[[21,[[1382,[1398,653]]]]]],[[[1373,[1398,653]]],[[21,[[1382,[1398,653]]]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[[1378,[1385,1377]]]],[[]],[[]],[[]],[[[1378,[1376,1377]]]],[[[1375,[1376,653]]]],[[[750,[1376,653]]]],[[[1379,[1376,1377,653]]]],[[[1387,[1376,1377,653]]]],[[[1381,[1380,653]]]],[[[1382,[1380,653]]]],[[[1384,[1383,653]]]],[[[1389,[1380,653]]]],[[[1390,[1380,653]]]],[[]],[[]],[[]],[[]],[[[1375,[1385,653]],501]],[[[1379,[1385,1377,653]],501]],[[[1381,[1386,653]],501]],[[[1382,[1386,653]],501]],[[[1384,[1388,653]],501]],[[[1375,[1376,653]],501]],[[[1379,[1376,1377,653]],501]],[[[1381,[1380,653]],501]],[[[1382,[1380,653]],501]],[[[1384,[1383,653]],501]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[[1373,[1388,653]]],[[1384,[1388,653]]]],[[]],[[[1384,[1388,653]]],[[1382,[1388,653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1384,[1392,653]],501]],[[[1373,[1386,653]]],[[1382,[1386,653]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],490],[[],490],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],16],[[]],[[]],[[]],[[]],[51,16],[[[603,[490]]],490],[1401,1401],[1402,1402],[[]],[[]],[[],[[8,[6,7]]]],[[],1401],[[],1402],[9],[9],[9],[9],[19,490],[[]],[[]],[9],[9],[179,16],[179,16],[[1401,1401],16],[[1402,1402],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],84],[[],84],[[],51],[[],51],[[[193,[19]]]],[[1401,[193,[19]]]],[[1402,[193,[19]]]],[[1401,10],[[22,[382]]]],[[1402,10],[[22,[382]]]],[[]],[1401,1401],[1402,1402],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[[],[[85,[19]]]],[1401,[[85,[19]]]],[1402,[[85,[19]]]],[[],530],[[],378],[[],518],[[],384],[[],375],[[],404],[[],224],[[],305],[[],89],[[],188],[[],19],[[],9],[[[603,[530]]],530],[[[603,[378]]],378],[[[603,[518]]],518],[[[603,[384]]],384],[[[603,[375]]],375],[[[603,[9]]],9],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[[603,[404]]],404],[[],490],[[],1401],[[],1402],[[193,9]],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[]],[1401],[1402],[188],[193,21],[301,21],[[193,9],[[103,[7]]]],[[301,9],[[103,[7]]]],[[193,9],[[103,[7]]]],[193,21],[193],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[[603,[224]]],224],[[[603,[305]]],305],[[[603,[89]]],89],[[[603,[188]]],188],[[[603,[19]]],19],[[],21],[[],21],[[],490],[[[603,[9]]],9],[[]],[[]],[[193,218],21],[[193,218],21],[[]],[[],1401],[[],1402],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[404,16],[404,16],[872,872],[873,873],[1403],[1403],[9],[9],[9],[9],[[]],[[]],[9],[872],[873],[9],[[],872],[[],873],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[404,16],[[],16],[[],16],[404,16],[404,16],0,0,[[],1403],[19],[19],[1403],[1403],[1403,872],[1403,873],[[]],[[]],[[],21],[[],21],[[]],[[]],[1403,16],[1403,16],[[],22],[[],22],[[],22],[[],22],[1403,[[21,[872]]]],[1403,[[21,[873]]]],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[[0,[537,1049,653]],501]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501]],[231],[[[847,[[0,[1049,537]],[0,[1319,322]]]],231]],[[],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],9],[[]],[[[0,[537,1049,653]]],16],[[],1404],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],[[1404,[[0,[1049,537]],[0,[1319,322]]]]]],[[[0,[537,1049,653]]],[[21,[[812,[[1046,[[0,[537,1049,653]]]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[812,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[0,[537,1049,653]]],[[21,[[813,[[1046,[[0,[537,1049,653]]]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[813,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[9,[[1317,[1405,1320]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[1317,[[0,[1049,537]],1405,[0,[1319,322]],1320]]]],[[]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[0,[1319,322]]]],[[],21],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],21],[[],16],[653,[[1406,[653]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[1406,[[0,[1049,537]],[0,[1319,322]],[847,[[0,[1049,537]],[0,[1319,322]]]]]]]],[653,[[1407,[653]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[1407,[[0,[1049,537]],[0,[1319,322]],[847,[[0,[1049,537]],[0,[1319,322]]]]]]]],[[],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[0,[537,1049,653]]],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],21],[[[0,[537,1049,653]],501],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[[[0,[537,1049,653]],501],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[231],[[[847,[[0,[1049,537]],[0,[1319,322]]]],231]],[[],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],9],[[]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[],[[21,[1404]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],[[21,[[1404,[[0,[1049,537]],[0,[1319,322]]]]]]]],[[[0,[537,1049,653]]],[[1408,[[812,[[1046,[[0,[537,1049,653]]]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[1408,[[812,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[0,[537,1049,653]]],[[1408,[[813,[[1046,[[0,[537,1049,653]]]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[1408,[[813,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[9,[[21,[[1381,[1409,[1317,[1405,1320]]]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[21,[[1381,[1409,[1317,[[0,[1049,537]],1405,[0,[1319,322]],1320]]]]]]]],[9,[[21,[[1382,[1409,[1317,[1405,1320]]]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[21,[[1382,[1409,[1317,[[0,[1049,537]],1405,[0,[1319,322]],1320]]]]]]]],[[[0,[537,1049,653]],501],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[9,[[1381,[1409,[1317,[1405,1320]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[1381,[1409,[1317,[[0,[1049,537]],1405,[0,[1319,322]],1320]]]]]],[9,[[1382,[1409,[1317,[1405,1320]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[1382,[1409,[1317,[[0,[1049,537]],1405,[0,[1319,322]],1320]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],231]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[847,[[0,[1049,537,[1046,[[0,[537,1049,653]]]]]],[0,[1319,322]]]],[0,[537,1049,653]]]],[[[847,[[0,[1049,537,[1046,[[0,[537,1049,653]]]]]],[0,[1319,322]]]],[0,[537,1049,653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[1410,[[0,[1049,537,322]],322,322]]],[[1410,[[0,[1049,537,322]],322,322]]]],[[[1411,[[0,[1049,537,322]],322]]],[[1411,[[0,[1049,537,322]],322]]]],[[[847,[[0,[1049,537,322]],322,322]]],[[847,[[0,[1049,537,322]],322,322]]]],[1412,1412],[[[1411,[[0,[1049,537,322]],322]],[1411,[[0,[1049,537,322]],322]]]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[[1411,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],16],[[[1410,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],16],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],16],[[],[[1411,[[0,[1049,537]],[0,[364,1319,322]]]]]],[[],[[847,[[0,[1049,537]],[0,[364,1319,322]]]]]],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],[[1404,[[0,[1049,537]],[0,[1319,322]]]]]],[[1412,1412],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[[1411,[[0,[1049,537]],[0,[1319,322]]]],380]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],380]],[[[1410,[[0,[1049,537,383]],383,[0,[1319,322]]]],10],[[22,[382]]]],[[[1411,[[0,[1049,537,383]],[0,[1319,322]]]],10],[[22,[382]]]],[[[847,[[0,[1049,537,383]],383,[0,[1319,322]]]],10],[[22,[382]]]],[[1412,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[380,[[1411,[[0,[1049,537]],[0,[1319,322,364]]]]]],[380,[[847,[[0,[1049,537]],[0,[1319,322,364]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[[1410,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],21],[[[1411,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[1413,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[812,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[1410,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[813,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[1411,[[0,[1049,537]],[0,[1319,322]]]],537],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]],537],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[0,[1319,322]]]],0,[[],9],[[],9],[[],9],[[],9],0,[[[1411,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],16],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],21],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[1410,847],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[1410,[[0,[1049,537]],[0,[1319,322]]]]]],[[]],[[]],[[]],[[]],[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],16],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]],16],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],16],[[],16],[[],16],[[],16],[[],16],0,[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],301],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]],[[1414,[[0,[1049,537]],[0,[1319,322]],[847,[[0,[1049,537]],[0,[1319,322]]]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[1406,[[0,[1049,537]],[0,[1319,322]],[847,[[0,[1049,537]],[0,[1319,322]]]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],[[1407,[[0,[1049,537]],[0,[1319,322]],[847,[[0,[1049,537]],[0,[1319,322]]]]]]]],0,[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],301],[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]],9],[[[847,[[0,[1049,537]],[0,[1319,322]]]]],9],0,0,[[],[[1411,[[0,[1049,537]],806]]]],[[],[[847,[[0,[1049,537]],806]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[19,19],16],[[[1411,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[21,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],21],[[[1411,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],[[21,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[[[1411,[[0,[1049,537]],[0,[1319,322]]]],231]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],231]],0,0,0,[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537,[1046,[[0,[537,1049,653]]]]]],[0,[1319,322]]]],[0,[537,1049,653]]]],[[[1411,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[847,[[0,[1049,537,[1046,[[0,[537,1049,653]]]]]],[0,[1319,322]]]],[0,[537,1049,653]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[[847,[[0,[1049,537]],[0,[1319,322]]]],[0,[1049,537]]],[[21,[[1404,[[0,[1049,537]],[0,[1319,322]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[1408,[[812,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]]],[[1408,[[813,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[[847,[[0,[1049,537]],[0,[1319,322]]]],9],[[22,[1412]]]],0,[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[[1410,[[0,[1049,537]],[0,[1319,322]]]]],301],[[[847,[[1046,[[0,[537,1049,653]]]],[0,[1049,537]],[0,[1319,322]]]],[0,[537,1049,653]],501],21],[[]],[[]],[[]],[[]],[9,[[1411,[[0,[1049,537]],806]]]],[9,[[847,[[0,[1049,537]],806]]]],[[9,[0,[1319,322]]],[[1411,[[0,[1049,537]],[0,[1319,322]]]]]],[[9,[0,[1319,322]]],[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[9,[0,[1319,322]],9],[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[9,9],[[847,[[0,[1049,537]],806]]]],[[[0,[1319,322]]],[[1411,[[0,[1049,537]],[0,[1319,322]]]]]],[[[0,[1319,322]]],[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[[[0,[1319,322]],9],[[847,[[0,[1049,537]],[0,[1319,322]]]]]],[9,[[847,[[0,[1049,537]],806]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1406,[[0,[322,537,1049]],322,[0,[322,1319]],[847,[[0,[322,537,1049]],322,[0,[322,1319]]]]]]],[[1406,[[0,[322,537,1049]],322,[0,[322,1319]],[847,[[0,[322,537,1049]],322,[0,[322,1319]]]]]]]],[[]],[[],[[8,[6,7]]]],0,0,0,[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,0,0,[[]],[[[1415,[[0,[1049,537]],[0,[1319,322]]]]],21],[[[1406,[[0,[1049,537]],[0,[1319,322]],[1416,[[0,[1049,537]],[0,[1319,322]]]]]]],21],[[[1407,[[0,[1049,537]],[0,[1319,322]],[1416,[[0,[1049,537]],[0,[1319,322]]]]]]],21],[[19,19]],[19],[19],[19],0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[],686],[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],0,0,[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1417,[[0,[1049,537]],[0,[1319,322]]]]],21],[[[1414,[[0,[1049,537]],[0,[1319,322]],[1416,[[0,[1049,537]],[0,[1319,322]]]]]]],21],[[],844],[[],845],[[],844],[[],845],[19],[19],[[],863],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,[[[1404,[[0,[1049,537]],1319]],501],[[1404,[[0,[1049,537]],1319]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1418,[[0,[1049,537]],1319]]]],[[[1418,[[0,[1049,537]],1319]]]],[[],9],[[],9],[[],9],[[[1404,[[0,[1049,537]],1319]]],[[813,[[0,[1049,537]],1319]]]],[[[1419,[[0,[1049,537]],1319]]],[[813,[[0,[1049,537]],1319]]]],[[[1418,[[0,[1049,537]],1319]]]],[[[1404,[322,[0,[1049,537]],1319]]],[[1418,[322,[0,[1049,537]],1319]]]],[[[1419,[322,[0,[1049,537]],1319]]],[[1418,[322,[0,[1049,537]],1319]]]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1404,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1419,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1418,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1418,[[0,[1049,537]],1319]]],[[813,[[0,[1049,537]],1319]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[[1404,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1419,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1418,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],0,0,[[[1404,[[0,[1049,537]],364,1319]]],[[813,[[0,[1049,537]],364,1319]]]],[[[1404,[[0,[1049,537]],1319]]],[[813,[[0,[1049,537]],1319]]]],[[[1404,[[0,[1049,537]],1319]],501],[[813,[[0,[1049,537]],1319]]]],[[[1404,[[0,[1049,537]],1319]],501],[[22,[[813,[[0,[1049,537]],1319]]]]]],[19],[19],[19],[[[1418,[[0,[1049,537]],1319]]]],[[[1418,[[0,[1049,537]],1319]]]],[[[1418,[[0,[1049,537]],1319]]]],0,0,[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[9],[[[1420,[[0,[1049,537]],1319]]]],[9],[[[1421,[[0,[1049,537]],1319]]]],[9],[9],[[[1421,[[0,[1049,537]],1319]]]],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[[[1420,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1421,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[1420,[[0,[1049,537]],1319]]]],[[[1421,[[0,[1049,537]],1319]]]],[[[1421,[[0,[1049,537]],1319]]]],[19],[19],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],0,0,[[[1420,[[0,[1049,537]],1319]]]],[[[1421,[[0,[1049,537]],1319]]]],[[[1421,[[0,[1049,537]],1319]]]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[[[807,[[0,[1049,537]],[631,[653]],806]]],653],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[812,[[0,[1049,537]],1319]]]],[9],[9],[[[813,[[0,[1049,537]],1319]]]],[9],[[[807,[[0,[1049,537]],1319]]]],[9],[[[809,[[0,[1049,537]],1319]]]],[9],[[[813,[[0,[1049,537]],1319]]]],[9],[9],[[[809,[[0,[1049,537]],1319]]]],[9],[[]],[[]],[[]],[[]],[[[813,[[0,[1049,537]],1319]]],[[812,[[0,[1049,537]],1319]]]],[9],[9],[9],[9],[[],[[491,[490]]]],[[],[[491,[490]]]],[[[812,[[0,[1049,537,383]],383,1319]],10],[[22,[382]]]],[[[813,[[0,[1049,537,383]],383,1319]],10],[[22,[382]]]],[[[807,[[0,[1049,537]],495,806]],10],[[22,[382]]]],[[[807,[[0,[1049,537,383]],383,1319]],10],[[22,[382]]]],[[[809,[[0,[1049,537,383]],383,1319]],10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,0,0,[[[812,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[813,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[807,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[809,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[[[812,[[0,[1049,537]],1319]],501],[[807,[[0,[1049,537]],1319]]]],[[[813,[[0,[1049,537]],1319]],501],[[809,[[0,[1049,537]],1319]]]],[[[807,[[0,[1049,537]],1319]],501],[[807,[[0,[1049,537]],1319]]]],[[[809,[[0,[1049,537]],1319]],501],[[809,[[0,[1049,537]],1319]]]],[[[812,[[0,[1049,537]],1319]]]],[[[813,[[0,[1049,537]],1319]]]],[[[807,[[0,[1049,537]],1319]]]],[[[809,[[0,[1049,537]],1319]]]],[[[813,[[0,[1049,537]],1319]]]],[[[809,[[0,[1049,537]],1319]]]],[19],[19],[19],[19],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[812,[[0,[1049,537]],1319]],501],[[22,[[807,[[0,[1049,537]],1319]],[812,[[0,[1049,537]],1319]]]]]],[[[813,[[0,[1049,537]],1319]],501],[[22,[[809,[[0,[1049,537]],1319]],[813,[[0,[1049,537]],1319]]]]]],[[[807,[[0,[1049,537]],1319]],501],[[22,[[807,[[0,[1049,537]],1319]],[807,[[0,[1049,537]],1319]]]]]],[[[809,[[0,[1049,537]],1319]],501],[[22,[[809,[[0,[1049,537]],1319]],[809,[[0,[1049,537]],1319]]]]]],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],0,0,0,0,[[[812,[[0,[1049,537]],1319]]]],[[[813,[[0,[1049,537]],1319]]]],[[[807,[[0,[1049,537]],1319]]]],[[[809,[[0,[1049,537]],1319]]]],[[[813,[[0,[1049,537]],1319]]]],[[[809,[[0,[1049,537]],1319]]]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[[[1422,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[9],[[]],[9],[[]],[[]],[[]],[[],9],0,[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[[1422,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[19],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[[[1413,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[9],[[]],[9],[[]],[[]],[[]],[[],9],0,[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[[1413,[[0,[1049,537]],1319]]],[[0,[1049,537]]]],[19],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[9],[[]],[9],[[[1408,[383]],10],[[22,[382]]]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[1408,16],[[],16],[1408,16],[1408,16],[19],[[]],[[],21],[[]],[[],22],[[],22],[1408,21],[[],23],[1408],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[231],[231],[1423,19],[1424,84],[1425,1425],[[1424,1424],1424],[[1426,1425],1426],[[1425,1425],1425],[[779,1427],780],[[1428,[389,[849]]],1429],[[839,839],839],[[1426,1425]],[[1425,1425]],[[18,[14,[1430,7]]]],[[1431,848,1423]],[[779,16,1427],780],[[779,16,501],859],[[18,[14,[1432,7]]]],[[1431,848,848,1423]],[[779,[389,[1425]],1427],780],[[779,84]],[[18,[14,[1433,7]]]],[[1431,89,89,89]],[[779,16,1427],780],[[779,16,501],859],[1423,1423],[1424,1424],[[779,848],1434],0,[1435,84],0,[[1436,84,[389,[1437]]],1437],[[1438,1425,848],848],[[1439,1425,848],848],[1440,16],[[779,1425,856]],[[779,1425,856]],[[779,1425,856]],[[779,848,856],780],[[779,1425,856],780],[[779,1425]],[[779,1425,501],859],[[779,848,501],859],[[779,1425,1439,501],859],[1441,16],[1442,16],0,0,[[1443,1438,[389,[1425]]],1443],[[1444,1438,[389,[1425]]],1444],0,[[1438,848],848],[1425,84],[84,1425],[[1445,16],1445],0,[[18,1434,16],84],[[18,1434,16,84],84],[[18,1434,84,84],84],0,[1440,16],[1446,16],[1446,16],[1426,16],[848,16],[1425,16],[1447,16],[1446,16],[1446,16],[1435,16],[[1431,1431]],[[1448,1448]],[[610,610]],[[1449,1449]],[[1450,1450]],[[1431,1431]],[[855,1451,1452,1453,1436]],[848,84],0,[[1447,[389,[1434]]],[[21,[848]]]],0,[[1428,1426,1425,1454]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[1437,1437],[1455,[[193,[19]]]],[1455,[[193,[19]]]],[[],92],[1456,84],[848,84],[[]],[[1426,1426],1426],[[1425,1425],1425],[[1457,84],1457],[[]],[[1426,1426],1426],[[1425,1425],1425],[[1457,84],1457],[[779,537],1434],[[1458,[85,[16]]],1458],0,[1443,1443],[1459,1459],[779,84],[18,848],[779,848],[779,1425],[779,1425],[779,84],[1423,19],[1424,84],[[],1442],0,[[855,[389,[1423]]],855],[[842,[389,[1423]]],842],0,0,[[1460,779],1461],[[18,610]],[[1435,610,16],1435],[[1462,[389,[1423]]],1462],0,[[1463,9,16],1463],[[1464,9,16],1464],[[1440,1440],1440],[[780,780],780],[[780,780]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1458],[[[389,[1434]]],1465],[848,84],0,[848,84],[1436,1439],[848,1437],[[779,[389,[842]]],780],[[1446,1466],16],[[1446,1466],16],[[1446,1466],16],0,[[1446,1466],16],[[1446,1466],16],[[1446,1466],16],[9,9],[1456,9],0,[1467,9],[1431,9],0,[1431,848],[[1462,1425,[21,[1425]]],1425],[[1468,1425,1425],1425],0,[1452,1460],[1426,1426],[1425,1425],[1437,84],[848,1426],[848,1426],[848,1426],[[779,501],859],[1469,1439],[1452,1460],[780,16],[[1470,9],1470],0,[[[405,[9]]],92],[[18,1434,848,92]],[[779,16,[389,[842]]],780],0,0,[[779,848,1439],779],[[779,848,1439,537],779],[[1428,1426,84,[389,[1423]],[389,[1454]]]],[[1426,84,[389,[1423]]],849],[[1428,1426,84,[389,[1423]]]],[[1426,84,[389,[1454]]],849],[[1428,1426,84,[389,[1454]]]],[[1426,1426,1426],1426],[[1437,84],84],[[848,1426],1426],[[1425,1425,1425],1425],[[1463,[1181,[1471]]],1463],0,[[1464,16],1464],0,[1431],[[]],[1448],[18],[18],[[],856],0,[[],856],[780,16],[[780,1466],16],[780,16],[779,848],[1428,848],0,0,0,[1472,1473],0,[[1470,16],1470],0,[1423,1423],[1424,1424],[1436,1436],[1438,1438],[1426,1426],[1437,1437],[1456,1456],[848,848],[1425,1425],[1467,1467],[1455,1455],[1474,1474],[1431,1431],[849,849],[1457,1457],[1475,1475],[1454,1454],[815,815],[1476,1476],[1477,1477],[1478,1478],[1479,1479],[1480,1480],[1481,1481],[1482,1482],[1483,1483],[1448,1448],[808,808],[1484,1484],[1444,1444],[1485,1485],[1460,1460],[1459,1459],[1458,1458],[1486,1486],[18,18],[610,610],[1487,1487],[1488,1488],[1489,1489],[1466,1466],[1440,1440],[1490,1490],[1491,1491],[1492,1492],[1493,1493],[1494,1494],[1495,1495],[1496,1496],[1497,1497],[1449,1449],[1450,1450],[1498,1498],[1499,1499],[1500,1500],[1501,1501],[1434,1434],[1502,1502],[1435,1435],[1446,1446],[1441,1441],[1442,1442],[1469,1469],[1439,1439],[1503,1503],[1447,1447],[1504,1504],[1428,1428],[780,780],[856,856],[1505,1505],[1452,1452],[839,839],[1506,1506],[855,855],[842,842],[1507,1507],[1462,1462],[1468,1468],[1508,1508],[1509,1509],[1510,1510],[1511,1511],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[779],[1447],[[[103,[1426,7]],[389,[1454]]],849],[[1476,1476],183],[[808,808],183],[[1491,1491],183],[[1493,1493],183],[[1494,1494],183],[[1441,1441],183],[[1503,1503],183],[[1505,1505],183],[[779,[389,[855]]],780],[855,855],[842,842],0,0,[[779,1512],780],[1470,1470],[[1443,16],1443],0,[[779,[389,[842]],501],1513],0,[[855,[389,[1423]]],855],[[842,[389,[1423]]],842],[[1514,[389,[1423]]],1514],0,0,0,[[779,1515],780],[[779,[85,[84]]],780],[[779,[85,[84]]],780],[[779,[85,[84]]],780],[[779,[85,[19]]],780],[[779,1423],780],[[779,[85,[19]]],780],[[779,[85,[19]]],780],0,[[779,[389,[1423]],[389,[855]]],780],[[1431,1426,1423]],[[779,9,501]],0,[1440,16],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],[[],183],0,[[1443,16],1443],[[1444,16],1444],0,0,[[1444,848],1444],[[1443,848],1443],[[1435,1440,1491],16],[[1435,1492],16],0,[[1437,84],16],[[848,1426],16],[[1440,1440],16],[[848,848],16],[[780,501],780],[[[103,[1426,7]],[389,[1423]],[389,[1454]]],849],0,[[18,107]],[1446,16],[[1435,1440,1491],9],[1439,1436],0,[1439,16],0,0,0,[779,18],[1428,18],0,0,0,[[1443,[389,[1426]]],1443],[[1444,[389,[1426]]],1444],0,[779,848],[[1470,16],1470],0,[[1481,1516],1516],[[1481,1516],1516],[[1481,1516],1516],[[1481,1425],1516],0,[[1481,1516],1516],[[1481,1516],1516],[[1481,1516],1516],[[1463,218],1463],[[1464,218],1464],0,0,[[1463,218],1463],[[1464,218],1464],0,0,[[],1506],[1452,1460],0,[[[193,[1426]],[389,[1454]],84,84],[[103,[849,7]]]],[[[193,[1426]],[389,[1454]],84,84,[103,[849,7]]]],[[779,501]],[[18,501]],0,[[779,501]],[[18,501]],[[],1442],0,[18,16],[779],[18,1428],[[1428,848,1423,1517]],[[1428,1426,1438,1423,1517],848],[[],1423],[[],1424],[[],1436],[[],1426],[[],1425],[[],1455],[[],1474],[[],1431],[[],1457],[[],1454],[[],1453],[[],815],[[],1476],[[],1478],[[],1479],[[],1480],[[],1518],[[],1482],[[],1448],[[],808],[[],1460],[[],1519],[[],1459],[[],18],[[],610],[[],1487],[[],1488],[[],1440],[[],1497],[[],1449],[[],1450],[[],1500],[[],1435],[[],1446],[[],1439],[[],1503],[[],1447],[[],1504],[[],1452],[[],839],[[],1506],[[],855],[[],842],[[],1468],[[],1510],[[],1514],[[1465,84],1465],[[1443,84],1443],[[1459,84],1459],0,[[1520,16],1520],[[1443,16],1443],0,0,[[1443,[389,[1426]]],1443],[[1444,[389,[1426]]],1444],0,[[1443,848],1443],[[1443,[389,[1425]]],1443],[[1459,[389,[1425]]],1459],0,[[1521,84],1521],[[1443,84],1443],[[1459,84],1459],0,[[[405,[9]]]],[1446,1425],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[1501,107],[105,[[22,[1423]]]],[105,[[22,[1424]]]],[105,[[22,[1436]]]],[105,[[22,[1438]]]],[105,[[22,[1426]]]],[105,[[22,[1437]]]],[105,[[22,[848]]]],[105,[[22,[1425]]]],[105,[[22,[1467]]]],[105,[[22,[1455]]]],[105,[[22,[1474]]]],[105,[[22,[1431]]]],[105,[[22,[1457]]]],[105,[[22,[1454]]]],[105,[[22,[815]]]],[105,[[22,[1476]]]],[105,[[22,[1477]]]],[105,[[22,[1478]]]],[105,[[22,[1479]]]],[105,[[22,[1480]]]],[105,[[22,[1481]]]],[105,[[22,[1482]]]],[105,[[22,[1483]]]],[105,[[22,[1448]]]],[105,[[22,[808]]]],[105,[[22,[610]]]],[105,[[22,[1487]]]],[105,[[22,[1488]]]],[105,[[22,[1489]]]],[105,[[22,[1466]]]],[105,[[22,[1440]]]],[105,[[22,[1491]]]],[105,[[22,[1493]]]],[105,[[22,[1494]]]],[105,[[22,[1495]]]],[105,[[22,[1496]]]],[105,[[22,[1450]]]],[105,[[22,[1498]]]],[105,[[22,[1500]]]],[105,[[22,[1501]]]],[105,[[22,[1434]]]],[105,[[22,[1441]]]],[105,[[22,[1442]]]],[105,[[22,[1469]]]],[105,[[22,[1504]]]],[105,[[22,[1505]]]],[105,[[22,[1452]]]],[105,[[22,[839]]]],[105,[[22,[1506]]]],[105,[[22,[1508]]]],[105,[[22,[1510]]]],[105,[[22,[1511]]]],[[1445,84],1445],0,0,[[1470,9],1470],[[1445,84],1445],[[1470,84],1470],0,0,[[1426,1426],84],[[1426,1426],84],[[848,1426],84],[[848,1426],84],[[1425,84],1425],[[1425,1425],1425],[[1425,1425],84],[[[193,[1426]],[389,[1423]],84,84],[[103,[849,7]]]],[780,16],[[780,1466],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],856],0,[[779,84],780],[[779,84],780],[[1443,848],1443],[[1444,848],1444],[780,1425],[780,16],[[780,1466],16],[780,16],[[780,1466],16],[[1443,16],1443],[[1458,16],1458],0,[51,1501],0,[[1464,51],1464],0,0,[780,16],[[780,1466],16],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[1456],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[779],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],[186],0,0,[[],1479],[[1458,16],1458],[[1520,16],1520],[[1443,16],1443],[[1444,16],1444],[780,16],0,0,0,0,[1481,1516],[18,1449],[1481,1522],[779],[[1423,1423],16],[[1424,1424],16],[[1436,1436],16],[[1438,1438],16],[[1426,1426],16],[[1437,[1181,[84]]],16],[[1437,1437],16],[[1456,1456],16],[[848,848],16],[[1425,1425],16],[[1467,1467],16],[[1455,1455],16],[[1474,1474],16],[[1431,1431],16],[[849,849],16],[[1457,1457],16],[[1475,1475],16],[[1454,1454],16],[[815,815],16],[[1476,1476],16],[[1477,1477],16],[[1478,1478],16],[[1479,1479],16],[[1480,1480],16],[[1481,1481],16],[[1482,1482],16],[[1483,1483],16],[[1448,1448],16],[[808,808],16],[[1485,1485],16],[[1460,1460],16],[[18,18],16],[[610,610],16],[[1487,1487],16],[[1488,1488],16],[[1489,1489],16],[[1466,1466],16],[[1440,1440],16],[[1490,1490],16],[[1491,1491],16],[[1492,1492],16],[[1493,1493],16],[[1494,1494],16],[[1495,1495],16],[[1496,1496],16],[[1449,1449],16],[[1450,1450],16],[[1498,1498],16],[[1499,1499],16],[[1500,1500],16],[[1501,1501],16],[[1434,1434],16],[[1502,1502],16],[[1441,1441],16],[[1442,1442],16],[[1469,1469],16],[[1439,1439],16],[[1503,1503],16],[[856,856],16],[[1505,1505],16],[[1452,1452],16],[[839,839],16],[[1506,1506],16],[[855,855],16],[[1511,1511],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[1428,1426,495],848],0,0,0,0,0,0,[1450,107],[84,848],[84,848],[1447,16],0,[84,848],[84,848],[[1465,84],1465],[[1521,84],1521],[[],1455],[[1437,84],1437],[[848,84],848],[[848,1425],848],[[839,848],848],[[779,848]],[[779,84]],[[779,84]],0,[[1428,380]],[[848,1426]],[[848,84]],[[848,84]],[[855,84],855],0,0,0,[1506,1423],0,0,[[855,1505],855],[[842,1505],842],0,[[855,1476],855],0,0,[[1523,[389,[1423]]],1523],[[1445,1423],1445],[[1460,1423],1460],0,0,0,[[1435,1497],[[103,[1489,7]]]],0,[[1462,1425],1462],[[1462,1425],1462],[[1462,84],1462],[[1463,9],1463],[[1464,9],1464],[[1443,[389,[1426]]],1443],[[1444,[389,[1426]]],1444],[[1443,848],1443],[[1443,[389,[1425]]],1443],[[1459,[389,[1425]]],1459],[1426,1426],[1425,1425],[[1423,10],[[22,[382]]]],[[1424,10],[[22,[382]]]],[[1436,10],[[22,[382]]]],[[1438,10],[[22,[382]]]],[[1426,10],[[22,[382]]]],[[1437,10],[[22,[382]]]],[[848,10],[[22,[382]]]],[[1425,10],[[22,[382]]]],[[1431,10],[[22,[382]]]],[[849,10],[[22,[382]]]],[[1457,10],[[22,[382]]]],[[1475,10],[[22,[382]]]],[[1454,10],[[22,[382]]]],[[815,10],[[22,[382]]]],[[1476,10],[[22,[382]]]],[[1476,10],[[22,[382]]]],[[1477,10],[[22,[382]]]],[[1478,10],[[22,[382]]]],[[1479,10],[[22,[382]]]],[[1480,10],[[22,[382]]]],[[1481,10],[[22,[382]]]],[[1482,10],[[22,[382]]]],[[1483,10],[[22,[382]]]],[[1448,10],[[22,[382]]]],[[808,10],[[22,[382]]]],[[1484,10],[[22,[382]]]],[[1444,10],[[22,[382]]]],[[1485,10],[[22,[382]]]],[[1460,10],[[22,[382]]]],[[1459,10],[[22,[382]]]],[[1458,10],[[22,[382]]]],[[1486,10],[[22,[382]]]],[[18,10],[[22,[382]]]],[[610,10],[[22,[382]]]],[[1487,10],[[22,[382]]]],[[1488,10],[[22,[382]]]],[[1489,10],[[22,[382]]]],[[1466,10],[[22,[382]]]],[[1440,10],[[22,[382]]]],[[1490,10],[[22,[382]]]],[[1491,10],[[22,[382]]]],[[1492,10],[[22,[382]]]],[[1493,10],[[22,[382]]]],[[1494,10],[[22,[382]]]],[[1495,10],[[22,[382]]]],[[1496,10],[[22,[382]]]],[[1497,10],[[22,[382]]]],[[1499,10],[[22,[382]]]],[[1500,10],[[22,[382]]]],[[1501,10],[[22,[382]]]],[[1434,10],[[22,[382]]]],[[1502,10],[[22,[382]]]],[[1435,10],[[22,[382]]]],[[1446,10],[[22,[382]]]],[[1441,10],[[22,[382]]]],[[1442,10],[[22,[382]]]],[[1469,10],[[22,[382]]]],[[1439,10],[[22,[382]]]],[[1447,10],[[22,[382]]]],[[1504,10],[[22,[382]]]],[[780,10],[[22,[382]]]],[[[859,[383]],10],[[22,[382]]]],[[856,10],[[22,[382]]]],[[1505,10],[[22,[382]]]],[[1505,10],[[22,[382]]]],[[1452,10],[[22,[382]]]],[[839,10],[[22,[382]]]],[[1506,10],[[22,[382]]]],[[1507,10],[[22,[382]]]],[[1462,10],[[22,[382]]]],[[1468,10],[[22,[382]]]],[[1508,10],[[22,[382]]]],[[1509,10],[[22,[382]]]],[[1510,10],[[22,[382]]]],[[1511,10],[[22,[382]]]],[1447,[[21,[1434]]]],[[780,779],780],0,[[],856],0,0,[[1470,[389,[1453]]],1470],[[855,815],855],0,0,[[855,1524,1452],84],0,0,[[779,501]],[[18,501]],[[1428,501]],[[18,501]],0,[18],[[18,92]],[[1490,1440,16],107],[[1492,1490,16],107],[[18,1492],107],[[1521,1460],1521],[[1465,1460],1465],[[1443,1460],1443],[[1523,16],1523],[[1470,16],1470],[[1519,1460],1519],[[1507,16],1507],0,0,0,0,0,0,0,[18,188],0,[[]],[[]],[[]],[1525,1423],[619,1423],[[]],[1424,1423],[1515,1423],[[]],[[]],[[]],[[]],[1525,1424],[1515,1424],[1423,1424],[[]],[[]],[[]],[[[85,[84]]],1426],[[],1426],[[]],[[[85,[84]]],1426],[[],1426],[[[1181,[84]]],1437],[1098,1437],[[[1180,[84]]],1437],[[[1181,[84]]],1437],[[[1182,[84]]],1437],[1098,1437],[[[1182,[84]]],1437],[[]],[[]],[[[85,[1426]]],848],[[]],[[]],[[],1425],[[[85,[84]]],1425],[[],1425],[[[85,[84]]],1425],[[]],[[]],[[[14,[1455,7]]],1467],[1474,1467],[1455,1467],[[]],[[]],[[]],[1526,849],[1431,849],[1527,849],[1475,849],[[]],[1528,849],[[[103,[849,7]]],849],[1529,849],[1530,849],[1531,849],[84,1457],[[]],[[]],[[]],[[],1454],[737,1453],[[]],[815,1453],[1505,1453],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1456,808],[[]],[1456,808],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[188,1494],[518,1494],[89,1494],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,1434],[[]],[107,1434],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1425,1503],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,839],[733,839],[1425,839],[[]],[107,855],[[]],[107,855],[107,855],[[[629,[92]]],855],[92,855],[107,842],[[[629,[92]]],842],[855,842],[[]],[107,842],[[[14,[1481,7]]],842],[1451,842],[92,842],[[]],[[[389,[1509]]],1462],[[]],[[]],[[]],[[],1509],[[[629,[92]]],1509],[[],1509],[107,1509],[107,1509],[[[629,[92]]],1509],[[]],[[[389,[1532]]],1509],[92,1509],[[],1509],[[]],[[]],[[]],[19,1423],[19,1423],[84,1424],[[[389,[[629,[92]]]],[389,[1533]]],1462],[[1481,1534],1516],[[1426,1425],848],[231,1463],[[[1181,[51]],231],1464],[19,1423],[84,1424],[[[85,[9]],[193,[19]]],1455],[537,1535],[[[389,[842]]],1535],[[[389,[842]],1517],1536],[[84,84],1424],[[1469,1436],1439],[[1426,1426],848],[[1426,1425],848],[[[103,[19,7]]],1477],[[1481,1537],1516],[[[193,[1426]]],848],[[1481,1522],1516],[[19,19,19],1423],[[84,84,84],1424],[[[85,[9]],[193,[19]]],1455],[[19,19,19],1423],[[19,19,19,19],1423],[[84,84,84,84],1424],[[[85,[9]],[193,[19]]],1455],[[19,19,19,19],1423],[[84,84,84,84],1424],[[[85,[9]],[193,[19]]],1455],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19,19,19],1424],[[19,19,19,19],1424],[[[193,[19]]],1477],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[389,[1532]]],1462],[[1426,1426],848],[[[389,[[629,[92]]]]],1462],[19,1423],[84,1424],[13],[12],[13],[12],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[12],[13],[13],[12],[13],[12],[12],[13],[[[389,[1437]],[389,[1437]]],848],[1513,16],[1513,16],[1423,19],[1424,84],[780,16],[[1426,[14,[1481,7]]],849],[[1428,1426,[14,[1481,7]]]],[[1426,[14,[1481,7]],1423],849],[[1428,1426,[14,[1481,7]],1423]],[[1423,84],1423],0,0,0,[18,[[0,[322,364,377,376]]]],0,0,[779],[779],[[1506,1423],1423],[[779,501],859],[1452,1460],[[1518,84],1518],0,0,0,[[1447,1434],16],[780,16],0,[1446,16],[[1423,186]],[[1424,186]],[[1436,186]],[[1438,186]],[[1456,186]],[[1454,186]],[[815,186]],[[1476,186]],[[1480,186]],[[1482,186]],[[1483,186]],[[808,186]],[[1485,186]],[[1440,186]],[[1491,186]],[[1492,186]],[[1434,186]],[[1441,186]],[[1442,186]],[[1503,186]],[[1505,186]],0,[[779,[389,[855]]],780],[855,855],[842,842],[848,84],[1467,9],[1455,9],[1474,9],[[1465,[389,[1437]]],1465],0,[[1463,9,16,16],1463],[[1464,9,16,16],1464],[780,780],[[18,1434]],[[1468,1425],1503],[[1470,[389,[842]]],1470],0,[[[389,[1437]],84,[389,[1454]]],849],[[1428,[389,[1437]],84,[389,[1454]]]],[[779,501],859],[1518,1518],[[],1458],[[1470,1436],1470],[1439,1436],[[779,501],859],[1439,16],[1439,1436],[[1458,84],1458],[[779,501],859],[[779,501],859],[[],856],[1446,[[21,[1426]]]],[780,[[21,[1426]]]],[780,16],0,[[1443,16],1443],[[1458,16],1458],[[779,1517],780],0,[[779,[389,[842]],1517],780],[[1520,501],1520],[[1535,501],1535],0,0,[[1443,1434],1443],[1456,808],[779,1434],[[1470,1434],1470],[[1444,1434],1444],[[1459,1434],1459],0,0,0,0,0,0,0,0,0,[[1520,537],1520],[[1470,537],1470],[[1459,537],1459],[[1458,537],1458],0,0,0,0,0,0,[[808,848,848,1423],849],[[779,[389,[1509]]],780],[[[389,[1462]]],1523],[[1428,808,848,848,1423]],0,0,[[[389,[1462]],[389,[842]]],1523],0,[1462,1510],0,[[18,[389,[[629,[92]]]],[389,[1533]]]],0,[[779,537,501],859],0,[[1423,9],19],[[1424,9],84],[[1438,9],1436],[[1426,9],84],[[1425,9],84],[1455,1423],[1474,84],0,[[1423,9],19],[[1424,9],84],[[1438,9],1436],[[1426,9],84],[[1425,9],84],[1455,1423],[1474,84],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[1460,[389,[839]]],1460],0,[[779,501]],[[18,501]],[[779,501]],[[18,501]],[[92,9],9],[[18,779]],[1464,1464],[1424,84],[[779,848,1434,856],780],[[780,856],780],[[1452,780],1538],0,[780,[[21,[1426]]]],[1446,[[21,[1426]]]],0,[[1452,780,16],1538],[[779,848,16,1434,856],780],[[1443,16],1443],[[1444,16],1444],0,0,0,[[1470,16],1470],[856,16],0,[[1447,1434]],[[848,848],848],[[1437,1437],1437],[[848,848],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[842,779,[21,[16]],84,[389,[1453]]],1539],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[842,1452,1453,1436],1540],0,[1423,16],[1424,16],[1447,16],[[1447,1434],16],[18,16],[1446,16],[1431,16],[1454,16],[1481,16],[1448,16],[855,16],[842,16],[779,16],[1444,16],[1426,16],[848,16],[1425,16],[1469,16],[1439,16],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[18,92],16],[1444,16],[1446,16],[[],16],[848,16],[1440,16],[1423,16],[780,16],[18,16],[[1447,1434],16],[848,16],[[779,848],16],[1459,16],[1457,16],[839,16],0,[1446,16],[780,16],[18,16],[1431,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[1469,16],[1439,16],[779,16],[855,855],[842,842],0,0,0,0,[[1435,1491],16],[[1435,1491],16],[[1435,1491],16],0,[[779,[389,[842]]],780],0,0,[[1511,1517],1501],[[780,1434],780],[[1464,51],1464],0,0,0,0,[1446,[[21,[1426]]]],0,[1444,1442],[779,1442],[1428,1442],0,0,[[18,1426],[[21,[1442]]]],[[1447,1426,84],[[21,[1442]]]],[1447,392],[[18,1442],1428],0,[779,1439],[[1428,107,815,1423,84],[[14,[1481,7]]]],[[1541,779]],[[1428,107,815,1423],[[14,[1481,7]]]],[[1470,231],1470],0,[[[389,[1434]]],1521],[848,84],0,[848,1426],[848,1426],[848,84],[1436,1439],[848,1426],[839,1425],[1425,84],[1425,84],[[[389,[[1181,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]],[0,[1542,[458,[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]]]]]]],[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]]]]]]]],[[1426,1426,84],1426],[[848,1425],1426],[[848,1425],1426],[[848,848,84],848],[[],1506],[[1506,779]],[[1506,779],[[21,[1506]]]],[[[103,[1426,7]],[389,[1454]]],849],[[855,[21,[84]]],855],0,0,[[[85,[1426]],[389,[1454]]],849],[[1428,[85,[1426]],[389,[1454]]]],[[1423,84],1423],[[779,[389,[842]]],780],0,[[1509,18,1482,1503],[[22,[1543,1544]]]],[[1462,779,1425],[[21,[1425]]]],[[1462,18,1425],[[22,[1543,1544]]]],[[18,1434],[[21,[1545]]]],[[18,[389,[107]],[389,[1467]],1482],1456],[18,[[14,[1546,7]]]],[[1470,16],1470],[[1447,1434,16]],[[1464,16],1464],[780,16],0,0,0,0,0,[1439,1469],0,0,[1439,16],0,[[1462,16],1462],0,[[779,537],1434],[[1470,1425],1470],[[1460,[389,[839]]],1460],0,[780],[[1440,1440],16],[[1497,1489],16],[[1426,1426],1426],[[1425,1425],1425],0,0,0,[[1547,84],1547],[[1463,9],1463],[[1464,9],1464],0,0,[[1463,[21,[9]]],1463],[1425,84],[[1465,84],1465],[[1458,84],1458],[[1462,84],1462],[779,848],[[1459,[389,[1425]]],1459],[[1462,1425],1462],0,0,0,0,0,[[1521,84],1521],[[1458,84],1458],[[1462,84],1462],[[779,501]],[[18,501]],[[779,501]],[[18,501]],[[18,779]],0,[1452,1460],[[779,[389,[842]],501],[[859,[21]]]],[[779,[389,[1462]],501],[[859,[21]]]],0,0,[1431,849],0,[780,16],[1446,16],0,0,[[1426,1426],1426],[[1425,1425],1425],0,0,[[1547,84],1547],0,[[1463,9],1463],[[1464,9],1464],0,0,[1425,84],[[1465,84],1465],[[1443,84],1443],[[1459,84],1459],[779,848],[[1547,84],1547],0,[[1458,84],1458],0,[[1458,84],1458],[779,1425],[[1523,1425],1523],[[1470,1425],1470],[[1459,[389,[1425]]],1459],0,0,0,[[1521,84],1521],[[1443,84],1443],[[1459,84],1459],0,0,0,0,[[779,[389,[855]]],780],[84,815],[855,855],[842,842],[[1443,16],1443],[[1444,16],1444],0,[[18,1442]],[[1424,84],1424],[[1424,1424],1424],[[1425,84],1425],[[1425,1425],1425],[[1425,84]],[18,[[21,[1502]]]],[1435,[[21,[1502]]]],[1512,1470],0,[[1424,84],1424],[[1460,84],1460],0,[[1443,218],1443],[1456,107],[1491,92],0,0,[1425,1425],[[],1458],[[[389,[842]]],1520],[[537,[389,[842]]],1535],[[1548,[389,[1434]]],1521],[[1549,[389,[1434]]],1465],[[[389,[842]]],1443],[[84,84],1426],[[84,84],1437],[[[14,[[1551,[1550]],7]],808],1456],[537,1547],[[84,84],1425],[[[85,[9]],1423],1455],[[[85,[9]]],1474],[[[389,[84]],[389,[1423]]],1454],[[18,1442,1434,848,848],779],[[84,1476],815],[[[389,[842]]],1523],[[16,[389,[842]]],1552],[[16,[389,[842]]],1553],[1471,1463],[[[389,[842]]],1554],[1517,1536],[[[389,[842]]],1541],[84,1445],[[16,[389,[842]]],1555],[[1471,[1181,[1471]]],1464],[[[389,[1434]]],1444],[[[85,[16]]],1458],[[1440,1491],1492],[1511,1501],[537,1434],[[1441,1434],1442],[[18,1442,848],1428],[780,859],[[[389,[107]]],855],[[[389,[1462]]],1507],[[[389,[1509]]],1462],[[],1514],0,0,0,[1517,1498],0,0,[779,1434],0,[779,1426],[[],1457],[[],1454],[[],1460],[1452,1538],[1506,1538],[1425,1425],[[],1434],[[1547,9],1547],0,0,[[1435,1491],9],0,0,0,[[1463,9,16],1463],[[1464,9,16],1464],0,0,[[780,[389,[842]]],780],[[780,501],780],[[780,1500],780],[[780,1500],780],[[780,[389,[842]]],780],[[780,[389,[842]]],780],[[780,501],780],[[780,501],780],[[1520,[21,[16]]],1520],[[1443,16],1443],0,0,[[1536,16],1536],[[1447,1434]],[[18,1498]],[[1450,1517]],0,0,[[[21,[1462]],[21,[842]]],1523],[[18,501]],0,[[18,501]],[[1444,1441],1444],0,0,[[1464,1556],1464],0,0,[18,1557],[[1460,[389,[839]]],1460],0,0,[[779,501]],[[18,501]],[[780,1558]],[[779,501]],[[18,501]],0,0,0,[[1460,848],849],[[1462,779,848]],[[1514,779,848]],[[1428,848,1510,1532]],[779,1428],0,[[779,848],1428],0,[[1476,1476],[[21,[183]]]],[[808,808],[[21,[183]]]],[[1491,1491],[[21,[183]]]],[[1493,1493],[[21,[183]]]],[[1494,1494],[[21,[183]]]],[[1441,1441],[[21,[183]]]],[[1503,1503],[[21,[183]]]],[[1505,1505],[[21,[183]]]],[[1470,16],1470],0,0,0,[1435,84],[[1443,1438],1443],[[1444,1438],1444],0,0,0,[18,84],[1435,84],0,0,0,0,0,0,[[1440,1440],1440],[84,1437],0,0,[18,[[21,[1426]]]],[18,[[21,[1426]]]],[18,[[21,[1426]]]],[1452,1460],0,[[779,1434,780,1485,501],21],[[779,1434,780,501],21],0,[[84,84],1426],[[1481,1516],848],[[1481,1537],848],0,[[1438,848],1426],0,0,[1439,16],[[1463,1517],1463],[[1464,1517],1464],0,0,0,[1446,[[21,[1426]]]],0,[1446,[[21,[51]]]],0,0,[1446,16],[1446,16],[1446,16],[1446,16],0,0,[84,815],[[779,537,501],859],[[779,848,1427],780],[1423,19],[1424,84],[[779,16,[389,[842]]],780],[[779,[379,[[379,[[379,[[379,[379]]]]]]]],[379,[[379,[[379,[[379,[379]]]]]]]],[389,[842]]],780],[855,855],[842,842],0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[19,188],[[1428,848,[389,[1457]],[389,[1423]],[389,[1454]]]],0,0,0,[[779,848],16],[[848,[389,[1457]],[389,[1423]]],849],[[1428,848,[389,[1457]],[389,[1423]]]],[[848,[389,[1457]],[389,[1454]]],849],[[1428,848,[389,[1457]],[389,[1454]]]],[[1455,848,[21,[84]]],1455],[[1474,[85,[9]],[85,[9]]],1474],[[1542,[389,[[1181,[1542]]]],[389,[[1181,[1542]]]]],1542],[[1542,[389,[[1181,[1542]]]],[389,[[1181,[1542]]]]],1542],0,[92],[[1447,1434]],[780],[18],[[18,177]],[[1431,9]],[[1431,9]],[1447],[[779,[0,[364,[379,[[0,[364,[379,[[0,[364,[379,[[0,[364,[379,[[0,[364,379]]]]]]]]]]]]]]]]]]]],[[779,[379,[[379,[[379,[[379,[379]]]]]]]],[379,[[379,[[379,[[379,[379]]]]]]]]]],[779],[[1521,16],1521],[[1465,16],1465],[[1443,16],1443],[[1459,16],1459],0,0,0,[[1443,218],1443],0,0,[[1453,1452],815],[[1505,1452],815],[[1508,1425,1425],1425],0,[[[389,[1434]]],1521],[848,84],0,[848,1426],[839,1425],[848,1426],[848,84],[1436,1439],[848,1426],[1425,1425],[[1431,1559,1426]],[[1462,84,1425],1462],[[848,1559],848],0,0,[1426,1426],[1425,1425],[[1428,1426],1426],[[1428,84],84],[[1428,1425],1425],[[1523,[389,[1457]]],1523],[[1460,[389,[1457]]],1460],[[1462,[389,[1457]]],1462],0,0,0,0,[[18,610,501],1449],[84,1457],[84,839],[1517,1498],0,[[779,501],859],0,[18,848],[1435,848],0,0,0,0,[[1443,[85,[16]]],1443],[[1458,[85,[16]]],1458],[[1458,1560],1458],0,0,[[1458,1425],1458],[[779,[21,[1436]]]],[[780,[21,[1436]]]],[[779,848,[21,[1436]]]],[[779,1425]],0,0,[1446,16],[780,16],[1446,16],[1446,16],[1446,16],[[1520,16],1520],0,[[779,16,[389,[842]]],780],[[779,[379,[[379,[[379,[[379,[379]]]]]]]],[379,[[379,[[379,[[379,[379]]]]]]]],[389,[842]]],780],[[1520,16],1520],[[1523,16],1523],[[1511,16,1517],1501],[[1507,16],1507],0,0,0,0,0,[[1535,[389,[842]]],1535],0,0,[[1523,856],1523],[[1541,856],1541],[[1507,856],1507],[[1462,856],1462],0,0,0,0,0,[779,780],[[1423,172],22],[[1424,172],22],[[1436,172],22],[[1438,172],22],[[1426,172],22],[[1437,172],22],[[848,172],22],[[1425,172],22],[[1467,172],22],[[1455,172],22],[[1474,172],22],[[1431,172],22],[[1457,172],22],[[1454,172],22],[[815,172],22],[[1476,172],22],[[1477,172],22],[[1478,172],22],[[1479,172],22],[[1480,172],22],[[1481,172],22],[[1482,172],22],[[1483,172],22],[[1448,172],22],[[808,172],22],[[610,172],22],[[1487,172],22],[[1488,172],22],[[1489,172],22],[[1466,172],22],[[1440,172],22],[[1491,172],22],[[1493,172],22],[[1494,172],22],[[1495,172],22],[[1496,172],22],[[1450,172],22],[[1498,172],22],[[1500,172],22],[[1501,172],22],[[1434,172],22],[[1441,172],22],[[1442,172],22],[[1469,172],22],[[1504,172],22],[[1505,172],22],[[1452,172],22],[[839,172],22],[[1506,172],22],[[1508,172],22],[[1510,172],22],[[1511,172],22],[[1456,[389,[1467]],1482]],[[1428,1429,[389,[849]]]],0,[[848,84]],[[848,1426]],[[779,848]],[[1428,848]],[[18,1500]],[[18,16]],[[1447,1434]],[[779,16]],[[1447,16]],[[1447,1434,1497]],[[18,1479]],[[848,84]],[[779,84]],[[779,[389,[1437]]]],[[1428,1442]],[[848,84]],[[779,84]],[[779,1425]],[[779,84]],[[779,84]],[[779,1425]],[[779,84]],[[18,1557]],[[1456,[85,[9]],[389,[1467]],1482]],[[18,84]],[[18,[0,[218,376,377]]]],[[848,84]],[[779,84]],[[18,[0,[322,364,377,376]]]],[[779,[389,[[14,[1452,7]]]]]],[[18,[389,[[14,[1452,7]]]]]],[[848,84]],[[779,16]],[[18,1506]],[[848,84]],[[779,84]],[[779,[389,[1437]]]],[[18,779]],[[1460,1561],1460],0,0,0,0,[1440,16],[1434,107],[1441,92],[1442,107],[[1523,[389,[842]]],1523],0,[[1520,779,501],1513],[[1521,18,501],859],[[1465,18,501],859],[[1443,18,501],[[21,[[859,[21]]]]]],[[1547,779,501],859],[[1470,779],1562],[[1444,18,501],859],[[1460,779,501],859],[[1519,18,501],859],[[1459,779,501]],[[1458,779,501],1563],[[1521,18,16,501],[[21,[859]]]],[[1465,18,16,501],[[21,[859]]]],[[18,16,1521,1521,501],[[21,[859]]]],[[18,16,1465,1465,501],[[21,[859]]]],[[779,16,1521,1521,501],859],[[779,16,1465,1465,501],859],[[1521,779,16,501],[[21,[859]]]],[[1465,779,16,501],[[21,[859]]]],[[1520,16],1520],0,[[1535,779,9,9,218],780],[[1521,779,501],859],[[1465,779,501],859],[[1519,779,501],859],[[1462,16],1462],0,[[1444,18,1460,16]],[1445,1445],[[1458,779,84,9,501],1563],[[1521,16],1521],[[1465,16],1465],0,0,[[18,1434,501],21],[[18,1434,[21,[1426]],501],21],[[18,1434,501],21],[[18,1434,848,501],21],[[18,1434,[389,[842]]],21],[[1535,779,501],[[859,[21]]]],[[1520,779,501],1513],[[1464,16],1464],0,[[1458,779,501],1563],[[1437,84],1437],[[848,84],848],[[1518,84],1518],[[848,1425],848],[779],[[839,848],848],[1462,1462],[779],0,0,[1452,1460],[[848,1426],84],[[815,1423],1480],[1512,1470],[1456,[[85,[9]]]],[848,1425],[1467,[[85,[9]]]],[1481,1425],[[855,84],855],[1462,[[21,[1425]]]],[[1514,84],1514],0,0,0,0,0,0,[1456,1425],[[779,9]],[[51,1517],1501],0,[[779,[389,[855]]],780],[1523,1523],[855,855],[842,842],0,[[779,[389,[842]]],780],[855,855],[842,842],[[1464,51],1464],[[1464,16],1464],0,[1462,1509],0,[[1547,[389,[1425]]],1547],[779,1564],[[1518,84],1518],0,0,0,[779,1564],[1437,84],0,0,[[1463,[389,[51]]],1463],0,[779,780],[84,1425],[[848,84]],[[848,84]],[1431,[[103,[1565,7]]]],[[848,84]],[[848,84]],[848,1425],[[1474,[21,[84]]],392],0,0,[[1547,9],1547],0,0,0,[[1464,51],1464],[[1458,16],1458],0,[[1458,16],1458],[1447],[1447],[[18,1434,1545]],[855,855],[842,842],0,0,[[1547,16],1547],0,[[1523,[389,[1454]]],1523],[[1460,1454],1460],0,0,[[779,1454,92]],[[779,[389,[855]]],780],[855,855],[842,842],0,[1506,1423],0,[779,[[14,[1452,7]]]],[18,[[14,[1452,7]]]],0,0,[779,1452],[[18,501]],[[18,779]],[[1426,1426],1425],[[1426,1425],1426],[[1425,1425],1425],[[1426,1425]],[[1425,1425]],[[1428,848],1428],[[1463,1517],1463],[[1464,1517],1464],0,0,[839,1425],[[1447,1434]],[780],0,[1491,92],[[84,84],839],0,[[],107],[610,610],[1450,1450],[[18,[103,[1566,7]]],[[103,[1484,7]]]],[[18,501]],0,[[18,501]],[18,[[14,[[1551,[1550]],7]]]],0,0,[[1524,1426,1438,1517,815,1423],849],[1541,92],[[1445,[389,[842]]],1445],[1481,92],[[1464,[389,[842]]],1464],[[1428,1426,1438,1517,815,1423],848],[855,92],[842,92],0,0,0,0,0,0,0,0,0,0,0,0,[[1464,1423],1464],[[1470,1423],1470],[1506,1423],0,0,[[1470,[21,[1423]]],1470],0,0,0,[[1517,1517],1501],[[779,1512],780],[[779,1512],780],0,[[[1181,[9]],1517],1501],[[1470,1505],1470],[[855,1505],855],[[842,1505],842],0,[[779,1505],84],[1452,[[103,[1505,7]]]],0,[849,808],0,[[1462,1482],1462],0,[1509,[[21,[1425]]]],[[18,779]],0,0,0,0,[1446,51],[[1507,[389,[1423]]],1507],[[1462,[389,[1423]]],1462],0,0,[[1443,16],1443],[1423,[[85,[19]]]],[1424,[[85,[84]]]],[1436,84],[1423,[[85,[84]]]],[1423,1423],[1424,1424],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1425,1426],[1424,[[85,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1436,84],[1438,1425],[1423,[[85,[19]]]],[1424,[[85,[19]]]],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1423],[1424],[1426,1425],[[1447,1434]],[[779,16,[389,[842]]],780],[[[389,[1434]]],1465],[848,84],0,[1436,1439],[1436,1439],[848,84],[1460,839],0,[[1464,16],1464],0,[[848,1425],848],[[1431,1425]],[[849,1425]],[[18,1442,1425]],0,[780,16],[[780,1466],16],[[1541,16],1541],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[18,92],[[22,[1567,1544]]]],[[18,92,1503],[[22,[1568,1544]]]],[[18,92,1482,1503],[[22,[1543,1544]]]],[[1477,1478],1477],0,0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[779,780],[[1523,779],780],[[1552,779],780],[[1553,779],780],[[1463,779],780],[[1554,779],780],[[1536,779],780],[[1541,779],780],[[1445,779],780],[[1555,779],780],[[1518,779],780],[[1464,779],780],[[1470,779],780],[[610,779]],[[1435,779]],[[1446,779]],[[1452,779]],[[1506,779]],[[1507,779],780],[[1462,779],780],[[1514,779],780],[779,16],[855,855],[842,842],0,0,[[848,848],848],[[780,780],780],[[856,856],856],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1463,16],1463],0,[1509,[[21,[92]]]],0,0,[18,848],[18,1425],0,[[1507,[389,[848]]],1507],[[1462,[389,[848]]],1462],0,0,0,[[84,84],1425],[1446,1425],0,[[779,501],859],[1518,1518],[1464,1464],[[],1458],[[1470,1436],1470],[1439,1436],[[779,501],859],[[779,501],859],[1439,16],[[1458,84],1458],0,0,[1472,1473],[849,848],[779,1506],0,[779,1506],[[84,[389,[1437]],[389,[1454]]],849],[[1428,84,[389,[1437]],[389,[1454]]]],[[1443,16],1443],[[1458,16],1458],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,16],[18,16],[1435,16],0,[779],0,[[18,1434],16],[[779,[389,[855]]],780],[855,855],[842,842],0,[1506,1423],[[780,218]],0,0,0,[[1535,84],1535],[848,84],[1467,9],[1455,9],[1474,9],0,0,[[1521,[389,[1437]]],1521],0,[1452,1460],[1506,1423],0,0,0,0,[1506,1454],0,[[1434,537],1434],[[18,1434,501]],[[1428,848],1428],[[1439,1436],1439],[[1439,16],1439],[[779,1442,501],859],[[1428,1442],1428],[[779,1439,501],859],[[1439,1436],1439],[[1439,16],1439],[[1439,16],1439],[[780,848],780],[[1547,[0,[376,377,218]]],1547],[[1459,16],1459],0,[808,1431],0,[16,1552],[[1535,16],1535],[[1523,16],1523],[[1541,16],1541],0,0,0,0,[779,16],[1438,1436],0,0,[848,1437],[1438,1436],0,0,0,0,[848,1437],[1435,84],0,[1435,1425],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[1569,[[0,[1049,537,322]],[0,[1319,364]]]],[1569,[[0,[1049,537,322]],[0,[1319,364]]]]],[[1569,[[0,[1049,537,322]],[0,[1319,364]]]]]],[[[1569,[[0,[1049,537,322]],[0,[1319,364]]]],[1569,[[0,[1049,537,322]],[0,[1319,364]]]]],[[1569,[[0,[1049,537,322]],[0,[1319,364]]]]]],[[[1569,[[0,[1049,537,322]],[0,[1319,364]]]],[1569,[[0,[1049,537,322]],[0,[1319,364]]]]],[[1569,[[0,[1049,537,322]],[0,[1319,364]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1570,1321],[1321,1321],[[[1571,[322,322,322]]],[[1571,[322,322,322]]]],[[[1569,[322,322]]],[[1569,[322,322]]]],[1570,1570],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1321],[[],[[1571,[1570]]]],[[],[[1569,[1570]]]],[[],1570],[9],[9],[1571],[9],[1569],[9],[9],[9],[1571],[9],[1569],[9],[105,[[22,[[1571,[[0,[214,1049,537]],214,1570]]]]]],[105,[[22,[[1569,[[0,[214,1049,537]],1570]]]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[179,16],[[[1571,[[0,[1049,537]],[379,[[379,[[379,[379]]]]]],1319]],[1571,[[0,[1049,537]],[379,[[379,[[379,[379]]]]]],1319]]],16],[[[1569,[[0,[1049,537]],1319]],[1569,[[0,[1049,537]],1319]]],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[1571,[[0,[1049,537,365]],365,1319]],380]],[[[1571,[[0,[1049,537]],1319]],380]],[[[1569,[[0,[1049,537,365]],1319]],380]],[[[1569,[[0,[1049,537]],1319]],380]],0,[1321,188],[[1321,10],[[22,[382]]]],[[[1571,[383,383,1319]],10],[[22,[382]]]],[[[1569,[383,1319]],10],[[22,[382]]]],[[1570,10],[[22,[382]]]],[[]],[85,[[1571,[[0,[1049,537]],1570]]]],[[]],[[[1572,[1570]]],[[1571,[1570]]]],[[[85,[[0,[1049,537]]]]],[[1569,[[0,[1049,537]],1570]]]],[[[1573,[1570]]],[[1569,[1570]]]],[[]],[[]],[380,[[1571,[[0,[1049,537]],1570]]]],[380,[[1569,[[0,[1049,537]],1570]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[13],[12],[12],[13],[[188,188,188,188],1570],[[[1571,[[1046,[[0,[537,1049,653]]]],[0,[537,1049]],1319]],[0,[537,1049,653]]],21],[[[1571,[[1046,[[0,[537,1049,653]]]],[0,[537,1049]],1319]],[0,[537,1049,653]]],21],[[[1571,[[1046,[[0,[537,1049,653]]]],[0,[537,1049]],1319]],[0,[537,1049,653]]],21],[[1570,537],188],[[[1571,[[0,[1049,537,[1046,[[0,[1049,537,653]]]]]],1319]],[0,[1049,537,653]]]],[[],9],[[],9],[[],9],[[],9],[[[1571,[[0,[537,1049]],1319]],[0,[537,1049]]],21],[[]],[[[1571,[1570]]],[[1572,[1570]]]],[[]],[[[1569,[1570]]],[[1573,[1570]]]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[1571],[1571],[1571],[1569],[1569],[[[1571,[[0,[537,1049]],1319]]],[[1574,[[0,[537,1049]]]]]],[[]],[[]],[[]],[[]],[[[1571,[[0,[537,1049]],1319]]],[[1575,[[0,[537,1049]]]]]],[[],16],[[],16],[[],16],[[],16],0,0,0,0,[[]],[[]],[[],[[1571,[1570]]]],[[],[[1569,[1570]]]],[[],1570],0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[[1571,[[1046,[[0,[537,1049,653]]]],[0,[537,1049]],1319]],[0,[537,1049,653]]],21],[[[1571,[[0,[932,1049,537]],932,1570]],172],22],[[[1569,[[0,[932,1049,537]],1570]],172],22],[[[1569,[[0,[1049,537,322]],[0,[1319,364]]]],[1569,[[0,[1049,537,322]],[0,[1319,364]]]]],[[1569,[[0,[1049,537,322]],[0,[1319,364]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[9],[9],[9,[[1571,[1570]]]],[9,[[1569,[1570]]]],[[9,1319],[[1571,[1319]]]],[[9,1319],[[1569,[1319]]]],[1319,[[1571,[1319]]]],[1319,[[1569,[1319]]]],[9,1570],[[188,188,188,188],1570],[[1321,[193,[19]]]],[[1321,224]],[[1321,305]],[[1321,89]],[[1321,188]],[[1321,19]],[[1321,9]],0,0,[[],9],0,0,0,0,[[[0,[1576,376,377]]],[[22,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[779,1434,780,1485,501],21],[[779,1434,780,501],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,1434,501],21],[[18,1434,[21,[1426]],501],21],[[18,1434,501],21],[[18,1434,848,501],21],[[18,1434,[389,[842]]],21],0,0,0,0,0,0,[[18,1434],16],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[1577,501]],0,0,[[1577,501]],[[]],[[]],[[]],[[]],[1578,1578],[[]],[[],[[8,[6,7]]]],0,[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[1578,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1578,1434],0,0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[1578,16],[[18,1434],[[21,[1578]]]],[[18,1434,16],1578],0,[[1578,18],84],0,[[779,84,780]],[[19,19]],[19],[19],[[1578,18]],0,0,[[1578,16]],0,[[1578,780,779,501],[[21,[859]]]],[[1578,779,501],[[21,[859]]]],[[1578,779,501],1577],[[1578,779,501],780],0,0,[[1578,18]],0,[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[1578,779]],0,[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1579,1579],[1548,1548],[1549,1549],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[9],[9],[9],[9],[9],[9],[105,[[22,[1579]]]],[[]],[[]],[[]],[9],[9],[9],[179,16],[179,16],[[1548,1548],16],[[1549,1549],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[1579,10],[[22,[382]]]],[[1548,10],[[22,[382]]]],[[1549,10],[[22,[382]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[18,1434],[[21,[1579]]]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[[19,19],16],[[19,19],16],0,0,0,[[1579,172],22],0,0,0,0,[1579,1425],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,[[779,1434,780,1485,501],21],[[779,1434,780,501],21],[[18,1434,501],21],[[18,1434,[21,[1426]],501],21],[[18,1434,501],21],[[18,1434,848,501],21],[[18,1434,[389,[842]]],21],[[18,1434],16],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[1580,1580],[1560,1560],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1580],[9],[9],[9],[9],[9],[9],[105,[[22,[1580]]]],[[]],[[]],[[]],0,[9],[9],[9],[179,16],[[1560,1560],16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[1580,10],[[22,[382]]]],[[1560,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],0,0,0,[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[18,1434],[[21,[1580]]]],0,0,0,0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],0,0,0,0,[[1580,172],22],0,0,0,[[1580,18,1434]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],0,[1580,1425],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1550,107,1467,1482],808],[1581],[1550,392],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[1524,84,9]],0,[[],1561],[[],1561],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1531,1531],[1527,1527],[1582,1582],[1583,1583],[1561,1561],[1526,1526],[1528,1528],[1530,1530],[1529,1529],[1584,1584],[1585,1585],[1581,1581],[1566,1566],[1586,1586],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,[[[103,[1426,7]],[389,[1454]]],1528],0,0,0,0,[[[103,[1426,7]],[389,[1423]],[389,[1454]]],1528],0,0,0,0,[[],1583],[[],1561],[[],1584],[[],1585],[[],1550],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[1531]]]],[105,[[22,[1527]]]],[105,[[22,[1582]]]],[105,[[22,[1583]]]],[105,[[22,[1561]]]],[105,[[22,[1526]]]],[105,[[22,[1528]]]],[105,[[22,[1530]]]],[105,[[22,[1529]]]],[105,[[22,[1585]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],0,0,0,[[1531,1531],16],[[1527,1527],16],[[1582,1582],16],[[1583,1583],16],[[1561,1561],16],[[1526,1526],16],[[1528,1528],16],[[1530,1530],16],[[1529,1529],16],[[1585,1585],16],[[1566,1566],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],0,[1524,[[103,[1476,7]]]],0,0,0,0,0,0,0,0,0,[1581,84],0,[[1426,84,[389,[1423]]],1526],[[848,[389,[1457]],[389,[1423]]],1530],[[1531,84],[[21,[84]]]],[[1531,[21,[84]]],[[103,[1426,7]]]],[[1527,[21,[84]]],[[103,[1426,7]]]],[[1531,[21,[84]],[21,[84]]],[[103,[[103,[1426,7]],7]]]],[[1531,10],[[22,[382]]]],[[1527,10],[[22,[382]]]],[[1583,10],[[22,[382]]]],[[1561,10],[[22,[382]]]],[[1526,10],[[22,[382]]]],[[1528,10],[[22,[382]]]],[[1530,10],[[22,[382]]]],[[1529,10],[[22,[382]]]],[[1585,10],[[22,[382]]]],[[1566,10],[[22,[382]]]],[[1586,10],[[22,[382]]]],[1524,84],[1524,[[21,[1582]]]],[1524,[[85,[9]]]],0,[[1531,84,231]],[[1527,84,231]],[[1550,808]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[1426]],16,1423,[389,[1454]]],1531],[[[85,[1426]],16,1423,[389,[1454]]],1527],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[193,[1566]]],1584],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[12],[13],[12],[13],[13],[12],[[[389,[1467]],1482],1582],0,[[1524,815,490],84],0,0,[[1524,815,490],16],[[1524,815,92],16],0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[1565,16],[[],16],[1582,16],0,[[1524,107,815,1423,84],[[14,[1481,7]]]],[[1524,107,815,84],[[14,[1481,7]]]],[[1524,1451],[[14,[1481,7]]]],[[1524,107,815,1423],[[14,[1481,7]]]],[[[103,[1426,7]],[389,[1454]]],1528],[1531,848],[1527,848],0,[1524,9],0,[[1550,808],[[21,[1587]]]],0,0,0,0,[[84,1585,[85,[9]],[103,[1588,7]]],1589],[[84,9,1479],1524],[[848,[389,[1457]],[389,[1423]],[389,[1454]]],1530],[[1426,[14,[1481,7]]],1529],[[[85,[9]]],1581],0,[1550,9],0,[1524,9],0,[[1531,84],89],0,0,0,0,0,0,[[[85,[9]],[389,[1467]],1482],1582],0,0,[1524,84],0,0,0,0,0,0,0,0,0,[[84,84],1426],[1581,[[103,[1588,7]]]],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],0,0,0,[[1550,808]],0,[[1589,84],84],0,[[1524,815],84],0,0,0,0,[[1531,84],1426],[[1527,84],1426],0,0,0,0,[[1531,172],22],[[1527,172],22],[[1582,172],22],[[1583,172],22],[[1561,172],22],[[1526,172],22],[[1528,172],22],[[1530,172],22],[[1529,172],22],[[1585,172],22],[[1550,808,1582]],[[1589,848]],0,0,0,0,0,0,0,[1581,[[85,[9]]]],0,0,0,[[],1561],[[],1561],[[1531,[405,[84]]],1531],0,[[1426,84,[389,[1454]]],1526],[[848,[389,[1457]],[389,[1454]]],1530],0,0,0,0,0,0,[1581,[[21,[1582]]]],[1550,1448],[[1561,848,[389,[1457]]],1431],[[1589,1526,1431]],[[1589,1566,[103,[1484,7]]]],[[1589,1531,1431]],[[1589,[85,[1426]],1454,1431]],[[1589,1431,1431]],[[1589,1528,1431]],[[1589,1527,1431]],[[1589,1530,1431]],[[1589,849,1431]],[[84,1585,[85,[9]],[103,[1588,7]],[103,[1566,7]]],[[103,[1484,7]]]],[[1589,1529,1431]],0,0,0,0,0,[1524,[[14,[[1590,[1581]],7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1527,[21,[84]]],1528],[[1531,[21,[84]],[21,[84]]],[[103,[1528,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1531,1591],1531],[[1527,1591],1527],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[1584,779],780],[[1585,779],780],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[84,84],1425],0,0,0,0,[1531,848],[1527,848],[1526,848],[1528,848],[1530,848],[1529,848],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1584,[193,[1484]]],1584],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1525,1525],[1515,1515],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1525],[[],1515],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[1525,1525],16],[[1515,1515],16],[1,16],[1,16],[[1525,10],[[22,[382]]]],[[1515,10],[[22,[382]]]],[1424,1525],[1423,1525],[1515,1525],[[]],[1525,1515],[[]],[1423,1515],[1424,1515],[[[85,[84]]],1515],[[[85,[84]]],1515],[[84,84,84,84],1515],[[84,84,84,84],1515],[[]],[[]],[[[85,[19]]],1515],[[[85,[19]]],1515],[[[85,[19]]],1515],[[]],[[]],[13],[12],[13],[12],[84,84],[84,19],0,0,[[[85,[84]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[19,84],[19,84],[84,84],[84,19],[[84,84,84,84],1515],[[19,19]],[[19,19]],[19],[19],[19],[19],[[],[[85,[84]]]],0,0,[[1423,1423],1423],[1515,1515],[[]],[[]],[1515,[[85,[84]]]],[1515,[[85,[84]]]],[1515,[[85,[84]]]],[[]],[[]],[1515,[[85,[19]]]],[1515,[[85,[19]]]],[1515,[[85,[19]]]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1592,[365]],51,365]],0,[[84,84,84],16],[1559,84],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[[1592,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,1593,[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]]],[[21,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,1593,[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]]]],[[[1592,[[0,[[1593,[[0,[[1593,[[0,[[1593,[[0,[1593,[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]]],[[21,[[0,[[1593,[[0,[[1593,[[0,[[1593,[[0,[1593,[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]],[765,[84]],[458,[84]],365]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[1592,[365]]]],[[[1592,[322]]],[[1592,[322]]]],[1591,1591],[1559,1559],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1559],[9],[9],[9],[9],[9],[9],[105,[[22,[1591]]]],[105,[[22,[1559]]]],[[1559,84],1559],[[]],[[]],[[]],[9],[9],[9],[[[1592,[365]]],84],[179,16],0,[[1591,1591],16],[[1559,1559],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[84,84,84],84],[[[1592,[365]],51]],[[[1592,[383]],10],[[22,[382]]]],[[1591,10],[[22,[382]]]],[[1559,10],[[22,[382]]]],[[51,[1181,[9]]],107],[[51,9],107],[[]],[[]],[1591,848],[[]],0,[84,1559],[51],[[]],[[]],[[]],[[]],[[]],[[]],[[848,848],1591],[13],[12],[848,1591],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[1591,1591],[1559,1559],[[[1181,[[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]]]]]],[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]]]]]]]]],[[21,[[0,[365,[379,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[864,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]],[765,[[0,[365,[379,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[864,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]],[765,[[0,[365,[379,[[0,[365,379,864,765]]]],[864,[[0,[365,379,864,765]]]],[765,[[0,[365,379,864,765]]]]]]]]]]]]]]]]]],[[[1592,[365]]],16],[1559,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1592,[365]]],392],[[[1592,[365]]],[[21,[365]]]],[[[1592,[365]]],[[21,[365]]]],[[[1592,[365]]],9],[1559,84],[1559,84],[[[389,[[1181,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]],[0,[1542,[458,[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]]]]]]],[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,[459,[[0,[365,459]]]]]]]]]]]]]]]]]]]],0,0,[[[1592,[365]]],84],0,[[[1592,[365]]],9],0,[[[1592,[365]]],[[21,[84]]]],0,0,0,[[1591,1426],1426],[[1591,1426],1426],[[1559,1425],1425],[[1559,1559],1559],[[1559,84],1559],[[[405,[9]],84],[[1592,[365]]]],[1559,1559],[84,84],[[]],[[84,84],1426],[[[1592,[365]]],[[21,[84]]]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[[1542,[389,[[1181,[1542]]]],[389,[[1181,[1542]]]]],1542],[[1542,[389,[[1181,[1542]]]],[389,[[1181,[1542]]]]],1542],[[51,9],51],0,[1591,1425],[[1591,172],22],[[1559,172],22],0,[[[1592,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,1593,[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]]],[[0,[365,[1593,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,[1593,[[0,[365,1593,765]]]],[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]],[765,[84]]]]]],[1591,848],0,[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[[1592,[365]]],188],0,[[1591,1426],1426],[[1591,1426],1426],[[1591,848],848],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[[1592,[365]]],392],0,[[84,84],1425],[[[1592,[[0,[365,[864,[[0,[365,[864,[[0,[365,[864,[[0,[365,864]]]]]]]]]]]]]]]]],[[21,[[765,[84]]]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[1425,848],848],[[51,51],51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[[1590,[322]]],[[1590,[322]]]],[[]],[[],[[8,[6,7]]]],[[],[[1590,[364]]]],[[],[[1551,[364]]]],[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[1590,[[1375,[749]]]],[[],1590],[[],1551],[[19,19]],[19],[19],[19],[19],[1551,[[1389,[1366]]]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[1551,[[1390,[1366]]]],[[849,218]],0,0,[[1594,1594],1594],[[1594,1594]],[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],0,[1594,1594],[[]],[[],[[8,[6,7]]]],[[],1594],[9],[9],[[]],[9],0,[[1594,1594],16],[1,16],[[1594,92],107],[[]],[193,1594],[1481,1594],[1431,1594],[[]],[193,1594],[[]],[13],[12],0,[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[1594,107],[1594,9],0,[1594,9],0,0,[1594,9],0,[[19,19]],[19],[19],0,0,0,0,0,[301,1594],0,0,[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],0,[[]],0,0,0,0,0,0,[[1595,1426,84]],[[1595,[193,[1426]]]],[[1595,[85,[1426]]]],[[1595,[193,[1426]]]],[[1595,1426,1425]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[1595],0,[1595,1595],[1596,1596],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,0,[[],1595],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],0,[[1596,1596],16],[1,16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[1595,84,1423,1431]],[[1595,84,1423,808,218,1431]],[[1595,10],[[22,[382]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,0,0,0,[[19,19]],[[19,19]],[19],[19],[19],[[19,19],16],[[1595,9]],0,0,0,[[1595,84,1596,1454,1431]],[[1595,84,1454,1431]],[[1595,84,1454,1431]],[[84,1585,[85,[9]],[103,[1588,7]],[103,[1566,7]]],[[103,[1484,7]]]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[[[103,[1426,7]],1426,84,84]],[[[103,[1426,7]],848,1457]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1451,92,84,1480]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1597,84],9],[1597,9],[1597,9],0,[1451,1451],[1598,1598],[1599,1599],[1597,1597],[1600,1600],[1601,1601],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1451],[[],1599],[[],1600],[1602,1479],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[1451]]]],[105,[[22,[1598]]]],[105,[[22,[1599]]]],[105,[[22,[1597]]]],[105,[[22,[1600]]]],[105,[[22,[1601]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[179,16],0,0,[[1451,1451],16],[[1598,1598],16],[[1599,1599],16],[[1597,1597],16],[[1600,1600],16],[[1601,1601],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],0,0,0,0,[[1451,10],[[22,[382]]]],[[1598,10],[[22,[382]]]],[[1599,10],[[22,[382]]]],[[1597,10],[[22,[382]]]],[[1600,10],[[22,[382]]]],[[1601,10],[[22,[382]]]],[[1602,815],1603],0,0,[[1451,1524],84],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[13],[12],0,0,0,[[1602,815,490],16],[[1602,815,92],16],[[1451,186]],[[1598,186]],[[1599,186]],[1597,84],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1451,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[1602,[14,[1451,7]]],1481],0,0,[1601,848],0,0,0,[1601,84],[1597,84],0,0,0,[1597,84],[[84,9,1479],1602],[[],1599],0,0,0,[1602,84],0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[19,188],[19,188],0,0,0,0,0,0,0,[[1451,172],22],[[1598,172],22],[[1599,172],22],[[1597,172],22],[[1600,172],22],[[1601,172],22],[[107,815,1423,84],1451],[[107,815,1423],1451],[[107,1480],1451],0,0,0,0,[1597,107],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,1599],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1597,9],84],0,0,0,0,0,0,[[1534,9]],[[1534,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1534,1534],[1522,1522],[1537,1537],[1516,1516],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],1534],[[],1522],[[],1537],[[],1516],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[1534]]]],[105,[[22,[1522]]]],[105,[[22,[1537]]]],[105,[[22,[1516]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[[1534,1534],16],[[1522,1522],16],[[1537,1537],16],[[1516,1516],16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[1534,10],[[22,[382]]]],[[1522,10],[[22,[382]]]],[[1537,10],[[22,[382]]]],[[1516,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[12],[13],[12],[13],0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[9,1534],0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],0,0,[[1534,172],22],[[1522,172],22],[[1537,172],22],[[1516,172],22],[[1534,9]],[[1534,9]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],0,[1587,9],[1587,1587],[[]],[[],[[8,[6,7]]]],0,[9],[9],[[]],[9],[179,16],[[1587,1587],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1587,10],[[22,[382]]]],0,[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,0,0,0,0,0,[[19,19]],[19],[[19,19],16],0,0,0,[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[],179],[[]],[[]],[[[1604,[322]]],[[1604,[322]]]],[[]],[[],[[8,[6,7]]]],[[[1604,[1605]],[1604,[1605]]],183],[[],183],[9],[9],[[]],[9],[179,16],[186],[[[1604,[1605]],[1604,[1605]]],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[537,188],[[[1604,[1605]],186]],[[537,186],188],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[1604,[[0,[1605,365]]]]],[[0,[1605,365]]]],[[]],[[],16],[653,[[1604,[653]]]],[[[1604,[1605]],[1604,[1605]]],[[21,[183]]]],[[19,19]],[19],[[19,19],16],[19,188],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,[18],[[779,[21,[84]]]],[18],[[18,[21,[84]]]],0,0,0,[[779,1476]],[[779,815]],0,0,0,0,0,0,0,0,0,0,[[1606,848,849],1429],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1429,1429],[1606,1606],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1606],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],[[1429,1429],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1606,848,380]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[1606,16],[[],16],[[],16],0,[[19,19]],[[19,19]],[19],[19],[19],[[19,19],16],[[1606,1429,848,849]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[1606,1425]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],[[448,[447]]]],[1533,[[193,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[1607,9],[1608,9],0,0,0,[1544,1544],[1533,1533],[1567,1567],[1568,1568],[1532,1532],[1543,1543],[1546,1546],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1607],[[],1608],[[],1546],[9],[9],[9],[9],[1533],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[179,16],[[],[[491,[490]]]],[[],[[491,[490]]]],[9],[9],[9],[[1608,9]],[[1532,1532],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1544,10],[[22,[382]]]],[[1544,10],[[22,[382]]]],[[1533,10],[[22,[382]]]],[[1532,10],[[22,[382]]]],[92],[92],[92],[[1607,92]],[[1608,92]],[[]],[[]],[[]],[1607],[1608],[[]],[[]],[[]],[[]],[[[14,[[193,[19]],7]]],1533],[[[103,[19,7]]],1533],[[[193,[19]]],1533],[[[85,[19]]],1533],[[]],[[]],[[],1532],[[]],[1456,1532],[[]],[[]],[1456,1532],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[12],[13],0,[[],92],[[],92],[[],92],[1607,92],[1608,92],0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[1607,[389,[[629,[92]]]],[389,[1533]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[18,92],[[22,[1567,1544]]]],[[18,92,1503],[[22,[1568,1544]]]],[[18,92,1482,1503],[[22,[1543,1544]]]],[[1607,18,92],[[22,[1567,1544]]]],[[1608,18,92,1482,1503],[[22,[1543,1544]]]],[[[389,[808]],[389,[1425]]],1532],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[1543,[[21,[1425]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[[448,[447]],553]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[779,501],859],[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[1609,[389,[842]]],1609],0,0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[779,[389,[842]],501],[[859,[21]]]],[[779,1507,501],[[859,[21]]]],0,[19],[19],[[1610,779,501],[[859,[21]]]],0,[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[],179],[[]],[[]],[1557,1557],[[]],[[],[[8,[6,7]]]],[[],1557],[9],[9],[[]],[9],[179,16],[186],[[1557,1557],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1557,10],[[22,[382]]]],[[]],[[]],[[]],[[],1557],[92,1557],[13],[12],[[1557,186]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[19,19]],[19],[19],[[19,19],16],[19,188],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1558,1558],[[]],[[],[[8,[6,7]]]],0,0,0,[9],[9],[105,[[22,[1558]]]],[[]],[9],0,[[1558,1558],16],[1,16],[169,[[22,[170,171]]]],0,[[1558,10],[[22,[382]]]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,0,0,0,0,0,[[19,19]],[19],0,0,[[1558,172],22],0,0,0,0,[[]],[[]],[[],21],[[]],[[],22],[[],22],0,[[],23],[[],21],0,0,[[]],[1558,1501],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1564,1564],[1611,1611],[1612,1612],[1613,1613],[1538,1538],[1614,1614],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,0,0,[[],1613],0,0,0,0,[[],1564],[[],1611],[[],1612],[[],1613],[[],1614],[[],[[1041,[1505,815,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[1564]]]],[105,[[22,[1611]]]],[105,[[22,[1612]]]],[105,[[22,[1613]]]],[105,[[22,[1538]]]],[105,[[22,[1614]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[179,16],[[1564,1564],16],[[1611,1611],16],[[1612,1612],16],[[1613,1613],16],[[1538,1538],16],[[1614,1614],16],[1,16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],0,0,0,0,0,0,[[1564,10],[[22,[382]]]],[[1611,10],[[22,[382]]]],[[1612,10],[[22,[382]]]],[[1613,10],[[22,[382]]]],[[1538,10],[[22,[382]]]],[[1614,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[13],[12],[12],[13],[12],[13],0,0,0,[[1564,848]],0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[],1613],0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],0,0,0,0,0,0,0,0,0,0,[[1564,172],22],[[1611,172],22],[[1612,172],22],[[1613,172],22],[[1538,172],22],[[1614,172],22],0,0,0,0,0,0,0,0,0,0,0,[[1613,780],1538],[1538,1423],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[1564,779]],[[1611,779]],[[1612,779]],[[1613,779]],[[1538,779]],[[1614,779]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[[3,[2]]]],0,[[]],[[]],0,0,0,[1615,1615],[[]],[[],[[8,[6,7]]]],0,[[],1615],[9],[9],[105,[[22,[1615]]]],[[]],[9],0,[[1615,1615],16],[1,16],[169,[[22,[170,171]]]],0,0,0,[[1615,10],[[22,[382]]]],0,0,0,0,[[]],[[]],[[]],[13],[12],0,0,0,[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[1615,16],0,0,0,0,0,0,0,0,0,0,[1534,1615],0,0,0,0,[[19,19]],[19],[19],0,0,0,0,[[1615,172],22],[1615,[[85,[1534]]]],0,0,[[]],[[]],[[],21],[[]],[[],22],[[],22],0,[[1534,1534],1615],[[],23],0,[[],21],0,[[]],0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],0,[1616],[1616,1616],[[]],[[],[[8,[6,7]]]],[1616,9],[1616,9],[[],1616],[9],[9],[[]],[9],[[1616,10],[[22,[382]]]],[[]],[[]],[[]],[12],[13],[[1616,1434],[[21,[1617]]]],[[1616,1434,1617],1617],[[1616,1434],[[0,[1617,364]]]],[[1616,1434,501],1617],[[1616,1434],[[21,[322]]]],[[1616,1434,[0,[1,322,376,377]]],[[0,[1,322,376,377]]]],[[1616,1434],[[0,[1,322,376,377,364]]]],[[1616,1434,501],[[0,[1,322,376,377]]]],[537,188],[[537,186],188],0,[[],9],[[1616,1434,1617]],[[1616,1434,[0,[1,322,376,377]]]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[1616,16],[[],16],[1616,9],0,0,[1616,9],0,0,0,[[19,19]],[19],[19],[[1616,1434]],[1616],[[1616,9]],[[]],[[]],[[],21],[[]],0,[[],22],[[],22],[[],23],0,[[],21],0,[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[1618,[[0,[376,377]],[0,[376,377]]]]],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1619,[[0,[1620,364]]]],0,0,[1619,1619],[[]],[[],[[8,[6,7]]]],[[]],0,[[],[[1618,[364]]]],[[],1619],[9],[9],[9],[9],[[]],[[]],[9],[9],[1618],[[1619,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],0,[[[1618,[322,[1621,[[0,[365,537]],322]]]],[0,[365,537]]],322],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[],9],[[[1618,[[0,[376,377]],[0,[376,377]]]]],9],[[],1618],[[19,19]],[19],[19],[19],[19],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[[1618,[[0,[376,377]],[0,[376,377]]]]]],[1619],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[],179],[[]],[[]],[1622,1622],[[]],[[],[[8,[6,7]]]],[9],[9],[[]],[9],[179,16],[186],[[1622,1622],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1622,10],[[22,[382]]]],[23,1622],[[]],[[]],[[]],[[1622,186]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,0,[[],1622],[[19,19]],[19],[[19,19],16],[19,188],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,[[[1623,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]],[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[1624,1624],[[[1623,[322]]],[[1623,[322]]]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1624],[[],[[1623,[364]]]],[9],[9],[9],[9],[105,[[22,[1624]]]],[105,[[22,[[1623,[[0,[214,364]]]]]]]],[[]],[[]],[9],[9],[[1624,1624],16],[1,16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[[[1623,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]],51,[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]]]]],0,[[1624,10],[[22,[382]]]],[[1623,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[[1623,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]],[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]]]],16],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[[1623,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]],16],[[],16],[[],16],0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[1624,172],22],[[[1623,[932]],172],22],0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[[1623,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]],[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]]]],[[21,[[0,[322,[379,[[0,[322,[379,[[0,[322,[379,[[0,[322,379]]]]]]]]]]]]]]]]]],0,[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[1540,1540],[1539,1539],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[9],[9],[9],[9],[[]],[[]],[9],[9],[[1540,1540],16],[[1539,1539],16],[1,16],[1,16],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1539,[[14,[1481,7]]]],0,0,[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[1540,1524],1539],[[]],[[]],[[],16],[[],16],0,0,0,0,[[1539,1428,1426,1423]],[[1539,1428,1426,1423]],[[1539,1428,1426,1538]],0,[[19,19]],[[19,19]],[19],[19],[1539,1425],0,0,0,[1539,92],0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],92],0,[9,9],0,[[[405,[9]]],92],0,0,0,0,[[]],0,0,0,0,0,0,0,0,[[[405,[9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[779],[779],0,0,0,0,0,0,0,[[92,9],9],0,0,[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1428,848,1510,1532]],0,0,0,0,0,[92],[[779,[0,[364,[379,[[0,[364,[379,[[0,[364,[379,[[0,[364,[379,[[0,[364,379]]]]]]]]]]]]]]]]]]]],[[779,[379,[[379,[[379,[[379,[379]]]]]]]],[379,[[379,[[379,[[379,[379]]]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[779,1454,92]],0,0,[[],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[779,780],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1625,1625],[[]],[[],[[8,[6,7]]]],[[779,1515,1625],780],[[779,[85,[84]]],780],[[779,1424,1625],780],[[779,[85,[19]]],780],[[779,1423,1625],780],[[779,1423,1625],16],[[779,1515,1625],16],[9],[9],[[]],[9],[179,16],[[1625,1625],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[19,19]],[19],[[19,19],16],[[779,[389,[1423]],1425],780],[[1428,1423,848]],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1626,1615],[1626,[[405,[9]]]],[[],92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[1545,[[21,[1615]]]],0,0,[[[405,[9]]],92],[[]],0,[1626,1626],[1627,1627],[1545,1545],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[1545,1481],[[21,[1626]]]],0,0,[[],1626],[[],1627],[[],1545],[[[405,[9]]]],[9],[9],[9],[9],[9],[9],[9],[9],[105,[[22,[1626]]]],[105,[[22,[1627]]]],[105,[[22,[1545]]]],0,0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[1626,1626],16],[[1627,1627],16],[1,16],[1,16],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],[169,[[22,[170,171]]]],0,[[1626,10],[[22,[382]]]],[[1627,10],[[22,[382]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[92,9],9],0,[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[1626,16],[[],16],[[],16],[[],16],[[],16],[[],16],[1626,16],0,[[18,1434],[[21,[1545]]]],0,0,0,[1516,1626],0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[92],0,0,0,0,[[1626,172],22],[[1627,172],22],[[1545,172],22],[[1545,[21,[1615]]]],[[1545,[21,[1626]]]],[1626,[[21,[1516]]]],0,[1626,1626],[1626,[[85,[1516]]]],0,[[1545,18,1434]],[[],107],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[1516,1516],1626],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[88,88],508],[[74,74,74],523],[[511,511,511],625],[[519,519,519,519],524],0,0,[[84,84,84,84],528],0,0,[[84,84],88],[[84,84,84],74],[[84,84,84],511],[[84,84,84,84],519],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[507,507],520],[[526,526,526],510],[[514,514,514,514],515],[[51,51,51,51],527],[[51,51],507],[[51,51,51],526],[[51,51,51,51],514],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[1628,[1630,[[1046,[684]],1629]]],[[629,[92]]]],[1631,301],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1632,1632],[1628,1628],[[]],[[]],[[],[[8,[6,7]]]],[[],814],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[684,301],[[1632,1632],16],[[1633,1633],16],[[1631,1631],16],[[1628,1628],16],[1,16],[1,16],[1,16],[1,16],0,[[814,10],[[22,[382]]]],[[1632,10],[[22,[382]]]],[[1632,10],[[22,[382]]]],[[1633,10],[[22,[382]]]],[[1631,10],[[22,[382]]]],[[684,10],[[22,[382]]]],[[1628,10],[[22,[382]]]],[[]],[1634,1632],[1635,1632],[[]],[[]],[[[1636,[92]]],1633],[[]],[[[1637,[92]]],1631],[[]],[530,1628],[384,1628],[89,1628],[9,1628],[188,1628],[384,1628],[375,1628],[404,1628],[224,1628],[84,1628],[51,1628],[530,1628],[92,1628],[188,1628],[[[629,[92]]],1628],[404,1628],[84,1628],[378,1628],[19,1628],[107,1628],[[]],[518,1628],[51,1628],[89,1628],[518,1628],[378,1628],[305,1628],[1638,1628],[375,1628],[19,1628],[224,1628],[9,1628],[305,1628],[380,814],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[814,[389,[[629,[92]]]]],[[21,[1628]]]],[[1631,92],[[21,[1633]]]],[[684,9],[[21,[[1639,[92]]]]]],[1633,92],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[814],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[814,301],[[1628,1628,[1630,[[1046,[684]],1629]]],16],[[],814],0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[[814,[389,[[629,[92]]]],[389,[1628]]]],[684,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[107,[[22,[684]]]],[1517,1628],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[1633,[[1640,[92]]]],[1631,[[21,[[1640,[92]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[9,814],[[1628,1107,[1630,[[1046,[684]],1629]]],[[22,[382]]]],0,0,0,[[1641,92,[0,[218,377,376]]],[[22,[1632]]]],[[[1641,[[1046,[684]]]],[1046,[684]]],[[22,[[103,[1632,7]]]]]],[[[1641,[[1046,[684]]]],[1046,[684]]]],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[[],[[1641,[1642]]]],[9],[9],[[]],[9],0,[[[1641,[[1046,[684]],1629]],[1640,[92]],[21,[814]],[103,[1632,7]]],[[629,[92]]]],0,[[]],[[]],[[]],[13],[12],[[[1641,[[1046,[684]]]],92],[[21,[1631]]]],[[[1641,[[1046,[684]]]],92],16],[[],9],0,[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[[103,[1643,7]]],[[1641,[1642]]]],[[[103,[1643,7]]],[[1641,[1644]]]],[19],[19],0,[[1641,21]],[[1641,21]],[[1641,16]],[[]],[[],21],[[]],0,[[],22],[[],22],[[],23],[[],21],0,[[]],[[[1641,[[1046,[684]],1629]],1107,[1640,[92]],[21,[814]],[103,[1632,7]]],[[22,[382]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[],179],[1642,[[629,[92]]]],[1638,[[629,[92]]]],[1644,[[629,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1645,1645],[1646,1646],[1647,1647],[1638,1638],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1645],[[],1646],[[],1647],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[],[[8,[1648,7]]]],[179,16],[179,16],[179,16],[186],[186],[186],[[1648,1648],16],[[1645,1645],16],[[1646,1646],16],[[1647,1647],16],[[1638,1638],16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1645,10],[[22,[382]]]],[[1646,10],[[22,[382]]]],[[1647,10],[[22,[382]]]],[[1638,10],[[22,[382]]]],[92,1645],[[]],[[]],[92,1646],[[]],[19,1638],[375,1638],[518,1638],[[]],[224,1638],[51,1638],[51,1638],[305,1638],[9,1638],[404,1638],[89,1638],[378,1638],[9,1638],[378,1638],[375,1638],[384,1638],[530,1638],[224,1638],[84,1638],[84,1638],[384,1638],[530,1638],[19,1638],[188,1638],[188,1638],[404,1638],[89,1638],[518,1638],[305,1638],[[]],[[]],[[]],[[]],[92,[[22,[1638]]]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[13],[12],[[1645,186]],[[1646,186]],[[1647,186]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,[[1647,814]],0,0,0,[[51,1647],1638],0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1649,1649],[[]],[[],[[8,[6,7]]]],[380,[[22,[[103,[1643,7]],1650]]]],[380,[[103,[1643,7]]]],[9],[9],[[]],[9],[[1649,1649],16],[1,16],[[1649,10],[[22,[382]]]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[[193,[[631,[1643]]]],[193,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]]]],[21,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]]]],1649],[[103,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]],7]]]],[92,[[103,[1643,7]]]],[[19,19]],[19],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],[92,[[103,[1643,7]]]],0,0,0,0,[[[193,[[631,[1643]]]],[193,[[631,[1643]]]],1649],[[103,[[631,[1643]],7]]]],[[[193,[[631,[1643]]]],[193,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]]]],[21,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]]]],1649],[[103,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],[379,[[0,[[631,[1643]],379]]]]]]]]]]]]]],7]]]],0,0,0,[[518,518],187],[[518,518,518],517],[[518,518,518,518],525],0,0,0,0,0,0,0,0,0,0,0,0,[[384,384],620],[[384,384,384],621],[[384,384,384,384],622],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],0,[1643,[[22,[653]]]],[[],1651],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1642,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[1651,1643],[[15,[1642,7]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,0,[1643,1642],[19],[19],[19],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[[1642,501],22],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[9],[[]],[9],[[1644,10],[[22,[382]]]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,0,[1643,1644],[19],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],[[1644,501],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1652,51],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[1652,51],[[],179],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1653,1653],[1654,1654],[1652,1652],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1653],[[],1654],[[],1652],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,[179,16],[179,16],[186],[186],[[1653,1653],16],[[1654,1654],16],[[1652,1652],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1655,10],[[22,[382]]]],[[1655,10],[[22,[382]]]],[[1653,10],[[22,[382]]]],[[1654,10],[[22,[382]]]],[[1652,10],[[22,[382]]]],[[]],[1656,1653],[1657,1653],[1658,1653],[[]],[1659,1653],[1660,1653],[[]],[1661,1654],[51,1652],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[12],[13],[[1653,186]],[[1654,186]],[[],9],[[],9],[[],9],[[],9],[[1652,1652,51],1652],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],[19,188],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[1661,188]],[[1661,188]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[1662,51],[1662,51],[1662,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1662,1662],[1661,1661],[1663,1663],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[1664],[9],[9],[9],[179,16],[179,16],[186],[186],[[1662,1662],16],[[1661,1661],16],[[1663,1663],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1662,10],[[22,[382]]]],[[1661,10],[[22,[382]]]],[[1663,10],[[22,[382]]]],[1664,51],[[]],[[]],[[]],[[]],[1664,1663],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1661,186]],[[1663,186]],[1664,1663],0,[[],9],[[],9],[[],9],[[],9],[[1662,1662,51],1662],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[1661,1661],[[21,[183]]]],[1664,[[22,[1655]]]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],[19,188],[[1664,[389,[[1665,[1662]]]],1666],[[22,[1655]]]],0,[1664,[[22,[1655]]]],[1664,[[22,[1655]]]],[[1661,188]],[[1661,188]],[1664,16],0,[1664,1661],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[1667,1668],[[22,[1663,1669]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1667,1670],0,[1668,1668],[1671,1671],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[186],[[1668,1668],16],[[1671,1671],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1668,10],[[22,[382]]]],[[1671,10],[[22,[382]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1670,1663],[[21,[1668]]]],[[1671,186]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[9,1667],[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[19,188],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[1670,1654],1671],0,0,[[1672,1672]],[[1672,1672]],[[],1],[[],1],[[],1],[[[3,[2]]]],[1672,1672],[[]],[[]],[1672,1672],[[]],[[],[[8,[6,7]]]],[9],[9],[[1672,84]],[[1672,84]],[[]],[9],[[1672,1672],16],[1,16],[[1672,10],[[22,[382]]]],[[]],[84,1672],[[]],[[]],[[],9],[[1672,1672,1672,1672,84],1672],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[1672,84]],[[1672,84]],[1672],[[84,84],1672],[[1672,84],1672],[[19,19]],[19],0,[[1672,1672]],[[1672,1672]],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,[[[1674,[1673]],[389,[[1665,[1662]]]]],[[22,[1664,1675]]]],[[[1674,[1673]],1676],[[22,[1677]]]],[[[1674,[1673]],1678],[[22,[1679,1680]]]],[[[1674,[1673]],1681],[[22,[1658,1682]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],0,0,[[[1674,[1673]]],1673],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[1674,[1673]]],9],0,[1683,1683],[1684,1684],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],[[1685,[1673]]]],[[],1683],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[179,16],[186],[[1683,1683],16],[[1684,1684],16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[1683,10],[[22,[382]]]],[[1684,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[[1683,186]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[[1674,[1673]]],1658],0,[[[1674,[1673]]],9],0,[[[1685,[1673]]],[[22,[[1674,[1673]]]]]],[[[1674,[1673]]],9],[[[1674,[1673]]],9],[[[1674,[1673]]],9],[[[1674,[1673]]],9],[[[1674,[1673]]],9],[[[1674,[1673]],1666],[[22,[1655]]]],[[[1674,[1673]],1686],[[22,[1687]]]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],0,0,[[[1674,[1673]],1666],[[22,[1655]]]],[[[1674,[1673]]],9],0,[[[1674,[1673]]],9],0,[[[1674,[1673]]],1684],[[[1674,[1673]]],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],0,0,[9],[9],[[]],[9],0,0,[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[1688,89]],[1688],[1688,1672],[19],0,[[],22],0,[1688,22],0,[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[]],[[]],[1689],[9],[9],[[1690,10],[[22,[382]]]],[[1690,10],[[22,[382]]]],[[]],[1691,1690],[[]],[1692,1690],[1693,1690],[[]],[[]],[[]],[[]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[19],[19],[[],22],[1690,[[21,[862]]]],[[1689,1688],22],0,[[]],[[]],[[],107],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[1694,1694],[[]],[[],[[8,[6,7]]]],[[],1694],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],[186],[[1694,1694],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1694,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[1694,186]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[1695],[1695,1672],[[19,19]],[19],[19],[19],[[19,19],16],[19,188],0,0,[[1695,89]],[[],22],[[1695,1688],22],0,[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[[1687,10],[[22,[382]]]],[[[1687,[383]],10],[[22,[382]]]],[[1682,10],[[22,[382]]]],[[1682,10],[[22,[382]]]],[[1675,10],[[22,[382]]]],[[1675,10],[[22,[382]]]],[[1680,10],[[22,[382]]]],[[1680,10],[[22,[382]]]],[[1677,10],[[22,[382]]]],[[1677,10],[[22,[382]]]],[[]],[1655,1687],[[]],[1655,1682],[1655,1675],[[]],[[]],[1655,1680],[[]],[1655,1677],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[19],[19],[19],[19],[19],[[[1687,[383]]],[[21,[862]]]],[1682,[[21,[862]]]],[1675,[[21,[862]]]],[1680,[[21,[862]]]],[1677,[[21,[862]]]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[],179],[[]],[[]],[1696],[1696,1696],[[]],[[],[[8,[6,7]]]],[9],[9],[[]],[9],[179,16],[186],[[1696,1696],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1696,10],[[22,[382]]]],[1697,1696],[1698,1696],[[]],[[]],[[]],[[1696,186]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],0,[[]],[[19,19]],[19],[[19,19],16],[19,188],[[]],[[]],[[],21],[[]],[[],22],[[],22],0,[[],23],[[],21],[[51,1670,1699]],[[],51],0,[[]],0,0,0,0,0,0,0,[[1700,[389,[[1665,[51]]]]],1700],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[1700,1696]],[1701,1701],[[]],[[],[[8,[6,7]]]],0,[[],1700],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[1697],[9],[9],[[1701,1701],16],[1,16],[[1701,10],[[22,[382]]]],[[1700,[389,[[1665,[51]]]]],1700],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[1697,1696],0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],1700],[[1700,[389,[[1665,[51]]]]],1700],0,[[19,19]],[19],[19],[19],[19],[[1697,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1697,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1697,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1697,51],[[22,[1655]]]],[[1697,1701],[[22,[1655]]]],0,[[1700,51],1700],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[1700,1701],1700],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[1702,1696]],0,[9],[9],[9],[9],[[]],[[]],[9],[9],[1698],[[]],[[]],[[]],[[]],[[]],[[]],[1698,1696],0,[[],9],[[],9],0,[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[19],[19],[[1698,51,1666],[[22,[1655]]]],0,[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[1703,51],[[22,[1696,1669]]]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1703,1699],[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[1699,1696],[[21,[51]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[9,1703],[19],[19],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[1704,51],[1704,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1705,1705],[1704,1704],[1706,1706],[1707,1707],[1708,1708],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1704],[[],1707],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[179,16],[186],0,[[1705,1705],16],[[1704,1704],16],[[1706,1706],16],[[1707,1707],16],[[1708,1708],16],[1,16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[804,10],[[22,[382]]]],[[804,10],[[22,[382]]]],[[1705,10],[[22,[382]]]],[[1704,10],[[22,[382]]]],[[1706,10],[[22,[382]]]],[[1707,10],[[22,[382]]]],[[1708,10],[[22,[382]]]],[1709,804],[630,804],[[]],[51,1705],[[]],[[]],[51,1704],[[]],[[[1137,[[389,[1705]]]]],1707],[[]],[1098,1707],[[[1180,[[389,[1705]]]]],1707],[[[1181,[[0,[[389,[1705]],365]]]]],1707],[[[405,[[389,[1705]]]]],1707],[[[1182,[[389,[1705]]]]],1707],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[[1706,186]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[1704,1704,51],1704],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[],[[21,[1707]]]],[[],[[21,[1707]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[],1653],[[51,1670,1699],1672],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[804,[[21,[862]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[803,803],[[]],[[],[[8,[6,7]]]],0,[[],803],[9],[9],[9],[9],[[]],[[]],[9],[9],[[803,803],16],[1,16],[[803,[389,[[21,[1666]]]]],803],0,[[803,10],[[22,[382]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[803,1710],803],0,[[],803],[[803,[389,[1653]]],803],0,[[803,[389,[[1665,[51]]]]],803],0,[[616,1666],[[22,[1655]]]],[[803,[389,[[1665,[1704]]]]],803],0,[[803,[389,[1707]]],803],0,[616,51],[[19,19]],[19],[19],[19],[[616,1666],[[22,[1655]]]],[[803,16],803],0,0,[[616,51],[[22,[1655]]]],[[616,51],[[22,[1655]]]],[[616,1710],[[22,[1655]]]],[[616,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[616,[389,[[1665,[1704]]]],1666],[[22,[1655]]]],[[616,[389,[1707]]],[[22,[1655]]]],[[616,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],0,0,[[803,[389,[1654]]],803],0,[616,1706],[[616,1666],[[22,[1655]]]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[803,[389,[[1665,[1652]]]]],803],0,[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1711,1711],[[]],[[],[[8,[6,7]]]],[[],[[22,[[103,[1672,7]]]]]],0,0,[[],1711],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[[1711,1711],16],[1,16],0,[[1711,[389,[[21,[1666]]]]],1711],0,[[1711,10],[[22,[382]]]],[[]],[[]],[[]],[[[802,[[0,[[631,[[193,[19]]]],376,377]]]],1711],[[22,[[1712,[804]],804]]]],[[1713,1711],[[1712,[376]]]],[[[631,[628]],1711],[[22,[[1712,[804]],804]]]],[[805,1711],[[22,[[1712,[804]],804]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[[1712,[376]]],22],[[],16],[[],16],[[],16],[[1711,1710],1711],0,[[],1711],[[],9],[[1711,[389,[1653]]],1711],0,[[1711,[389,[[1665,[51]]]]],1711],0,[[1714,1666],[[22,[1655]]]],[[1711,[389,[[1665,[1704]]]]],1711],0,[[1711,[389,[1707]]],1711],0,[1714,21],[1714,51],[[19,19]],[19],[19],[19],[19],[[1714,1666],[[22,[1655]]]],[[],89],[9,[[22,[9]]]],[[1714,51],[[22,[1655]]]],[[1714,51],[[22,[1655]]]],[[1714,1710],[[22,[1655]]]],[[1714,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1714,[389,[[1665,[1704]]]],1666],[[22,[1655]]]],[[1714,[389,[1707]]],[[22,[1655]]]],[[1714,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],0,0,0,[[1711,[389,[1654]]],1711],0,[1714,1706],[[1714,1666],[[22,[1655]]]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[1711,[389,[[1665,[1652]]]]],1711],0,[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[1715,[389,[[21,[1716]]]]],1715],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1717,1717],[1715,1715],[1656,1656],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],1717],[[],1715],[9],[9],[9],[9],[9],[9],[9],[9],[[1715,[389,[1717]]],1715],0,[[]],[[]],[[]],[[]],[1660],[9],[9],[9],[9],[179,16],[186],[[1715,16],1715],0,[[1717,1717],16],[[1715,1715],16],[[1656,1656],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1717,10],[[22,[382]]]],[[1715,10],[[22,[382]]]],[[1656,10],[[22,[382]]]],[[]],[[[1181,[84]]],1717],[[]],[[[85,[84]]],1717],[[],1717],[[]],[1660,1656],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[1656,186]],[1660,1656],0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,0,[[],1715],[[1715,16],1715],0,[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],[1656,1718],0,[[1660,[389,[[1665,[[789,[84]]]]]],1666],[[22,[1655]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[1719,1719],[[]],[[],[[8,[6,7]]]],0,[[],1720],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[1721],[9],[9],[179,16],[186],[[1719,1719],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1719,10],[[22,[382]]]],[[]],[[]],[[]],[1721,1719],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[1719,186]],[1721,1719],0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[],1720],[[19,19]],[19],[19],[19],[19],[[19,19],16],[19,188],[1719,1718],0,[[1721,[389,[[1665,[[795,[84]]]]]],1666],[[22,[1655]]]],[[1721,[389,[[1665,[[789,[84]]]]]],1666],[[22,[1655]]]],0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[1720,[389,[1659]]],1720],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[1679,[389,[[1665,[[789,[84]]]]]],1715],[[22,[1660,1722]]]],[[1679,[389,[[1665,[[789,[84]]]]]],[389,[[1665,[[795,[84]]]]]],1720],[[22,[1721,1723]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1718,1718],[[]],[[],[[8,[6,7]]]],0,[[],1678],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[9],[1679],[9],[9],[9],[9],[179,16],[186],[[1678,9],1678],0,0,[[1718,1718],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1722,10],[[22,[382]]]],[[1722,10],[[22,[382]]]],[[1723,10],[[22,[382]]]],[[1723,10],[[22,[382]]]],[[1718,10],[[22,[382]]]],[[]],[[]],[1655,1722],[[]],[1655,1723],[[]],[[]],[1679,1718],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[1718,186]],[1679,1718],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[1678,9],1678],0,0,[[],1678],[1679,9],[1679,9],[[19,19]],[19],[19],[19],[19],[19],[19],[[19,19],16],[19,188],0,[1722,[[21,[862]]]],[1723,[[21,[862]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[1681,1724]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1725,1725],[1657,1657],[1659,1659],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],1681],[[],1725],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[1658],[9],[9],[9],[9],[179,16],[179,16],[186],[186],0,0,[[],1725],[[1725,1725],16],[[1657,1657],16],[[1659,1659],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[1726,10],[[22,[382]]]],[[1726,10],[[22,[382]]]],[[1725,10],[[22,[382]]]],[[1657,10],[[22,[382]]]],[[1659,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[1658,1659],[1657,1659],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[[1657,186]],[[1659,186]],[1658,1659],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],1681],[[],1725],[[[389,[1659]]],1725],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[19,188],[19,188],[[1681,1725],1681],0,[[1658,[389,[1659]],[389,[[1665,[1652]]]],1666],[[22,[1726]]]],[[1658,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],0,[1726,[[21,[862]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1681,[389,[[1665,[1652]]]]],1681],0,[[]],[[]],[[]],[[]],[[]],[[]],[[1681,1724],1681],[[1725,[389,[1659]],[389,[[1665,[1652]]]]],1725],[[1725,[389,[1659]]],1725],0,0,0,[[]],0,0,0,0,0,[89],[89],[[]],0,[[1672,51,1670,1699],1672],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[1727,[389,[[1665,[177]]]]],1727],0,[[]],[[]],[[]],[[]],[1727],0,[[],1727],[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[1727,[389,[[1665,[51]]]]],1727],0,[[1727,[389,[[1665,[51]]]]],1727],0,[[],1727],[[1727,[389,[[1665,[51]]]]],1727],0,[19],[19],[19],[[1727,[389,[[1665,[177]]]]],1727],0,[[1728,[389,[[1665,[177]]]],1666],[[22,[1655]]]],[[1728,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1728,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1728,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1728,[389,[[1665,[177]]]],1666],[[22,[1655]]]],[[1728,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1727,[389,[[1665,[51]]]]],1727],0,[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[1729,1724]],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[1729,51],1729],0,[1729],0,[[],1729],[[1729,[389,[[1665,[51]]]]],1729],0,[9],[9],[9],[9],[[]],[[]],[9],[9],[[1729,[389,[[1665,[1652]]]]],1729],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[1729,[389,[[1665,[51]]]]],1729],0,[[],1729],[19],[19],[19],[[1730,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1730,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],[[1730,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1731],[1731,1731],[1732,1732],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],1731],[[],1732],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[1731,[389,[[1665,[1652]]]]],1731],0,[9],[9],[9],[[1731,1731],16],[[1732,1732],16],[1,16],[1,16],[[1731,10],[[22,[382]]]],[[1732,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[12],[13],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[1731,1732],1731],0,[[1731,[389,[[1665,[51]]]]],1731],0,[[],1731],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[1733,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],[[1733,1732],[[22,[1655]]]],[[1733,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[]],[[]],[[]],[[]],[[]],[[]],[1734],[1735,1735],[[]],[[],[[8,[6,7]]]],0,[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[179,16],[186],[[1735,1735],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[1735,10],[[22,[382]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1735,186]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[1735,[389,[[1665,[51]]]],[389,[[1665,[51]]]],[389,[[1665,[51]]]]],1734],0,[[19,19]],[19],[19],[19],[[19,19],16],[19,188],[[1736,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1736,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1736,1735],[[22,[1655]]]],[[1736,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1737],[1737,1737],[1738,1738],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[1737,[389,[[1665,[51]]]]],1737],0,[[],1737],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],[[1737,1737],16],[[1738,1738],16],[1,16],[1,16],[[1737,10],[[22,[382]]]],[[1738,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[1737,[389,[[1665,[51]]]]],1737],0,[[1737,1738],1737],0,[[],1737],[[19,19]],[[19,19]],[19],[19],[19],[19],[[1737,[389,[[1665,[51]]]]],1737],0,[[1739,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1739,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1739,1738],[[22,[1655]]]],[[1739,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1740],[1740,1740],[[]],[[],[[8,[6,7]]]],0,[[],1740],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1740,1740],16],[1,16],[[1740,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[19,19]],[19],[19],[19],[[1741,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1742],[1742,1742],[[]],[[],[[8,[6,7]]]],0,[[1742,[389,[[1665,[51]]]]],1742],0,[[],1742],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1742,1742],16],[1,16],[[1742,[389,[[1665,[51]]]]],1742],0,[[1742,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[1742,[389,[[1665,[51]]]]],1742],0,[[],1742],[[19,19]],[19],[19],[19],[[1743,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1743,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1743,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1743,[389,[[1665,[51]]]],1666],[[22,[1655]]]],[[1742,[389,[[1665,[51]]]]],1742],0,[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1744],[1744,1744],[[]],[[],[[8,[6,7]]]],0,[[],1744],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1744,1744],16],[1,16],[[1744,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[[[389,[[1665,[1652]]]]],1744],[[19,19]],[19],[19],[19],[[1745,[389,[[1665,[1652]]]],1666],[[22,[1655]]]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[1665,[322]]],[[1665,[322]]]],[[[1746,[322]]],[[1746,[322]]]],[[[1748,[[0,[322,1747]]]]],[[1748,[[0,[322,1747]]]]]],[1716,1716],[1666,1666],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[1746,[1704]]]],[[],[[1746,[1652]]]],[[],[[1746,[84]]]],[[],[[1746,[51]]]],[[],1716],[[],1666],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],0,0,[[[1665,[[379,[[379,[[379,[379]]]]]]]],[1665,[[379,[[379,[[379,[379]]]]]]]]],16],[[[1746,[[379,[[379,[[379,[379]]]]]]]],[1746,[[379,[[379,[[379,[379]]]]]]]]],16],[[1716,1716],16],[[1666,1666],16],[1,16],[1,16],[1,16],[1,16],[[[1665,[383]],10],[[22,[382]]]],[[[1746,[383]],10],[[22,[382]]]],[[1716,10],[[22,[382]]]],[[1666,10],[[22,[382]]]],[51,[[1665,[1652]]]],[[]],[177,[[1665,[177]]]],[84,[[1665,[84]]]],[51,[[1665,[1704]]]],[1704,[[1665,[1704]]]],[[],1665],[1662,[[1665,[1662]]]],[1652,[[1665,[1652]]]],[51,[[1665,[51]]]],[[[389,[[789,[84]]]]],[[1665,[[789,[84]]]]]],[[[389,[[795,[84]]]]],[[1665,[[795,[84]]]]]],[[]],[[]],[[]],[[]],[[[389,[1696]],1746],1665],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[13],[12],[[],9],[[],9],[[],9],[[],9],[[],9],0,[51],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[[1746,[1747]],51],1747],[[[1665,[1747]],1747],[[1748,[1747]]]],0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],0,[[[1748,[1747]],[1665,[1747]],1666]],0,0,[1665,[[1665,[505]]]],[1746,[[1746,[505]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[[1748,[1747]],51,1670,1699],16],[[[1748,[1747]]],1747],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[21,[107]]]],[[],301],0,0,0,[[89,89],91],[[89,89,89],521],[[89,89,89,89],522],0,0,0,0,0,0,0,0,0,0,0,0,[[188,188],635],[[188,188,188],636],[[188,188,188,188],637],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[1643,1643],[[]],[[]],[[]],[[]],[[]],[[]],[[[631,[[193,[19]]]]],[[22,[107,1650]]]],[1643,1749],[1643],[1643,1643],[[]],[[],[[8,[6,7]]]],[[1643,1643],183],[[],183],[[],1643],[9],[9],[9],[9],[9],[9],[105,[[22,[1643]]]],[[]],[[]],[[]],[9],[9],[9],[179,16],[186],[[1650,1650],16],[[1749,1749],16],[[1643,92],16],[[1643,1643],16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[169,[[22,[170,171]]]],[[1650,10],[[22,[382]]]],[[1650,10],[[22,[382]]]],[[1749,10],[[22,[382]]]],[[1643,10],[[22,[382]]]],[[1643,10],[[22,[382]]]],[[]],[1750,1650],[[]],[[]],[[[193,[19]]],[[22,[1643,1650]]]],[[1751,[21,[1752]],[21,[1753]],[193,[1754]]],1643],[[1751,[21,[1752]],[21,[1753]],[21,[[8,[[193,[1754]],7]]]]],1643],[[]],[[]],[[]],[92,[[22,[1643]]]],[[]],[[]],[[]],[13],[12],[[1643,1754],16],[[1643,186]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[1643],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[1643,[631,[1643]],16,16],16],[[1643,1643],[[21,[183]]]],[[19,19]],[19],[19],[19],[19],[[19,19],16],[19,188],0,0,[[1643,172],22],[[1643,[193,[1754]]]],0,[[]],[[]],[[]],[[]],[[],107],[[],107],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[1643,392],0,[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[],179],[[],179],[[],179],[[],179],[1751,92],[1753,92],[1752,92],[1754,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1751],[1751,1751],[1753,1753],[1752,1752],[1754,1754],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[1751,1751],183],[[1753,1753],183],[[1752,1752],183],[[1754,1754],183],[[],183],[[],183],[[],183],[[],183],[[],1751],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[179,16],[179,16],[179,16],[179,16],[186],[186],[186],[186],[[1751,1751],16],[[1751,92],16],[[1753,1753],16],[[1753,92],16],[[1752,1752],16],[[1752,92],16],[[1754,92],16],[[1754,1754],16],[[1754,92],16],[1,16],[1,16],[1,16],[1,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1751,10],[[22,[382]]]],[[1751,10],[[22,[382]]]],[[1753,10],[[22,[382]]]],[[1753,10],[[22,[382]]]],[[1752,10],[[22,[382]]]],[[1752,10],[[22,[382]]]],[[1754,10],[[22,[382]]]],[[1754,10],[[22,[382]]]],[[]],[[]],[[]],[[]],[[[193,[19]]],[[22,[1751,1750]]]],[[[193,[19]]],[[22,[1753,1750]]]],[[[193,[19]]],[[22,[1752,1750]]]],[[[193,[19]]],[[22,[1754,1750]]]],[188,1751],[89,1753],[89,1752],[188,1754],[[]],[[]],[[]],[[]],[92,[[22,[1751]]]],[92,[[22,[1753]]]],[92,[[22,[1752]]]],[92,[[22,[1754]]]],[[]],[[]],[[]],[[]],[12],[13],[[1751,186]],[[1753,186]],[[1752,186]],[[1754,186]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[1751,16],[[],16],[[],16],[[],16],[[],16],[[1751,[1046,[1751]],16,16],16],[[1751,1751],[[21,[183]]]],[[1753,1753],[[21,[183]]]],[[1752,1752],[[21,[183]]]],[[1754,1754],[[21,[183]]]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[[19,19],16],[[19,19],16],[[19,19],16],[[19,19],16],[19,188],[19,188],[19,188],[19,188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],107],[[],107],[[],107],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[[21,[[631,[[193,[19]]]]]]],[[22,[1751]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[9],[[]],[9],[[]],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[19],[[]],[26],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1755,1755],[611,611],[1756,1756],[1757,1757],[1758,1758],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],1755],[[],611],[[],1756],[[],1757],[[],1758],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[[1755,10],11],[[611,10],11],[[1756,10],11],[[1757,10],11],[[1758,10],11],[[1758,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[13],[12],[12],[13],[12],[13],[13],[12],[25],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,[25],0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],107],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1759,1759],[1760,1760],[1761,1761],[1762,1762],[1763,1763],[1764,1764],[1765,1765],[1766,1766],[1767,1767],[1768,1768],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1759],[[],1760],[[],1761],[[],1762],[[],1763],[[],1764],[[],1765],[[],1766],[[],1767],[[],1768],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,[[1759,10],11],[[1760,10],11],[[1761,10],11],[[1762,10],11],[[1763,10],11],[[1764,10],11],[[1765,10],11],[[1766,10],11],[[1767,10],11],[[1768,10],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[12],[13],[13],[12],[12],[13],[13],[12],[13],[12],[13],[12],[13],[12],[12],[13],0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],0,[[]],[[]],[[]],[[]],[1769,1769],[1770,1770],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,[[],1769],[[],1770],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1769,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[[761,[779]],[64,[4]],[762,[4]]]],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],[13],0,0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[],20],[[],20],[27],0,[[[64,[4]],[62,[738]],[53,[34]],[37,[39]],[37,[41]],[37,[66]],[62,[189]]]],0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,0,0,[19],[19],[19],[19],0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[[761,[779]],[64,[4]],[762,[4]],[35,[606]]]],0,0,0,[[92,1771,1772,9],1773],[[92,1771,1772,9],1773],[[92,1771,1772,9],[[1773,[107]]]],[[92,1771,1772,9],[[1773,[1774]]]],[[92,1771,1772,9],[[1773,[1775]]]],[[92,1771,1772,9],[[1773,[107]]]],[[92,1771,1772,9],[[1773,[1776]]]],[[92,1771,1772,9],[[1773,[1777]]]],0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[92,[[22,[1774,1778]]]],[9],[9],[[]],[9],[[]],[[]],[[]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[],1771],[19],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],[[[761,[779]],13,[53,[618]],[53,[691]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1779,1779],[1780,1780],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1779],[[],1780],[9],[9],[9],[9],[[]],[[]],[9],[9],[[1779,10],11],[[1780,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[13],[12],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[1780,16],[[],16],[[],16],[[761,[35,[735]],[35,[17]]]],[[761,[64,[4]],[35,[606]],[35,[17]],[762,[4]],[35,[611]],13]],[[19,19]],[[19,19]],[19],[19],[19],[19],0,0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[[[761,[779]],[64,[4]],[762,[4]],[35,[606]],13]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[1781,1781],[1782,1782],[[]],[[]],[[],[[8,[6,7]]]],[[],[[8,[6,7]]]],0,0,[[],1781],[[],1782],[9],[9],[9],[9],[[]],[[]],[9],[9],[179,16],[[1782,1782],16],[1,16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[13],[12],[12],[13],[[],9],[[],9],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[]],[[],16],[[],16],0,0,[[19,19]],[[19,19]],[19],[19],[19],[19],[[19,19],16],0,0,[[]],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],21],[[],21],[[]],[[]],[[[761,[779]],[64,[4]],[762,[4]],[35,[606]],[53,[611]],[53,[758]],13]],0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[9],[9],[[]],[9],[[]],[[]],[[]],[[1783,612,613],[[21,[1758]]]],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[19],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],[[761,[64,[4]],[762,[4]],[35,[612]],[35,[613]]]],[[761,[64,[4]],[762,[4]]]],0,0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1784,1784],[[]],[[],[[8,[6,7]]]],[[],1784],[9],[9],[[]],[9],[[1784,10],11],[[]],[[]],[[]],[13],[12],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[[35,[17]],[64,[4]],[35,[617]],[762,[4]],[35,[606]]],1784],[[19,19]],[19],[19],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]],0,0,0,[[],1],[[],1],[[[3,[2]]]],[[]],[[]],[1785,1785],[[]],[[],[[8,[6,7]]]],[[],1785],[9],[9],[[]],[9],[[1785,10],11],[[]],[[]],[[]],[12],[13],[[],9],[[]],[[[8,[7]]],[[8,[1,7]]]],[[[14,[7]]],[[14,[1,7]]]],[[[15,[7]]],[[15,[1,7]]]],[[]],[[],16],[[761,[64,[4]],[762,[4]],[35,[606]]]],[[[64,[4]],[53,[618]],[35,[617]],[35,[606]],13]],[[19,19]],[19],[19],[27],[[]],[[]],[[],21],[[]],[[],22],[[],22],[[],23],[[],21],[[]]],"c":[6103,8154,11180,11181,11182,11253,11708,11709,11710,11789,13174,13175,13179,13180,13213,13273,13274,13275,13276,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290,13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,13303,13304,13305,13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321,13322,13323,13324,13325,13326,13327,13328,13329,13330,13331,13332,13333,13334,13335,13336,13337,13338,13339,13340,13341,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351,13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367,13368,13369,13370,13371,13372,13373,13374,13376,13545,13546,13551,13552,13578,13579,13580,13885,13886,13887,13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13923,14669,14676,14734,14737,14756,14757,14758,15619,15620,15621,15622,15931,16231,16265,16266,16267,16268,16275,16374,16377,16596,16941,17450,17540,17541,17542,17543,17544,17545,17546,18771,18772,18773,18774,18775,18776,18816,18882,18907,18908,19457,19458,19459,19460,19461,19681,19682,19686,19687,19719,19769,19770,19771,19772,19773,19774,19775,19776,19777,19778,19779,19780,19781,19782,19783,19784,19785,19786,19787,19788,19789,19790,19791,19792,19793,19794,19795,19796,19797,19798,19799,19800,19801,19802,19803,19804,19805,19806,19807,19808,19809,19810,19811,19812,19813,19814,19815,19816,19817,19818,19819,19820,19821,19822,19823,19824,19825,19826,19827,19828,19829,19830,19831,19832,19833,19834,19835,19836,19837,19838,19839,19840,19841,19842,19843,19844,19845,19846,19847,19848,19849,19850,19851,19852,19853,19854,19855,19856,19857,19858,19859,19860,19861,19862,19863,19864,19865,19866,19867,19868,19869,19870,19872,20013,20014,20018,20019,20025,20026,20027,20309,20310,20311,20312,20313,20314,20315,20316,20317,20318,20319,20320,20321,20322,20323,22492,36695,44609,49157,50846,61962,64070,64071,66349,66371,66388,66543,66544,66576,67075,67079,67356,67412],"p":[[8,"Any"],[3,"Image"],[3,"RenderAssets"],[3,"GameMeta"],[3,"GameMusic"],[8,"TypeData"],[3,"Global"],[3,"Box"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"World"],[3,"World"],[3,"Arc"],[3,"Rc"],[15,"bool"],[3,"AssetServer"],[3,"Context"],[15,"u8"],[3,"Schema"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"JumpyDefaultMatchRunner"],[3,"Game"],[3,"MatchPlugin"],[3,"Session"],[6,"Instant"],[3,"SystemStages"],[3,"Attachment"],[3,"PlayerBodyAttachment"],[3,"HadPlayerBodyAttachmentMarker"],[3,"Entity"],[3,"Entities"],[3,"Res"],[6,"Comp"],[6,"CompMut"],[3,"Time"],[3,"Sprite"],[3,"Invincibility"],[3,"Transform"],[3,"AtlasSprite"],[3,"AnimatedSprite"],[3,"AnimationBankSprite"],[3,"MatchInputs"],[3,"PlayerIdx"],[3,"AudioEvents"],[4,"AudioEvent"],[3,"AudioSource"],[3,"Handle"],[15,"f64"],[3,"AudioManager"],[3,"ResMut"],[3,"Bullet"],[3,"BulletMeta"],[3,"BulletHandle"],[3,"Actor"],[3,"Collider"],[3,"Lifetime"],[3,"Commands"],[3,"CollisionWorld"],[3,"ResMutInit"],[3,"EmoteRegion"],[3,"Root"],[3,"LoadedMap"],[3,"Camera"],[3,"CameraShake"],[3,"CameraState"],[3,"KinematicBody"],[3,"Window"],[3,"ParallaxBackgroundSprite"],[3,"DamageRegion"],[3,"DamageRegionOwner"],[3,"Vec3"],[3,"Rect"],[3,"DebugSettings"],[3,"RapierDebugContext"],[3,"ResInit"],[3,"Path2d"],[3,"RapierDebugBackend"],[4,"DebugRenderObject"],[6,"Real"],[6,"Point"],[15,"f32"],[15,"array"],[3,"MapManager"],[3,"ElementMeta"],[3,"Vec2"],[15,"u32"],[3,"Ustr"],[3,"UVec2"],[15,"str"],[3,"Atlas"],[4,"TileCollisionKind"],[3,"ElementEditorMeta"],[3,"MapElementHydrated"],[3,"DehydrateOutOfBounds"],[3,"ElementHandle"],[3,"ElementKillCallback"],[3,"Spawner"],[3,"SpawnerEntities"],[3,"SpawnerManager"],[3,"Vec"],[8,"HasSchema"],[8,"Deserializer"],[8,"IntoSystem"],[3,"String"],[3,"CrabMeta"],[4,"CrabState"],[3,"CrabCritter"],[3,"GlobalRng"],[3,"CrateMeta"],[3,"IdleCrate"],[3,"ThrownCrate"],[3,"Item"],[3,"ItemThrow"],[3,"ItemGrab"],[3,"ItemUsed"],[3,"PlayerInventories"],[3,"AnimatedDecorationMeta"],[3,"FishSchoolMeta"],[3,"FishSchool"],[3,"Fish"],[4,"FishState"],[3,"GrenadeMeta"],[3,"IdleGrenade"],[3,"LitGrenade"],[3,"PlayerLayers"],[3,"CameraTraumaEvents"],[3,"KickBombMeta"],[3,"IdleKickBomb"],[3,"LitKickBomb"],[3,"MineMeta"],[3,"IdleMine"],[3,"ThrownMine"],[3,"MusketMeta"],[3,"Musket"],[3,"StaticSystem"],[3,"ItemDropped"],[3,"PlayerSpawnerMeta"],[3,"PlayerSpawner"],[3,"CurrentSpawner"],[3,"SlipperyMeta"],[3,"Slippery"],[3,"SlipperySeaweedMeta"],[3,"SlipperySeaweed"],[3,"PlayerState"],[3,"SnailMeta"],[4,"Snail"],[3,"SpikeMeta"],[3,"Spike"],[3,"SproingerMeta"],[3,"Sproinger"],[3,"NavGraph"],[3,"StompBootsMeta"],[3,"WearingStompBoots"],[3,"StompBoots"],[3,"Inventory"],[3,"SwordMeta"],[3,"Sword"],[4,"SwordState"],[3,"PendingDamageRegions"],[3,"UrchinMeta"],[3,"Urchin"],[3,"PlayerInput"],[3,"LocatedTileLayer"],[3,"ElementLayer"],[4,"EditorInput"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"Serializer"],[3,"Inv"],[3,"ItemGrabbed"],[3,"SpawnedMapLayerMeta"],[3,"PlayerControl"],[3,"Duration"],[3,"NavNode"],[8,"DynEq"],[3,"MapSpawned"],[3,"SpawnedMapMeta"],[3,"NavGraphEdge"],[4,"Ordering"],[3,"MapMeta"],[6,"NavGraphInner"],[8,"Hasher"],[3,"IVec2"],[15,"u64"],[3,"ClearColor"],[3,"Tile"],[3,"TileLayer"],[3,"ShiftnanigansMapConstructor"],[15,"slice"],[3,"UngroupedPixel"],[3,"PixelType"],[3,"CoreMeta"],[3,"CameraMeta"],[3,"PhysicsMeta"],[3,"CoreConfigMeta"],[3,"BackgroundMeta"],[3,"ParallaxLayerMeta"],[3,"MapLayerMeta"],[3,"ElementSpawn"],[3,"MapTileMeta"],[3,"PlayerMeta"],[3,"PlayerLayersMeta"],[3,"PlayerBodyLayerMeta"],[3,"BodyAnimationsMeta"],[3,"Offsets"],[3,"PlayerLayerMeta"],[3,"PlayerStatsMeta"],[3,"PlayerSoundsMeta"],[3,"HatMeta"],[8,"Deserialize"],[4,"ColliderShape"],[4,"PhysicsStage"],[3,"Ulid"],[8,"Fn"],[3,"CollisionCache"],[3,"RapierContext"],[3,"Solid"],[3,"TileRapierHandle"],[3,"EntityHasher"],[15,"u128"],[3,"RefMut"],[3,"RigidBodySet"],[3,"ColliderSet"],[4,"CollisionEvent"],[3,"ContactPair"],[8,"QueryItem"],[8,"FnMut"],[8,"TriMeshStorage"],[3,"GenericTriMesh"],[3,"Complex"],[3,"Unit"],[3,"Isometry"],[3,"Aabb"],[3,"HalfSpace"],[3,"Polyline"],[3,"ConvexPolygon"],[8,"HeightFieldStorage"],[3,"GenericHeightField"],[3,"Compound"],[3,"MassProperties"],[3,"RigidBody"],[3,"RigidBodyActivation"],[3,"Collider"],[3,"ActiveCollisionTypes"],[3,"ColliderBuilder"],[3,"IslandManager"],[3,"RigidBodyHandle"],[3,"ActiveEvents"],[3,"ActiveHooks"],[3,"RigidBodyVelocity"],[3,"ColliderHandle"],[3,"ColliderParent"],[3,"ColliderPosition"],[3,"SharedShape"],[4,"ColliderMassProps"],[3,"Const"],[3,"ArrayStorage"],[3,"Matrix"],[3,"OPoint"],[3,"RigidBodyBuilder"],[3,"JointAxesMask"],[3,"RigidBodyChanges"],[3,"LockedAxes"],[3,"CollisionEventFlags"],[3,"ColliderChanges"],[3,"SolverFlags"],[3,"InteractionGroups"],[3,"Group"],[3,"TriMeshFlags"],[3,"QueryFilterFlags"],[3,"DebugRenderMode"],[3,"DefaultStorage"],[3,"RigidBodyDamping"],[3,"MultibodyJoint"],[3,"Multibody"],[3,"RigidBodyForces"],[3,"RigidBodyMassProps"],[8,"Shape"],[3,"Ball"],[3,"Capsule"],[8,"SimdCompositeShape"],[3,"Cuboid"],[3,"GenericJoint"],[3,"FixedJoint"],[3,"RoundShape"],[3,"Triangle"],[3,"PrismaticJoint"],[3,"RevoluteJoint"],[3,"RopeJoint"],[3,"Segment"],[8,"SupportMap"],[4,"TypedShape"],[3,"RigidBodyColliders"],[3,"RigidBodyCcd"],[3,"RigidBodyPosition"],[3,"MultibodyJointSet"],[8,"Iterator"],[3,"ImpulseJointSet"],[4,"SegmentPointLocation"],[4,"TrianglePointLocation"],[15,"u16"],[4,"RigidBodyType"],[3,"BoundingSphere"],[3,"FixedJointBuilder"],[3,"GenericJointBuilder"],[3,"PrismaticJointBuilder"],[3,"RevoluteJointBuilder"],[3,"RopeJointBuilder"],[3,"Ray"],[3,"RayIntersection"],[3,"QueryPipeline"],[3,"QueryFilter"],[3,"IntegrationParameters"],[3,"CCDSolver"],[4,"PredictedImpacts"],[4,"CoefficientCombineRule"],[4,"JointAxis"],[8,"Clone"],[3,"JointLimits"],[3,"JointMotor"],[4,"JointEnabled"],[3,"ImpulseJoint"],[3,"ImpulseJointHandle"],[4,"MotorModel"],[3,"MultibodyJointHandle"],[3,"MultibodyIndex"],[3,"MultibodyLink"],[4,"RigidBodyAdditionalMassProps"],[3,"RigidBodyIds"],[3,"RigidBodyDominance"],[3,"BodyPair"],[3,"TrackedContact"],[3,"ContactForceEvent"],[3,"BroadPhase"],[3,"ColliderPair"],[4,"ColliderType"],[3,"ColliderBroadPhaseData"],[3,"ColliderMaterial"],[4,"ShapeType"],[4,"ColliderEnabled"],[3,"ColliderFlags"],[3,"ContactData"],[3,"IntersectionPair"],[3,"ContactManifoldData"],[3,"SolverContact"],[3,"InteractionGraph"],[4,"TriangleOrientation"],[4,"TopologyError"],[3,"TriMeshConnectedComponents"],[3,"TopoVertex"],[3,"TopoFace"],[3,"TopoHalfEdge"],[3,"TriMeshTopology"],[4,"FeatureId"],[3,"PackedFeatureId"],[3,"NarrowPhase"],[3,"DebugRenderStyle"],[3,"EdgeIndex"],[3,"PolygonalFeature"],[8,"Default"],[8,"Copy"],[3,"ContactManifold"],[3,"VHACDParameters"],[3,"Dyn"],[3,"VecStorage"],[3,"CollisionPipeline"],[3,"PhysicsPipeline"],[3,"DebugRenderPipeline"],[8,"WReal"],[3,"ViewStorageMut"],[15,"i8"],[8,"Send"],[8,"Sync"],[15,"i16"],[8,"PartialEq"],[8,"IntoIterator"],[3,"PairFilterContext"],[3,"Error"],[8,"Debug"],[15,"i64"],[3,"ViewStorage"],[3,"ChannelEventCollector"],[8,"EventHandler"],[3,"Index"],[8,"Into"],[3,"NodeIndex"],[3,"LU"],[8,"ExactSizeIterator"],[3,"ContactModificationContext"],[3,"Sender"],[3,"NonlinearRigidMotion"],[3,"PointProjection"],[3,"GenericQbvh"],[8,"PersistentQueryDispatcher"],[8,"QueryDispatcher"],[3,"Graph"],[8,"DebugRenderBackend"],[3,"MultibodyJointLink"],[8,"PhysicsHooks"],[15,"isize"],[3,"Range"],[4,"AnyJointVelocityConstraint"],[4,"BroadPhasePairEvent"],[4,"QueryPipelineMode"],[8,"Scalar"],[8,"Zero"],[8,"One"],[8,"DimName"],[8,"ToTypenum"],[8,"Signed"],[8,"RealField"],[8,"PartialOrd"],[8,"Dim"],[8,"Storage"],[8,"TCategory"],[3,"Transform"],[8,"AbsDiffEq"],[8,"RawStorage"],[3,"Quaternion"],[3,"DualQuaternion"],[3,"Rotation"],[3,"Translation"],[3,"Scale"],[8,"AbstractRotation"],[3,"Similarity"],[3,"AutoSimd"],[8,"SimdRealField"],[8,"SimdComplexField"],[8,"ClosedAdd"],[8,"ClosedMul"],[8,"StorageMut"],[8,"ComplexField"],[8,"Num"],[8,"NumAssign"],[8,"RawStorageMut"],[19,"MaybeUninit"],[8,"SimdSigned"],[8,"SimdPartialOrd"],[8,"DimNameSub"],[3,"PermutationSequence"],[8,"Norm"],[8,"AsPrimitive"],[8,"BitOrder"],[3,"BitSlice"],[3,"Orthographic3"],[3,"Perspective3"],[8,"IsContiguous"],[4,"TProjective"],[3,"Reflection"],[8,"DimMin"],[3,"Bidiagonal"],[8,"SupersetOf"],[8,"ClosedDiv"],[8,"Mul"],[8,"Add"],[3,"Cholesky"],[3,"DefaultAllocator"],[3,"EuclideanNorm"],[3,"LpNorm"],[3,"UniformNorm"],[4,"TGeneral"],[4,"TAffine"],[3,"ColPivQR"],[3,"FullPivLU"],[8,"DimSub"],[3,"Hessenberg"],[3,"QR"],[3,"Schur"],[3,"SVD"],[3,"SymmetricEigen"],[3,"SymmetricTridiagonal"],[3,"UDU"],[3,"ColumnIter"],[3,"ColumnIterMut"],[8,"Field"],[8,"DimRange"],[8,"Neg"],[8,"DimAdd"],[8,"WSign"],[8,"ClosedSub"],[8,"SimdValue"],[8,"ClosedNeg"],[8,"TCategoryMul"],[8,"SubTCategoryOf"],[8,"SuperTCategoryOf"],[15,"char"],[8,"FromIterator"],[8,"Extend"],[8,"Octal"],[8,"UpperHex"],[8,"Display"],[8,"LowerHex"],[8,"Binary"],[8,"UpperExp"],[8,"LowerExp"],[8,"Pointer"],[8,"FnOnce"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimitiveSimdValue"],[8,"From"],[8,"SubsetOf"],[3,"DVec2"],[3,"Mat2"],[3,"BVec2"],[3,"DMat3"],[3,"Vec3A"],[8,"DimNameAdd"],[3,"BVec4"],[3,"DVec4"],[3,"DMat4"],[3,"BVec3"],[3,"IVec3"],[15,"i32"],[3,"Vec4"],[3,"DMat2"],[3,"UVec3"],[3,"UVec4"],[3,"Mat3"],[3,"Mat4"],[3,"IVec4"],[3,"DVec3"],[3,"DQuat"],[3,"Quat"],[8,"FromPrimitive"],[15,"i128"],[3,"WideF32x8"],[3,"WideF32x4"],[3,"WideF64x4"],[8,"FromStr"],[8,"MatrixIndex"],[8,"MatrixIndexMut"],[8,"Hash"],[8,"FloatCore"],[8,"RelativeEq"],[3,"MatrixIter"],[3,"MatrixIterMut"],[8,"DimMul"],[8,"Ord"],[8,"Bounded"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Normed"],[8,"ReshapableStorage"],[3,"RowIter"],[3,"RowIterMut"],[3,"SimdOption"],[8,"IsNotStaticOne"],[4,"BitSpanError"],[8,"UlpsEq"],[3,"ShapeConstraint"],[3,"X"],[3,"XY"],[3,"XYZ"],[3,"XYZW"],[3,"XYZWA"],[3,"XYZWAB"],[3,"IJKW"],[3,"M2x2"],[3,"M2x3"],[3,"M2x4"],[3,"M2x5"],[3,"M2x6"],[3,"M3x2"],[3,"M3x3"],[3,"M3x4"],[3,"M3x5"],[3,"M3x6"],[3,"M4x2"],[3,"M4x3"],[3,"M4x4"],[3,"M4x5"],[3,"M4x6"],[3,"M5x2"],[3,"M5x3"],[3,"M5x4"],[3,"M5x5"],[3,"M5x6"],[3,"M6x2"],[3,"M6x3"],[3,"M6x4"],[3,"M6x5"],[3,"M6x6"],[3,"Init"],[3,"Uninit"],[3,"GivensRotation"],[3,"ColliderShapeCache"],[6,"Aabb"],[4,"Emote"],[4,"EmoteState"],[3,"PlayerKilled"],[3,"PlayerCommand"],[3,"AiPlayer"],[3,"PathfindingDebugLines"],[3,"PlayersHaveSpawned"],[3,"Hat"],[3,"PlayerStateStageImpl"],[3,"PlayerStateStage"],[8,"RangeBounds"],[3,"Ease"],[3,"EguiInputSettings"],[3,"GlobalPlayerControls"],[4,"ControlSource"],[3,"PlayerInputCollector"],[6,"HashMap"],[3,"RawInput"],[3,"PlayerControlMapping"],[3,"KeyboardInputs"],[3,"GamepadInputs"],[3,"ShuffledPlaylist"],[4,"MusicState"],[3,"StaticSoundHandle"],[3,"EguiCtx"],[3,"Sessions"],[4,"Color"],[3,"I64Vec2"],[3,"I64Vec3"],[3,"I64Vec4"],[3,"Affine2"],[3,"Affine3A"],[3,"Mat3A"],[3,"DAffine2"],[3,"DAffine3"],[3,"Path"],[4,"Cow"],[3,"Error"],[8,"AsRef"],[4,"MaybeOwned"],[4,"MaybeOwnedMut"],[3,"CommandQueue"],[3,"U64Vec2"],[3,"U64Vec3"],[3,"U64Vec4"],[8,"AddAssign"],[3,"SimpleSystemStage"],[8,"StageLabel"],[3,"BVec3A"],[3,"BVec4A"],[3,"ComponentStore"],[8,"Array"],[3,"SmallVec"],[8,"TypePath"],[8,"Reflect"],[4,"EulerRot"],[3,"BitSetVec"],[3,"Ref"],[3,"CStr"],[8,"Deref"],[8,"Sized"],[8,"DerefMut"],[8,"IsAligned"],[3,"OwningPtr"],[3,"PtrMut"],[8,"AsMut"],[3,"IntoIter"],[3,"AtomicCell"],[3,"Ptr"],[3,"AssetLoc"],[3,"AssetLocRef"],[3,"SchemaRefMut"],[3,"SchemaRef"],[3,"AssetExtensions"],[8,"AssetLoader"],[4,"AssetKind"],[3,"BitFmt"],[8,"BitAnd"],[8,"BitAndAssign"],[8,"BitOr"],[8,"BitOrAssign"],[3,"UntypedComponentStore"],[8,"BitXor"],[8,"BitXorAssign"],[3,"BorderedButton"],[3,"BorderImageMeta"],[3,"BorderedFrame"],[3,"UntypedAtomicResource"],[3,"AtomicSchemaRef"],[3,"AtomicResource"],[3,"FluentResourceAsset"],[3,"FluentResource"],[3,"AtomicSchemaRefMut"],[3,"Replacements"],[3,"ThinSlicePtr"],[3,"LabeledId"],[3,"Aligned"],[3,"Unaligned"],[3,"SessionOptions"],[3,"Version"],[3,"AssetPack"],[3,"AssetPackSpec"],[3,"AssetPackReq"],[3,"SchemaPath"],[3,"AssetLoadProgress"],[3,"AssetStore"],[4,"GamepadEvent"],[3,"LoadedAsset"],[3,"GamepadConnectionEvent"],[3,"AssetInfo"],[4,"GamepadConnectionEventKind"],[3,"Cid"],[3,"GamepadButtonEvent"],[4,"GamepadButton"],[3,"UntypedHandle"],[3,"ComponentStores"],[3,"SchemaAssetHandle"],[3,"CorePackfileMeta"],[3,"PackfileMeta"],[3,"GamepadAxisEvent"],[4,"GamepadAxis"],[3,"IncompatibleGameVersionError"],[3,"KeyboardEvent"],[4,"KeyCode"],[4,"Maybe"],[3,"MouseInputs"],[3,"MouseScrollEvent"],[4,"MouseScrollUnit"],[3,"MouseButtonEvent"],[4,"MouseButton"],[4,"ButtonState"],[4,"CameraSize"],[3,"UntypedResources"],[3,"Resources"],[4,"CoreStage"],[3,"Viewport"],[3,"ShakeNoise"],[4,"Image"],[3,"ButtonThemeMeta"],[3,"ButtonBordersMeta"],[3,"MarginMeta"],[3,"EguiInputHook"],[3,"EguiTextures"],[3,"Font"],[3,"FontMeta"],[3,"EguiSettings"],[3,"Stopwatch"],[3,"Timer"],[4,"TimerMode"],[3,"FluentBundleAsset"],[3,"LocalizationAsset"],[3,"RootLocalizationFieldIdx"],[3,"StaticSoundData"],[3,"DynamicStruct"],[3,"SchemaId"],[3,"Error"],[3,"RawMutex"],[3,"MappedMutexGuard"],[8,"TryInto"],[8,"BufferRef"],[3,"Reader"],[3,"NonZeroUsize"],[3,"NonNull"],[3,"Lazy"],[3,"AssetServerInner"],[3,"Storage"],[3,"MemoryBackend"],[8,"FromWorld"],[3,"In"],[3,"Localization"],[3,"MetaAssetLoadCtx"],[3,"SchemaPtrLoadCtx"],[8,"Div"],[8,"DivAssign"],[3,"Drain"],[8,"Future"],[3,"Pin"],[3,"FileAssetIo"],[3,"WebAssetIo"],[3,"DummyIo"],[8,"BitSet"],[4,"LabeledIdCreateError"],[4,"LabledIdParseError"],[4,"CollectionAllocErr"],[3,"NotInitialized"],[4,"HexColorError"],[3,"Ui"],[3,"Response"],[15,"never"],[8,"ToOwned"],[3,"LayoutError"],[4,"FromHexError"],[3,"RowMatrix3"],[3,"ColumnMatrix3"],[3,"Point2"],[3,"Vector2"],[3,"Vector3"],[3,"Point3"],[3,"ColumnMatrix2"],[3,"RowMatrix2"],[3,"ColumnMatrix4"],[3,"RowMatrix4"],[3,"Quaternion"],[3,"__m128"],[4,"Color"],[3,"Vector4"],[3,"TimeSpec"],[3,"Delay"],[3,"TimeSpec"],[3,"Cursor"],[3,"StaticSoundSettings"],[4,"FromFileError"],[8,"MediaSource"],[3,"RandomState"],[3,"MappedRef"],[4,"TextureId"],[3,"MappedRefMut"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"Ref"],[3,"RefMut"],[3,"FluentArgs"],[3,"FontId"],[8,"SliceIndex"],[3,"SchemaBox"],[8,"SystemStage"],[3,"DefaultSessionPlugin"],[3,"DefaultGamePlugin"],[8,"SessionPlugin"],[8,"GamePlugin"],[3,"UntypedComponentStoreIter"],[3,"ListIter"],[3,"Iter"],[3,"FieldIter"],[3,"UntypedComponentStoreIterMut"],[3,"IterMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"Map"],[3,"EntitiesIterWith"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"EventListener"],[3,"AssetLoadCtx"],[3,"AudioLoader"],[3,"FontLoader"],[3,"SchemaMetaAssetLoader"],[3,"Margin"],[8,"MulAssign"],[3,"Instant"],[4,"WidgetText"],[8,"AssetIo"],[3,"Recompositions"],[3,"Decompositions"],[8,"Not"],[3,"DashMap"],[3,"Rect"],[4,"Shape"],[3,"Error"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectPathError"],[4,"ReflectRef"],[3,"RichText"],[3,"Sense"],[8,"Shl"],[8,"ShlAssign"],[3,"InnerResponse"],[8,"Shr"],[8,"ShrAssign"],[8,"Error"],[3,"StreamSafe"],[8,"Sub"],[8,"SubAssign"],[3,"SchemaMismatchError"],[3,"TryFromFloatSecsError"],[3,"Uuid"],[4,"ChangedAsset"],[3,"Sender"],[8,"StorageApi"],[3,"AtomicBorrow"],[3,"AtomicBorrowMut"],[8,"BufferMut"],[3,"Writer"],[3,"Chain"],[4,"SchemaKind"],[3,"EnumSchemaInfo"],[4,"Primitive"],[3,"StructSchemaInfo"],[3,"SchemaData"],[3,"SchemaLayoutInfo"],[4,"EnumTagType"],[3,"VariantInfo"],[3,"StructFieldInfo"],[3,"Layout"],[3,"ResizableAlloc"],[3,"SchemaVec"],[3,"SVec"],[3,"SMap"],[3,"SchemaMap"],[3,"SchemaTypeMap"],[3,"ResizableAllocIter"],[3,"SchemaVecIter"],[3,"Iter"],[3,"SVecIter"],[3,"ResizableAllocIterMut"],[3,"SchemaVecIterMut"],[3,"IterMut"],[3,"SVecIterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"SystemTime"],[8,"Rng"],[4,"DecodeError"],[4,"EncodeError"],[3,"SBox"],[4,"FieldIdx"],[3,"SchemaFieldNotFoundError"],[3,"SchemaRegistry"],[3,"SchemaDeserializer"],[3,"SchemaDeserialize"],[3,"SchemaSerializer"],[3,"AllocError"],[8,"FromReflect"],[3,"OsStr"],[3,"NonZeroU64"],[8,"CreateFrom"],[3,"PathBuf"],[3,"OsString"],[8,"Allocator"],[8,"Allocator"],[3,"Vec"],[3,"PercentEncode"],[3,"PercentDecode"],[3,"CString"],[8,"Error"],[3,"CowStrDeserializer"],[3,"Captures"],[3,"Captures"],[8,"Serialize"],[8,"ShaderType"],[8,"WriteInto"],[3,"Entity"],[8,"ScheduleLabel"],[8,"AsFd"],[3,"BorrowedFd"],[8,"AsRawFd"],[8,"RngCore"],[8,"Tuple"],[8,"Filter"],[3,"Metadata"],[3,"Interest"],[8,"Clear"],[3,"Slice"],[3,"Slice"],[8,"DynDigest"],[8,"SystemSet"],[8,"Subscriber"],[3,"Id"],[8,"AsyncBufRead"],[8,"Unpin"],[8,"BufRead"],[3,"Current"],[3,"ThinBox"],[8,"Source"],[3,"Registry"],[8,"Deserializer"],[8,"Visitor"],[8,"Log"],[3,"Metadata"],[3,"Context"],[8,"Layer"],[8,"Visitor"],[3,"Out"],[3,"Map"],[8,"Serialize"],[3,"Seq"],[3,"Struct"],[3,"StructVariant"],[3,"Tuple"],[3,"TupleStruct"],[3,"TupleVariant"],[3,"Event"],[8,"RngCore"],[8,"TurboCore"],[3,"Event"],[3,"Gilrs"],[8,"Write"],[8,"BitStore"],[3,"BitBox"],[8,"GenCore"],[8,"NoiseFn"],[3,"Request"],[3,"MiddlewareNext"],[3,"Response"],[4,"Error"],[3,"Error"],[3,"Event"],[4,"SystemConfigs"],[3,"CharPredicateSearcher"],[8,"Read"],[8,"WriteColor"],[8,"FusedFuture"],[8,"FusedStream"],[3,"Record"],[3,"LevelFilter"],[3,"Attributes"],[8,"Unsize"],[3,"FillVertex"],[3,"StrokeVertex"],[3,"WalkerEvent"],[8,"DoubleEndedIterator"],[3,"Record"],[3,"Dispatch"],[3,"Context"],[4,"Poll"],[8,"AsyncWrite"],[8,"Stream"],[8,"AsyncIterator"],[8,"AsyncRead"],[3,"IoSliceMut"],[8,"AsyncSeek"],[4,"SeekFrom"],[3,"IoSlice"],[3,"BorrowedCursor"],[8,"ReadFrom"],[8,"Value"],[3,"Field"],[8,"Visit"],[3,"Token"],[3,"Interest"],[4,"SocketAddr"],[8,"Generator"],[4,"GeneratorState"],[3,"Runnable"],[3,"ScheduleInfo"],[8,"Seek"],[3,"ColorSpec"],[3,"HyperlinkSpec"],[8,"ReadWrite"],[3,"TcpStream"],[3,"EnlargeError"],[3,"Error"],[3,"Error"],[4,"SimdVisitStatus"],[3,"Arguments"],[3,"BinaryHeap"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"LinkedList"],[3,"TryReserveError"],[4,"TryReserveErrorKind"],[8,"Borrow"],[3,"Cursor"],[3,"CursorMut"],[8,"Eq"],[3,"Difference"],[3,"Drain"],[3,"Drain"],[3,"DrainSorted"],[4,"Entry"],[3,"ExtractIf"],[3,"ExtractIf"],[3,"ExtractIf"],[3,"OccupiedEntry"],[3,"Intersection"],[8,"IntoDeserializer"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIterSorted"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Keys"],[4,"Bound"],[3,"Cursor"],[3,"CursorMut"],[3,"PeekMut"],[3,"Range"],[3,"Range"],[3,"RangeMut"],[8,"ShaderSize"],[3,"SymmetricDifference"],[3,"OccupiedError"],[3,"Union"],[3,"Values"],[3,"ValuesMut"],[3,"VacantEntry"],[3,"IntoIter"],[8,"Try"],[3,"FromVecWithNulError"],[3,"NulError"],[3,"IntoStringError"],[3,"NonZeroU8"],[3,"RangeFull"],[3,"Utf8Error"],[4,"Alignment"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Error"],[8,"Write"],[3,"Weak"],[3,"UniqueRc"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitInclusive"],[3,"RSplit"],[3,"EscapeAscii"],[3,"Windows"],[3,"Chunks"],[3,"ChunksExact"],[3,"ArrayWindows"],[3,"ArrayChunks"],[3,"RChunks"],[3,"RChunksExact"],[3,"ChunksMut"],[3,"ChunksExactMut"],[3,"ArrayChunksMut"],[3,"RChunksMut"],[3,"RChunksExactMut"],[3,"SplitMut"],[3,"SplitInclusiveMut"],[3,"RSplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"GroupBy"],[3,"GroupByMut"],[3,"RangeTo"],[3,"Bytes"],[3,"Chars"],[3,"CharIndices"],[8,"Pattern"],[3,"SplitInclusive"],[3,"ParseBoolError"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SplitWhitespace"],[3,"SplitAsciiWhitespace"],[3,"EncodeUtf16"],[3,"EscapeDebug"],[3,"EscapeDefault"],[3,"EscapeUnicode"],[3,"Utf8Chunk"],[3,"Utf8Chunks"],[3,"CommentReplaceIter"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharArraySearcher"],[3,"CharArrayRefSearcher"],[3,"CharSliceSearcher"],[3,"StrSearcher"],[3,"FromUtf8Error"],[3,"Drain"],[3,"FromUtf16Error"],[4,"Error"],[3,"SmolStr"],[4,"Value"],[3,"TinyAsciiStr"],[3,"Name"],[3,"Url"],[3,"RangeToInclusive"],[3,"RangeInclusive"],[3,"RangeFrom"],[3,"StringDeserializer"],[3,"IntoIter"],[3,"Weak"],[3,"ClientConfig"],[3,"File"],[3,"Request"],[3,"Drain"],[3,"ExtractIf"],[3,"ProtocolName"],[4,"Error"],[3,"Splice"],[8,"Codec"],[8,"TlsListElement"],[3,"BitVec"],[3,"Chmap"],[4,"ChmapPosition"],[4,"ServerExtension"],[3,"StateID"],[3,"PatternID"],[3,"PatternID"],[3,"StateID"],[3,"SmallIndex"],[3,"SmallIndex"],[3,"Reader"],[4,"InvalidMessage"],[4,"VertexAttributeValues"],[3,"AllFuture"],[3,"AnyFuture"],[3,"Bytes"],[8,"UnwindSafe"],[3,"CatchUnwind"],[3,"Chain"],[3,"Chain"],[3,"Cloned"],[3,"CloseFuture"],[3,"CollectFuture"],[3,"Copied"],[3,"CountFuture"],[3,"Cycle"],[3,"Enumerate"],[3,"FillBuf"],[3,"Filter"],[3,"FilterMap"],[3,"FindFuture"],[3,"FindMapFuture"],[3,"FlatMap"],[3,"Flatten"],[3,"FlushFuture"],[3,"FoldFuture"],[3,"ForEachFuture"],[3,"Fuse"],[3,"Inspect"],[3,"LastFuture"],[3,"Lines"],[3,"Map"],[3,"NextFuture"],[3,"NthFuture"],[3,"Or"],[3,"Or"],[3,"PartitionFuture"],[3,"PositionFuture"],[3,"Race"],[3,"Race"],[3,"ReadFuture"],[3,"ReadExactFuture"],[3,"ReadLineFuture"],[3,"ReadToEndFuture"],[3,"ReadToStringFuture"],[3,"ReadUntilFuture"],[3,"ReadVectoredFuture"],[3,"Scan"],[3,"SeekFuture"],[3,"Skip"],[3,"SkipWhile"],[3,"Split"],[3,"StepBy"],[3,"Take"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"TryCollectFuture"],[3,"TryFoldFuture"],[3,"TryForEachFuture"],[3,"TryNextFuture"],[3,"UnzipFuture"],[3,"WriteFuture"],[3,"WriteAllFuture"],[3,"WriteVectoredFuture"],[3,"Zip"],[3,"Pending"],[3,"PollOnce"],[3,"PollFn"],[3,"Ready"],[3,"YieldNow"],[3,"Zip"],[3,"TryZip"],[3,"AsyncAsSync"],[3,"BufReader"],[3,"BufWriter"],[3,"AssertAsync"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"BlockOn"],[3,"Repeat"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[4,"EncodingError"],[4,"Errno"],[3,"Error"],[3,"Error"],[4,"Errno"],[3,"DecompressError"],[4,"DecodingError"],[3,"Error"],[3,"FloatIsNan"],[3,"CompressError"],[3,"IntoInnerError"],[3,"Error"],[3,"BlockOn"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Repeat"],[3,"RepeatWith"],[3,"Unfold"],[3,"TryUnfold"],[3,"OnceFuture"],[3,"FxHasher"],[3,"FxHasher64"],[3,"FxHasher32"],[3,"HashMap"],[3,"HashSet"],[8,"BuildHasher"],[3,"Global"],[3,"AHasher"],[3,"BuildHasherDefault"],[4,"TryReserveError"],[3,"DynamicMap"],[8,"Equivalent"],[3,"Difference"],[3,"Drain"],[3,"Drain"],[4,"Entry"],[4,"Entry"],[4,"EntryRef"],[3,"ExtractIf"],[3,"ExtractIf"],[3,"FixedState"],[3,"Hashed"],[3,"PassHash"],[3,"Intersection"],[3,"IntoIter"],[3,"IntoIter"],[3,"Iter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"MapIter"],[3,"RawEntryBuilder"],[3,"RawEntryBuilderMut"],[3,"RawTable"],[3,"SymmetricDifference"],[3,"OccupiedError"],[3,"Union"],[4,"RawEntryMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Bucket"],[3,"RawIter"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[3,"RawFairMutex"],[3,"RawRwLock"],[3,"Once"],[3,"WaitTimeoutResult"],[4,"OnceState"],[3,"Mutex"],[3,"RawThreadId"],[3,"ReentrantMutex"],[3,"RwLock"],[3,"Condvar"],[3,"MutexGuard"],[8,"RawMutexFair"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[8,"RawMutex"],[8,"RawRwLock"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[3,"IdentityManager"],[8,"TypedId"],[4,"Backend"],[8,"RawRwLockRecursive"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"Rng"],[3,"AtomicRng"],[3,"AtomicIsize"],[4,"Entry"],[3,"SharedValue"],[3,"Iter"],[3,"IterMut"],[4,"TryResult"],[3,"RawRwLock"],[3,"ReadOnlyView"],[3,"DashSet"],[3,"TryReserveError"],[3,"Ref"],[3,"Iter"],[3,"OwningIter"],[8,"Map"],[3,"OwningIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RefMulti"],[3,"RefMutMulti"],[3,"RefMulti"],[3,"Color32"],[3,"Rgba"],[3,"Vec2"],[3,"Pos2"],[8,"Widget"],[3,"Painter"],[3,"ShapeIdx"],[8,"BytesLoader"],[3,"Mesh"],[8,"ImageLoader"],[8,"TextureLoader"],[3,"Id"],[3,"InputState"],[4,"Align"],[3,"Rangef"],[3,"Align2"],[3,"Layout"],[3,"Modifiers"],[4,"Order"],[3,"LayerId"],[3,"Window"],[3,"Area"],[3,"ProgressBar"],[3,"PointerState"],[3,"Memory"],[3,"TexturesDelta"],[3,"FullOutput"],[3,"PlatformOutput"],[3,"LayoutJob"],[3,"Style"],[4,"FontSelection"],[3,"Stroke"],[3,"ColorImage"],[3,"TextureHandle"],[3,"Rounding"],[3,"ScrollArea"],[3,"Resize"],[3,"Frame"],[3,"Prepared"],[3,"Image"],[3,"DragValue"],[3,"Slider"],[3,"TopBottomPanel"],[4,"PointerButton"],[4,"ImageData"],[3,"ImageSize"],[4,"Direction"],[3,"TextEdit"],[8,"Numeric"],[3,"PaintCallbackInfo"],[3,"ViewportInPixels"],[3,"FontImage"],[3,"PaintCallback"],[4,"FontFamily"],[3,"FontData"],[3,"FontTweak"],[3,"FontDefinitions"],[3,"TextFormat"],[3,"Galley"],[3,"TextureOptions"],[4,"TextureFilter"],[3,"ClippedPrimitive"],[4,"AboveOrBelow"],[3,"RequestRepaintInfo"],[3,"HoveredFile"],[3,"DroppedFile"],[4,"Event"],[3,"ModifierNames"],[4,"Key"],[3,"KeyboardShortcut"],[3,"TouchDeviceId"],[3,"TouchId"],[4,"TouchPhase"],[4,"MouseWheelUnit"],[3,"EventFilter"],[3,"OpenUrl"],[4,"UserAttentionType"],[4,"CursorIcon"],[3,"WidgetInfo"],[3,"MultiTouchInfo"],[4,"SizeHint"],[3,"Options"],[4,"TextStyle"],[3,"Visuals"],[3,"ImageButton"],[4,"ImageFit"],[4,"ImageSource"],[3,"ImageOptions"],[4,"WidgetType"],[8,"TextBuffer"],[3,"CollapsingResponse"],[3,"Spinner"],[3,"Hsva"],[3,"Cursor"],[8,"ToString"],[3,"Separator"],[3,"CentralPanel"],[3,"CollapsingHeader"],[3,"SidePanel"],[3,"RCursor"],[3,"Button"],[3,"Fonts"],[3,"HsvaGamma"],[3,"CircleShape"],[3,"QuadraticBezierShape"],[3,"PathShape"],[3,"TextShape"],[3,"RectShape"],[3,"CubicBezierShape"],[3,"SizedTexture"],[4,"Bytes"],[3,"CCursor"],[3,"ComboBox"],[3,"Hyperlink"],[3,"PCursor"],[3,"WidgetVisuals"],[3,"WidgetTextGalley"],[3,"WidgetTextJob"],[3,"Label"],[8,"Real"],[4,"TexturePoll"],[4,"LoadError"],[3,"TextEditState"],[3,"Loaders"],[3,"Grid"],[4,"Side"],[4,"TopBottomSide"],[3,"TextureManager"],[3,"RwLock"],[3,"Checkbox"],[3,"RadioButton"],[3,"Link"],[3,"SelectableLabel"],[4,"SliderOrientation"],[4,"OperatingSystem"],[4,"OutputEvent"],[3,"Rot2"],[4,"ScrollBarVisibility"],[3,"Shadow"],[3,"TextEditOutput"],[3,"ScrollAreaOutput"],[3,"Spacing"],[3,"Mesh16"],[3,"ClippedShape"],[4,"BytesPoll"],[4,"ImagePoll"],[3,"AHashSet"],[3,"RandomState"],[3,"AHashMap"],[3,"HashMap"],[3,"HashSet"],[3,"IntoKeys"],[3,"IntoValues"],[8,"RandomSource"],[3,"HeaderResponse"],[3,"CollapsingState"],[3,"PanelState"],[3,"State"],[3,"TextureAtlas"],[3,"ImageDelta"],[3,"Vertex"],[3,"PaintStats"],[3,"TessellationOptions"],[4,"Primitive"],[3,"TextureMeta"],[3,"PreparedDisc"],[3,"Tessellator"],[3,"Mutex"],[3,"RectTransform"],[3,"History"],[8,"Sum"],[3,"AllocInfo"],[3,"Path"],[4,"PathType"],[3,"Row"],[3,"LayoutSection"],[3,"TextWrapping"],[3,"RowVisuals"],[3,"Glyph"],[3,"FontsImpl"],[3,"Font"],[3,"OrderedFloat"],[8,"Float"],[3,"PaintList"],[3,"DefaultBytesLoader"],[3,"DefaultTextureLoader"],[3,"SubMenuButton"],[3,"SubMenu"],[3,"Interaction"],[3,"Selection"],[3,"Widgets"],[3,"DebugOptions"],[3,"CCursorRange"],[3,"IdTypeMap"],[8,"SerializableAny"],[3,"FrameCache"],[3,"CacheStorage"],[8,"CacheTrait"],[8,"ComputerMut"],[3,"TypeId"],[3,"Undoer"],[3,"Settings"],[4,"Alpha"],[3,"CursorRange"],[3,"PCursorRange"],[4,"FluentValue"],[8,"MemoizerKind"],[3,"Scope"],[3,"FluentMessage"],[4,"FluentError"],[3,"FluentAttribute"],[3,"ParserError"],[4,"ResolverError"],[3,"Attribute"],[3,"Message"],[3,"FluentNumber"],[4,"Entry"],[3,"Pattern"],[3,"FluentBundle"],[3,"IntlLangMemoizer"],[3,"LanguageIdentifier"],[3,"IntlLangMemoizer"],[4,"FluentNumberStyle"],[4,"FluentNumberCurrencyDisplayStyle"],[3,"FluentNumberOptions"],[8,"FluentType"],[4,"NegotiationStrategy"],[4,"LanguageIdentifierError"],[3,"IntlMemoizer"],[4,"Volume"],[4,"OutputDestination"],[4,"StartTime"],[4,"CommandError"],[3,"EmitterId"],[3,"SubTrackId"],[3,"TrackHandle"],[4,"TrackId"],[3,"EmitterHandle"],[3,"ClockTime"],[4,"ClockSpeed"],[3,"ClockId"],[3,"ClockHandle"],[4,"Value"],[3,"Tween"],[3,"MockClockInfoProviderBuilder"],[3,"ClockInfo"],[3,"ArenaFull"],[3,"ClockInfoProvider"],[4,"WhenToStart"],[3,"Frame"],[8,"Backend"],[3,"AudioManager"],[4,"AddClockError"],[8,"ModulatorBuilder"],[4,"AddModulatorError"],[3,"SpatialSceneSettings"],[3,"SpatialSceneHandle"],[4,"AddSpatialSceneError"],[3,"TrackBuilder"],[4,"AddSubTrackError"],[3,"Capacities"],[4,"MainPlaybackState"],[3,"AudioManagerSettings"],[8,"SoundData"],[4,"PlaySoundError"],[3,"Renderer"],[3,"CpalBackend"],[4,"Error"],[4,"DefaultStreamConfigError"],[4,"BuildStreamError"],[4,"PlayStreamError"],[3,"MockBackendSettings"],[3,"MockBackend"],[3,"ModulatorId"],[3,"LfoHandle"],[3,"TweenerHandle"],[3,"ModulatorValueProvider"],[3,"LfoBuilder"],[4,"Waveform"],[3,"TweenerBuilder"],[3,"MockModulatorValueProviderBuilder"],[4,"PlaybackRate"],[4,"PlaybackPosition"],[4,"PlaybackState"],[3,"Region"],[4,"EndPosition"],[4,"Error"],[8,"IntoOptionalRegion"],[3,"StreamingSoundSettings"],[3,"StreamingSoundData"],[8,"Decoder"],[3,"StreamingSoundHandle"],[3,"EmitterSettings"],[4,"Easing"],[3,"EmitterDistances"],[3,"SpatialSceneId"],[3,"ListenerId"],[3,"ListenerSettings"],[3,"ListenerHandle"],[4,"AddEmitterError"],[4,"AddListenerError"],[8,"EffectBuilder"],[3,"TrackRoutes"],[4,"SetRouteError"],[3,"CompressorBuilder"],[3,"CompressorHandle"],[3,"DelayBuilder"],[3,"DelayHandle"],[3,"DistortionBuilder"],[4,"DistortionKind"],[3,"DistortionHandle"],[3,"EqFilterBuilder"],[4,"EqFilterKind"],[3,"EqFilterHandle"],[3,"FilterBuilder"],[4,"FilterMode"],[3,"FilterHandle"],[3,"PanningControlBuilder"],[3,"PanningControlHandle"],[3,"ReverbBuilder"],[3,"ReverbHandle"],[3,"VolumeControlBuilder"],[3,"VolumeControlHandle"],[3,"ModulatorMapping"],[8,"Tweenable"],[3,"Parameter"],[4,"CharacterDirection"],[4,"ParserError"],[3,"Language"],[3,"Script"],[3,"Region"],[3,"Variant"],[3,"Settings"],[3,"PlayerControlSetting"],[3,"VirtualDPad"],[4,"InputKind"],[3,"UiTheme"],[3,"ImageMeta"],[3,"UiThemeColors"],[3,"UiThemeWidgets"],[3,"UiThemeWidgetColors"],[3,"UiThemeFontStyles"],[3,"UiThemeButtons"],[3,"UiThemePanel"],[3,"UiThemeEditor"],[3,"UiThemeEditorIcons"],[3,"MainMenuMeta"],[4,"MenuPage"],[3,"ParseState"],[3,"ErrorState"],[4,"RuleResult"],[3,"Credits"],[3,"CreditsEntry"],[3,"CreditsHandle"],[3,"CreditsSection"],[3,"ParseError"],[3,"PlayerSelectState"],[3,"PlayerSlot"],[3,"SettingsState"],[4,"SettingsTab"],[4,"BindingKind"],[4,"MapSelectAction"],[4,"PauseMenuPage"],[3,"MatchPlayerInfo"],[13,"PlaySound"],[13,"Walking"],[13,"Fleeing"],[13,"Moving"],[13,"Moving"],[13,"Swinging"],[13,"Cooldown"],[13,"SetTile"],[13,"MoveLayer"],[13,"RandomizeTiles"],[13,"MoveEntity"],[13,"DeleteEntity"],[13,"SpawnElement"],[13,"SetTilemap"],[13,"CreateLayer"],[13,"RenameLayer"],[13,"DeleteLayer"],[13,"RenameMap"],[8,"MapConstructor"],[4,"LayerPixelEntityType"],[3,"Tile"],[3,"Element"],[3,"GroupedPixel"],[8,"MatchAssetServerExt"],[3,"RapierUserData"],[13,"Circle"],[13,"Rectangle"],[8,"TypedSimdCompositeShape"],[8,"PolygonalFeatureMap"],[13,"SweepTestWithPredictedPosition"],[13,"BadAdjascentTrianglesOrientation"],[8,"ToConst"],[8,"DimNameMul"],[8,"DimDiv"],[8,"DimNameDiv"],[8,"DimNameMin"],[8,"DimMax"],[8,"DimNameMax"],[8,"SimdBool"],[8,"Allocator"],[8,"Reallocator"],[8,"DimEq"],[8,"SameDimension"],[8,"SameNumberOfRows"],[8,"SameNumberOfColumns"],[8,"InitStatus"],[4,"TurboKind"],[8,"SeededCore"],[8,"TurboRand"],[8,"ForkableCore"],[4,"EaseFunction"],[13,"Fight"],[8,"SystemParam"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"Absolutize"],[3,"LoadedAssets"],[3,"Renderer"],[8,"EguiContextExt"],[8,"Context"],[8,"UlidExt"],[8,"RendererApi"],[8,"UnsafeCellDeref"],[8,"EguiResponseExt"],[8,"FromType"],[8,"System"],[8,"AssetServerExt"],[8,"SessionRunner"],[8,"ToSmallVec"],[8,"PtrMutExt"],[8,"PtrExt"],[8,"UnwrapMany"],[13,"Metadata"],[13,"Custom"],[13,"AllocErr"],[13,"Rgba"],[13,"Opaque"],[13,"Map"],[8,"LayoutExt"],[8,"RawClone"],[8,"RawDefault"],[8,"RawDrop"],[8,"RawEq"],[8,"RawHash"],[8,"GlobalAlloc"],[8,"BorrowMut"],[13,"AllocError"],[8,"Concat"],[8,"Join"],[8,"Searcher"],[8,"ReverseSearcher"],[8,"Wake"],[8,"StreamExt"],[8,"FutureExt"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufReadExt"],[8,"AsyncSeekExt"],[13,"AllocError"],[3,"GuardSend"],[3,"GuardNoSend"],[8,"WidgetWithState"],[8,"NumExt"],[13,"PointerButton"],[13,"MouseWheel"],[13,"Touch"],[13,"Key"],[13,"Original"],[13,"Bytes"],[13,"LineSegment"],[8,"HashMapExt"],[8,"HashSetExt"],[8,"One"],[8,"FloatOrd"],[13,"Ready"],[13,"Pending"],[13,"Ready"],[13,"Pending"],[13,"Pending"],[13,"Ready"],[13,"Overriding"],[8,"AnyEq"],[8,"Memoizable"],[8,"Modulator"],[13,"Pulse"],[8,"Sound"],[8,"Effect"],[13,"FromModulator"],[3,"SessionNames"],[8,"SessionExt"],[13,"MapSelect"]],"a":{"cross":[34566,34567,34568,34569],"determinant":[34566,34567,34568,34569],"errno":[54889],"getlasterror":[54889],"llogo":[25363],"lmeta":[25363],"lwin":[25363],"magnitude":[33859,33860,33861,33862,33863,33864,33865,33866,33867],"magnitude2":[33877,33878,33879,33880,33881,33882,33883,33884,33885,33886,33887,33888,33889,33890,33891,33892,33893,33894,33895,33896,33897],"mix":[33898,33899,33900,33901,33902,33903,33904,33905,33906],"none":[65387],"repeating":[36083],"rlogo":[25364],"rmeta":[25364],"rwin":[25364],"scale":[30977,30978,30979,30980,30981,30982,30983],"tooltip":[66565,66566,66567],"wedge":[34566,34567,34568,34569],"{:?}":[48992],"{}":[48999]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
